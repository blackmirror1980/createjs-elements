{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///elements-js.js","webpack:///webpack/bootstrap 1dd09aea96a70c8e7311","webpack:///./index.js","webpack:///../~/webpack/buildin/module.js","webpack:///./Elements/Element.js","webpack:///./Elements/ElementHelpers.js","webpack:///../~/createjs-browserify/lib/createjs-2016.11.12.combined.js","webpack:///./CreateJS/EaselJS/index.js","webpack:///./CreateJS/SoundJS/index.js","webpack:///./Elements/LabelElement.js","webpack:///./Elements/ButtonElement.js","webpack:///./Elements/ImageElement.js","webpack:///./Elements/ListItemElement.js","webpack:///./Elements/TextElement.js","webpack:///./Sounds/SoundElement.js","webpack:///../~/lodash/lodash.js","webpack:///../config.js","webpack:///./CreateJS/PreloadJS/index.js","webpack:///./CreateJS/TweenJS/index.js","webpack:///./Elements/BoxElement.js","webpack:///./Elements/ListElement.js","webpack:///./Elements/SpriteElement.js","webpack:///./Elements/index.js","webpack:///./Sounds/SoundManager.js","webpack:///./Sounds/index.js","webpack:///./Translations/TranslateUtils.js","webpack:///./Translations/index.js","webpack:///../~/webpack/buildin/amd-options.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_createjsBrowserify","_createjsBrowserify2","_EaselJS","_EaselJS2","_PreloadJS","_PreloadJS2","_SoundJS","_SoundJS2","_TweenJS","_TweenJS2","_Elements","_Elements2","_Translations","_Translations2","_Sounds","_Sounds2","_config","_config2","global","document","w","Error","window","undefined","elementsJSStatus","initialized","version","build","EaselJS","buildDate","TweenJS","PreloadJS","SoundJS","console","log","Elements","Translations","Sounds","status","webpackPolyfill","deprecate","paths","children","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","Object","create","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_ElementHelpers","_ElementHelpers2","Element","_Container","options","arguments","_this","initDefaults","initSettings","initData","settings","addChild","draw","align","bindEvents","init","defaults","inherit","debug","fill","stroke","size","color","regPoint","radius","position","x","y","scale","width","height","cache","mask","shadow","events","data","setScale","setComputedBounds","background","createRect","apply","pick","concat","bounds","setMask","setShadow","setCache","createCircle","setBounds","setReg","setPosition","preDrawElements","drawBackgroundElements","drawElements","drawBehaviorElements","drawOverlayElements","postDrawElements","regX","regY","positionOptions","override","force","scaleOptions","scaleX","scaleY","Number","isNumber","isObject","boundsOptions","String","isPercentage","getComputedBounds","parsePercentage","maskOptions","maskShape","Shape","DisplayObject","maskBounds","shadowOptions","shadowSettings","blur","Shadow","cacheOptions","parentElement","mode","parentBounds","getBounds","modes","toArray","horizontalModes","verticalModes","contains","top","right","bottom","left","_this2","each","isFunction","on","Container","ElementHelpers","element","css","style","regPointMode","elementBounds","alignRegPoint","container","graphics","Graphics","colors","ratios","points","beginLinearGradientFill","beginFill","isString","setStrokeStyle","beginStroke","_len","_key","createGraphics","drawRoundRectComplex","drawRoundRect","drawRect","endFill","endStroke","rect","_len2","_key2","drawCircle","circle","text","font","Text","image","Bitmap","spritesheet","Sprite","__WEBPACK_AMD_DEFINE_RESULT__","scope","createjs","extend","subclass","superclass","o","promote","prefix","subP","supP","n","hasOwnProperty","indexOf","array","searchElement","l","Event","type","bubbles","cancelable","currentTarget","eventPhase","timeStamp","Date","getTime","defaultPrevented","propagationStopped","immediatePropagationStopped","removed","preventDefault","stopPropagation","stopImmediatePropagation","remove","clone","set","toString","EventDispatcher","_listeners","_captureListeners","initialize","addEventListener","removeEventListener","off","removeAllEventListeners","hasEventListener","dispatchEvent","_dispatchEvent","willTrigger","listener","useCapture","listeners","push","once","handleEvent","evt","splice","eventObj","e","list","captureListeners","slice","Ticker","RAF_SYNCHED","RAF","TIMEOUT","useRAF","timingMode","maxDelta","paused","_addEventListener","_inited","_startTime","_pausedTime","_ticks","_pausedTicks","_interval","_lastTime","_times","_tickTimes","_timerId","_raf","setInterval","interval","_setupTick","getInterval","setFPS","getFPS","framerate","_getTime","reset","f","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","getMeasuredTickTime","ticks","ttl","times","Math","min","getMeasuredFPS","setPaused","getPaused","runTime","getEventTime","getTicks","pauseable","_handleSynch","_tick","_handleRAF","_handleTimeout","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","time","elapsedTime","event","delta","unshift","pop","now","performance","mozNow","msNow","oNow","webkitNow","UID","_nextID","MouseEvent","stageX","stageY","nativeEvent","pointerID","primary","rawX","rawY","relatedTarget","Event_constructor","_get_localX","globalToLocal","_get_localY","_get_isTouch","localX","localY","isTouch","Matrix2D","a","b","d","tx","ty","setValues","DEG_TO_RAD","PI","identity","append","a1","b1","c1","d1","prepend","tx1","appendMatrix","matrix","prependMatrix","appendTransform","rotation","skewX","skewY","r","cos","sin","prependTransform","rotate","angle","skew","translate","invert","isIdentity","equals","transformPoint","pt","decompose","sqrt","atan2","abs","copy","DisplayProps","visible","alpha","compositeOperation","Point","point","Rectangle","pad","rectangle","union","intersection","x1","y1","x2","y2","intersects","isEmpty","ButtonHelper","outLabel","overLabel","downLabel","play","hitArea","hitLabel","_isPressed","_isOver","_enabled","mouseChildren","enabled","actionsEnabled","gotoAndStop","setEnabled","cursor","_reset","__reset","getEnabled","label","t","gotoAndPlay","offsetX","offsetY","SpriteSheet","EventDispatcher_constructor","complete","_animations","_frames","_images","_data","_loadCount","_frameHeight","_frameWidth","_numFrames","_regX","_regY","_spacing","_margin","_parseData","getAnimations","animations","getNumFrames","animation","frames","getAnimation","name","getFrame","frameIndex","frame","getFrameBounds","images","img","src","createElement","getContext","naturalWidth","onload","_handleImageLoad","onerror","_handleImageError","spacing","margin","count","_calculateFrames","anim","speed","next","errorEvent","maxFrames","frameCount","frameWidth","frameHeight","imgLoop","imgs","imgW","imgH","command","_stroke","_strokeStyle","_oldStrokeStyle","_strokeDash","_oldStrokeDash","_strokeIgnoreScale","_fill","_instructions","_commitIndex","_activeInstructions","_dirty","_storeIndex","clear","G","getRGB","g","getHSL","hue","saturation","lightness","BASE_64","A","B","C","D","E","F","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","h","j","k","q","s","u","v","z","0","1","2","3","4","5","6","7","8","9","+","/","STROKE_CAPS_MAP","STROKE_JOINTS_MAP","canvas","createCanvas","_ctx","getInstructions","_updateInstructions","instructions","ctx","instr","exec","drawAsPath","instrs","path","moveTo","MoveTo","lineTo","LineTo","arcTo","ArcTo","arc","startAngle","endAngle","anticlockwise","Arc","quadraticCurveTo","cpx","cpy","QuadraticCurveTo","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","BezierCurveTo","Rect","closePath","ClosePath","_setFill","Fill","x0","y0","linearGradient","beginRadialGradientFill","r0","r1","radialGradient","beginBitmapFill","repetition","bitmap","thickness","caps","joints","miterLimit","ignoreScale","StrokeStyle","setStrokeDash","segments","offset","StrokeDash","_setStroke","Stroke","beginLinearGradientStroke","beginRadialGradientStroke","beginBitmapStroke","curveTo","radiusTL","radiusTR","radiusBR","radiusBL","RoundRect","Circle","drawEllipse","Ellipse","drawPolyStar","sides","pointSize","PolyStar","clean","decodePath","str","paramCount","params","base64","charAt","fi","pl","charCount","num","sign","store","unstore","mt","lt","at","bt","qt","cp","lf","rf","bf","ef","ss","sd","ls","rs","bs","es","dr","rr","rc","dc","de","dp","commit","active","commitIndex","beginCmd","ll","BeginPath","beginPath","fillStyle","mtx","save","transform","restore","createLinearGradient","addColorStop","createRadialGradient","readyState","createPattern","strokeStyle","setTransform","lineWidth","lineCap","isNaN","lineJoin","setLineDash","EMPTY_SEGMENTS","lineDashOffset","max","mTL","mTR","mBR","mBL","rTL","rTR","rBR","rBL","ox","oy","xe","ye","xm","ym","ps","cacheCanvas","cacheID","mouseEnabled","tickEnabled","transformMatrix","snapToPixel","filters","_cacheOffsetX","_cacheOffsetY","_filterOffsetX","_filterOffsetY","_cacheScale","_cacheDataURLID","_cacheDataURL","_props","_rectangle","_bounds","_MOUSE_EVENTS","suppressCrossDomainErrors","_snapToPixelEnabled","_hitTestCanvas","_hitTestContext","_nextCacheID","getStage","_Stage","stage","isVisible","ignoreCache","drawImage","updateContext","getMatrix","clip","globalAlpha","globalCompositeOperation","_applyShadow","_cacheWidth","_cacheHeight","updateCache","offX","offY","fBounds","_getFilterBounds","ceil","clearRect","_applyFilters","uncache","getCacheDataURL","toDataURL","localToGlobal","getConcatenatedMatrix","localToLocal","getConcatenatedDisplayProps","hitTest","hit","_testHit","getTransformedBounds","_getBounds","_cloneProps","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","evtObj","getImageData","applyFilter","ignoreTransform","_transformBounds","x_a","x_b","y_c","y_d","minX","maxX","minY","maxY","_hasMouseEventListener","evts","DisplayObject_constructor","tickChildren","getNumChildren","numChildren","hasContent","DisplayObject_draw","child","removeChild","addChildAt","index","indx","good","removeChildAt","sort","removeAllChildren","kids","getChildAt","getChildByName","sortChildren","sortFunction","getChildIndex","swapChildrenAt","index1","index2","o1","o2","swapChildren","child1","child2","setChildIndex","getObjectUnderPoint","getObjectsUnderPoint","_getObjectsUnderPoint","recursive","_cloneChildren","DisplayObject__tick","mouse","activeListener","currentDepth","_testMask","result","DisplayObject_getBounds","Stage","Container_constructor","autoClear","getElementById","mouseX","mouseY","snapToPixelEnabled","mouseInBounds","tickOnUpdate","mouseMoveOutside","preventSelection","_pointerData","_pointerCount","_primaryPointerID","_mouseOverIntervalID","_nextStage","_prevStage","enableDOMEvents","_get_nextStage","_set_nextStage","nextStage","update","tick","backgroundColor","mimeType","fillRect","dataURL","putImageData","enableMouseOver","frequency","clearInterval","_testMouseOver","enable","_eventListeners","_handleMouseUp","_handleMouseMove","_handleDoubleClick","_handleMouseDown","_getElementRect","getBoundingClientRect","err","offsetTop","offsetLeft","offsetWidth","offsetHeight","pageXOffset","scrollLeft","clientLeft","body","pageYOffset","scrollTop","clientTop","styles","getComputedStyle","currentStyle","padL","parseInt","paddingLeft","borderLeftWidth","padT","paddingTop","borderTopWidth","padR","paddingRight","borderRightWidth","padB","paddingBottom","borderBottomWidth","_getPointerData","_handlePointerMove","pageX","pageY","owner","inBounds","_updatePointerPosition","_dispatchMouseEvent","posEvtObj","_handlePointerUp","oTarget","down","_handlePointerDown","eventTarget","_mouseOverX","_mouseOverY","isEventTarget","common","oldList","_mouseOverTarget","oldTarget","pointerId","imageOrUri","sourceRect","spriteSheet","frameOrAnimation","currentFrame","currentAnimation","currentAnimationFrame","_animation","_currentFrame","_skipAdvance","_normalizeFrame","stop","_goto","advance","fps","DisplayObject__cloneProps","frameDelta","animFrame","_dispatchAnimationEnd","end","changed","textAlign","textBaseline","maxWidth","outline","lineHeight","_workingContext","H_OFFSETS","start","center","V_OFFSETS","hanging","middle","alphabetic","ideographic","col","_drawText","_prepContext","getMeasuredWidth","_getMeasuredWidth","getMeasuredLineHeight","getMeasuredHeight","getMetrics","lines","vOffset","substr","paint","maxW","hardLines","split","measureText","words","jl","wordW","_drawTextLine","strokeText","fillText","BitmapText","letterSpacing","spaceWidth","_oldProps","maxPoolSize","_spritePool","_updateText","Container_draw","Container_getBounds","Container__cloneProps","_getFrameIndex","character","toUpperCase","toLowerCase","_getFrame","_getLineHeight","_getSpaceWidth","sprite","change","spaceW","lineH","pool","childIndex","numKids","hasSpace","MovieClip","startPosition","loop","labels","inited","INDEPENDENT","timeline","Timeline","useTicks","autoReset","frameBounds","_synchOffset","_prevPos","_prevPosition","_t","_managed","MovieClipPlugin","SINGLE_FRAME","SYNCHED","install","getLabels","getCurrentLabel","_updateTimeline","getDuration","duration","currentLabel","totalFrames","positionOrLabel","independent","_framerate","Container__tick","pos","resolve","NaN","tl","synched","Tween","NONE","_calcPosition","tweens","_tweens","tween","_target","passive","_stepPosition","_addManagedChild","_setState","state","_off","Container__getBounds","priority","installPlugin","prop","step","startValues","endValues","ratio","wait","SpriteSheetUtils","_workingCanvas","addFlippedFrames","horizontal","vertical","both","_flip","extractFrame","mergeAlpha","rgbImage","alphaImage","il","__tmp","fl","sfx","names","al","SpriteSheetBuilder","maxHeight","padding","timeSlice","progress","_nextFrameIndex","_index","_timerID","_scale","ERR_DIMENSIONS","ERR_RUNNING","addFrame","source","setupFunction","setupData","nominalBounds","funct","addAnimation","addMovieClip","labelFunction","rects","baseFrameIndex","_setupMovieClipFrame","_labels","lbls","_startBuild","_drawNext","_endBuild","buildAsync","_run","stopAsync","dataFrames","_fillRow","_getSize","ae","pow","maxH","sc","rx","floor","ry","rh","rw","round","ts","DOMElement","htmlElement","transformOrigin","WebkitTransformOrigin","msTransformOrigin","MozTransformOrigin","OTransformOrigin","_handleDrawEnd","visibility","oldProps","oldMtx","WebkitTransform","OTransform","msTransform","MozTransform","opacity","Filter","targetCtx","targetX","targetY","imageData","_applyFilter","BlurFilter","blurX","blurY","quality","MUL_TABLE","SHG_TABLE","radiusX","radiusY","iterations","px","yp","yi","yw","pr","pg","pb","pa","divx","divy","w1","h1","rxp1","ryp1","ssx","sx","ssy","sy","si","stx","mty","sty","ms","AlphaMapFilter","alphaMap","_alphaMap","_mapData","_prepAlphaMap","map","HTMLCanvasElement","imgData","AlphaMaskFilter","ColorFilter","redMultiplier","greenMultiplier","blueMultiplier","alphaMultiplier","redOffset","greenOffset","blueOffset","alphaOffset","ColorMatrix","brightness","contrast","setColor","DELTA_INDEX","IDENTITY_MATRIX","LENGTH","adjustColor","adjustHue","adjustContrast","adjustBrightness","adjustSaturation","_cleanValue","_multiplyMatrix","lumR","lumG","lumB","cosVal","sinVal","_fixMatrix","val","limit","ColorMatrixFilter","m0","m1","m2","m3","m4","m5","m6","m7","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","Touch","isSupported","navigator","singleTouch","allowDefault","__touch","pointers","multitouch","_IOS_enable","_IE_enable","disable","_IOS_disable","_IE_disable","_IOS_handleEvent","touches","changedTouches","touch","identifier","_handleStart","_handleMove","_handleEnd","_IE_handleEvent","msTouchAction","touchAction","activeIDs","ids","srcElement","proxy","method","aArgs","ErrorEvent","title","message","ProgressEvent","total","runInContext","context","has","undef","serialized","stringify","stringifySupported","isExtended","toJSON","getClass","exception","parse","parseSupported","SyntaxError","nativeJSON","isProperty","forEach","objectProto","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","functionClass","dateClass","numberClass","stringClass","arrayClass","booleanClass","charIndexBuggy","Months","getDay","year","month","members","original","callback","Properties","valueOf","isConstructor","hasProperty","objectTypes","Escapes","92","34","12","10","13","leadingZeroes","toPaddedString","unicodePrefix","quote","useCharIndex","symbols","charCode","charCodeAt","serialize","properties","whitespace","indentation","stack","className","date","hours","minutes","seconds","milliseconds","results","join","filter","Index","Source","fromCharCode","Unescapes","47","98","116","110","102","114","abort","lex","begin","isSigned","hasMembers","walk","isLoader","function","freeExports","nodeType","freeGlobal","JSON","previousJSON","isRestored","JSON3","noConflict","el","svg","link","script","audio","video","createTextNode","ABSOLUTE_PATT","RELATIVE_PATT","EXTENSION_PATT","parseURI","info","absolute","relative","protocol","hostname","port","pathname","search","hash","host","parser","href","queryIndex","match","test","extension","formatQueryString","query","escape","buildURI","idx","isCrossDomain","item","location","crossdomain","isLocal","URLUtils","appendToHead","getHead","appendChild","appendToBody","getBody","head","getElementsByTagName","isImageTag","HTMLImageElement","isAudioTag","HTMLAudioElement","isVideoTag","HTMLVideoElement","DomUtils","parseXML","xml","DOMParser","parseFromString","ActiveXObject","async","loadXML","parseJSON","DataUtils","BINARY","CSS","IMAGE","JAVASCRIPT","JSONP","MANIFEST","SOUND","VIDEO","SPRITESHEET","SVG","TEXT","XML","Types","POST","GET","Methods","LoadItem","maintainOrder","values","headers","withCredentials","crossOrigin","loadTimeout","LOAD_TIMEOUT_DEFAULT","isBinary","AbstractLoader","isText","getTypeByExtension","RequestUtils","loadItem","preferXHR","canceled","resultFormatter","_item","_preferXHR","_result","_rawResult","_loadedItems","_tagSrcAttribute","_tag","getItem","getResult","raw","getTag","setTag","tag","load","_createRequest","_request","loader","cancel","destroy","_loadItems","getLoadedItems","XHRRequest","TagRequest","_createTag","_sendLoadStart","_isCanceled","_sendProgress","Infinity","_sendComplete","rawResult","_sendError","_response","_resultFormatSuccess","_resultFormatFailed","buildPath","AbstractMediaLoader","AbstractLoader_constructor","_formatResult","_updateXHR","preload","AbstractLoader_load","MediaTagRequest","setResponseType","_loadedHandler","onstalled","URL","webkitURL","createObjectURL","AbstractRequest","srcAttribute","AbstractRequest_constructor","_handleTagComplete","_addedToDOM","_startTagVisibility","onreadystatechange","_handleReadyStateChange","_handleError","_hideTag","_loadTimeout","parentNode","_clean","AbstractRequest_destroy","_showTag","_handleStalled","_stalledCallback","pc","_handleProgress","TagRequest_load","newEvent","_progressCallback","TagRequest__clean","_xhrLevel","_rawResponse","_canceled","_handleLoadStartProxy","_handleLoadStart","_handleProgressProxy","_handleAbortProxy","_handleAbort","_handleErrorProxy","_handleTimeoutProxy","_handleLoadProxy","_handleLoad","_handleReadyStateChangeProxy","_createXHR","ACTIVEX_VERSIONS","onloadstart","onprogress","onabort","ontimeout","send","error","_responseType","responseType","getAllResponseHeaders","getResponseHeader","header","_checkError","_getResponse","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","builder","getBlob","response","responseText","responseXML","req","XMLHttpRequest","XDomainRequest","axVersion","overrideMimeType","open","origin","setRequestHeader","LoadQueue","basePath","_plugins","_typeCallbacks","_extensionCallbacks","maintainScriptOrder","stopOnError","_maxConnections","_availableLoaders","ImageLoader","JavaScriptLoader","CSSLoader","JSONLoader","JSONPLoader","SoundLoader","ManifestLoader","SpriteSheetLoader","XMLLoader","SVGLoader","BinaryLoader","VideoLoader","TextLoader","_defaultLoaderLength","useXHR","setPreferXHR","_paused","_basePath","_crossOrigin","_loadStartWasDispatched","_currentlyLoadingScript","_currentLoads","_loadQueue","_loadQueueBackup","_loadItemsById","_loadItemsBySrc","_loadedResults","_loadedRawResults","_numItems","_numItemsLoaded","_scriptOrder","_loadedScripts","_lastProgress","LOAD_TIMEOUT","registerLoader","canLoadItem","unregisterLoader","setUseXHR","removeAll","idsOrUrls","args","itemsWereRemoved","_disposeItem","_loadNext","close","loadManifest","plugin","getPreloadHandlers","types","extensions","setMaxConnections","loadFile","file","loadNow","_addItem","manifest","fileList","getItems","loadStartWasDispatched","_itemCount","_createLoadItem","_createLoader","plugins","_loader","_updateProgress","bp","useBasePath","pathMatch","ext","autoId","customHandler","_canStartLoad","_loadItem","_handleFileLoad","_handleFileComplete","_handleFileError","_sendFileStart","_finishOrderedItem","_removeLoadItem","_cleanLoadItem","_saveLoadedItems","_processFinishedLoad","loadFailed","_checkScriptLoadOrder","_sendFileComplete","checkItem","_sendFileProgress","remaining","chunk","completeHandler","rel","styleSheet","cssText","textNode","_formatImage","successCallback","errorCallback","objURL","_cleanUpURL","revokeObjectURL","json","AbstractLoader_cancel","_dispose","_manifestQueue","MANIFEST_PROGRESS","_loadManifest","AbstractLoader_handleEvent","AbstractLoader_destroy","queue","_handleManifestFileLoad","_handleManifestProgress","_handleManifestComplete","_handleManifestError","AbstractMediaLoader_constructor","autoplay","SPRITESHEET_PROGRESS","documentElement","BrowserDetect","agent","userAgent","isWindowPhone","isFirefox","isOpera","opera","isChrome","isIOS","isAndroid","isBlackberry","PlayPropsConfig","interrupt","delay","volume","pan","startTime","ppc","Sound","SoundChannel","INTERRUPT_ANY","INTERRUPT_EARLY","INTERRUPT_LATE","INTERRUPT_NONE","PLAY_INITED","PLAY_SUCCEEDED","PLAY_INTERRUPTED","PLAY_FINISHED","PLAY_FAILED","SUPPORTED_EXTENSIONS","EXTENSION_MAP","m4a","FILE_PATTERN","defaultInterruptBehavior","alternateExtensions","activePlugin","_masterVolume","setVolume","instances","_instances","setMasterVolume","_masterMute","setMute","setMasterMute","_capabilities","_pluginsRegistered","_lastID","_idHash","_preloadHash","_defaultPlayPropsHash","initLoad","_handleLoadComplete","_handleLoadError","_registerPlugin","registerPlugins","initializeDefaultPlugins","WebAudioPlugin","HTMLAudioPlugin","isReady","getCapabilities","getCapability","_registerSound","details","_parseSrc","_parsePath","numChannels","channels","audioSprite","sp","defaultPlayProps","register","maxPerChannel","registerSound","registerSounds","sounds","returnValues","removeSound","_getSrcById","removeSrc","removeSounds","removeAllSounds","loadComplete","capabilities","replace","ret","lastIndexOf","playProps","createInstance","ok","_playInstance","_playFailed","DefaultSoundInstance","applyPlayProps","uniqueId","getVolume","getMute","setDefaultPlayProps","getDefaultPlayProps","getPosition","_beginPlaying","delayTimeoutId","add","_playFinished","channel","_removeAll","_add","_remove","maxDefault","_getSlot","replacement","playState","_interrupt","AbstractSoundInstance","playbackResource","_volume","_pan","getPan","setPan","getStartTime","setStartTime","_duration","setDuration","_playbackResource","getPlaybackResource","setPlaybackResource","_position","_loop","getLoop","setLoop","_muted","getMuted","setMuted","_cleanUp","_handleStop","_pause","_resume","_updateVolume","_updatePan","_calculateCurrentPosition","_updatePosition","_updateStartTime","_updateDuration","_setDurationFromSource","_removeLooping","_addLooping","_sendEvent","_handleCleanUp","_handleSoundReady","_handleSoundComplete","_handleLoop","AbstractPlugin","_loaders","_audioSources","_soundInstances","_loaderClass","_soundInstanceClass","_handlePreloadComplete","_handlePreloadError","isPreloadStarted","isPreloadComplete","Loader","decodeAudioData","_handleAudioDecoded","decodedAudio","AbstractLoader__sendComplete","WebAudioLoader","WebAudioSoundInstance","AbstractSoundInstance_constructor","gainNode","createGain","panNode","createPanner","panningModel","_panningModel","connect","sourceNode","_soundCompleteTimeout","_sourceNodeNext","_playbackStartTime","_endedHandler","_scratchBuffer","destinationNode","AbstractSoundInstance_destroy","disconnect","_cleanUpAudioNode","_createAndPlayAudioNode","numberOfOutputs","audioNode","buffer","dur","currentTime","createBufferSource","newVolume","gain","AbstractPlugin_constructor","dynamicsCompressorNode","createDynamicsCompressor","destination","_addPropsToClasses","_unlocked","isMobilePhoneGap","_isFileXHRSupported","_generateCapabilities","playEmptySound","supported","xhr","canPlayType","AudioContext","webkitAudioContext","createBuffer","_compatibilitySetUp","_unlock","panning","tracks","supportedExtensions","extensionMap","playType","numberOfChannels","createGainNode","noteGrainOn","noteOff","HTMLAudioTagPool","TagPool","_tags","_tagPool","_tagUsed","HTMLAudioSoundInstance","_audioSpriteStopTime","_delayTimeoutId","_readyHandler","_handleTagReady","_stalledHandler","_audioSpriteEndHandler","_handleAudioSpriteLoop","_loopHandler","isMuted","_AUDIO_SEEKED","pause","_AUDIO_ENDED","_AUDIO_READY","_AUDIO_STALLED","_TIME_UPDATE","AbstractSoundInstance__beginPlaying","_handleSetPositionSeek","defaultNumChannels","MAX_INSTANCES","AbstractPlugin_register","AbstractPlugin_removeSound","AbstractPlugin_create","pluginData","ignoreGlobalPause","_curQueueProps","_initQueueProps","_steps","_actions","_useTicks","_registered","onChange","removeTweens","_register","LOOP","REVERSE","IGNORE","tweenjs_count","removeAllTweens","hasActiveTweens","_addStep","p0","_linearEase","p1","to","ease","_appendQueueProps","_addAction","_set","actionsMode","prevPos","_updateTargetProps","_runActions","v0","v1","ignore","v2","startPos","endPos","includeStart","sPos","ePos","action","oldValue","injectProps","_labelList","addTween","setLabels","removeTween","updateDuration","addLabel","Ease","linear","none","amount","getPowIn","getPowOut","getPowInOut","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","quartIn","quartOut","quartInOut","quintIn","quintOut","quintInOut","sineIn","sineOut","sineInOut","getBackIn","backIn","getBackOut","backOut","getBackInOut","backInOut","circIn","circOut","circInOut","bounceIn","bounceOut","bounceInOut","getElasticIn","amplitude","period","pi2","asin","elasticIn","getElasticOut","elasticOut","getElasticInOut","elasticInOut","MotionGuidePlugin","_rotOffS","_rotOffE","_rotNormS","_rotNormE","__needsRot","startValue","endValue","__rotGlobalS","__rotGlobalE","testRotData","temp","_length","accuracy","_segments","tempX","tempY","cx","cy","ex","ey","oldX","oldY","sublines","inv","orient","calc","__rotPathS","toFixed","__rotPathE","__guideData","rotGlobalD","rotPathD","rot","rotDelta","rotOffS","guide","lastRatio","seg","cap","SpriteContainer","SpriteStage","AudioSprite","CordovaAudioLoader","CordovaAudioPlugin","CordovaAudioSoundInstance","FlashAudioLoader","FlashAudioPlugin","FlashAudioSoundInstance","_TextElement2","_TextElement3","LabelElement","_TextElement","minWidth","textOutline","textOptions","_LabelElement2","_LabelElement3","ButtonElement","_LabelElement","click","_Element2","_Element3","ImageElement","_Element","createImage","imageBounds","_ButtonElement2","_ButtonElement3","_ImageElement","_ImageElement2","ListItemElement","_ButtonElement","indicator","alignText","setTextPosition","TextElement","textBounds","horizontalPadding","verticalPadding","createText","bind","computeBounds","centerText","SoundElement","playSound","filteredProps","assign","sound","fadeIn","fadeOut","soundProps","fade","eventsDefined","_","addMapEntry","pair","addSetEntry","func","thisArg","arrayAggregator","setter","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiToArray","string","asciiWords","reAsciiWord","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseProperty","basePropertyOf","baseReduce","baseSortBy","comparer","current","baseTimes","baseToPairs","baseUnary","baseValues","cacheHas","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","escapeStringChar","chr","stringEscapes","getValue","hasUnicode","reHasUnicode","hasUnicodeWord","reHasUnicodeWord","iteratorToArray","done","mapToArray","overArg","arg","replaceHolders","PLACEHOLDER","setToArray","setToPairs","strictLastIndexOf","stringSize","unicodeSize","asciiSize","stringToArray","unicodeToArray","reUnicode","lastIndex","unicodeWords","reUnicodeWord","VERSION","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","LAZY_WHILE_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","asyncTag","boolTag","dateTag","domExcTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","promiseTag","proxyTag","regexpTag","stringTag","symbolTag","undefinedTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsAstralRange","rsComboMarksRange","reComboHalfMarksRange","rsComboSymbolsRange","rsComboRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsOptVar","rsOptJoin","rsOrdLower","rsOrdUpper","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","htmlEscapes","&","<",">","\"","'","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","\\","\n","\r"," "," ","freeParseFloat","parseFloat","freeParseInt","freeSelf","freeModule","moduleExports","freeProcess","process","nodeUtil","binding","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","deburrLetter","escapeHtmlChar","unescapeHtmlChar","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","lazyClone","copyArray","lazyReverse","lazyValue","dir","isArr","isRight","arrLength","view","getView","iteratees","iterLength","takeCount","nativeMin","baseWrapperValue","outer","iterIndex","computed","Hash","entries","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","Map","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","arrayLikeKeys","inherited","isArg","isArguments","isBuff","isBuffer","isType","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","baseAggregator","baseEach","baseAssign","copyObject","keys","baseAssignIn","keysIn","baseAt","skip","number","lower","upper","baseClone","bitmask","customizer","isDeep","isFlat","isFull","initCloneArray","isFunc","cloneBuffer","initCloneObject","copySymbolsIn","copySymbols","initCloneByTag","stacked","keysFunc","getAllKeysIn","getAllKeys","subValue","baseConforms","baseConformsTo","baseDelay","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","baseGet","castPath","toKey","baseGetAllKeys","symbolsFunc","baseGetTag","symToStringTag","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","caches","maxLength","seen","baseInverter","baseInvoke","last","baseIsArguments","baseIsArrayBuffer","baseIsDate","baseIsEqual","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","baseIsMatch","matchData","noCustomizer","srcValue","baseIsNative","isMasked","pattern","reIsNative","toSource","baseIsRegExp","baseIsSet","baseIsTypedArray","isLength","baseIteratee","baseMatchesProperty","baseMatches","baseKeys","isPrototype","nativeKeys","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","baseMergeDeep","newValue","mergeFunc","isTyped","isArrayLikeObject","cloneTypedArray","isPlainObject","toPlainObject","baseNth","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","baseSet","basePropertyDeep","basePullAll","basePullAt","indexes","previous","baseUnset","nativeFloor","nativeRandom","baseRange","nativeCeil","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","nested","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","symbolToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","actions","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castSlice","allocUnsafe","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","cloneSet","cloneSymbol","symbol","symbolValueOf","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","order","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","getSymbols","getSymbolsIn","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBind","wrapper","fn","Ctor","isBind","createCtor","createCaseFirst","methodName","trailing","createCompounder","deburr","thisBinding","baseCreate","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","reverse","getFuncName","funcName","getData","isLaziable","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","createInverter","toIteratee","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createPartial","createRange","toFinite","createRelationalOperation","toNumber","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","newData","setData","setWrapToString","createRound","precision","createToPairs","createWrap","mergeData","baseSetData","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","isPartial","arrValue","othValue","compared","convert","objProps","objLength","othProps","skipCtor","objCtor","othCtor","flatten","realNames","otherFunc","isKeyable","getNative","isOwn","unmasked","nativeObjectToString","transforms","getWrapDetails","hasPath","hasFunc","input","getPrototype","insertWrapDetails","spreadableSymbol","maskSrcKey","proto","memoizeCapped","memoize","srcBitmask","newBitmask","isCombo","otherArgs","oldArray","reference","updateWrapDetails","shortOut","lastCalled","stamp","nativeNow","rand","funcToString","compact","drop","dropRight","dropRightWhile","dropWhile","findIndex","findLastIndex","flattenDeep","flattenDepth","fromPairs","initial","separator","nativeJoin","nth","pullAll","pullAllBy","pullAllWith","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","group","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","orderBy","reduce","reduceRight","reject","negate","sample","sampleSize","shuffle","some","after","before","curry","curryRight","debounce","invokeFunc","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","shouldInvoke","trailingEdge","flush","debounced","isInvoking","flip","resolver","memoized","Cache","rest","spread","throttle","unary","wrap","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","conformsTo","isBoolean","isElement","isEqual","isEqualWith","isError","isFinite","nativeIsFinite","isInteger","isMatch","isMatchWith","isNative","isMaskable","isNull","isNil","objectCtorString","isSafeInteger","isUndefined","isWeakMap","isWeakSet","symIterator","remainder","toSafeInteger","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","mapKeys","mapValues","omitBy","pickBy","setWith","isArrLike","unset","updateWith","valuesIn","clamp","inRange","random","floating","capitalize","upperFirst","endsWith","escapeRegExp","strLength","padEnd","padStart","radix","nativeParseInt","repeat","startsWith","template","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","attempt","toLower","toUpper","trim","trimEnd","trimStart","truncate","omission","substring","newEnd","unescape","cond","conforms","constant","defaultTo","matches","matchesProperty","mixin","methodNames","oldDash","noop","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","toPath","idCounter","maxBy","mean","meanBy","minBy","sum","sumBy","arrayProto","funcProto","coreJsData","uid","IE_PROTO","Buffer","objectCreate","propertyIsEnumerable","isConcatSpreadable","toStringTag","ctxClearTimeout","ctxNow","ctxSetTimeout","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","DataView","Promise","Set","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","baseSetToString","castRest","ArrayBuffer","ctorString","difference","differenceBy","differenceWith","mapped","intersectionBy","intersectionWith","pull","pullAt","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","find","findLast","groupBy","invokeMap","keyBy","partition","sortBy","bindKey","defer","overArgs","funcsLength","partialRight","rearg","gt","gte","lte","assignIn","assignWith","defaultsDeep","mergeWith","invertBy","invoke","merge","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","methodOf","over","overEvery","overSome","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","subtract","minuend","subtrahend","entriesIn","extendWith","eachRight","first","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","SamplePlugin","CSSPlugin","BoxElement","content","titleElement","contentElement","_ListItemElement","_ListItemElement2","ListElement","items","itemEvents","listItem","SpriteElement","createSprite","spriteBounds","animationName","onAnimationEnd","_ListElement","_ListElement2","_SpriteElement","_SpriteElement2","_BoxElement","_BoxElement2","_SoundElement","_SoundElement2","SoundManager","handleSoundTick","addLayer","removeLayer","playing","toFade","findBy","fadeOutStart","backPosition","muted","_SoundManager","_SoundManager2","_lodash","_lodash2","TranslateUtils","translationsSource","language","_language","TRANSLATIONS","propertyName","parts","getProperty","paramsMatch","paramEnclosed","paramKey","_TranslateUtils","_TranslateUtils2","__webpack_amd_options__"],"mappings":"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,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAEAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,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CA5X,EAAA1d,UACA0d,EAAAmuB,YACAnuB,EAAA+mB,gBACA/mB,EAAAouB,cACApuB,EAAAx6D,MACAw6D,EAAAihB,UACAjhB,EAAAhe,QACAge,EAAAqvB,WACArvB,EAAA0tB,WACA1tB,EAAAkjB,aACAljB,EAAAsf,SACAtf,EAAAn6B,SACAm6B,EAAA+c,WACA/c,EAAA18E,UACA08E,EAAAyoB,QACAzoB,EAAA0oB,YACA1oB,EAAA2oB,YACA3oB,EAAAktB,WACAltB,EAAA/gF,UACA+gF,EAAAkhB,SACAlhB,EAAAmhB,cACAnhB,EAAAohB,YACAphB,EAAAp+E,YACAo+E,EAAAquB,gBACAruB,EAAA2tB,SACA3tB,EAAAz3B,SACAy3B,EAAAisB,cACAjsB,EAAAksB,gBACAlsB,EAAAmsB,kBACAnsB,EAAAgd,QACAhd,EAAAid,aACAjd,EAAAkd,kBACAld,EAAAmd,aACAnd,EAAAj+E,QACAi+E,EAAAlvC,UACAkvC,EAAAkgB,WACAlgB,EAAAmgB,eACAngB,EAAAogB,gBACApgB,EAAA8a,WACA9a,EAAAsd,eACAtd,EAAAud,gBACAvd,EAAAwiB,QACAxiB,EAAAsvB,QACAtvB,EAAAuvB,aACAvvB,EAAAwd,aACAxd,EAAAmlB,aACAnlB,EAAAolB,eACAplB,EAAAqtB,WACArtB,EAAAyd,WACAzd,EAAA7pE,gBACA6pE,EAAAqsB,kBACArsB,EAAAssB,oBACAtsB,EAAAjrE,UACAirE,EAAAuuB,YACAvuB,EAAAstB,aACAttB,EAAA3c,YACA2c,EAAAutB,SACAvtB,EAAA8F,QACA9F,EAAAgG,UACAhG,EAAAp5C,OACAo5C,EAAAqlB,WACArlB,EAAAslB,aACAtlB,EAAA6oB,WACA7oB,EAAA8oB,mBACA9oB,EAAAic,WACAjc,EAAAyuB,SACAzuB,EAAAsuB,aACAtuB,EAAAh0C,UACAg0C,EAAAwvB,YACAxvB,EAAA+oB,SACA/oB,EAAA2gB,UACA3gB,EAAAmpB,UACAnpB,EAAA0uB,QACA1uB,EAAAulB,UACAvlB,EAAApzE,QACAozE,EAAAugB,WACAvgB,EA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","file":"./elements-js.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"elements-js\"] = factory();\n\telse\n\t\troot[\"elements-js\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"elements-js\"] = factory();\n\telse\n\t\troot[\"elements-js\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createjsBrowserify = __webpack_require__(4);\n\t\n\tvar _createjsBrowserify2 = _interopRequireDefault(_createjsBrowserify);\n\t\n\tvar _EaselJS = __webpack_require__(5);\n\t\n\tvar _EaselJS2 = _interopRequireDefault(_EaselJS);\n\t\n\tvar _PreloadJS = __webpack_require__(15);\n\t\n\tvar _PreloadJS2 = _interopRequireDefault(_PreloadJS);\n\t\n\tvar _SoundJS = __webpack_require__(6);\n\t\n\tvar _SoundJS2 = _interopRequireDefault(_SoundJS);\n\t\n\tvar _TweenJS = __webpack_require__(16);\n\t\n\tvar _TweenJS2 = _interopRequireDefault(_TweenJS);\n\t\n\tvar _Elements = __webpack_require__(20);\n\t\n\tvar _Elements2 = _interopRequireDefault(_Elements);\n\t\n\tvar _Translations = __webpack_require__(24);\n\t\n\tvar _Translations2 = _interopRequireDefault(_Translations);\n\t\n\tvar _Sounds = __webpack_require__(22);\n\t\n\tvar _Sounds2 = _interopRequireDefault(_Sounds);\n\t\n\tvar _config = __webpack_require__(14);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t(function (global, factory) {\n\t  if (( false ? 'undefined' : _typeof(module)) === 'object' && _typeof(module.exports) === 'object') {\n\t    // For CommonJS and CommonJS-like environments where a proper `window`\n\t    // is present, execute the factory and get ElementsJS.\n\t    // For environments that do not have a `window` with a `document`\n\t    // (such as Node.js), expose a factory as module.exports.\n\t    // This accentuates the need for the creation of a real `window`.\n\t    module.exports = global.document ? factory(global, true) : function (w) {\n\t      if (!w.document) {\n\t        throw new Error('ElementsJS requires a window with a document');\n\t      }\n\t      return factory(w);\n\t    };\n\t  } else {\n\t    factory(global);\n\t  }\n\t  // Pass this if window is not defined yet\n\t})(typeof window !== 'undefined' ? window : undefined, function (window) {\n\t  var elementsJSStatus = {\n\t    initialized: true,\n\t    version: _config2.default.version,\n\t    build: _config2.default.build,\n\t    EaselJS: 'EaselJS v' + _createjsBrowserify2.default.EaselJS.version + ' - build ' + _createjsBrowserify2.default.EaselJS.buildDate,\n\t    TweenJS: 'TweenJS v' + _createjsBrowserify2.default.TweenJS.version + ' - build ' + _createjsBrowserify2.default.TweenJS.buildDate,\n\t    PreloadJS: 'PreloadJS v' + _createjsBrowserify2.default.PreloadJS.version + ' - build ' + _createjsBrowserify2.default.PreloadJS.buildDate,\n\t    SoundJS: 'SoundJS v' + _createjsBrowserify2.default.SoundJS.version + ' - build ' + _createjsBrowserify2.default.SoundJS.buildDate\n\t  };\n\t\n\t  console.log('ElementsJS initialized', elementsJSStatus);\n\t\n\t  return {\n\t    EaselJS: _EaselJS2.default,\n\t    PreloadJS: _PreloadJS2.default,\n\t    SoundJS: _SoundJS2.default,\n\t    TweenJS: _TweenJS2.default,\n\t    Elements: _Elements2.default,\n\t    Translations: _Translations2.default,\n\t    Sounds: _Sounds2.default,\n\t    status: elementsJSStatus\n\t  };\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module)))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _EaselJS = __webpack_require__(5);\n\t\n\tvar _ElementHelpers = __webpack_require__(3);\n\t\n\tvar _ElementHelpers2 = _interopRequireDefault(_ElementHelpers);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * constructs an Element instance\n\t * @class Element\n\t * @classdesc Element Class\n\t //* @extends Container\n\t * @param {Object} options the options object to be merged with defaults\n\t * @type {Element}\n\t * @public\n\t */\n\tvar Element = function (_Container) {\n\t  _inherits(Element, _Container);\n\t\n\t  function Element() {\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, Element);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Element.__proto__ || Object.getPrototypeOf(Element)).call(this));\n\t\n\t    _this.initDefaults();\n\t    _this.initSettings(options);\n\t\n\t    _this.initData();\n\t\n\t    if (_this.settings.parent) {\n\t      _this.settings.parent.addChild(_this);\n\t    }\n\t\n\t    _this.draw();\n\t\n\t    if (!!_this.settings.align) {\n\t      _this.align(null, _this.settings.align);\n\t    }\n\t\n\t    _this.bindEvents();\n\t\n\t    _this.init();\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * initializes default settings for Element instance\n\t   * @memberOf Element\n\t   * @method initDefaults\n\t   * @instance\n\t   * @param {Object} defaults the defaults object for Element instance\n\t   */\n\t\n\t\n\t  _createClass(Element, [{\n\t    key: 'initDefaults',\n\t    value: function initDefaults(defaults) {\n\t      this.inherit({\n\t        debug: {\n\t          fill: 'rgba(0,0,0,0.4)',\n\t          stroke: {\n\t            size: 1,\n\t            color: '#f00'\n\t          },\n\t          regPoint: {\n\t            radius: 3,\n\t            fill: '#f00'\n\t          }\n\t        },\n\t        defaults: {\n\t          debug: false,\n\t          parent: null,\n\t          position: {\n\t            x: 0,\n\t            y: 0\n\t          },\n\t          scale: {\n\t            x: 1,\n\t            y: 1\n\t          },\n\t          size: {\n\t            width: 0,\n\t            height: 0\n\t          },\n\t          cache: false,\n\t          mask: false,\n\t          fill: 'rgba(255,255,255,0.001)',\n\t          stroke: {\n\t            size: 0,\n\t            radius: 0,\n\t            color: 'rgba(0,0,0,0.001)'\n\t          },\n\t          shadow: false,\n\t          align: null,\n\t          regPoint: false,\n\t          events: {}\n\t        }.inherit(defaults)\n\t      });\n\t    }\n\t\n\t    /**\n\t     * initializes settings object for the Element instance\n\t     * @memberOf Element\n\t     * @method initSettings\n\t     * @instance\n\t     * @param {Object} options the options object to be merged with defaults\n\t     */\n\t\n\t  }, {\n\t    key: 'initSettings',\n\t    value: function initSettings(options) {\n\t      this.inherit({\n\t        settings: this.defaults.inherit(true, options)\n\t      });\n\t\n\t      !!this.settings.debug && this.settings.inherit(this.debug);\n\t    }\n\t\n\t    /**\n\t     * initializes data object for the Element instance\n\t     * @memberOf Element\n\t     * @method initData\n\t     * @instance\n\t     */\n\t\n\t  }, {\n\t    key: 'initData',\n\t    value: function initData() {\n\t      this.data = {};\n\t    }\n\t  }, {\n\t    key: 'preDrawElements',\n\t    value: function preDrawElements() {\n\t      this.setScale(this.settings.scale);\n\t      this.setComputedBounds(this.settings.size);\n\t    }\n\t  }, {\n\t    key: 'drawBackgroundElements',\n\t    value: function drawBackgroundElements() {\n\t      this.background = _ElementHelpers2.default.createRect.apply(_ElementHelpers2.default, [this.settings.pick(['fill', 'stroke'])].concat(_toConsumableArray(this.bounds)));\n\t      this.addChild(this.background);\n\t    }\n\t  }, {\n\t    key: 'drawElements',\n\t    value: function drawElements() {\n\t      //TODO:\n\t    }\n\t  }, {\n\t    key: 'drawBehaviorElements',\n\t    value: function drawBehaviorElements() {\n\t      this.setMask(this.settings.mask);\n\t      this.setShadow(this.settings.shadow);\n\t      this.setCache(this.settings.cache);\n\t    }\n\t  }, {\n\t    key: 'drawOverlayElements',\n\t    value: function drawOverlayElements() {\n\t      if (!!this.settings.regPoint) {\n\t        this.regPoint = _ElementHelpers2.default.createCircle.apply(_ElementHelpers2.default, [this.settings.regPoint].concat(_toConsumableArray(this.bounds)));\n\t        this.addChild(this.regPoint);\n\t\n\t        _ElementHelpers2.default.align(this.regPoint, null, 'center middle', false);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'postDrawElements',\n\t    value: function postDrawElements() {\n\t      this.setBounds.apply(this, _toConsumableArray(this.bounds));\n\t      this.setReg();\n\t      this.setPosition(this.settings.position);\n\t    }\n\t\n\t    /**\n\t     * draws all graphic elements of the Element instance\n\t     * @memberOf Element\n\t     * @method draw\n\t     * @instance\n\t     */\n\t\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw() {\n\t      _get(Element.prototype.__proto__ || Object.getPrototypeOf(Element.prototype), 'draw', this).call(this);\n\t\n\t      this.preDrawElements();\n\t\n\t      this.drawBackgroundElements();\n\t      this.drawElements();\n\t      this.drawBehaviorElements();\n\t      this.drawOverlayElements();\n\t\n\t      this.postDrawElements();\n\t    }\n\t\n\t    /**\n\t     * sets to center/middle the regPoint of the Element instance\n\t     * @memberOf Element\n\t     * @method setReg\n\t     * @instance\n\t     */\n\t\n\t  }, {\n\t    key: 'setReg',\n\t    value: function setReg() {\n\t      this.inherit({\n\t        regX: this.settings.size.width * 0.5 * this.settings.scale.x,\n\t        regY: this.settings.size.height * 0.5 * this.settings.scale.y\n\t      });\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * sets or updates the position of the Element instance\n\t     * @memberOf Element\n\t     * @method setPosition\n\t     * @instance\n\t     * @param {Object} [positionOptions=null] can contain x and y or only one or them\n\t     * @param {Number} [positionOptions.x=0] the x position\n\t     * @param {Number} [positionOptions.y=0] the y position\n\t     * @param {Boolean} [override=false] specify to override actual Element position\n\t     * @param {Boolean} [force=true] ...\n\t     * @return {Element} to make chainable the method\n\t     */\n\t\n\t  }, {\n\t    key: 'setPosition',\n\t    value: function setPosition() {\n\t      var positionOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t      var override = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\t      var force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\t\n\t      if (!!positionOptions) {\n\t        if (force) {\n\t          this.settings.position = positionOptions;\n\t        } else {\n\t          this.settings.position.inherit(positionOptions);\n\t        }\n\t      }\n\t\n\t      if (!!this.settings.position) {\n\t        if (!!this.settings.position.x) {\n\t          if (!!override) {\n\t            this.x = this.settings.position.x;\n\t          } else {\n\t            this.x += this.settings.position.x;\n\t          }\n\t        }\n\t\n\t        if (!!this.settings.position.y) {\n\t          if (!!override) {\n\t            this.y = this.settings.position.y;\n\t          } else {\n\t            this.y += this.settings.position.y;\n\t          }\n\t        }\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * sets or updates the scaling of the Element instance\n\t     * @memberOf Element\n\t     * @method setScale\n\t     * @instance\n\t     * @param {Object|Number} scaleOptions can be an object with x and y couple or only a number to be used for both\n\t     * @return {Element} to make chainable the method\n\t     */\n\t\n\t  }, {\n\t    key: 'setScale',\n\t    value: function setScale() {\n\t      var scaleOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\t\n\t      if (!!scaleOptions) {\n\t        if (force) {\n\t          this.settings.scale = scaleOptions;\n\t        } else {\n\t          this.settings.scale.inherit(scaleOptions);\n\t        }\n\t      }\n\t\n\t      if (!!this.settings.scale) {\n\t        var scale = {\n\t          scaleX: 1,\n\t          scaleY: 1\n\t        };\n\t\n\t        if (Number.isNumber(this.settings.scale)) {\n\t          scale.inherit({\n\t            scaleX: this.settings.scale,\n\t            scaleY: this.settings.scale\n\t          });\n\t        } else if (Object.isObject(this.settings.scale)) {\n\t          scale.inherit({\n\t            scaleX: this.settings.scale.x,\n\t            scaleY: this.settings.scale.y\n\t          });\n\t        }\n\t\n\t        this.inherit(scale);\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * sets or updates the bounds of the Element instance\n\t     * @memberOf Element\n\t     * @method setComputedBounds\n\t     * @instance\n\t     * @param {Object|Number} boundsOptions ...\n\t     * @return {Element} to make chainable the method\n\t     */\n\t\n\t  }, {\n\t    key: 'setComputedBounds',\n\t    value: function setComputedBounds() {\n\t      var boundsOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\t\n\t      if (!!boundsOptions) {\n\t        if (force) {\n\t          this.settings.size = boundsOptions;\n\t        } else {\n\t          this.settings.size.inherit(boundsOptions);\n\t        }\n\t      }\n\t\n\t      if (!this.bounds && !!this.settings.size) {\n\t        if (String.isPercentage(this.settings.size)) {\n\t          this.settings.size = {\n\t            width: '100%',\n\t            height: '100%'\n\t          };\n\t        } else if (Number.isNumber(this.settings.size)) {\n\t          this.settings.size = {\n\t            width: this.settings.size,\n\t            height: this.settings.size\n\t          };\n\t        }\n\t\n\t        if (String.isPercentage(this.settings.size.width) && !!this.parent) {\n\t          this.settings.size.width = this.parent.getComputedBounds().width * this.settings.size.width.parsePercentage();\n\t        }\n\t\n\t        if (String.isPercentage(this.settings.size.height) && !!this.parent) {\n\t          this.settings.size.height = this.parent.getComputedBounds().height * this.settings.size.height.parsePercentage();\n\t        }\n\t\n\t        this.bounds = [0, 0, this.settings.size.width * this.settings.scale.x, this.settings.size.height * this.settings.scale.y];\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * sets or updates the Mask of the Element instance\n\t     * @memberOf Element\n\t     * @method setMask\n\t     * @instance\n\t     * @param {Object|Shadow} maskOptions can be an object with {color, x, y, blur}<br>or directly an instance of Shadow (EaselJS)\n\t     * @param {Boolean} force ....\n\t     * @return {Element} to make chainable the method\n\t     */\n\t\n\t  }, {\n\t    key: 'setMask',\n\t    value: function setMask() {\n\t      var maskOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\t\n\t      if (!!maskOptions) {\n\t        if (force) {\n\t          this.settings.mask = maskOptions;\n\t        } else {\n\t          this.settings.mask.inherit(maskOptions);\n\t        }\n\t      }\n\t\n\t      if (!!this.settings.mask) {\n\t        this.maskShape = this.settings.mask;\n\t\n\t        if (!(this.settings.mask instanceof _EaselJS.Shape) && !(this.settings.mask instanceof _EaselJS.DisplayObject)) {\n\t          this.maskBounds = [0, 0, this.settings.size.width * this.settings.scale.x, this.settings.size.height * this.settings.scale.y];\n\t\n\t          if (Object.isObject(this.settings.mask)) {\n\t            this.maskBounds = [0, 0, this.settings.size.width * this.settings.scale.x * this.settings.mask.scale, this.settings.size.height * this.settings.scale.y * this.settings.mask.scale];\n\t            this.maskShape = _ElementHelpers2.default.createRect.apply(_ElementHelpers2.default, [this.settings.mask.pick(['fill', 'stroke'])].concat(_toConsumableArray(this.maskBounds)));\n\t          } else if (Number.isNumber(this.settings.mask)) {\n\t            this.maskBounds = [0, 0, this.settings.size.width * this.settings.scale.x * this.settings.mask, this.settings.size.height * this.settings.scale.y * this.settings.mask];\n\t            this.maskShape = _ElementHelpers2.default.createRect.apply(_ElementHelpers2.default, [this.settings.pick(['fill', 'stroke'])].concat(_toConsumableArray(this.maskBounds)));\n\t          }\n\t\n\t          this.maskShape.inherit({\n\t            x: this.bounds[2] * 0.5 - this.maskBounds[2] * 0.5,\n\t            y: this.bounds[3] * 0.5 - this.maskBounds[3] * 0.5\n\t          });\n\t        }\n\t\n\t        if (!!this.settings.debug) {\n\t          this.addChild(this.maskShape);\n\t        }\n\t\n\t        this.mask = this.maskShape;\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * sets or updates the Shadow of the Element instance\n\t     * @memberOf Element\n\t     * @method setShadow\n\t     * @instance\n\t     * @param {Object|Shadow} shadowOptions can be an object with {color, x, y, blur}<br>or directly an instance of Shadow (EaselJS)\n\t     * @param {Boolean} force ....\n\t     * @return {Element} to make chainable the method\n\t     */\n\t\n\t  }, {\n\t    key: 'setShadow',\n\t    value: function setShadow() {\n\t      var shadowOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\t\n\t      if (!!shadowOptions) {\n\t        if (force) {\n\t          this.settings.shadow = shadowOptions;\n\t        } else {\n\t          this.settings.shadow.inherit(shadowOptions);\n\t        }\n\t\n\t        if (!!this.settings.shadow) {\n\t          var shadow = null;\n\t\n\t          if (Object.isObject(this.settings.shadow)) {\n\t            var shadowSettings = [this.settings.shadow.color, this.settings.shadow.x, this.settings.shadow.y, this.settings.shadow.blur];\n\t\n\t            shadow = new (Function.prototype.bind.apply(_EaselJS.Shadow, [null].concat(shadowSettings)))();\n\t          } else if (this.settings.shadow instanceof _EaselJS.Shadow) {\n\t            shadow = this.settings.shadow;\n\t          }\n\t\n\t          this.inherit({\n\t            shadow: shadow\n\t          });\n\t        }\n\t      } else {\n\t        this.settings.shadow = null;\n\t        this.inherit({\n\t          shadow: null\n\t        });\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * sets or updates the Cache of the Element instance\n\t     * @memberOf Element\n\t     * @method setCache\n\t     * @instance\n\t     * @param {Object|Shadow} cacheOptions ..\n\t     * @param {Boolean} force ....\n\t     * @return {Element} to make chainable the method\n\t     */\n\t\n\t  }, {\n\t    key: 'setCache',\n\t    value: function setCache() {\n\t      var cacheOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\t\n\t      if (!!cacheOptions) {\n\t        if (force) {\n\t          this.settings.cache = cacheOptions;\n\t        } else {\n\t          this.settings.cache.inherit(cacheOptions);\n\t        }\n\t\n\t        if (!!this.settings.cache) {\n\t          this.cache.apply(this, [this.bounds.x - 5, this.bounds.y - 5, this.getComputedBounds().width, this.getComputedBounds().height]);\n\t        }\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Aligns the Element instance, based on it's parent bounds or specified parentElement bounds and mode parameter\n\t     * @memberOf Element\n\t     * @method align\n\t     * @instance\n\t     * @param {Object|null} parentElement if null, it considers the actual Element instance parent, otherwise it aligns in base of the specified parentElement\n\t     * @param {String} mode can be a set of one or two strings (blank separated) in any order, for horizontalModes (left, center, right), for verticalModes (top, middle, bottom)\n\t     * @return {Element} to make chainable the method\n\t     */\n\t\n\t  }, {\n\t    key: 'align',\n\t    value: function align() {\n\t      var parentElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'left top';\n\t\n\t      if (!parentElement) {\n\t        parentElement = this.parent;\n\t      }\n\t\n\t      var parentBounds = parentElement.getBounds();\n\t      var bounds = this.getBounds();\n\t      var modes = mode.toArray(' ');\n\t      var horizontalModes = ['left', 'center', 'right'];\n\t      var verticalModes = ['top', 'middle', 'bottom'];\n\t\n\t      var position = {\n\t        x: 0,\n\t        y: 0\n\t      };\n\t\n\t      if (horizontalModes.contains(modes)) {\n\t        if (modes.contains('left')) {\n\t          position.inherit({\n\t            x: bounds.width * 0.5\n\t          });\n\t        } else if (modes.contains('center')) {\n\t          position.inherit({\n\t            x: parentBounds.width * 0.5\n\t          });\n\t        } else if (modes.contains('right')) {\n\t          position.inherit({\n\t            x: parentBounds.width - bounds.width * 0.5\n\t          });\n\t        }\n\t      }\n\t\n\t      if (verticalModes.contains(modes)) {\n\t        if (modes.contains('top')) {\n\t          position.inherit({\n\t            y: bounds.height * 0.5\n\t          });\n\t        } else if (modes.contains('middle')) {\n\t          position.inherit({\n\t            y: parentBounds.height * 0.5\n\t          });\n\t        } else if (modes.contains('bottom')) {\n\t          position.inherit({\n\t            y: parentBounds.height - bounds.height * 0.5\n\t          });\n\t        }\n\t      }\n\t\n\t      this.settings.inherit({\n\t        position: position\n\t      });\n\t\n\t      this.inherit(position);\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * returns the actual computed bounds of the Element instance, including scale factor and top, right, bottom, left coordinates\n\t     * @memberOf Element\n\t     * @method getComputedBounds\n\t     * @instance\n\t     * @return {Object} the actual Element instance computed bounds object<br>\n\t     * <pre>\n\t     *   {\n\t     *     {\n\t     *       top: number,\n\t     *       right: number,\n\t     *       bottom: number,\n\t     *       left: number,\n\t     *       x: number,\n\t     *       y: number,\n\t     *       width: number,\n\t     *       height: number\n\t     *     }\n\t     *   }\n\t     * </pre>\n\t     */\n\t\n\t  }, {\n\t    key: 'getComputedBounds',\n\t    value: function getComputedBounds() {\n\t      var bounds = this.getBounds();\n\t\n\t      return {\n\t        top: this.y - bounds.height * 0.5 * this.settings.scale.y,\n\t        right: this.x + bounds.width * 0.5 * this.settings.scale.x,\n\t        bottom: this.y + bounds.height * 0.5 * this.settings.scale.y,\n\t        left: this.x - bounds.width * 0.5 * this.settings.scale.x,\n\t        x: this.x,\n\t        y: this.y,\n\t        width: bounds.width * this.settings.scale.x,\n\t        height: bounds.height * this.settings.scale.y\n\t      };\n\t    }\n\t\n\t    /**\n\t     * binds all events specified in the settings object for the Element instance, it supports all EaselJS classes events (eg. click, mouseover, etc...)\n\t     * @memberOf Element\n\t     * @method bindEvents\n\t     * @instance\n\t     */\n\t\n\t  }, {\n\t    key: 'bindEvents',\n\t    value: function bindEvents() {\n\t      var _this2 = this;\n\t\n\t      if (!!this.settings.events) {\n\t        this.settings.events.each(function (value, key) {\n\t          if (Function.isFunction(value)) {\n\t            _this2.on(key, value);\n\t          }\n\t        });\n\t      }\n\t    }\n\t\n\t    /**\n\t     * empty init method, to be overriden in classes that extends Element, to use for all those initializations you might need after having rendered the Element\n\t     * @memberOf Element\n\t     * @method init\n\t     * @instance\n\t     */\n\t\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {}\n\t  }]);\n\t\n\t  return Element;\n\t}(_EaselJS.Container);\n\t\n\texports.default = Element;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _EaselJS = __webpack_require__(5);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * @class ElementHelpers\n\t * @classdesc all the helpers we need to draw the elements\n\t */\n\tvar ElementHelpers = function () {\n\t  function ElementHelpers() {\n\t    _classCallCheck(this, ElementHelpers);\n\t  }\n\t\n\t  _createClass(ElementHelpers, null, [{\n\t    key: 'setBoxSize',\n\t\n\t\n\t    /**\n\t     * sets the box size of an EaselJS element\n\t     * @memberOf ElementHelpers\n\t     * @method setBoxSize\n\t     * @static\n\t     * @param {Object|Container|Element} element can be an Object, an EaselJS instance, a CreateJS Core Elements instance\n\t     * @param {Number} width the width\n\t     * @param {Number} height the height\n\t     * @param {Boolean} css specity if you want to override also the css box size properties\n\t     * @return {Object|Container|Element}\n\t     */\n\t    value: function setBoxSize(element) {\n\t      var width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\t      var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\t      var css = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\t\n\t      if (!!css) {\n\t        element.style.width = width + 'px';\n\t        element.style.height = height + 'px';\n\t      }\n\t\n\t      return element.inherit({\n\t        width: width,\n\t        height: height\n\t      });\n\t    }\n\t\n\t    /**\n\t     * sets the scale factor of an EaselJS element\n\t     * @memberOf ElementHelpers\n\t     * @method scale\n\t     * @static\n\t     * @param {Object|Container|Element} element can be an Object, an EaselJS instance, a CreateJS Core Elements instance\n\t     * @param {Number|Object} scale the scale factor to be used for both scaleX and scaleY\n\t     * @return {Object|Container|Element}\n\t     */\n\t\n\t  }, {\n\t    key: 'scale',\n\t    value: function scale(element, _scale) {\n\t      return element.inherit({\n\t        scaleX: _scale,\n\t        scaleY: _scale\n\t      });\n\t    }\n\t\n\t    /**\n\t     * aligns the reg point or an element\n\t     * @memberOf ElementHelpers\n\t     * @method alignRegPoint\n\t     * @static\n\t     * @param {Object|Container|Element} element can be an Object, an EaselJS instance, a CreateJS Core Elements instance\n\t     * @param {String} mode can be a couple of word for horizontal or vertical align, in any order<br>\n\t     *   accepts the following modes<br>\n\t     *   <ul>\n\t     *     <li><b>Horizontal Modes</b>: left, center, right</li>\n\t     *     <li><b>Vertical Modes</b>: top, middle, bottom</li>\n\t     *   </ul>\n\t     * @return {Object|Container|Element}\n\t     */\n\t\n\t  }, {\n\t    key: 'alignRegPoint',\n\t    value: function alignRegPoint(element) {\n\t      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'left top';\n\t\n\t      var bounds = element.getBounds();\n\t      var modes = mode.toArray(' ');\n\t      var horizontalModes = ['left', 'center', 'right'];\n\t      var verticalModes = ['top', 'middle', 'bottom'];\n\t\n\t      return element.inherit({\n\t        regX: horizontalModes.contains(modes) ? bounds.width * 0.5 : 0,\n\t        regY: verticalModes.contains(modes) ? bounds.height * 0.5 : 0\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Aligns an element (horizontally, vertically or both) based on it's parent bounds.\n\t     * @memberOf ElementHelpers\n\t     * @method align\n\t     * @static\n\t     * @param {Object|Container|Element} element can be an Object, an EaselJS instance, a CreateJS Core Elements instance\n\t     * @param {null|Object|Container|Element} parent can be an Object, an EaselJS instance, a CreateJS Core Elements instance<br>\n\t     *   if null, it takes automatically the parent property of element parameter\n\t     * @param {String} mode can be a couple of word for horizontal or vertical align, in any order<br>\n\t     *   accepts the following modes<br>\n\t     *   <ul>\n\t     *     <li><b>Horizontal Modes</b>: left, center, right</li>\n\t     *     <li><b>Vertical Modes</b>: top, middle, bottom</li>\n\t     *   </ul>\n\t     * @param {Boolean} regPoint enabled alignment also on registration point\n\t     * @param {null|String} regPointMode can be a couple of word for horizontal or vertical align, in any order<br>\n\t     *   accepts the following modes<br>\n\t     *   <ul>\n\t     *     <li><b>Horizontal Modes</b>: left, center, right</li>\n\t     *     <li><b>Vertical Modes</b>: top, middle, bottom</li>\n\t     *   </ul><br>\n\t     *   if null it considers mode parameter as fallback\n\t     * @return {Object|Container|Element}\n\t     */\n\t\n\t  }, {\n\t    key: 'align',\n\t    value: function align(element) {\n\t      var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\t      var mode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'left top';\n\t      var regPoint = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\t      var regPointMode = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n\t\n\t      if (!parent) {\n\t        parent = element.parent;\n\t      }\n\t\n\t      var parentBounds = parent.getBounds();\n\t      var elementBounds = element.getBounds();\n\t      var modes = mode.toArray(' ');\n\t      var horizontalModes = ['left', 'center', 'right'];\n\t      var verticalModes = ['top', 'middle', 'bottom'];\n\t\n\t      if (!!regPoint) {\n\t        this.alignRegPoint(element, regPointMode || mode);\n\t      }\n\t\n\t      var position = {\n\t        x: 0,\n\t        y: 0\n\t      };\n\t\n\t      if (horizontalModes.contains(modes)) {\n\t        if (modes.contains('center')) {\n\t          position.inherit({\n\t            x: parentBounds.width * 0.5 + (!!regPoint && !(element instanceof _EaselJS.Bitmap) ? elementBounds.width * 0.5 : 0)\n\t          });\n\t        } else if (modes.contains('left')) {\n\t          position.inherit({\n\t            x: !!regPoint ? elementBounds.width * 0.5 : 0\n\t          });\n\t        } else if (modes.contains('right')) {\n\t          position.inherit({\n\t            x: parentBounds.width - elementBounds.width + (!!regPoint ? elementBounds.width * 0.5 : 0)\n\t          });\n\t        }\n\t      }\n\t\n\t      if (verticalModes.contains(modes)) {\n\t        if (modes.contains('middle')) {\n\t          position.inherit({\n\t            y: parentBounds.height * 0.5 + (!!regPoint && !(element instanceof _EaselJS.Bitmap) ? elementBounds.width * 0.5 : 0)\n\t          });\n\t        } else if (modes.contains('top')) {\n\t          position.inherit({\n\t            y: !!regPoint ? elementBounds.height * 0.5 : 0\n\t          });\n\t        } else if (modes.contains('bottom')) {\n\t          position.inherit({\n\t            y: parentBounds.height - elementBounds.height\n\t          });\n\t        }\n\t      }\n\t\n\t      return element.inherit(position);\n\t    }\n\t\n\t    /**\n\t     * creates an EaselJS Container instance based on bounds parameters\n\t     * @memberOf ElementHelpers\n\t     * @method createContainer\n\t     * @statuc\n\t     * @param {Arguments} bounds the bounds parameter will be passed to setBounds method of EaselJS Container class<br>\n\t     *   so it has to be an array with this sequence<br>\n\t     *   <ul>\n\t     *     <li>{Number} x</li>\n\t     *     <li>{Number} y</li>\n\t     *     <li>{Number} width</li>\n\t     *     <li>{Number} height</li>\n\t     *   </ul>\n\t     * @return {Container}\n\t     */\n\t\n\t  }, {\n\t    key: 'createContainer',\n\t    value: function createContainer() {\n\t      var container = new _EaselJS.Container().inherit({\n\t        x: arguments.length <= 0 ? undefined : arguments[0],\n\t        y: arguments.length <= 1 ? undefined : arguments[1]\n\t      });\n\t\n\t      container.setBounds.apply(container, arguments);\n\t\n\t      return container;\n\t    }\n\t\n\t    /**\n\t     * creates an EaselJS Graphics instance\n\t     * @memberOf ElementHelpers\n\t     * @method createGraphics\n\t     * @static\n\t     * @param {Object} options the options can contain\n\t     * @param {String|Object} options.fill color for filling graphics<br>\n\t     * @param {Array} options.fill.colors colors to create a linear gradient fill\n\t     * @param {Array} options.fill.ratios color ratios to create a linear gradient fill\n\t     * @param {Array} options.fill.points start & stop points to create a linear gradient fill\n\t     * @param {String|Object} options.stroke stroke options, if string it creates a stroke with size 1\n\t     * @param {Number} options.stroke.size the size\n\t     * @param {String} options.stroke.color the color\n\t     * @param {Arguments} bounds the bounds parameter will be passed to setBounds method of EaselJS Container class<br>\n\t     *   so it has to be an array with this sequence<br>\n\t     *   <ul>\n\t     *     <li>{Number} x</li>\n\t     *     <li>{Number} y</li>\n\t     *     <li>{Number} width</li>\n\t     *     <li>{Number} height</li>\n\t     *   </ul>\n\t     * @return {Graphics}\n\t     */\n\t\n\t  }, {\n\t    key: 'createGraphics',\n\t    value: function createGraphics() {\n\t      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t      var defaults = {\n\t        fill: false,\n\t        stroke: false\n\t      };\n\t\n\t      var settings = defaults.inherit(true, options);\n\t\n\t      var graphics = new _EaselJS.Graphics();\n\t\n\t      if (!!settings.fill) {\n\t        if (Object.isObject(settings.fill)) {\n\t          if (!!settings.fill.colors && !!settings.fill.ratios && !!settings.fill.points) {\n\t            graphics.beginLinearGradientFill.apply(graphics, [[].concat(_toConsumableArray(settings.fill.colors)), [].concat(_toConsumableArray(settings.fill.ratios))].concat(_toConsumableArray(settings.fill.points)));\n\t          }\n\t        } else {\n\t          graphics.beginFill(settings.fill);\n\t        }\n\t      }\n\t\n\t      if (!!settings.stroke) {\n\t        if (String.isString(settings.stroke)) {\n\t          settings.inherit({\n\t            stroke: {\n\t              size: 1,\n\t              color: settings.stroke\n\t            }\n\t          });\n\t        }\n\t\n\t        graphics.setStrokeStyle(settings.stroke.size);\n\t        graphics.beginStroke(settings.stroke.color);\n\t      }\n\t\n\t      return graphics;\n\t    }\n\t\n\t    /**\n\t     * creates an EaselJS Rect Shape instance\n\t     * @memberOf ElementHelpers\n\t     * @method createRect\n\t     * @static\n\t     * @param {Object} options the options can contain\n\t     * @param {String|Object} options.fill color for filling graphics<br>\n\t     * @param {Array} options.fill.colors colors to create a linear gradient fill\n\t     * @param {Array} options.fill.ratios color ratios to create a linear gradient fill\n\t     * @param {Array} options.fill.points start & stop points to create a linear gradient fill\n\t     * @param {String|Object} options.stroke stroke options, if string it creates a stroke with size 1\n\t     * @param {Number} options.stroke.size the size\n\t     * @param {String} options.stroke.color the color\n\t     * @param {Boolean|Number|Array} options.stroke.radius\n\t     *   <br>if false it draws a rect\n\t     *   <br>if Number it draws a round rect\n\t     *   <br>if Array it draws a round rect complex (array has to respect the arguments sequence of drawRoundRectComplex method of EaselJS Graphics class\n\t     * @param {Arguments} bounds the bounds parameter will be passed to setBounds method of EaselJS Container class<br>\n\t     *   so it has to be an array with this sequence<br>\n\t     *   <ul>\n\t     *     <li>{Number} x</li>\n\t     *     <li>{Number} y</li>\n\t     *     <li>{Number} width</li>\n\t     *     <li>{Number} height</li>\n\t     *   </ul>\n\t     * @return {Shape}\n\t     */\n\t\n\t  }, {\n\t    key: 'createRect',\n\t    value: function createRect() {\n\t      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t      for (var _len = arguments.length, bounds = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        bounds[_key - 1] = arguments[_key];\n\t      }\n\t\n\t      var graphics = this.createGraphics.apply(this, [options].concat(bounds));\n\t\n\t      if (!!options.stroke.radius) {\n\t        if (Array.isArray(options.stroke.radius)) {\n\t          graphics.drawRoundRectComplex.apply(graphics, bounds.concat(_toConsumableArray(options.stroke.radius)));\n\t        } else if (Number.isNumber(options.stroke.radius)) {\n\t          graphics.drawRoundRect.apply(graphics, bounds.concat([options.stroke.radius]));\n\t        }\n\t      } else {\n\t        graphics.drawRect.apply(graphics, bounds);\n\t      }\n\t\n\t      graphics.endFill();\n\t      graphics.endStroke();\n\t\n\t      var rect = new _EaselJS.Shape(graphics);\n\t      rect.setBounds.apply(rect, bounds);\n\t\n\t      return rect;\n\t    }\n\t\n\t    /**\n\t     * creates an EaselJS Circle Shape instance\n\t     * @memberOf ElementHelpers\n\t     * @method createCircle\n\t     * @static\n\t     * @param {Object} options the options can contain\n\t     * @param {String|Object} options.fill color for filling graphics\n\t     * @param {Array} options.fill.colors colors to create a linear gradient fill\n\t     * @param {Array} options.fill.ratios color ratios to create a linear gradient fill\n\t     * @param {Array} options.fill.points start & stop points to create a linear gradient fill\n\t     * @param {String|Object} options.stroke stroke options, if string it creates a stroke with size 1\n\t     * @param {Number} options.stroke.size the size\n\t     * @param {String} options.stroke.color the color\n\t     * @param {Number} options.radius the radius of the circle\n\t     * @param {Arguments} bounds the bounds parameter will be passed to setBounds method of EaselJS Container class<br>\n\t     *   so it has to be an array with this sequence<br>\n\t     *   <ul>\n\t     *     <li>{Number} x</li>\n\t     *     <li>{Number} y</li>\n\t     *     <li>{Number} width</li>\n\t     *     <li>{Number} height</li>\n\t     *   </ul>\n\t     * @return {Shape}\n\t     */\n\t\n\t  }, {\n\t    key: 'createCircle',\n\t    value: function createCircle() {\n\t      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t      var defaults = {\n\t        radius: 1\n\t      };\n\t\n\t      var settings = defaults.inherit(true, options);\n\t\n\t      for (var _len2 = arguments.length, bounds = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n\t        bounds[_key2 - 1] = arguments[_key2];\n\t      }\n\t\n\t      var graphics = this.createGraphics.apply(this, [settings].concat(bounds));\n\t      graphics.drawCircle(0, 0, settings.radius);\n\t\n\t      var circle = new _EaselJS.Shape(graphics);\n\t      circle.setBounds.apply(circle, bounds);\n\t\n\t      return circle;\n\t    }\n\t\n\t    /**\n\t     * creates an EaselJS Text instance\n\t     * @memberOf ElementHelpers\n\t     * @method createText\n\t     * @static\n\t     * @param {String} text the text to be rendered\n\t     * @param {String} font font options as expected by the EaselJS Text class\n\t     * @param {String} color the color of the text\n\t     * @return {Text}\n\t     */\n\t\n\t  }, {\n\t    key: 'createText',\n\t    value: function createText(text, font, color) {\n\t      return new _EaselJS.Text(text, font, color);\n\t    }\n\t\n\t    /**\n\t     * creates an EaselJS Bitmap instance\n\t     * @memberOf ElementHelpers\n\t     * @method createImage\n\t     * @static\n\t     * @param {HTMLElement} image the preloaded DOM element representing the image\n\t     * @return {Bitmap}\n\t     */\n\t\n\t  }, {\n\t    key: 'createImage',\n\t    value: function createImage(image) {\n\t      return new _EaselJS.Bitmap(image);\n\t    }\n\t\n\t    /**\n\t     * creates an EaselJS Sprite instance\n\t     * @memberOf ElementHelpers\n\t     * @method createSprite\n\t     * @static\n\t     * @param {HTMLElement} spritesheet the preloaded DOM element representing the sprite\n\t     * @return {Sprite}\n\t     */\n\t\n\t  }, {\n\t    key: 'createSprite',\n\t    value: function createSprite(spritesheet) {\n\t      return new _EaselJS.Sprite(spritesheet);\n\t    }\n\t  }]);\n\t\n\t  return ElementHelpers;\n\t}();\n\t\n\texports.default = ElementHelpers;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*!\n\t* CreateJS\n\t* Visit http://createjs.com/ for documentation, updates and examples.\n\t*\n\t* Copyright (c) 2010 gskinner.com, inc.\n\t*\n\t* Permission is hereby granted, free of charge, to any person\n\t* obtaining a copy of this software and associated documentation\n\t* files (the \"Software\"), to deal in the Software without\n\t* restriction, including without limitation the rights to use,\n\t* copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t* copies of the Software, and to permit persons to whom the\n\t* Software is furnished to do so, subject to the following\n\t* conditions:\n\t*\n\t* The above copyright notice and this permission notice shall be\n\t* included in all copies or substantial portions of the Software.\n\t*\n\t* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\t* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\t* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\t* OTHER DEALINGS IN THE SOFTWARE.\n\t*/\n\t\n\tvar scope = (typeof window == 'undefined')?this:window;\n\tscope.createjs = scope.createjs || {};\n\t\n\t\n\t//##############################################################################\n\t// extend.js\n\t//##############################################################################\n\t\n\t/**\n\t * @class Utility Methods\n\t */\n\t\n\t/**\n\t * Sets up the prototype chain and constructor property for a new class.\n\t *\n\t * This should be called right after creating the class constructor.\n\t *\n\t * \tfunction MySubClass() {}\n\t * \tcreatejs.extend(MySubClass, MySuperClass);\n\t * \tMySubClass.prototype.doSomething = function() { }\n\t *\n\t * \tvar foo = new MySubClass();\n\t * \tconsole.log(foo instanceof MySuperClass); // true\n\t * \tconsole.log(foo.prototype.constructor === MySubClass); // true\n\t *\n\t * @method extend\n\t * @param {Function} subclass The subclass.\n\t * @param {Function} superclass The superclass to extend.\n\t * @return {Function} Returns the subclass's new prototype.\n\t */\n\tcreatejs.extend = function(subclass, superclass) {\n\t\t\"use strict\";\n\t\n\t\tfunction o() { this.constructor = subclass; }\n\t\to.prototype = superclass.prototype;\n\t\treturn (subclass.prototype = new o());\n\t};\n\t\n\t//##############################################################################\n\t// promote.js\n\t//##############################################################################\n\t\n\t/**\n\t * @class Utility Methods\n\t */\n\t\n\t/**\n\t * Promotes any methods on the super class that were overridden, by creating an alias in the format `prefix_methodName`.\n\t * It is recommended to use the super class's name as the prefix.\n\t * An alias to the super class's constructor is always added in the format `prefix_constructor`.\n\t * This allows the subclass to call super class methods without using `function.call`, providing better performance.\n\t *\n\t * For example, if `MySubClass` extends `MySuperClass`, and both define a `draw` method, then calling `promote(MySubClass, \"MySuperClass\")`\n\t * would add a `MySuperClass_constructor` method to MySubClass and promote the `draw` method on `MySuperClass` to the\n\t * prototype of `MySubClass` as `MySuperClass_draw`.\n\t *\n\t * This should be called after the class's prototype is fully defined.\n\t *\n\t * \tfunction ClassA(name) {\n\t * \t\tthis.name = name;\n\t * \t}\n\t * \tClassA.prototype.greet = function() {\n\t * \t\treturn \"Hello \"+this.name;\n\t * \t}\n\t *\n\t * \tfunction ClassB(name, punctuation) {\n\t * \t\tthis.ClassA_constructor(name);\n\t * \t\tthis.punctuation = punctuation;\n\t * \t}\n\t * \tcreatejs.extend(ClassB, ClassA);\n\t * \tClassB.prototype.greet = function() {\n\t * \t\treturn this.ClassA_greet()+this.punctuation;\n\t * \t}\n\t * \tcreatejs.promote(ClassB, \"ClassA\");\n\t *\n\t * \tvar foo = new ClassB(\"World\", \"!?!\");\n\t * \tconsole.log(foo.greet()); // Hello World!?!\n\t *\n\t * @method promote\n\t * @param {Function} subclass The class to promote super class methods on.\n\t * @param {String} prefix The prefix to add to the promoted method names. Usually the name of the superclass.\n\t * @return {Function} Returns the subclass.\n\t */\n\tcreatejs.promote = function(subclass, prefix) {\n\t\t\"use strict\";\n\t\n\t\tvar subP = subclass.prototype, supP = (Object.getPrototypeOf&&Object.getPrototypeOf(subP))||subP.__proto__;\n\t\tif (supP) {\n\t\t\tsubP[(prefix+=\"_\") + \"constructor\"] = supP.constructor; // constructor is not always innumerable\n\t\t\tfor (var n in supP) {\n\t\t\t\tif (subP.hasOwnProperty(n) && (typeof supP[n] == \"function\")) { subP[prefix + n] = supP[n]; }\n\t\t\t}\n\t\t}\n\t\treturn subclass;\n\t};\n\t\n\t//##############################################################################\n\t// indexOf.js\n\t//##############################################################################\n\t\n\t/**\n\t * @class Utility Methods\n\t */\n\t\n\t/**\n\t * Finds the first occurrence of a specified value searchElement in the passed in array, and returns the index of\n\t * that value.  Returns -1 if value is not found.\n\t *\n\t *      var i = createjs.indexOf(myArray, myElementToFind);\n\t *\n\t * @method indexOf\n\t * @param {Array} array Array to search for searchElement\n\t * @param searchElement Element to find in array.\n\t * @return {Number} The first index of searchElement in array.\n\t */\n\tcreatejs.indexOf = function (array, searchElement){\n\t\t\"use strict\";\n\t\n\t\tfor (var i = 0,l=array.length; i < l; i++) {\n\t\t\tif (searchElement === array[i]) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t};\n\t\n\t//##############################################################################\n\t// Event.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t// constructor:\n\t\t/**\n\t\t * Contains properties and methods shared by all events for use with\n\t\t * {{#crossLink \"EventDispatcher\"}}{{/crossLink}}.\n\t\t * \n\t\t * Note that Event objects are often reused, so you should never\n\t\t * rely on an event object's state outside of the call stack it was received in.\n\t\t * @class Event\n\t\t * @param {String} type The event type.\n\t\t * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n\t\t * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n\t\t * @constructor\n\t\t **/\n\t\tfunction Event(type, bubbles, cancelable) {\n\t\t\t\n\t\t\n\t\t// public properties:\n\t\t\t/**\n\t\t\t * The type of event.\n\t\t\t * @property type\n\t\t\t * @type String\n\t\t\t **/\n\t\t\tthis.type = type;\n\t\t\n\t\t\t/**\n\t\t\t * The object that generated an event.\n\t\t\t * @property target\n\t\t\t * @type Object\n\t\t\t * @default null\n\t\t\t * @readonly\n\t\t\t*/\n\t\t\tthis.target = null;\n\t\t\n\t\t\t/**\n\t\t\t * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n\t\t\t * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n\t\t\t * is generated from childObj, then a listener on parentObj would receive the event with\n\t\t\t * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n\t\t\t * @property currentTarget\n\t\t\t * @type Object\n\t\t\t * @default null\n\t\t\t * @readonly\n\t\t\t*/\n\t\t\tthis.currentTarget = null;\n\t\t\n\t\t\t/**\n\t\t\t * For bubbling events, this indicates the current event phase:<OL>\n\t\t\t * \t<LI> capture phase: starting from the top parent to the target</LI>\n\t\t\t * \t<LI> at target phase: currently being dispatched from the target</LI>\n\t\t\t * \t<LI> bubbling phase: from the target to the top parent</LI>\n\t\t\t * </OL>\n\t\t\t * @property eventPhase\n\t\t\t * @type Number\n\t\t\t * @default 0\n\t\t\t * @readonly\n\t\t\t*/\n\t\t\tthis.eventPhase = 0;\n\t\t\n\t\t\t/**\n\t\t\t * Indicates whether the event will bubble through the display list.\n\t\t\t * @property bubbles\n\t\t\t * @type Boolean\n\t\t\t * @default false\n\t\t\t * @readonly\n\t\t\t*/\n\t\t\tthis.bubbles = !!bubbles;\n\t\t\n\t\t\t/**\n\t\t\t * Indicates whether the default behaviour of this event can be cancelled via\n\t\t\t * {{#crossLink \"Event/preventDefault\"}}{{/crossLink}}. This is set via the Event constructor.\n\t\t\t * @property cancelable\n\t\t\t * @type Boolean\n\t\t\t * @default false\n\t\t\t * @readonly\n\t\t\t*/\n\t\t\tthis.cancelable = !!cancelable;\n\t\t\n\t\t\t/**\n\t\t\t * The epoch time at which this event was created.\n\t\t\t * @property timeStamp\n\t\t\t * @type Number\n\t\t\t * @default 0\n\t\t\t * @readonly\n\t\t\t*/\n\t\t\tthis.timeStamp = (new Date()).getTime();\n\t\t\n\t\t\t/**\n\t\t\t * Indicates if {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} has been called\n\t\t\t * on this event.\n\t\t\t * @property defaultPrevented\n\t\t\t * @type Boolean\n\t\t\t * @default false\n\t\t\t * @readonly\n\t\t\t*/\n\t\t\tthis.defaultPrevented = false;\n\t\t\n\t\t\t/**\n\t\t\t * Indicates if {{#crossLink \"Event/stopPropagation\"}}{{/crossLink}} or\n\t\t\t * {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called on this event.\n\t\t\t * @property propagationStopped\n\t\t\t * @type Boolean\n\t\t\t * @default false\n\t\t\t * @readonly\n\t\t\t*/\n\t\t\tthis.propagationStopped = false;\n\t\t\n\t\t\t/**\n\t\t\t * Indicates if {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called\n\t\t\t * on this event.\n\t\t\t * @property immediatePropagationStopped\n\t\t\t * @type Boolean\n\t\t\t * @default false\n\t\t\t * @readonly\n\t\t\t*/\n\t\t\tthis.immediatePropagationStopped = false;\n\t\t\t\n\t\t\t/**\n\t\t\t * Indicates if {{#crossLink \"Event/remove\"}}{{/crossLink}} has been called on this event.\n\t\t\t * @property removed\n\t\t\t * @type Boolean\n\t\t\t * @default false\n\t\t\t * @readonly\n\t\t\t*/\n\t\t\tthis.removed = false;\n\t\t}\n\t\tvar p = Event.prototype;\n\t\n\t\t/**\n\t\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t\t * for details.\n\t\t *\n\t\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t\t *\n\t\t * @method initialize\n\t\t * @protected\n\t\t * @deprecated\n\t\t */\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\t\n\t// public methods:\n\t\t/**\n\t\t * Sets {{#crossLink \"Event/defaultPrevented\"}}{{/crossLink}} to true if the event is cancelable.\n\t\t * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n\t\t * cancel the default behaviour associated with the event.\n\t\t * @method preventDefault\n\t\t **/\n\t\tp.preventDefault = function() {\n\t\t\tthis.defaultPrevented = this.cancelable&&true;\n\t\t};\n\t\n\t\t/**\n\t\t * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} to true.\n\t\t * Mirrors the DOM event standard.\n\t\t * @method stopPropagation\n\t\t **/\n\t\tp.stopPropagation = function() {\n\t\t\tthis.propagationStopped = true;\n\t\t};\n\t\n\t\t/**\n\t\t * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} and\n\t\t * {{#crossLink \"Event/immediatePropagationStopped\"}}{{/crossLink}} to true.\n\t\t * Mirrors the DOM event standard.\n\t\t * @method stopImmediatePropagation\n\t\t **/\n\t\tp.stopImmediatePropagation = function() {\n\t\t\tthis.immediatePropagationStopped = this.propagationStopped = true;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Causes the active listener to be removed via removeEventListener();\n\t\t * \n\t\t * \t\tmyBtn.addEventListener(\"click\", function(evt) {\n\t\t * \t\t\t// do stuff...\n\t\t * \t\t\tevt.remove(); // removes this listener.\n\t\t * \t\t});\n\t\t * \n\t\t * @method remove\n\t\t **/\n\t\tp.remove = function() {\n\t\t\tthis.removed = true;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Returns a clone of the Event instance.\n\t\t * @method clone\n\t\t * @return {Event} a clone of the Event instance.\n\t\t **/\n\t\tp.clone = function() {\n\t\t\treturn new Event(this.type, this.bubbles, this.cancelable);\n\t\t};\n\t\t\n\t\t/**\n\t\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t\t *\n\t\t * @method set\n\t\t * @param {Object} props A generic object containing properties to copy to the instance.\n\t\t * @return {Event} Returns the instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t*/\n\t\tp.set = function(props) {\n\t\t\tfor (var n in props) { this[n] = props[n]; }\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a string representation of this object.\n\t\t * @method toString\n\t\t * @return {String} a string representation of the instance.\n\t\t **/\n\t\tp.toString = function() {\n\t\t\treturn \"[Event (type=\"+this.type+\")]\";\n\t\t};\n\t\n\t\tcreatejs.Event = Event;\n\t}());\n\t\n\t//##############################################################################\n\t// EventDispatcher.js\n\t//##############################################################################\n\t\n\t(function() {\r\n\t\t\"use strict\";\r\n\t\r\n\t\r\n\t// constructor:\r\n\t\t/**\r\n\t\t * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\r\n\t\t *\r\n\t\t * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\r\n\t\t * EventDispatcher {{#crossLink \"EventDispatcher/initialize\"}}{{/crossLink}} method.\r\n\t\t * \r\n\t\t * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\r\n\t\t * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\r\n\t\t * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\r\n\t\t * \r\n\t\t * EventDispatcher also exposes a {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} method, which makes it easier\r\n\t\t * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The \r\n\t\t * {{#crossLink \"EventDispatcher/off\"}}{{/crossLink}} method is merely an alias to\r\n\t\t * {{#crossLink \"EventDispatcher/removeEventListener\"}}{{/crossLink}}.\r\n\t\t * \r\n\t\t * Another addition to the DOM Level 2 model is the {{#crossLink \"EventDispatcher/removeAllEventListeners\"}}{{/crossLink}}\r\n\t\t * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also \r\n\t\t * includes a {{#crossLink \"Event/remove\"}}{{/crossLink}} method which removes the active listener.\r\n\t\t *\r\n\t\t * <h4>Example</h4>\r\n\t\t * Add EventDispatcher capabilities to the \"MyClass\" class.\r\n\t\t *\r\n\t\t *      EventDispatcher.initialize(MyClass.prototype);\r\n\t\t *\r\n\t\t * Add an event (see {{#crossLink \"EventDispatcher/addEventListener\"}}{{/crossLink}}).\r\n\t\t *\r\n\t\t *      instance.addEventListener(\"eventName\", handlerMethod);\r\n\t\t *      function handlerMethod(event) {\r\n\t\t *          console.log(event.target + \" Was Clicked\");\r\n\t\t *      }\r\n\t\t *\r\n\t\t * <b>Maintaining proper scope</b><br />\r\n\t\t * Scope (ie. \"this\") can be be a challenge with events. Using the {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}}\r\n\t\t * method to subscribe to events simplifies this.\r\n\t\t *\r\n\t\t *      instance.addEventListener(\"click\", function(event) {\r\n\t\t *          console.log(instance == this); // false, scope is ambiguous.\r\n\t\t *      });\r\n\t\t *      \r\n\t\t *      instance.on(\"click\", function(event) {\r\n\t\t *          console.log(instance == this); // true, \"on\" uses dispatcher scope by default.\r\n\t\t *      });\r\n\t\t * \r\n\t\t * If you want to use addEventListener instead, you may want to use function.bind() or a similar proxy to manage\r\n\t\t * scope.\r\n\t\t *\r\n\t\t * <b>Browser support</b>\r\n\t\t * The event model in CreateJS can be used separately from the suite in any project, however the inheritance model\r\n\t\t * requires modern browsers (IE9+).\r\n\t\t *      \r\n\t\t *\r\n\t\t * @class EventDispatcher\r\n\t\t * @constructor\r\n\t\t **/\r\n\t\tfunction EventDispatcher() {\r\n\t\t\r\n\t\t\r\n\t\t// private properties:\r\n\t\t\t/**\r\n\t\t\t * @protected\r\n\t\t\t * @property _listeners\r\n\t\t\t * @type Object\r\n\t\t\t **/\r\n\t\t\tthis._listeners = null;\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @protected\r\n\t\t\t * @property _captureListeners\r\n\t\t\t * @type Object\r\n\t\t\t **/\r\n\t\t\tthis._captureListeners = null;\r\n\t\t}\r\n\t\tvar p = EventDispatcher.prototype;\r\n\t\r\n\t\t/**\r\n\t\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\r\n\t\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\r\n\t\t * for details.\r\n\t\t *\r\n\t\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\r\n\t\t *\r\n\t\t * @method initialize\r\n\t\t * @protected\r\n\t\t * @deprecated\r\n\t\t */\r\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is.\r\n\t\r\n\t\r\n\t// static public methods:\r\n\t\t/**\r\n\t\t * Static initializer to mix EventDispatcher methods into a target object or prototype.\r\n\t\t * \r\n\t\t * \t\tEventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\r\n\t\t * \t\tEventDispatcher.initialize(myObject); // add to a specific instance\r\n\t\t * \r\n\t\t * @method initialize\r\n\t\t * @static\r\n\t\t * @param {Object} target The target object to inject EventDispatcher methods into. This can be an instance or a\r\n\t\t * prototype.\r\n\t\t **/\r\n\t\tEventDispatcher.initialize = function(target) {\r\n\t\t\ttarget.addEventListener = p.addEventListener;\r\n\t\t\ttarget.on = p.on;\r\n\t\t\ttarget.removeEventListener = target.off =  p.removeEventListener;\r\n\t\t\ttarget.removeAllEventListeners = p.removeAllEventListeners;\r\n\t\t\ttarget.hasEventListener = p.hasEventListener;\r\n\t\t\ttarget.dispatchEvent = p.dispatchEvent;\r\n\t\t\ttarget._dispatchEvent = p._dispatchEvent;\r\n\t\t\ttarget.willTrigger = p.willTrigger;\r\n\t\t};\r\n\t\t\r\n\t\r\n\t// public methods:\r\n\t\t/**\r\n\t\t * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\r\n\t\t * multiple callbacks getting fired.\r\n\t\t *\r\n\t\t * <h4>Example</h4>\r\n\t\t *\r\n\t\t *      displayObject.addEventListener(\"click\", handleClick);\r\n\t\t *      function handleClick(event) {\r\n\t\t *         // Click happened.\r\n\t\t *      }\r\n\t\t *\r\n\t\t * @method addEventListener\r\n\t\t * @param {String} type The string type of the event.\r\n\t\t * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\r\n\t\t * the event is dispatched.\r\n\t\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t\t * @return {Function | Object} Returns the listener for chaining or assignment.\r\n\t\t **/\r\n\t\tp.addEventListener = function(type, listener, useCapture) {\r\n\t\t\tvar listeners;\r\n\t\t\tif (useCapture) {\r\n\t\t\t\tlisteners = this._captureListeners = this._captureListeners||{};\r\n\t\t\t} else {\r\n\t\t\t\tlisteners = this._listeners = this._listeners||{};\r\n\t\t\t}\r\n\t\t\tvar arr = listeners[type];\r\n\t\t\tif (arr) { this.removeEventListener(type, listener, useCapture); }\r\n\t\t\tarr = listeners[type]; // remove may have deleted the array\r\n\t\t\tif (!arr) { listeners[type] = [listener];  }\r\n\t\t\telse { arr.push(listener); }\r\n\t\t\treturn listener;\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\r\n\t\t * only run once, associate arbitrary data with the listener, and remove the listener.\r\n\t\t * \r\n\t\t * This method works by creating an anonymous wrapper function and subscribing it with addEventListener.\r\n\t\t * The wrapper function is returned for use with `removeEventListener` (or `off`).\r\n\t\t * \r\n\t\t * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\r\n\t\t * {{#crossLink \"Event/remove\"}}{{/crossLink}}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\r\n\t\t * to `on` with the same params will create multiple listeners.\r\n\t\t * \r\n\t\t * <h4>Example</h4>\r\n\t\t * \r\n\t\t * \t\tvar listener = myBtn.on(\"click\", handleClick, null, false, {count:3});\r\n\t\t * \t\tfunction handleClick(evt, data) {\r\n\t\t * \t\t\tdata.count -= 1;\r\n\t\t * \t\t\tconsole.log(this == myBtn); // true - scope defaults to the dispatcher\r\n\t\t * \t\t\tif (data.count == 0) {\r\n\t\t * \t\t\t\talert(\"clicked 3 times!\");\r\n\t\t * \t\t\t\tmyBtn.off(\"click\", listener);\r\n\t\t * \t\t\t\t// alternately: evt.remove();\r\n\t\t * \t\t\t}\r\n\t\t * \t\t}\r\n\t\t * \r\n\t\t * @method on\r\n\t\t * @param {String} type The string type of the event.\r\n\t\t * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\r\n\t\t * the event is dispatched.\r\n\t\t * @param {Object} [scope] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\r\n\t\t * @param {Boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\r\n\t\t * @param {*} [data] Arbitrary data that will be included as the second parameter when the listener is called.\r\n\t\t * @param {Boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t\t * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\r\n\t\t **/\r\n\t\tp.on = function(type, listener, scope, once, data, useCapture) {\r\n\t\t\tif (listener.handleEvent) {\r\n\t\t\t\tscope = scope||listener;\r\n\t\t\t\tlistener = listener.handleEvent;\r\n\t\t\t}\r\n\t\t\tscope = scope||this;\r\n\t\t\treturn this.addEventListener(type, function(evt) {\r\n\t\t\t\t\tlistener.call(scope, evt, data);\r\n\t\t\t\t\tonce&&evt.remove();\r\n\t\t\t\t}, useCapture);\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Removes the specified event listener.\r\n\t\t *\r\n\t\t * <b>Important Note:</b> that you must pass the exact function reference used when the event was added. If a proxy\r\n\t\t * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\r\n\t\t * closure will not work.\r\n\t\t *\r\n\t\t * <h4>Example</h4>\r\n\t\t *\r\n\t\t *      displayObject.removeEventListener(\"click\", handleClick);\r\n\t\t *\r\n\t\t * @method removeEventListener\r\n\t\t * @param {String} type The string type of the event.\r\n\t\t * @param {Function | Object} listener The listener function or object.\r\n\t\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t\t **/\r\n\t\tp.removeEventListener = function(type, listener, useCapture) {\r\n\t\t\tvar listeners = useCapture ? this._captureListeners : this._listeners;\r\n\t\t\tif (!listeners) { return; }\r\n\t\t\tvar arr = listeners[type];\r\n\t\t\tif (!arr) { return; }\r\n\t\t\tfor (var i=0,l=arr.length; i<l; i++) {\r\n\t\t\t\tif (arr[i] == listener) {\r\n\t\t\t\t\tif (l==1) { delete(listeners[type]); } // allows for faster checks.\r\n\t\t\t\t\telse { arr.splice(i,1); }\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\r\n\t\t * .on method.\r\n\t\t * \r\n\t\t * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See \r\n\t\t * {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} for an example.\r\n\t\t *\r\n\t\t * @method off\r\n\t\t * @param {String} type The string type of the event.\r\n\t\t * @param {Function | Object} listener The listener function or object.\r\n\t\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t\t **/\r\n\t\tp.off = p.removeEventListener;\r\n\t\r\n\t\t/**\r\n\t\t * Removes all listeners for the specified type, or all listeners of all types.\r\n\t\t *\r\n\t\t * <h4>Example</h4>\r\n\t\t *\r\n\t\t *      // Remove all listeners\r\n\t\t *      displayObject.removeAllEventListeners();\r\n\t\t *\r\n\t\t *      // Remove all click listeners\r\n\t\t *      displayObject.removeAllEventListeners(\"click\");\r\n\t\t *\r\n\t\t * @method removeAllEventListeners\r\n\t\t * @param {String} [type] The string type of the event. If omitted, all listeners for all types will be removed.\r\n\t\t **/\r\n\t\tp.removeAllEventListeners = function(type) {\r\n\t\t\tif (!type) { this._listeners = this._captureListeners = null; }\r\n\t\t\telse {\r\n\t\t\t\tif (this._listeners) { delete(this._listeners[type]); }\r\n\t\t\t\tif (this._captureListeners) { delete(this._captureListeners[type]); }\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Dispatches the specified event to all listeners.\r\n\t\t *\r\n\t\t * <h4>Example</h4>\r\n\t\t *\r\n\t\t *      // Use a string event\r\n\t\t *      this.dispatchEvent(\"complete\");\r\n\t\t *\r\n\t\t *      // Use an Event instance\r\n\t\t *      var event = new createjs.Event(\"progress\");\r\n\t\t *      this.dispatchEvent(event);\r\n\t\t *\r\n\t\t * @method dispatchEvent\r\n\t\t * @param {Object | String | Event} eventObj An object with a \"type\" property, or a string type.\r\n\t\t * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\r\n\t\t * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\r\n\t\t * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\r\n\t\t * @param {Boolean} [bubbles] Specifies the `bubbles` value when a string was passed to eventObj.\r\n\t\t * @param {Boolean} [cancelable] Specifies the `cancelable` value when a string was passed to eventObj.\r\n\t\t * @return {Boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\r\n\t\t **/\r\n\t\tp.dispatchEvent = function(eventObj, bubbles, cancelable) {\r\n\t\t\tif (typeof eventObj == \"string\") {\r\n\t\t\t\t// skip everything if there's no listeners and it doesn't bubble:\r\n\t\t\t\tvar listeners = this._listeners;\r\n\t\t\t\tif (!bubbles && (!listeners || !listeners[eventObj])) { return true; }\r\n\t\t\t\teventObj = new createjs.Event(eventObj, bubbles, cancelable);\r\n\t\t\t} else if (eventObj.target && eventObj.clone) {\r\n\t\t\t\t// redispatching an active event object, so clone it:\r\n\t\t\t\teventObj = eventObj.clone();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\r\n\t\t\ttry { eventObj.target = this; } catch (e) {} // try/catch allows redispatching of native events\r\n\t\r\n\t\t\tif (!eventObj.bubbles || !this.parent) {\r\n\t\t\t\tthis._dispatchEvent(eventObj, 2);\r\n\t\t\t} else {\r\n\t\t\t\tvar top=this, list=[top];\r\n\t\t\t\twhile (top.parent) { list.push(top = top.parent); }\r\n\t\t\t\tvar i, l=list.length;\r\n\t\r\n\t\t\t\t// capture & atTarget\r\n\t\t\t\tfor (i=l-1; i>=0 && !eventObj.propagationStopped; i--) {\r\n\t\t\t\t\tlist[i]._dispatchEvent(eventObj, 1+(i==0));\r\n\t\t\t\t}\r\n\t\t\t\t// bubbling\r\n\t\t\t\tfor (i=1; i<l && !eventObj.propagationStopped; i++) {\r\n\t\t\t\t\tlist[i]._dispatchEvent(eventObj, 3);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn !eventObj.defaultPrevented;\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Indicates whether there is at least one listener for the specified event type.\r\n\t\t * @method hasEventListener\r\n\t\t * @param {String} type The string type of the event.\r\n\t\t * @return {Boolean} Returns true if there is at least one listener for the specified event.\r\n\t\t **/\r\n\t\tp.hasEventListener = function(type) {\r\n\t\t\tvar listeners = this._listeners, captureListeners = this._captureListeners;\r\n\t\t\treturn !!((listeners && listeners[type]) || (captureListeners && captureListeners[type]));\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Indicates whether there is at least one listener for the specified event type on this object or any of its\r\n\t\t * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\r\n\t\t * specified type is dispatched from this object, it will trigger at least one listener.\r\n\t\t * \r\n\t\t * This is similar to {{#crossLink \"EventDispatcher/hasEventListener\"}}{{/crossLink}}, but it searches the entire\r\n\t\t * event flow for a listener, not just this object.\r\n\t\t * @method willTrigger\r\n\t\t * @param {String} type The string type of the event.\r\n\t\t * @return {Boolean} Returns `true` if there is at least one listener for the specified event.\r\n\t\t **/\r\n\t\tp.willTrigger = function(type) {\r\n\t\t\tvar o = this;\r\n\t\t\twhile (o) {\r\n\t\t\t\tif (o.hasEventListener(type)) { return true; }\r\n\t\t\t\to = o.parent;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * @method toString\r\n\t\t * @return {String} a string representation of the instance.\r\n\t\t **/\r\n\t\tp.toString = function() {\r\n\t\t\treturn \"[EventDispatcher]\";\r\n\t\t};\r\n\t\r\n\t\r\n\t// private methods:\r\n\t\t/**\r\n\t\t * @method _dispatchEvent\r\n\t\t * @param {Object | String | Event} eventObj\r\n\t\t * @param {Object} eventPhase\r\n\t\t * @protected\r\n\t\t **/\r\n\t\tp._dispatchEvent = function(eventObj, eventPhase) {\r\n\t\t\tvar l, listeners = (eventPhase==1) ? this._captureListeners : this._listeners;\r\n\t\t\tif (eventObj && listeners) {\r\n\t\t\t\tvar arr = listeners[eventObj.type];\r\n\t\t\t\tif (!arr||!(l=arr.length)) { return; }\r\n\t\t\t\ttry { eventObj.currentTarget = this; } catch (e) {}\r\n\t\t\t\ttry { eventObj.eventPhase = eventPhase; } catch (e) {}\r\n\t\t\t\teventObj.removed = false;\r\n\t\t\t\t\r\n\t\t\t\tarr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\r\n\t\t\t\tfor (var i=0; i<l && !eventObj.immediatePropagationStopped; i++) {\r\n\t\t\t\t\tvar o = arr[i];\r\n\t\t\t\t\tif (o.handleEvent) { o.handleEvent(eventObj); }\r\n\t\t\t\t\telse { o(eventObj); }\r\n\t\t\t\t\tif (eventObj.removed) {\r\n\t\t\t\t\t\tthis.off(eventObj.type, o, eventPhase==1);\r\n\t\t\t\t\t\teventObj.removed = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\r\n\t\tcreatejs.EventDispatcher = EventDispatcher;\r\n\t}());\n\t\n\t//##############################################################################\n\t// Ticker.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t\t * The Ticker provides a centralized tick or heartbeat broadcast at a set interval. Listeners can subscribe to the tick\n\t\t * event to be notified when a set time interval has elapsed.\n\t\t *\n\t\t * Note that the interval that the tick event is called is a target interval, and may be broadcast at a slower interval\n\t\t * when under high CPU load. The Ticker class uses a static interface (ex. `Ticker.framerate = 30;`) and\n\t\t * can not be instantiated.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n\t\t *      function handleTick(event) {\n\t\t *          // Actions carried out each tick (aka frame)\n\t\t *          if (!event.paused) {\n\t\t *              // Actions carried out when the Ticker is not paused.\n\t\t *          }\n\t\t *      }\n\t\t *\n\t\t * @class Ticker\n\t\t * @uses EventDispatcher\n\t\t * @static\n\t\t **/\n\t\tfunction Ticker() {\n\t\t\tthrow \"Ticker cannot be instantiated.\";\n\t\t}\n\t\n\t\n\t// constants:\n\t\t/**\n\t\t * In this mode, Ticker uses the requestAnimationFrame API, but attempts to synch the ticks to target framerate. It\n\t\t * uses a simple heuristic that compares the time of the RAF return to the target time for the current frame and\n\t\t * dispatches the tick when the time is within a certain threshold.\n\t\t *\n\t\t * This mode has a higher variance for time between frames than {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}},\n\t\t * but does not require that content be time based as with {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}} while\n\t\t * gaining the benefits of that API (screen synch, background throttling).\n\t\t *\n\t\t * Variance is usually lowest for framerates that are a divisor of the RAF frequency. This is usually 60, so\n\t\t * framerates of 10, 12, 15, 20, and 30 work well.\n\t\t *\n\t\t * Falls back to {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\n\t\t * supported.\n\t\t * @property RAF_SYNCHED\n\t\t * @static\n\t\t * @type {String}\n\t\t * @default \"synched\"\n\t\t * @readonly\n\t\t **/\n\t\tTicker.RAF_SYNCHED = \"synched\";\n\t\n\t\t/**\n\t\t * In this mode, Ticker passes through the requestAnimationFrame heartbeat, ignoring the target framerate completely.\n\t\t * Because requestAnimationFrame frequency is not deterministic, any content using this mode should be time based.\n\t\t * You can leverage {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} and the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n\t\t * event object's \"delta\" properties to make this easier.\n\t\t *\n\t\t * Falls back on {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\n\t\t * supported.\n\t\t * @property RAF\n\t\t * @static\n\t\t * @type {String}\n\t\t * @default \"raf\"\n\t\t * @readonly\n\t\t **/\n\t\tTicker.RAF = \"raf\";\n\t\n\t\t/**\n\t\t * In this mode, Ticker uses the setTimeout API. This provides predictable, adaptive frame timing, but does not\n\t\t * provide the benefits of requestAnimationFrame (screen synch, background throttling).\n\t\t * @property TIMEOUT\n\t\t * @static\n\t\t * @type {String}\n\t\t * @default \"timeout\"\n\t\t * @readonly\n\t\t **/\n\t\tTicker.TIMEOUT = \"timeout\";\n\t\n\t\n\t// static events:\n\t\t/**\n\t\t * Dispatched each tick. The event will be dispatched to each listener even when the Ticker has been paused using\n\t\t * {{#crossLink \"Ticker/setPaused\"}}{{/crossLink}}.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n\t\t *      function handleTick(event) {\n\t\t *          console.log(\"Paused:\", event.paused, event.delta);\n\t\t *      }\n\t\t *\n\t\t * @event tick\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @param {Boolean} paused Indicates whether the ticker is currently paused.\n\t\t * @param {Number} delta The time elapsed in ms since the last tick.\n\t\t * @param {Number} time The total time in ms since Ticker was initialized.\n\t\t * @param {Number} runTime The total time in ms that Ticker was not paused since it was initialized. For example,\n\t\t * \tyou could determine the amount of time that the Ticker has been paused since initialization with `time-runTime`.\n\t\t * @since 0.6.0\n\t\t */\n\t\n\t\n\t// public static properties:\n\t\t/**\n\t\t * Deprecated in favour of {{#crossLink \"Ticker/timingMode\"}}{{/crossLink}}, and will be removed in a future version. If true, timingMode will\n\t\t * use {{#crossLink \"Ticker/RAF_SYNCHED\"}}{{/crossLink}} by default.\n\t\t * @deprecated Deprecated in favour of {{#crossLink \"Ticker/timingMode\"}}{{/crossLink}}.\n\t\t * @property useRAF\n\t\t * @static\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t **/\n\t\tTicker.useRAF = false;\n\t\n\t\t/**\n\t\t * Specifies the timing api (setTimeout or requestAnimationFrame) and mode to use. See\n\t\t * {{#crossLink \"Ticker/TIMEOUT\"}}{{/crossLink}}, {{#crossLink \"Ticker/RAF\"}}{{/crossLink}}, and\n\t\t * {{#crossLink \"Ticker/RAF_SYNCHED\"}}{{/crossLink}} for mode details.\n\t\t * @property timingMode\n\t\t * @static\n\t\t * @type {String}\n\t\t * @default Ticker.TIMEOUT\n\t\t **/\n\t\tTicker.timingMode = null;\n\t\n\t\t/**\n\t\t * Specifies a maximum value for the delta property in the tick event object. This is useful when building time\n\t\t * based animations and systems to prevent issues caused by large time gaps caused by background tabs, system sleep,\n\t\t * alert dialogs, or other blocking routines. Double the expected frame duration is often an effective value\n\t\t * (ex. maxDelta=50 when running at 40fps).\n\t\t * \n\t\t * This does not impact any other values (ex. time, runTime, etc), so you may experience issues if you enable maxDelta\n\t\t * when using both delta and other values.\n\t\t * \n\t\t * If 0, there is no maximum.\n\t\t * @property maxDelta\n\t\t * @static\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tTicker.maxDelta = 0;\n\t\t\n\t\t/**\n\t\t * When the ticker is paused, all listeners will still receive a tick event, but the <code>paused</code> property\n\t\t * of the event will be `true`. Also, while paused the `runTime` will not increase. See {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}},\n\t\t * {{#crossLink \"Ticker/getTime\"}}{{/crossLink}}, and {{#crossLink \"Ticker/getEventTime\"}}{{/crossLink}} for more\n\t\t * info.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n\t\t *      createjs.Ticker.paused = true;\n\t\t *      function handleTick(event) {\n\t\t *          console.log(event.paused,\n\t\t *          \tcreatejs.Ticker.getTime(false),\n\t\t *          \tcreatejs.Ticker.getTime(true));\n\t\t *      }\n\t\t *\n\t\t * @property paused\n\t\t * @static\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t **/\n\t\tTicker.paused = false;\n\t\n\t\n\t// mix-ins:\n\t\t// EventDispatcher methods:\n\t\tTicker.removeEventListener = null;\n\t\tTicker.removeAllEventListeners = null;\n\t\tTicker.dispatchEvent = null;\n\t\tTicker.hasEventListener = null;\n\t\tTicker._listeners = null;\n\t\tcreatejs.EventDispatcher.initialize(Ticker); // inject EventDispatcher methods.\n\t\tTicker._addEventListener = Ticker.addEventListener;\n\t\tTicker.addEventListener = function() {\n\t\t\t!Ticker._inited&&Ticker.init();\n\t\t\treturn Ticker._addEventListener.apply(Ticker, arguments);\n\t\t};\n\t\n\t\n\t// private static properties:\n\t\t/**\n\t\t * @property _inited\n\t\t * @static\n\t\t * @type {Boolean}\n\t\t * @protected\n\t\t **/\n\t\tTicker._inited = false;\n\t\n\t\t/**\n\t\t * @property _startTime\n\t\t * @static\n\t\t * @type {Number}\n\t\t * @protected\n\t\t **/\n\t\tTicker._startTime = 0;\n\t\n\t\t/**\n\t\t * @property _pausedTime\n\t\t * @static\n\t\t * @type {Number}\n\t\t * @protected\n\t\t **/\n\t\tTicker._pausedTime=0;\n\t\n\t\t/**\n\t\t * The number of ticks that have passed\n\t\t * @property _ticks\n\t\t * @static\n\t\t * @type {Number}\n\t\t * @protected\n\t\t **/\n\t\tTicker._ticks = 0;\n\t\n\t\t/**\n\t\t * The number of ticks that have passed while Ticker has been paused\n\t\t * @property _pausedTicks\n\t\t * @static\n\t\t * @type {Number}\n\t\t * @protected\n\t\t **/\n\t\tTicker._pausedTicks = 0;\n\t\n\t\t/**\n\t\t * @property _interval\n\t\t * @static\n\t\t * @type {Number}\n\t\t * @protected\n\t\t **/\n\t\tTicker._interval = 50;\n\t\n\t\t/**\n\t\t * @property _lastTime\n\t\t * @static\n\t\t * @type {Number}\n\t\t * @protected\n\t\t **/\n\t\tTicker._lastTime = 0;\n\t\n\t\t/**\n\t\t * @property _times\n\t\t * @static\n\t\t * @type {Array}\n\t\t * @protected\n\t\t **/\n\t\tTicker._times = null;\n\t\n\t\t/**\n\t\t * @property _tickTimes\n\t\t * @static\n\t\t * @type {Array}\n\t\t * @protected\n\t\t **/\n\t\tTicker._tickTimes = null;\n\t\n\t\t/**\n\t\t * Stores the timeout or requestAnimationFrame id.\n\t\t * @property _timerId\n\t\t * @static\n\t\t * @type {Number}\n\t\t * @protected\n\t\t **/\n\t\tTicker._timerId = null;\n\t\t\n\t\t/**\n\t\t * True if currently using requestAnimationFrame, false if using setTimeout. This may be different than timingMode\n\t\t * if that property changed and a tick hasn't fired.\n\t\t * @property _raf\n\t\t * @static\n\t\t * @type {Boolean}\n\t\t * @protected\n\t\t **/\n\t\tTicker._raf = true;\n\t\t\n\t\n\t// static getter / setters:\n\t\t/**\n\t\t * Use the {{#crossLink \"Ticker/interval:property\"}}{{/crossLink}} property instead.\n\t\t * @method setInterval\n\t\t * @static\n\t\t * @param {Number} interval\n\t\t * @deprecated\n\t\t **/\n\t\tTicker.setInterval = function(interval) {\n\t\t\tTicker._interval = interval;\n\t\t\tif (!Ticker._inited) { return; }\n\t\t\tTicker._setupTick();\n\t\t};\n\t\n\t\t/**\n\t\t * Use the {{#crossLink \"Ticker/interval:property\"}}{{/crossLink}} property instead.\n\t\t * @method getInterval\n\t\t * @static\n\t\t * @return {Number}\n\t\t * @deprecated\n\t\t **/\n\t\tTicker.getInterval = function() {\n\t\t\treturn Ticker._interval;\n\t\t};\n\t\n\t\t/**\n\t\t * Use the {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} property instead.\n\t\t * @method setFPS\n\t\t * @static\n\t\t * @param {Number} value\n\t\t * @deprecated\n\t\t **/\n\t\tTicker.setFPS = function(value) {\n\t\t\tTicker.setInterval(1000/value);\n\t\t};\n\t\n\t\t/**\n\t\t * Use the {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} property instead.\n\t\t * @method getFPS\n\t\t * @static\n\t\t * @return {Number}\n\t\t * @deprecated\n\t\t **/\n\t\tTicker.getFPS = function() {\n\t\t\treturn 1000/Ticker._interval;\n\t\t};\n\t\n\t\t/**\n\t\t * Indicates the target time (in milliseconds) between ticks. Default is 50 (20 FPS).\n\t\t * Note that actual time between ticks may be more than specified depending on CPU load.\n\t\t * This property is ignored if the ticker is using the `RAF` timing mode.\n\t\t * @property interval\n\t\t * @static\n\t\t * @type {Number}\n\t\t **/\n\t\t \n\t\t/**\n\t\t * Indicates the target frame rate in frames per second (FPS). Effectively just a shortcut to `interval`, where\n\t\t * `framerate == 1000/interval`.\n\t\t * @property framerate\n\t\t * @static\n\t\t * @type {Number}\n\t\t **/\n\t\ttry {\n\t\t\tObject.defineProperties(Ticker, {\n\t\t\t\tinterval: { get: Ticker.getInterval, set: Ticker.setInterval },\n\t\t\t\tframerate: { get: Ticker.getFPS, set: Ticker.setFPS }\n\t\t\t});\n\t\t} catch (e) { console.log(e); }\n\t\n\t\n\t// public static methods:\n\t\t/**\n\t\t * Starts the tick. This is called automatically when the first listener is added.\n\t\t * @method init\n\t\t * @static\n\t\t **/\n\t\tTicker.init = function() {\n\t\t\tif (Ticker._inited) { return; }\n\t\t\tTicker._inited = true;\n\t\t\tTicker._times = [];\n\t\t\tTicker._tickTimes = [];\n\t\t\tTicker._startTime = Ticker._getTime();\n\t\t\tTicker._times.push(Ticker._lastTime = 0);\n\t\t\tTicker.interval = Ticker._interval;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Stops the Ticker and removes all listeners. Use init() to restart the Ticker.\n\t\t * @method reset\n\t\t * @static\n\t\t **/\n\t\tTicker.reset = function() {\n\t\t\tif (Ticker._raf) {\n\t\t\t\tvar f = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame;\n\t\t\t\tf&&f(Ticker._timerId);\n\t\t\t} else {\n\t\t\t\tclearTimeout(Ticker._timerId);\n\t\t\t}\n\t\t\tTicker.removeAllEventListeners(\"tick\");\n\t\t\tTicker._timerId = Ticker._times = Ticker._tickTimes = null;\n\t\t\tTicker._startTime = Ticker._lastTime = Ticker._ticks = Ticker._pausedTime = 0;\n\t\t\tTicker._inited = false;\n\t\t};\n\t\n\t\t/**\n\t\t * Returns the average time spent within a tick. This can vary significantly from the value provided by getMeasuredFPS\n\t\t * because it only measures the time spent within the tick execution stack. \n\t\t * \n\t\t * Example 1: With a target FPS of 20, getMeasuredFPS() returns 20fps, which indicates an average of 50ms between \n\t\t * the end of one tick and the end of the next. However, getMeasuredTickTime() returns 15ms. This indicates that \n\t\t * there may be up to 35ms of \"idle\" time between the end of one tick and the start of the next.\n\t\t *\n\t\t * Example 2: With a target FPS of 30, getFPS() returns 10fps, which indicates an average of 100ms between the end of\n\t\t * one tick and the end of the next. However, getMeasuredTickTime() returns 20ms. This would indicate that something\n\t\t * other than the tick is using ~80ms (another script, DOM rendering, etc).\n\t\t * @method getMeasuredTickTime\n\t\t * @static\n\t\t * @param {Number} [ticks] The number of previous ticks over which to measure the average time spent in a tick.\n\t\t * Defaults to the number of ticks per second. To get only the last tick's time, pass in 1.\n\t\t * @return {Number} The average time spent in a tick in milliseconds.\n\t\t **/\n\t\tTicker.getMeasuredTickTime = function(ticks) {\n\t\t\tvar ttl=0, times=Ticker._tickTimes;\n\t\t\tif (!times || times.length < 1) { return -1; }\n\t\n\t\t\t// by default, calculate average for the past ~1 second:\n\t\t\tticks = Math.min(times.length, ticks||(Ticker.getFPS()|0));\n\t\t\tfor (var i=0; i<ticks; i++) { ttl += times[i]; }\n\t\t\treturn ttl/ticks;\n\t\t};\n\t\n\t\t/**\n\t\t * Returns the actual frames / ticks per second.\n\t\t * @method getMeasuredFPS\n\t\t * @static\n\t\t * @param {Number} [ticks] The number of previous ticks over which to measure the actual frames / ticks per second.\n\t\t * Defaults to the number of ticks per second.\n\t\t * @return {Number} The actual frames / ticks per second. Depending on performance, this may differ\n\t\t * from the target frames per second.\n\t\t **/\n\t\tTicker.getMeasuredFPS = function(ticks) {\n\t\t\tvar times = Ticker._times;\n\t\t\tif (!times || times.length < 2) { return -1; }\n\t\n\t\t\t// by default, calculate fps for the past ~1 second:\n\t\t\tticks = Math.min(times.length-1, ticks||(Ticker.getFPS()|0));\n\t\t\treturn 1000/((times[0]-times[ticks])/ticks);\n\t\t};\n\t\n\t\t/**\n\t\t * Use the {{#crossLink \"Ticker/paused:property\"}}{{/crossLink}} property instead.\n\t\t * @method setPaused\n\t\t * @static\n\t\t * @param {Boolean} value\n\t\t * @deprecated\n\t\t **/\n\t\tTicker.setPaused = function(value) {\n\t\t\t// TODO: deprecated.\n\t\t\tTicker.paused = value;\n\t\t};\n\t\n\t\t/**\n\t\t * Use the {{#crossLink \"Ticker/paused:property\"}}{{/crossLink}} property instead.\n\t\t * @method getPaused\n\t\t * @static\n\t\t * @return {Boolean}\n\t\t * @deprecated\n\t\t **/\n\t\tTicker.getPaused = function() {\n\t\t\t// TODO: deprecated.\n\t\t\treturn Ticker.paused;\n\t\t};\n\t\n\t\t/**\n\t\t * Returns the number of milliseconds that have elapsed since Ticker was initialized via {{#crossLink \"Ticker/init\"}}.\n\t\t * Returns -1 if Ticker has not been initialized. For example, you could use\n\t\t * this in a time synchronized animation to determine the exact amount of time that has elapsed.\n\t\t * @method getTime\n\t\t * @static\n\t\t * @param {Boolean} [runTime=false] If true only time elapsed while Ticker was not paused will be returned.\n\t\t * If false, the value returned will be total time elapsed since the first tick event listener was added.\n\t\t * @return {Number} Number of milliseconds that have elapsed since Ticker was initialized or -1.\n\t\t **/\n\t\tTicker.getTime = function(runTime) {\n\t\t\treturn Ticker._startTime ? Ticker._getTime() - (runTime ? Ticker._pausedTime : 0) : -1;\n\t\t};\n\t\n\t\t/**\n\t\t * Similar to the {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} method, but returns the time on the most recent {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n\t\t * event object.\n\t\t * @method getEventTime\n\t\t * @static\n\t\t * @param runTime {Boolean} [runTime=false] If true, the runTime property will be returned instead of time.\n\t\t * @returns {number} The time or runTime property from the most recent tick event or -1.\n\t\t */\n\t\tTicker.getEventTime = function(runTime) {\n\t\t\treturn Ticker._startTime ? (Ticker._lastTime || Ticker._startTime) - (runTime ? Ticker._pausedTime : 0) : -1;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Returns the number of ticks that have been broadcast by Ticker.\n\t\t * @method getTicks\n\t\t * @static\n\t\t * @param {Boolean} pauseable Indicates whether to include ticks that would have been broadcast\n\t\t * while Ticker was paused. If true only tick events broadcast while Ticker is not paused will be returned.\n\t\t * If false, tick events that would have been broadcast while Ticker was paused will be included in the return\n\t\t * value. The default value is false.\n\t\t * @return {Number} of ticks that have been broadcast.\n\t\t **/\n\t\tTicker.getTicks = function(pauseable) {\n\t\t\treturn  Ticker._ticks - (pauseable ? Ticker._pausedTicks : 0);\n\t\t};\n\t\n\t\n\t// private static methods:\n\t\t/**\n\t\t * @method _handleSynch\n\t\t * @static\n\t\t * @protected\n\t\t **/\n\t\tTicker._handleSynch = function() {\n\t\t\tTicker._timerId = null;\n\t\t\tTicker._setupTick();\n\t\n\t\t\t// run if enough time has elapsed, with a little bit of flexibility to be early:\n\t\t\tif (Ticker._getTime() - Ticker._lastTime >= (Ticker._interval-1)*0.97) {\n\t\t\t\tTicker._tick();\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * @method _handleRAF\n\t\t * @static\n\t\t * @protected\n\t\t **/\n\t\tTicker._handleRAF = function() {\n\t\t\tTicker._timerId = null;\n\t\t\tTicker._setupTick();\n\t\t\tTicker._tick();\n\t\t};\n\t\n\t\t/**\n\t\t * @method _handleTimeout\n\t\t * @static\n\t\t * @protected\n\t\t **/\n\t\tTicker._handleTimeout = function() {\n\t\t\tTicker._timerId = null;\n\t\t\tTicker._setupTick();\n\t\t\tTicker._tick();\n\t\t};\n\t\n\t\t/**\n\t\t * @method _setupTick\n\t\t * @static\n\t\t * @protected\n\t\t **/\n\t\tTicker._setupTick = function() {\n\t\t\tif (Ticker._timerId != null) { return; } // avoid duplicates\n\t\n\t\t\tvar mode = Ticker.timingMode||(Ticker.useRAF&&Ticker.RAF_SYNCHED);\n\t\t\tif (mode == Ticker.RAF_SYNCHED || mode == Ticker.RAF) {\n\t\t\t\tvar f = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;\n\t\t\t\tif (f) {\n\t\t\t\t\tTicker._timerId = f(mode == Ticker.RAF ? Ticker._handleRAF : Ticker._handleSynch);\n\t\t\t\t\tTicker._raf = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tTicker._raf = false;\n\t\t\tTicker._timerId = setTimeout(Ticker._handleTimeout, Ticker._interval);\n\t\t};\n\t\n\t\t/**\n\t\t * @method _tick\n\t\t * @static\n\t\t * @protected\n\t\t **/\n\t\tTicker._tick = function() {\n\t\t\tvar paused = Ticker.paused;\n\t\t\tvar time = Ticker._getTime();\n\t\t\tvar elapsedTime = time-Ticker._lastTime;\n\t\t\tTicker._lastTime = time;\n\t\t\tTicker._ticks++;\n\t\t\t\n\t\t\tif (paused) {\n\t\t\t\tTicker._pausedTicks++;\n\t\t\t\tTicker._pausedTime += elapsedTime;\n\t\t\t}\n\t\t\t\n\t\t\tif (Ticker.hasEventListener(\"tick\")) {\n\t\t\t\tvar event = new createjs.Event(\"tick\");\n\t\t\t\tvar maxDelta = Ticker.maxDelta;\n\t\t\t\tevent.delta = (maxDelta && elapsedTime > maxDelta) ? maxDelta : elapsedTime;\n\t\t\t\tevent.paused = paused;\n\t\t\t\tevent.time = time;\n\t\t\t\tevent.runTime = time-Ticker._pausedTime;\n\t\t\t\tTicker.dispatchEvent(event);\n\t\t\t}\n\t\t\t\n\t\t\tTicker._tickTimes.unshift(Ticker._getTime()-time);\n\t\t\twhile (Ticker._tickTimes.length > 100) { Ticker._tickTimes.pop(); }\n\t\n\t\t\tTicker._times.unshift(time);\n\t\t\twhile (Ticker._times.length > 100) { Ticker._times.pop(); }\n\t\t};\n\t\n\t\t/**\n\t\t * @method _getTime\n\t\t * @static\n\t\t * @protected\n\t\t **/\n\t\tvar now = window.performance && (performance.now || performance.mozNow || performance.msNow || performance.oNow || performance.webkitNow);\n\t\tTicker._getTime = function() {\n\t\t\treturn ((now&&now.call(performance))||(new Date().getTime())) - Ticker._startTime;\n\t\t};\n\t\n\t\n\t\tcreatejs.Ticker = Ticker;\n\t}());\n\t\n\t//##############################################################################\n\t// UID.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t\t * Global utility for generating sequential unique ID numbers. The UID class uses a static interface (ex. <code>UID.get()</code>)\n\t\t * and should not be instantiated.\n\t\t * @class UID\n\t\t * @static\n\t\t **/\n\t\tfunction UID() {\n\t\t\tthrow \"UID cannot be instantiated\";\n\t\t}\n\t\n\t\n\t// private static properties:\n\t\t/**\n\t\t * @property _nextID\n\t\t * @type Number\n\t\t * @protected\n\t\t **/\n\t\tUID._nextID = 0;\n\t\n\t\n\t// public static methods:\n\t\t/**\n\t\t * Returns the next unique id.\n\t\t * @method get\n\t\t * @return {Number} The next unique id\n\t\t * @static\n\t\t **/\n\t\tUID.get = function() {\n\t\t\treturn UID._nextID++;\n\t\t};\n\t\n\t\n\t\tcreatejs.UID = UID;\n\t}());\n\t\n\t//##############################################################################\n\t// MouseEvent.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t\t * Passed as the parameter to all mouse/pointer/touch related events. For a listing of mouse events and their properties,\n\t\t * see the {{#crossLink \"DisplayObject\"}}{{/crossLink}} and {{#crossLink \"Stage\"}}{{/crossLink}} event listings.\n\t\t * @class MouseEvent\n\t\t * @param {String} type The event type.\n\t\t * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n\t\t * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n\t\t * @param {Number} stageX The normalized x position relative to the stage.\n\t\t * @param {Number} stageY The normalized y position relative to the stage.\n\t\t * @param {MouseEvent} nativeEvent The native DOM event related to this mouse event.\n\t\t * @param {Number} pointerID The unique id for the pointer.\n\t\t * @param {Boolean} primary Indicates whether this is the primary pointer in a multitouch environment.\n\t\t * @param {Number} rawX The raw x position relative to the stage.\n\t\t * @param {Number} rawY The raw y position relative to the stage.\n\t\t * @param {DisplayObject} relatedTarget The secondary target for the event.\n\t\t * @extends Event\n\t\t * @constructor\n\t\t **/\n\t\tfunction MouseEvent(type, bubbles, cancelable, stageX, stageY, nativeEvent, pointerID, primary, rawX, rawY, relatedTarget) {\n\t\t\tthis.Event_constructor(type, bubbles, cancelable);\n\t\t\t\n\t\t\t\n\t\t// public properties:\n\t\t\t/**\n\t\t\t * The normalized x position on the stage. This will always be within the range 0 to stage width.\n\t\t\t * @property stageX\n\t\t\t * @type Number\n\t\t\t*/\n\t\t\tthis.stageX = stageX;\n\t\t\n\t\t\t/**\n\t\t\t * The normalized y position on the stage. This will always be within the range 0 to stage height.\n\t\t\t * @property stageY\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis.stageY = stageY;\n\t\t\n\t\t\t/**\n\t\t\t * The raw x position relative to the stage. Normally this will be the same as the stageX value, unless\n\t\t\t * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n\t\t\t * @property rawX\n\t\t\t * @type Number\n\t\t\t*/\n\t\t\tthis.rawX = (rawX==null)?stageX:rawX;\n\t\t\n\t\t\t/**\n\t\t\t * The raw y position relative to the stage. Normally this will be the same as the stageY value, unless\n\t\t\t * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n\t\t\t * @property rawY\n\t\t\t * @type Number\n\t\t\t*/\n\t\t\tthis.rawY = (rawY==null)?stageY:rawY;\n\t\t\n\t\t\t/**\n\t\t\t * The native MouseEvent generated by the browser. The properties and API for this\n\t\t\t * event may differ between browsers. This property will be null if the\n\t\t\t * EaselJS property was not directly generated from a native MouseEvent.\n\t\t\t * @property nativeEvent\n\t\t\t * @type HtmlMouseEvent\n\t\t\t * @default null\n\t\t\t **/\n\t\t\tthis.nativeEvent = nativeEvent;\n\t\t\n\t\t\t/**\n\t\t\t * The unique id for the pointer (touch point or cursor). This will be either -1 for the mouse, or the system\n\t\t\t * supplied id value.\n\t\t\t * @property pointerID\n\t\t\t * @type {Number}\n\t\t\t */\n\t\t\tthis.pointerID = pointerID;\n\t\t\n\t\t\t/**\n\t\t\t * Indicates whether this is the primary pointer in a multitouch environment. This will always be true for the mouse.\n\t\t\t * For touch pointers, the first pointer in the current stack will be considered the primary pointer.\n\t\t\t * @property primary\n\t\t\t * @type {Boolean}\n\t\t\t */\n\t\t\tthis.primary = !!primary;\n\t\t\t\n\t\t\t/**\n\t\t\t * The secondary target for the event, if applicable. This is used for mouseout/rollout\n\t\t\t * events to indicate the object that the mouse entered from, mouseover/rollover for the object the mouse exited,\n\t\t\t * and stagemousedown/stagemouseup events for the object that was the under the cursor, if any.\n\t\t\t * \n\t\t\t * Only valid interaction targets will be returned (ie. objects with mouse listeners or a cursor set).\n\t\t\t * @property relatedTarget\n\t\t\t * @type {DisplayObject}\n\t\t\t */\n\t\t\tthis.relatedTarget = relatedTarget;\n\t\t}\n\t\tvar p = createjs.extend(MouseEvent, createjs.Event);\n\t\n\t\t// TODO: deprecated\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\t\n\t\t\n\t// getter / setters:\n\t\t/**\n\t\t * Returns the x position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n\t\t * @property localX\n\t\t * @type {Number}\n\t\t * @readonly\n\t\t */\n\t\tp._get_localX = function() {\n\t\t\treturn this.currentTarget.globalToLocal(this.rawX, this.rawY).x;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Returns the y position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n\t\t * @property localY\n\t\t * @type {Number}\n\t\t * @readonly\n\t\t */\n\t\tp._get_localY = function() {\n\t\t\treturn this.currentTarget.globalToLocal(this.rawX, this.rawY).y;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Indicates whether the event was generated by a touch input (versus a mouse input).\n\t\t * @property isTouch\n\t\t * @type {Boolean}\n\t\t * @readonly\n\t\t */\n\t\tp._get_isTouch = function() {\n\t\t\treturn this.pointerID !== -1;\n\t\t};\n\t\t\n\t\t\n\t\ttry {\n\t\t\tObject.defineProperties(p, {\n\t\t\t\tlocalX: { get: p._get_localX },\n\t\t\t\tlocalY: { get: p._get_localY },\n\t\t\t\tisTouch: { get: p._get_isTouch }\n\t\t\t});\n\t\t} catch (e) {} // TODO: use Log\n\t\n\t\n\t// public methods:\n\t\t/**\n\t\t * Returns a clone of the MouseEvent instance.\n\t\t * @method clone\n\t\t * @return {MouseEvent} a clone of the MouseEvent instance.\n\t\t **/\n\t\tp.clone = function() {\n\t\t\treturn new MouseEvent(this.type, this.bubbles, this.cancelable, this.stageX, this.stageY, this.nativeEvent, this.pointerID, this.primary, this.rawX, this.rawY);\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a string representation of this object.\n\t\t * @method toString\n\t\t * @return {String} a string representation of the instance.\n\t\t **/\n\t\tp.toString = function() {\n\t\t\treturn \"[MouseEvent (type=\"+this.type+\" stageX=\"+this.stageX+\" stageY=\"+this.stageY+\")]\";\n\t\t};\n\t\n\t\n\t\tcreatejs.MouseEvent = createjs.promote(MouseEvent, \"Event\");\n\t}());\n\t\n\t//##############################################################################\n\t// Matrix2D.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t\t * Represents an affine transformation matrix, and provides tools for constructing and concatenating matrices.\n\t\t *\n\t\t * This matrix can be visualized as:\n\t\t *\n\t\t * \t[ a  c  tx\n\t\t * \t  b  d  ty\n\t\t * \t  0  0  1  ]\n\t\t *\n\t\t * Note the locations of b and c.\n\t\t *\n\t\t * @class Matrix2D\n\t\t * @param {Number} [a=1] Specifies the a property for the new matrix.\n\t\t * @param {Number} [b=0] Specifies the b property for the new matrix.\n\t\t * @param {Number} [c=0] Specifies the c property for the new matrix.\n\t\t * @param {Number} [d=1] Specifies the d property for the new matrix.\n\t\t * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n\t\t * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n\t\t * @constructor\n\t\t **/\n\t\tfunction Matrix2D(a, b, c, d, tx, ty) {\n\t\t\tthis.setValues(a,b,c,d,tx,ty);\n\t\t\t\n\t\t// public properties:\n\t\t\t// assigned in the setValues method.\n\t\t\t/**\n\t\t\t * Position (0, 0) in a 3x3 affine transformation matrix.\n\t\t\t * @property a\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\n\t\t\t/**\n\t\t\t * Position (0, 1) in a 3x3 affine transformation matrix.\n\t\t\t * @property b\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\n\t\t\t/**\n\t\t\t * Position (1, 0) in a 3x3 affine transformation matrix.\n\t\t\t * @property c\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\n\t\t\t/**\n\t\t\t * Position (1, 1) in a 3x3 affine transformation matrix.\n\t\t\t * @property d\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\n\t\t\t/**\n\t\t\t * Position (2, 0) in a 3x3 affine transformation matrix.\n\t\t\t * @property tx\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\n\t\t\t/**\n\t\t\t * Position (2, 1) in a 3x3 affine transformation matrix.\n\t\t\t * @property ty\n\t\t\t * @type Number\n\t\t\t **/\n\t\t}\n\t\tvar p = Matrix2D.prototype;\n\t\n\t\t/**\n\t\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t\t * for details.\n\t\t *\n\t\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t\t *\n\t\t * @method initialize\n\t\t * @protected\n\t\t * @deprecated\n\t\t */\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\t\n\t\n\t// constants:\n\t\t/**\n\t\t * Multiplier for converting degrees to radians. Used internally by Matrix2D.\n\t\t * @property DEG_TO_RAD\n\t\t * @static\n\t\t * @final\n\t\t * @type Number\n\t\t * @readonly\n\t\t **/\n\t\tMatrix2D.DEG_TO_RAD = Math.PI/180;\n\t\n\t\n\t// static public properties:\n\t\t/**\n\t\t * An identity matrix, representing a null transformation.\n\t\t * @property identity\n\t\t * @static\n\t\t * @type Matrix2D\n\t\t * @readonly\n\t\t **/\n\t\tMatrix2D.identity = null; // set at bottom of class definition.\n\t\t\n\t\n\t// public methods:\n\t\t/**\n\t\t * Sets the specified values on this instance. \n\t\t * @method setValues\n\t\t * @param {Number} [a=1] Specifies the a property for the new matrix.\n\t\t * @param {Number} [b=0] Specifies the b property for the new matrix.\n\t\t * @param {Number} [c=0] Specifies the c property for the new matrix.\n\t\t * @param {Number} [d=1] Specifies the d property for the new matrix.\n\t\t * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n\t\t * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n\t\t * @return {Matrix2D} This instance. Useful for chaining method calls.\n\t\t*/\n\t\tp.setValues = function(a, b, c, d, tx, ty) {\n\t\t\t// don't forget to update docs in the constructor if these change:\n\t\t\tthis.a = (a == null) ? 1 : a;\n\t\t\tthis.b = b || 0;\n\t\t\tthis.c = c || 0;\n\t\t\tthis.d = (d == null) ? 1 : d;\n\t\t\tthis.tx = tx || 0;\n\t\t\tthis.ty = ty || 0;\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * Appends the specified matrix properties to this matrix. All parameters are required.\n\t\t * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n\t\t * @method append\n\t\t * @param {Number} a\n\t\t * @param {Number} b\n\t\t * @param {Number} c\n\t\t * @param {Number} d\n\t\t * @param {Number} tx\n\t\t * @param {Number} ty\n\t\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t\t **/\n\t\tp.append = function(a, b, c, d, tx, ty) {\n\t\t\tvar a1 = this.a;\n\t\t\tvar b1 = this.b;\n\t\t\tvar c1 = this.c;\n\t\t\tvar d1 = this.d;\n\t\t\tif (a != 1 || b != 0 || c != 0 || d != 1) {\n\t\t\t\tthis.a  = a1*a+c1*b;\n\t\t\t\tthis.b  = b1*a+d1*b;\n\t\t\t\tthis.c  = a1*c+c1*d;\n\t\t\t\tthis.d  = b1*c+d1*d;\n\t\t\t}\n\t\t\tthis.tx = a1*tx+c1*ty+this.tx;\n\t\t\tthis.ty = b1*tx+d1*ty+this.ty;\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * Prepends the specified matrix properties to this matrix.\n\t\t * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n\t\t * All parameters are required.\n\t\t * @method prepend\n\t\t * @param {Number} a\n\t\t * @param {Number} b\n\t\t * @param {Number} c\n\t\t * @param {Number} d\n\t\t * @param {Number} tx\n\t\t * @param {Number} ty\n\t\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t\t **/\n\t\tp.prepend = function(a, b, c, d, tx, ty) {\n\t\t\tvar a1 = this.a;\n\t\t\tvar c1 = this.c;\n\t\t\tvar tx1 = this.tx;\n\t\n\t\t\tthis.a  = a*a1+c*this.b;\n\t\t\tthis.b  = b*a1+d*this.b;\n\t\t\tthis.c  = a*c1+c*this.d;\n\t\t\tthis.d  = b*c1+d*this.d;\n\t\t\tthis.tx = a*tx1+c*this.ty+tx;\n\t\t\tthis.ty = b*tx1+d*this.ty+ty;\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * Appends the specified matrix to this matrix.\n\t\t * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n\t\t * @method appendMatrix\n\t\t * @param {Matrix2D} matrix\n\t\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t\t **/\n\t\tp.appendMatrix = function(matrix) {\n\t\t\treturn this.append(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t\t};\n\t\n\t\t/**\n\t\t * Prepends the specified matrix to this matrix.\n\t\t * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n\t\t * For example, you could calculate the combined transformation for a child object using:\n\t\t * \n\t\t * \tvar o = myDisplayObject;\n\t\t * \tvar mtx = o.getMatrix();\n\t\t * \twhile (o = o.parent) {\n\t\t * \t\t// prepend each parent's transformation in turn:\n\t\t * \t\to.prependMatrix(o.getMatrix());\n\t\t * \t}\n\t\t * @method prependMatrix\n\t\t * @param {Matrix2D} matrix\n\t\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t\t **/\n\t\tp.prependMatrix = function(matrix) {\n\t\t\treturn this.prepend(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t\t};\n\t\n\t\t/**\n\t\t * Generates matrix properties from the specified display object transform properties, and appends them to this matrix.\n\t\t * For example, you can use this to generate a matrix representing the transformations of a display object:\n\t\t * \n\t\t * \tvar mtx = new createjs.Matrix2D();\n\t\t * \tmtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);\n\t\t * @method appendTransform\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} scaleX\n\t\t * @param {Number} scaleY\n\t\t * @param {Number} rotation\n\t\t * @param {Number} skewX\n\t\t * @param {Number} skewY\n\t\t * @param {Number} regX Optional.\n\t\t * @param {Number} regY Optional.\n\t\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t\t **/\n\t\tp.appendTransform = function(x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n\t\t\tif (rotation%360) {\n\t\t\t\tvar r = rotation*Matrix2D.DEG_TO_RAD;\n\t\t\t\tvar cos = Math.cos(r);\n\t\t\t\tvar sin = Math.sin(r);\n\t\t\t} else {\n\t\t\t\tcos = 1;\n\t\t\t\tsin = 0;\n\t\t\t}\n\t\n\t\t\tif (skewX || skewY) {\n\t\t\t\t// TODO: can this be combined into a single append operation?\n\t\t\t\tskewX *= Matrix2D.DEG_TO_RAD;\n\t\t\t\tskewY *= Matrix2D.DEG_TO_RAD;\n\t\t\t\tthis.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n\t\t\t\tthis.append(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, 0, 0);\n\t\t\t} else {\n\t\t\t\tthis.append(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, x, y);\n\t\t\t}\n\t\t\t\n\t\t\tif (regX || regY) {\n\t\t\t\t// append the registration offset:\n\t\t\t\tthis.tx -= regX*this.a+regY*this.c; \n\t\t\t\tthis.ty -= regX*this.b+regY*this.d;\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * Generates matrix properties from the specified display object transform properties, and prepends them to this matrix.\n\t\t * For example, you could calculate the combined transformation for a child object using:\n\t\t * \n\t\t * \tvar o = myDisplayObject;\n\t\t * \tvar mtx = new createjs.Matrix2D();\n\t\t * \tdo  {\n\t\t * \t\t// prepend each parent's transformation in turn:\n\t\t * \t\tmtx.prependTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n\t\t * \t} while (o = o.parent);\n\t\t * \t\n\t\t * \tNote that the above example would not account for {{#crossLink \"DisplayObject/transformMatrix:property\"}}{{/crossLink}}\n\t\t * \tvalues. See {{#crossLink \"Matrix2D/prependMatrix\"}}{{/crossLink}} for an example that does.\n\t\t * @method prependTransform\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} scaleX\n\t\t * @param {Number} scaleY\n\t\t * @param {Number} rotation\n\t\t * @param {Number} skewX\n\t\t * @param {Number} skewY\n\t\t * @param {Number} regX Optional.\n\t\t * @param {Number} regY Optional.\n\t\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t\t **/\n\t\tp.prependTransform = function(x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n\t\t\tif (rotation%360) {\n\t\t\t\tvar r = rotation*Matrix2D.DEG_TO_RAD;\n\t\t\t\tvar cos = Math.cos(r);\n\t\t\t\tvar sin = Math.sin(r);\n\t\t\t} else {\n\t\t\t\tcos = 1;\n\t\t\t\tsin = 0;\n\t\t\t}\n\t\n\t\t\tif (regX || regY) {\n\t\t\t\t// prepend the registration offset:\n\t\t\t\tthis.tx -= regX; this.ty -= regY;\n\t\t\t}\n\t\t\tif (skewX || skewY) {\n\t\t\t\t// TODO: can this be combined into a single prepend operation?\n\t\t\t\tskewX *= Matrix2D.DEG_TO_RAD;\n\t\t\t\tskewY *= Matrix2D.DEG_TO_RAD;\n\t\t\t\tthis.prepend(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, 0, 0);\n\t\t\t\tthis.prepend(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n\t\t\t} else {\n\t\t\t\tthis.prepend(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, x, y);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * Applies a clockwise rotation transformation to the matrix.\n\t\t * @method rotate\n\t\t * @param {Number} angle The angle to rotate by, in degrees. To use a value in radians, multiply it by `180/Math.PI`.\n\t\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t\t **/\n\t\tp.rotate = function(angle) {\n\t\t\tangle = angle*Matrix2D.DEG_TO_RAD;\n\t\t\tvar cos = Math.cos(angle);\n\t\t\tvar sin = Math.sin(angle);\n\t\n\t\t\tvar a1 = this.a;\n\t\t\tvar b1 = this.b;\n\t\n\t\t\tthis.a = a1*cos+this.c*sin;\n\t\t\tthis.b = b1*cos+this.d*sin;\n\t\t\tthis.c = -a1*sin+this.c*cos;\n\t\t\tthis.d = -b1*sin+this.d*cos;\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * Applies a skew transformation to the matrix.\n\t\t * @method skew\n\t\t * @param {Number} skewX The amount to skew horizontally in degrees. To use a value in radians, multiply it by `180/Math.PI`.\n\t\t * @param {Number} skewY The amount to skew vertically in degrees.\n\t\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t\t*/\n\t\tp.skew = function(skewX, skewY) {\n\t\t\tskewX = skewX*Matrix2D.DEG_TO_RAD;\n\t\t\tskewY = skewY*Matrix2D.DEG_TO_RAD;\n\t\t\tthis.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), 0, 0);\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * Applies a scale transformation to the matrix.\n\t\t * @method scale\n\t\t * @param {Number} x The amount to scale horizontally. E.G. a value of 2 will double the size in the X direction, and 0.5 will halve it.\n\t\t * @param {Number} y The amount to scale vertically.\n\t\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t\t **/\n\t\tp.scale = function(x, y) {\n\t\t\tthis.a *= x;\n\t\t\tthis.b *= x;\n\t\t\tthis.c *= y;\n\t\t\tthis.d *= y;\n\t\t\t//this.tx *= x;\n\t\t\t//this.ty *= y;\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * Translates the matrix on the x and y axes.\n\t\t * @method translate\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t\t **/\n\t\tp.translate = function(x, y) {\n\t\t\tthis.tx += this.a*x + this.c*y;\n\t\t\tthis.ty += this.b*x + this.d*y;\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * Sets the properties of the matrix to those of an identity matrix (one that applies a null transformation).\n\t\t * @method identity\n\t\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t\t **/\n\t\tp.identity = function() {\n\t\t\tthis.a = this.d = 1;\n\t\t\tthis.b = this.c = this.tx = this.ty = 0;\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * Inverts the matrix, causing it to perform the opposite transformation.\n\t\t * @method invert\n\t\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t\t **/\n\t\tp.invert = function() {\n\t\t\tvar a1 = this.a;\n\t\t\tvar b1 = this.b;\n\t\t\tvar c1 = this.c;\n\t\t\tvar d1 = this.d;\n\t\t\tvar tx1 = this.tx;\n\t\t\tvar n = a1*d1-b1*c1;\n\t\n\t\t\tthis.a = d1/n;\n\t\t\tthis.b = -b1/n;\n\t\t\tthis.c = -c1/n;\n\t\t\tthis.d = a1/n;\n\t\t\tthis.tx = (c1*this.ty-d1*tx1)/n;\n\t\t\tthis.ty = -(a1*this.ty-b1*tx1)/n;\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * Returns true if the matrix is an identity matrix.\n\t\t * @method isIdentity\n\t\t * @return {Boolean}\n\t\t **/\n\t\tp.isIdentity = function() {\n\t\t\treturn this.tx === 0 && this.ty === 0 && this.a === 1 && this.b === 0 && this.c === 0 && this.d === 1;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Returns true if this matrix is equal to the specified matrix (all property values are equal).\n\t\t * @method equals\n\t\t * @param {Matrix2D} matrix The matrix to compare.\n\t\t * @return {Boolean}\n\t\t **/\n\t\tp.equals = function(matrix) {\n\t\t\treturn this.tx === matrix.tx && this.ty === matrix.ty && this.a === matrix.a && this.b === matrix.b && this.c === matrix.c && this.d === matrix.d;\n\t\t};\n\t\n\t\t/**\n\t\t * Transforms a point according to this matrix.\n\t\t * @method transformPoint\n\t\t * @param {Number} x The x component of the point to transform.\n\t\t * @param {Number} y The y component of the point to transform.\n\t\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a generic object with x/y properties will be returned.\n\t\t * @return {Point} This matrix. Useful for chaining method calls.\n\t\t **/\n\t\tp.transformPoint = function(x, y, pt) {\n\t\t\tpt = pt||{};\n\t\t\tpt.x = x*this.a+y*this.c+this.tx;\n\t\t\tpt.y = x*this.b+y*this.d+this.ty;\n\t\t\treturn pt;\n\t\t};\n\t\n\t\t/**\n\t\t * Decomposes the matrix into transform properties (x, y, scaleX, scaleY, and rotation). Note that these values\n\t\t * may not match the transform properties you used to generate the matrix, though they will produce the same visual\n\t\t * results.\n\t\t * @method decompose\n\t\t * @param {Object} target The object to apply the transform properties to. If null, then a new object will be returned.\n\t\t * @return {Object} The target, or a new generic object with the transform properties applied.\n\t\t*/\n\t\tp.decompose = function(target) {\n\t\t\t// TODO: it would be nice to be able to solve for whether the matrix can be decomposed into only scale/rotation even when scale is negative\n\t\t\tif (target == null) { target = {}; }\n\t\t\ttarget.x = this.tx;\n\t\t\ttarget.y = this.ty;\n\t\t\ttarget.scaleX = Math.sqrt(this.a * this.a + this.b * this.b);\n\t\t\ttarget.scaleY = Math.sqrt(this.c * this.c + this.d * this.d);\n\t\n\t\t\tvar skewX = Math.atan2(-this.c, this.d);\n\t\t\tvar skewY = Math.atan2(this.b, this.a);\n\t\n\t\t\tvar delta = Math.abs(1-skewX/skewY);\n\t\t\tif (delta < 0.00001) { // effectively identical, can use rotation:\n\t\t\t\ttarget.rotation = skewY/Matrix2D.DEG_TO_RAD;\n\t\t\t\tif (this.a < 0 && this.d >= 0) {\n\t\t\t\t\ttarget.rotation += (target.rotation <= 0) ? 180 : -180;\n\t\t\t\t}\n\t\t\t\ttarget.skewX = target.skewY = 0;\n\t\t\t} else {\n\t\t\t\ttarget.skewX = skewX/Matrix2D.DEG_TO_RAD;\n\t\t\t\ttarget.skewY = skewY/Matrix2D.DEG_TO_RAD;\n\t\t\t}\n\t\t\treturn target;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Copies all properties from the specified matrix to this matrix.\n\t\t * @method copy\n\t\t * @param {Matrix2D} matrix The matrix to copy properties from.\n\t\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t\t*/\n\t\tp.copy = function(matrix) {\n\t\t\treturn this.setValues(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a clone of the Matrix2D instance.\n\t\t * @method clone\n\t\t * @return {Matrix2D} a clone of the Matrix2D instance.\n\t\t **/\n\t\tp.clone = function() {\n\t\t\treturn new Matrix2D(this.a, this.b, this.c, this.d, this.tx, this.ty);\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a string representation of this object.\n\t\t * @method toString\n\t\t * @return {String} a string representation of the instance.\n\t\t **/\n\t\tp.toString = function() {\n\t\t\treturn \"[Matrix2D (a=\"+this.a+\" b=\"+this.b+\" c=\"+this.c+\" d=\"+this.d+\" tx=\"+this.tx+\" ty=\"+this.ty+\")]\";\n\t\t};\n\t\n\t\t// this has to be populated after the class is defined:\n\t\tMatrix2D.identity = new Matrix2D();\n\t\n\t\n\t\tcreatejs.Matrix2D = Matrix2D;\n\t}());\n\t\n\t//##############################################################################\n\t// DisplayProps.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\t/**\n\t\t * Used for calculating and encapsulating display related properties.\n\t\t * @class DisplayProps\n\t\t * @param {Number} [visible=true] Visible value.\n\t\t * @param {Number} [alpha=1] Alpha value.\n\t\t * @param {Number} [shadow=null] A Shadow instance or null.\n\t\t * @param {Number} [compositeOperation=null] A compositeOperation value or null.\n\t\t * @param {Number} [matrix] A transformation matrix. Defaults to a new identity matrix.\n\t\t * @constructor\n\t\t **/\n\t\tfunction DisplayProps(visible, alpha, shadow, compositeOperation, matrix) {\n\t\t\tthis.setValues(visible, alpha, shadow, compositeOperation, matrix);\n\t\t\t\n\t\t// public properties:\n\t\t\t// assigned in the setValues method.\n\t\t\t/**\n\t\t\t * Property representing the alpha that will be applied to a display object.\n\t\t\t * @property alpha\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\n\t\t\t/**\n\t\t\t * Property representing the shadow that will be applied to a display object.\n\t\t\t * @property shadow\n\t\t\t * @type Shadow\n\t\t\t **/\n\t\t\n\t\t\t/**\n\t\t\t * Property representing the compositeOperation that will be applied to a display object.\n\t\t\t * You can find a list of valid composite operations at:\n\t\t\t * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing\">https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing</a>\n\t\t\t * @property compositeOperation\n\t\t\t * @type String\n\t\t\t **/\n\t\t\t\n\t\t\t/**\n\t\t\t * Property representing the value for visible that will be applied to a display object.\n\t\t\t * @property visible\n\t\t\t * @type Boolean\n\t\t\t **/\n\t\t\t\n\t\t\t/**\n\t\t\t * The transformation matrix that will be applied to a display object.\n\t\t\t * @property matrix\n\t\t\t * @type Matrix2D\n\t\t\t **/\n\t\t}\n\t\tvar p = DisplayProps.prototype;\n\t\n\t// initialization:\n\t\t/**\n\t\t * Reinitializes the instance with the specified values.\n\t\t * @method setValues\n\t\t * @param {Number} [visible=true] Visible value.\n\t\t * @param {Number} [alpha=1] Alpha value.\n\t\t * @param {Number} [shadow=null] A Shadow instance or null.\n\t\t * @param {Number} [compositeOperation=null] A compositeOperation value or null.\n\t\t * @param {Number} [matrix] A transformation matrix. Defaults to an identity matrix.\n\t\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t\t * @chainable\n\t\t*/\n\t\tp.setValues = function (visible, alpha, shadow, compositeOperation, matrix) {\n\t\t\tthis.visible = visible == null ? true : !!visible;\n\t\t\tthis.alpha = alpha == null ? 1 : alpha;\n\t\t\tthis.shadow = shadow;\n\t\t\tthis.compositeOperation = compositeOperation;\n\t\t\tthis.matrix = matrix || (this.matrix&&this.matrix.identity()) || new createjs.Matrix2D();\n\t\t\treturn this;\n\t\t};\n\t\n\t// public methods:\n\t\t/**\n\t\t * Appends the specified display properties. This is generally used to apply a child's properties its parent's.\n\t\t * @method append\n\t\t * @param {Boolean} visible desired visible value\n\t\t * @param {Number} alpha desired alpha value\n\t\t * @param {Shadow} shadow desired shadow value\n\t\t * @param {String} compositeOperation desired composite operation value\n\t\t * @param {Matrix2D} [matrix] a Matrix2D instance\n\t\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t\t * @chainable\n\t\t*/\n\t\tp.append = function(visible, alpha, shadow, compositeOperation, matrix) {\n\t\t\tthis.alpha *= alpha;\n\t\t\tthis.shadow = shadow || this.shadow;\n\t\t\tthis.compositeOperation = compositeOperation || this.compositeOperation;\n\t\t\tthis.visible = this.visible && visible;\n\t\t\tmatrix&&this.matrix.appendMatrix(matrix);\n\t\t\treturn this;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Prepends the specified display properties. This is generally used to apply a parent's properties to a child's.\n\t\t * For example, to get the combined display properties that would be applied to a child, you could use:\n\t\t * \n\t\t * \tvar o = myDisplayObject;\n\t\t * \tvar props = new createjs.DisplayProps();\n\t\t * \tdo {\n\t\t * \t\t// prepend each parent's props in turn:\n\t\t * \t\tprops.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation, o.getMatrix());\n\t\t * \t} while (o = o.parent);\n\t\t * \t\n\t\t * @method prepend\n\t\t * @param {Boolean} visible desired visible value\n\t\t * @param {Number} alpha desired alpha value\n\t\t * @param {Shadow} shadow desired shadow value\n\t\t * @param {String} compositeOperation desired composite operation value\n\t\t * @param {Matrix2D} [matrix] a Matrix2D instance\n\t\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t\t * @chainable\n\t\t*/\n\t\tp.prepend = function(visible, alpha, shadow, compositeOperation, matrix) {\n\t\t\tthis.alpha *= alpha;\n\t\t\tthis.shadow = this.shadow || shadow;\n\t\t\tthis.compositeOperation = this.compositeOperation || compositeOperation;\n\t\t\tthis.visible = this.visible && visible;\n\t\t\tmatrix&&this.matrix.prependMatrix(matrix);\n\t\t\treturn this;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Resets this instance and its matrix to default values.\n\t\t * @method identity\n\t\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t\t * @chainable\n\t\t*/\n\t\tp.identity = function() {\n\t\t\tthis.visible = true;\n\t\t\tthis.alpha = 1;\n\t\t\tthis.shadow = this.compositeOperation = null;\n\t\t\tthis.matrix.identity();\n\t\t\treturn this;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Returns a clone of the DisplayProps instance. Clones the associated matrix.\n\t\t * @method clone\n\t\t * @return {DisplayProps} a clone of the DisplayProps instance.\n\t\t **/\n\t\tp.clone = function() {\n\t\t\treturn new DisplayProps(this.alpha, this.shadow, this.compositeOperation, this.visible, this.matrix.clone());\n\t\t};\n\t\n\t// private methods:\n\t\n\t\tcreatejs.DisplayProps = DisplayProps;\n\t})();\n\t\n\t//##############################################################################\n\t// Point.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t\t * Represents a point on a 2 dimensional x / y coordinate system.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t * \n\t\t *      var point = new createjs.Point(0, 100);\n\t\t * \n\t\t * @class Point\n\t\t * @param {Number} [x=0] X position.\n\t\t * @param {Number} [y=0] Y position.\n\t\t * @constructor\n\t\t **/\n\t\tfunction Point(x, y) {\n\t\t \tthis.setValues(x, y);\n\t\t \t\n\t\t \t\n\t\t// public properties:\n\t\t\t// assigned in the setValues method.\n\t\t\t/**\n\t\t\t * X position.\n\t\t\t * @property x\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\n\t\t\t/**\n\t\t\t * Y position.\n\t\t\t * @property y\n\t\t\t * @type Number\n\t\t\t **/\n\t\t}\n\t\tvar p = Point.prototype;\n\t\n\t\t/**\n\t\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t\t * for details.\n\t\t *\n\t\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t\t *\n\t\t * @method initialize\n\t\t * @protected\n\t\t * @deprecated\n\t\t */\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\t\n\t\t\n\t// public methods:\n\t\t/** \n\t\t * Sets the specified values on this instance.\n\t\t * @method setValues\n\t\t * @param {Number} [x=0] X position.\n\t\t * @param {Number} [y=0] Y position.\n\t\t * @return {Point} This instance. Useful for chaining method calls.\n\t\t * @chainable\n\t\t*/\n\t\tp.setValues = function(x, y) {\n\t\t\tthis.x = x||0;\n\t\t\tthis.y = y||0;\n\t\t\treturn this;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Copies all properties from the specified point to this point.\n\t\t * @method copy\n\t\t * @param {Point} point The point to copy properties from.\n\t\t * @return {Point} This point. Useful for chaining method calls.\n\t\t * @chainable\n\t\t*/\n\t\tp.copy = function(point) {\n\t\t\tthis.x = point.x;\n\t\t\tthis.y = point.y;\n\t\t\treturn this;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Returns a clone of the Point instance.\n\t\t * @method clone\n\t\t * @return {Point} a clone of the Point instance.\n\t\t **/\n\t\tp.clone = function() {\n\t\t\treturn new Point(this.x, this.y);\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a string representation of this object.\n\t\t * @method toString\n\t\t * @return {String} a string representation of the instance.\n\t\t **/\n\t\tp.toString = function() {\n\t\t\treturn \"[Point (x=\"+this.x+\" y=\"+this.y+\")]\";\n\t\t};\n\t\t\n\t\t\n\t\tcreatejs.Point = Point;\n\t}());\n\t\n\t//##############################################################################\n\t// Rectangle.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t\t * Represents a rectangle as defined by the points (x, y) and (x+width, y+height).\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var rect = new createjs.Rectangle(0, 0, 100, 100);\n\t\t *\n\t\t * @class Rectangle\n\t\t * @param {Number} [x=0] X position.\n\t\t * @param {Number} [y=0] Y position.\n\t\t * @param {Number} [width=0] The width of the Rectangle.\n\t\t * @param {Number} [height=0] The height of the Rectangle.\n\t\t * @constructor\n\t\t **/\n\t\tfunction Rectangle(x, y, width, height) {\n\t\t\tthis.setValues(x, y, width, height);\n\t\t\t\n\t\t\t\n\t\t// public properties:\n\t\t\t// assigned in the setValues method.\n\t\t\t/**\n\t\t\t * X position.\n\t\t\t * @property x\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\n\t\t\t/**\n\t\t\t * Y position.\n\t\t\t * @property y\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\n\t\t\t/**\n\t\t\t * Width.\n\t\t\t * @property width\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\n\t\t\t/**\n\t\t\t * Height.\n\t\t\t * @property height\n\t\t\t * @type Number\n\t\t\t **/\n\t\t}\n\t\tvar p = Rectangle.prototype;\n\t\n\t\t/**\n\t\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t\t * for details.\n\t\t *\n\t\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t\t *\n\t\t * @method initialize\n\t\t * @protected\n\t\t * @deprecated\n\t\t */\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\t\n\t\n\t// public methods:\n\t\t/** \n\t\t * Sets the specified values on this instance.\n\t\t * @method setValues\n\t\t * @param {Number} [x=0] X position.\n\t\t * @param {Number} [y=0] Y position.\n\t\t * @param {Number} [width=0] The width of the Rectangle.\n\t\t * @param {Number} [height=0] The height of the Rectangle.\n\t\t * @return {Rectangle} This instance. Useful for chaining method calls.\n\t\t * @chainable\n\t\t*/\n\t\tp.setValues = function(x, y, width, height) {\n\t\t\t// don't forget to update docs in the constructor if these change:\n\t\t\tthis.x = x||0;\n\t\t\tthis.y = y||0;\n\t\t\tthis.width = width||0;\n\t\t\tthis.height = height||0;\n\t\t\treturn this;\n\t\t};\n\t\t\n\t\t/** \n\t\t * Extends the rectangle's bounds to include the described point or rectangle.\n\t\t * @method extend\n\t\t * @param {Number} x X position of the point or rectangle.\n\t\t * @param {Number} y Y position of the point or rectangle.\n\t\t * @param {Number} [width=0] The width of the rectangle.\n\t\t * @param {Number} [height=0] The height of the rectangle.\n\t\t * @return {Rectangle} This instance. Useful for chaining method calls.\n\t\t * @chainable\n\t\t*/\n\t\tp.extend = function(x, y, width, height) {\n\t\t\twidth = width||0;\n\t\t\theight = height||0;\n\t\t\tif (x+width > this.x+this.width) { this.width = x+width-this.x; }\n\t\t\tif (y+height > this.y+this.height) { this.height = y+height-this.y; }\n\t\t\tif (x < this.x) { this.width += this.x-x; this.x = x; }\n\t\t\tif (y < this.y) { this.height += this.y-y; this.y = y; }\n\t\t\treturn this;\n\t\t};\n\t\t\n\t\t/** \n\t\t * Adds the specified padding to the rectangle's bounds.\n\t\t * @method pad\n\t\t * @param {Number} top\n\t\t * @param {Number} left\n\t\t * @param {Number} bottom\n\t\t * @param {Number} right\n\t\t * @return {Rectangle} This instance. Useful for chaining method calls.\n\t\t * @chainable\n\t\t*/\n\t\tp.pad = function(top, left, bottom, right) {\n\t\t\tthis.x -= left;\n\t\t\tthis.y -= top;\n\t\t\tthis.width += left+right;\n\t\t\tthis.height += top+bottom;\n\t\t\treturn this;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Copies all properties from the specified rectangle to this rectangle.\n\t\t * @method copy\n\t\t * @param {Rectangle} rectangle The rectangle to copy properties from.\n\t\t * @return {Rectangle} This rectangle. Useful for chaining method calls.\n\t\t * @chainable\n\t\t*/\n\t\tp.copy = function(rectangle) {\n\t\t\treturn this.setValues(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n\t\t};\n\t\t\n\t\t/** \n\t\t * Returns true if this rectangle fully encloses the described point or rectangle.\n\t\t * @method contains\n\t\t * @param {Number} x X position of the point or rectangle.\n\t\t * @param {Number} y Y position of the point or rectangle.\n\t\t * @param {Number} [width=0] The width of the rectangle.\n\t\t * @param {Number} [height=0] The height of the rectangle.\n\t\t * @return {Boolean} True if the described point or rectangle is contained within this rectangle.\n\t\t*/\n\t\tp.contains = function(x, y, width, height) {\n\t\t\twidth = width||0;\n\t\t\theight = height||0;\n\t\t\treturn (x >= this.x && x+width <= this.x+this.width && y >= this.y && y+height <= this.y+this.height);\n\t\t};\n\t\t\n\t\t/** \n\t\t * Returns a new rectangle which contains this rectangle and the specified rectangle.\n\t\t * @method union\n\t\t * @param {Rectangle} rect The rectangle to calculate a union with.\n\t\t * @return {Rectangle} A new rectangle describing the union.\n\t\t*/\n\t\tp.union = function(rect) {\n\t\t\treturn this.clone().extend(rect.x, rect.y, rect.width, rect.height);\n\t\t};\n\t\t\n\t\t/** \n\t\t * Returns a new rectangle which describes the intersection (overlap) of this rectangle and the specified rectangle,\n\t\t * or null if they do not intersect.\n\t\t * @method intersection\n\t\t * @param {Rectangle} rect The rectangle to calculate an intersection with.\n\t\t * @return {Rectangle} A new rectangle describing the intersection or null.\n\t\t*/\n\t\tp.intersection = function(rect) {\n\t\t\tvar x1 = rect.x, y1 = rect.y, x2 = x1+rect.width, y2 = y1+rect.height;\n\t\t\tif (this.x > x1) { x1 = this.x; }\n\t\t\tif (this.y > y1) { y1 = this.y; }\n\t\t\tif (this.x + this.width < x2) { x2 = this.x + this.width; }\n\t\t\tif (this.y + this.height < y2) { y2 = this.y + this.height; }\n\t\t\treturn (x2 <= x1 || y2 <= y1) ? null : new Rectangle(x1, y1, x2-x1, y2-y1);\n\t\t};\n\t\t\n\t\t/** \n\t\t * Returns true if the specified rectangle intersects (has any overlap) with this rectangle.\n\t\t * @method intersects\n\t\t * @param {Rectangle} rect The rectangle to compare.\n\t\t * @return {Boolean} True if the rectangles intersect.\n\t\t*/\n\t\tp.intersects = function(rect) {\n\t\t\treturn (rect.x <= this.x+this.width && this.x <= rect.x+rect.width && rect.y <= this.y+this.height && this.y <= rect.y + rect.height);\n\t\t};\n\t\t\n\t\t/** \n\t\t * Returns true if the width or height are equal or less than 0.\n\t\t * @method isEmpty\n\t\t * @return {Boolean} True if the rectangle is empty.\n\t\t*/\n\t\tp.isEmpty = function() {\n\t\t\treturn this.width <= 0 || this.height <= 0;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Returns a clone of the Rectangle instance.\n\t\t * @method clone\n\t\t * @return {Rectangle} a clone of the Rectangle instance.\n\t\t **/\n\t\tp.clone = function() {\n\t\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a string representation of this object.\n\t\t * @method toString\n\t\t * @return {String} a string representation of the instance.\n\t\t **/\n\t\tp.toString = function() {\n\t\t\treturn \"[Rectangle (x=\"+this.x+\" y=\"+this.y+\" width=\"+this.width+\" height=\"+this.height+\")]\";\n\t\t};\n\t\t\n\t\t\n\t\tcreatejs.Rectangle = Rectangle;\n\t}());\n\t\n\t//##############################################################################\n\t// ButtonHelper.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t\t * The ButtonHelper is a helper class to create interactive buttons from {{#crossLink \"MovieClip\"}}{{/crossLink}} or\n\t\t * {{#crossLink \"Sprite\"}}{{/crossLink}} instances. This class will intercept mouse events from an object, and\n\t\t * automatically call {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} or {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}},\n\t\t * to the respective animation labels, add a pointer cursor, and allows the user to define a hit state frame.\n\t\t *\n\t\t * The ButtonHelper instance does not need to be added to the stage, but a reference should be maintained to prevent\n\t\t * garbage collection.\n\t\t * \n\t\t * Note that over states will not work unless you call {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var helper = new createjs.ButtonHelper(myInstance, \"out\", \"over\", \"down\", false, myInstance, \"hit\");\n\t\t *      myInstance.addEventListener(\"click\", handleClick);\n\t\t *      function handleClick(event) {\n\t\t *          // Click Happened.\n\t\t *      }\n\t\t *\n\t\t * @class ButtonHelper\n\t\t * @param {Sprite|MovieClip} target The instance to manage.\n\t\t * @param {String} [outLabel=\"out\"] The label or animation to go to when the user rolls out of the button.\n\t\t * @param {String} [overLabel=\"over\"] The label or animation to go to when the user rolls over the button.\n\t\t * @param {String} [downLabel=\"down\"] The label or animation to go to when the user presses the button.\n\t\t * @param {Boolean} [play=false] If the helper should call \"gotoAndPlay\" or \"gotoAndStop\" on the button when changing\n\t\t * states.\n\t\t * @param {DisplayObject} [hitArea] An optional item to use as the hit state for the button. If this is not defined,\n\t\t * then the button's visible states will be used instead. Note that the same instance as the \"target\" argument can be\n\t\t * used for the hitState.\n\t\t * @param {String} [hitLabel] The label or animation on the hitArea instance that defines the hitArea bounds. If this is\n\t\t * null, then the default state of the hitArea will be used. *\n\t\t * @constructor\n\t\t */\n\t\tfunction ButtonHelper(target, outLabel, overLabel, downLabel, play, hitArea, hitLabel) {\n\t\t\tif (!target.addEventListener) { return; }\n\t\t\n\t\t\n\t\t// public properties:\n\t\t\t/**\n\t\t\t * The target for this button helper.\n\t\t\t * @property target\n\t\t\t * @type MovieClip | Sprite\n\t\t\t * @readonly\n\t\t\t **/\n\t\t\tthis.target = target;\n\t\t\n\t\t\t/**\n\t\t\t * The label name or frame number to display when the user mouses out of the target. Defaults to \"over\".\n\t\t\t * @property overLabel\n\t\t\t * @type String | Number\n\t\t\t **/\n\t\t\tthis.overLabel = overLabel == null ? \"over\" : overLabel;\n\t\t\n\t\t\t/**\n\t\t\t * The label name or frame number to display when the user mouses over the target. Defaults to \"out\".\n\t\t\t * @property outLabel\n\t\t\t * @type String | Number\n\t\t\t **/\n\t\t\tthis.outLabel = outLabel == null ? \"out\" : outLabel;\n\t\t\n\t\t\t/**\n\t\t\t * The label name or frame number to display when the user presses on the target. Defaults to \"down\".\n\t\t\t * @property downLabel\n\t\t\t * @type String | Number\n\t\t\t **/\n\t\t\tthis.downLabel = downLabel == null ? \"down\" : downLabel;\n\t\t\n\t\t\t/**\n\t\t\t * If true, then ButtonHelper will call gotoAndPlay, if false, it will use gotoAndStop. Default is false.\n\t\t\t * @property play\n\t\t\t * @default false\n\t\t\t * @type Boolean\n\t\t\t **/\n\t\t\tthis.play = play;\n\t\t\t\n\t\t\t\n\t\t//  private properties\n\t\t\t/**\n\t\t\t * @property _isPressed\n\t\t\t * @type Boolean\n\t\t\t * @protected\n\t\t\t **/\n\t\t\tthis._isPressed = false;\n\t\t\n\t\t\t/**\n\t\t\t * @property _isOver\n\t\t\t * @type Boolean\n\t\t\t * @protected\n\t\t\t **/\n\t\t\tthis._isOver = false;\n\t\t\n\t\t\t/**\n\t\t\t * @property _enabled\n\t\t\t * @type Boolean\n\t\t\t * @protected\n\t\t\t **/\n\t\t\tthis._enabled = false;\n\t\t\t\n\t\t// setup:\n\t\t\ttarget.mouseChildren = false; // prevents issues when children are removed from the display list when state changes.\n\t\t\tthis.enabled = true;\n\t\t\tthis.handleEvent({});\n\t\t\tif (hitArea) {\n\t\t\t\tif (hitLabel) {\n\t\t\t\t\thitArea.actionsEnabled = false;\n\t\t\t\t\thitArea.gotoAndStop&&hitArea.gotoAndStop(hitLabel);\n\t\t\t\t}\n\t\t\t\ttarget.hitArea = hitArea;\n\t\t\t}\n\t\t}\n\t\tvar p = ButtonHelper.prototype;\n\t\n\t\t/**\n\t\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t\t * for details.\n\t\t *\n\t\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t\t *\n\t\t * @method initialize\n\t\t * @protected\n\t\t * @deprecated\n\t\t */\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\t\n\t\t\n\t// getter / setters:\n\t\t/**\n\t\t * Use the {{#crossLink \"ButtonHelper/enabled:property\"}}{{/crossLink}} property instead.\n\t\t * @method setEnabled\n\t\t * @param {Boolean} value\n\t\t * @deprecated\n\t\t **/\n\t\tp.setEnabled = function(value) { // TODO: deprecated.\n\t\t\tif (value == this._enabled) { return; }\n\t\t\tvar o = this.target;\n\t\t\tthis._enabled = value;\n\t\t\tif (value) {\n\t\t\t\to.cursor = \"pointer\";\n\t\t\t\to.addEventListener(\"rollover\", this);\n\t\t\t\to.addEventListener(\"rollout\", this);\n\t\t\t\to.addEventListener(\"mousedown\", this);\n\t\t\t\to.addEventListener(\"pressup\", this);\n\t\t\t\tif (o._reset) { o.__reset = o._reset; o._reset = this._reset;}\n\t\t\t} else {\n\t\t\t\to.cursor = null;\n\t\t\t\to.removeEventListener(\"rollover\", this);\n\t\t\t\to.removeEventListener(\"rollout\", this);\n\t\t\t\to.removeEventListener(\"mousedown\", this);\n\t\t\t\to.removeEventListener(\"pressup\", this);\n\t\t\t\tif (o.__reset) { o._reset = o.__reset; delete(o.__reset); }\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * Use the {{#crossLink \"ButtonHelper/enabled:property\"}}{{/crossLink}} property instead.\n\t\t * @method getEnabled\n\t\t * @return {Boolean}\n\t\t * @deprecated\n\t\t **/\n\t\tp.getEnabled = function() {\n\t\t\treturn this._enabled;\n\t\t};\n\t\n\t\t/**\n\t\t * Enables or disables the button functionality on the target.\n\t\t * @property enabled\n\t\t * @type {Boolean}\n\t\t **/\n\t\ttry {\n\t\t\tObject.defineProperties(p, {\n\t\t\t\tenabled: { get: p.getEnabled, set: p.setEnabled }\n\t\t\t});\n\t\t} catch (e) {} // TODO: use Log\n\t\n\t\n\t// public methods:\n\t\t/**\n\t\t * Returns a string representation of this object.\n\t\t * @method toString\n\t\t * @return {String} a string representation of the instance.\n\t\t **/\n\t\tp.toString = function() {\n\t\t\treturn \"[ButtonHelper]\";\n\t\t};\n\t\n\t\n\t// private methods:\n\t\t/**\n\t\t * @method handleEvent\n\t\t * @param {Object} evt The mouse event to handle.\n\t\t * @protected\n\t\t **/\n\t\tp.handleEvent = function(evt) {\n\t\t\tvar label, t = this.target, type = evt.type;\n\t\t\tif (type == \"mousedown\") {\n\t\t\t\tthis._isPressed = true;\n\t\t\t\tlabel = this.downLabel;\n\t\t\t} else if (type == \"pressup\") {\n\t\t\t\tthis._isPressed = false;\n\t\t\t\tlabel = this._isOver ? this.overLabel : this.outLabel;\n\t\t\t} else if (type == \"rollover\") {\n\t\t\t\tthis._isOver = true;\n\t\t\t\tlabel = this._isPressed ? this.downLabel : this.overLabel;\n\t\t\t} else { // rollout and default\n\t\t\t\tthis._isOver = false;\n\t\t\t\tlabel = this._isPressed ? this.overLabel : this.outLabel;\n\t\t\t}\n\t\t\tif (this.play) {\n\t\t\t\tt.gotoAndPlay&&t.gotoAndPlay(label);\n\t\t\t} else {\n\t\t\t\tt.gotoAndStop&&t.gotoAndStop(label);\n\t\t\t}\n\t\t};\n\t\t\n\t\t/**\n\t\t * Injected into target. Preserves the paused state through a reset.\n\t\t * @method _reset\n\t\t * @protected\n\t\t **/\n\t\tp._reset = function() {\n\t\t\t// TODO: explore better ways to handle this issue. This is hacky & disrupts object signatures.\n\t\t\tvar p = this.paused;\n\t\t\tthis.__reset();\n\t\t\tthis.paused = p;\n\t\t};\n\t\n\t\n\t\tcreatejs.ButtonHelper = ButtonHelper;\n\t}());\n\t\n\t//##############################################################################\n\t// Shadow.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t\t * This class encapsulates the properties required to define a shadow to apply to a {{#crossLink \"DisplayObject\"}}{{/crossLink}}\n\t\t * via its <code>shadow</code> property.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      myImage.shadow = new createjs.Shadow(\"#000000\", 5, 5, 10);\n\t\t *\n\t\t * @class Shadow\n\t\t * @constructor\n\t\t * @param {String} color The color of the shadow. This can be any valid CSS color value.\n\t\t * @param {Number} offsetX The x offset of the shadow in pixels.\n\t\t * @param {Number} offsetY The y offset of the shadow in pixels.\n\t\t * @param {Number} blur The size of the blurring effect.\n\t\t **/\n\t\tfunction Shadow(color, offsetX, offsetY, blur) {\n\t\t\t\n\t\t\t\n\t\t// public properties:\n\t\t\t/** \n\t\t\t * The color of the shadow. This can be any valid CSS color value.\n\t\t\t * @property color\n\t\t\t * @type String\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis.color = color||\"black\";\n\t\t\n\t\t\t/** The x offset of the shadow.\n\t\t\t * @property offsetX\n\t\t\t * @type Number\n\t\t\t * @default 0\n\t\t\t */\n\t\t\tthis.offsetX = offsetX||0;\n\t\t\n\t\t\t/** The y offset of the shadow.\n\t\t\t * @property offsetY\n\t\t\t * @type Number\n\t\t\t * @default 0\n\t\t\t */\n\t\t\tthis.offsetY = offsetY||0;\n\t\t\n\t\t\t/** The blur of the shadow.\n\t\t\t * @property blur\n\t\t\t * @type Number\n\t\t\t * @default 0\n\t\t\t */\n\t\t\tthis.blur = blur||0;\n\t\t}\n\t\tvar p = Shadow.prototype;\n\t\n\t\t/**\n\t\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t\t * for details.\n\t\t *\n\t\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t\t *\n\t\t * @method initialize\n\t\t * @protected\n\t\t * @deprecated\n\t\t */\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\t\n\t\n\t// static public properties:\n\t\t/**\n\t\t * An identity shadow object (all properties are set to 0).\n\t\t * @property identity\n\t\t * @type Shadow\n\t\t * @static\n\t\t * @final\n\t\t * @readonly\n\t\t **/\n\t\tShadow.identity = new Shadow(\"transparent\", 0, 0, 0);\n\t\n\t\n\t// public methods:\n\t\t/**\n\t\t * Returns a string representation of this object.\n\t\t * @method toString\n\t\t * @return {String} a string representation of the instance.\n\t\t **/\n\t\tp.toString = function() {\n\t\t\treturn \"[Shadow]\";\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a clone of this Shadow instance.\n\t\t * @method clone\n\t\t * @return {Shadow} A clone of the current Shadow instance.\n\t\t **/\n\t\tp.clone = function() {\n\t\t\treturn new Shadow(this.color, this.offsetX, this.offsetY, this.blur);\n\t\t};\n\t\t\n\t\n\t\tcreatejs.Shadow = Shadow;\n\t}());\n\t\n\t//##############################################################################\n\t// SpriteSheet.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t\t * Encapsulates the properties and methods associated with a sprite sheet. A sprite sheet is a series of images (usually\n\t\t * animation frames) combined into a larger image (or images). For example, an animation consisting of eight 100x100\n\t\t * images could be combined into a single 400x200 sprite sheet (4 frames across by 2 high).\n\t\t *\n\t\t * The data passed to the SpriteSheet constructor defines:\n\t\t * <ol>\n\t\t * \t<li> The source image or images to use.</li>\n\t\t * \t<li> The positions of individual image frames.</li>\n\t\t * \t<li> Sequences of frames that form named animations. Optional.</li>\n\t\t * \t<li> The target playback framerate. Optional.</li>\n\t\t * </ol>\n\t\t * <h3>SpriteSheet Format</h3>\n\t\t * SpriteSheets are an object with two required properties (`images` and `frames`), and two optional properties\n\t\t * (`framerate` and `animations`). This makes them easy to define in javascript code, or in JSON.\n\t\t *\n\t\t * <h4>images</h4>\n\t\t * An array of source images. Images can be either an HTMlimage\n\t\t * instance, or a uri to an image. The former is recommended to control preloading.\n\t\t *\n\t\t * \timages: [image1, \"path/to/image2.png\"],\n\t\t *\n\t\t * <h4>frames</h4>\n\t\t * Defines the individual frames. There are two supported formats for frame data:\n\t\t * When all of the frames are the same size (in a grid), use an object with `width`, `height`, `regX`, `regY`,\n\t\t * and `count` properties.\n\t\t *\n\t\t * <ul>\n\t\t *  <li>`width` & `height` are required and specify the dimensions of the frames</li>\n\t\t *  <li>`regX` & `regY` indicate the registration point or \"origin\" of the frames</li>\n\t\t *  <li>`spacing` indicate the spacing between frames</li>\n\t\t *  <li>`margin` specify the margin around the image(s)</li>\n\t\t *  <li>`count` allows you to specify the total number of frames in the spritesheet; if omitted, this will\n\t\t *  be calculated based on the dimensions of the source images and the frames. Frames will be assigned\n\t\t *  indexes based on their position in the source images (left to right, top to bottom).</li>\n\t\t * </ul>\n\t\t *\n\t\t *  \tframes: {width:64, height:64, count:20, regX: 32, regY:64, spacing:0, margin:0}\n\t\t *\n\t\t * If the frames are of different sizes, use an array of frame definitions. Each definition is itself an array\n\t\t * with 4 required and 3 optional entries, in the order:\n\t\t *\n\t\t * <ul>\n\t\t *  <li>The first four, `x`, `y`, `width`, and `height` are required and define the frame rectangle.</li>\n\t\t *  <li>The fifth, `imageIndex`, specifies the index of the source image (defaults to 0)</li>\n\t\t *  <li>The last two, `regX` and `regY` specify the registration point of the frame</li>\n\t\t * </ul>\n\t\t *\n\t\t * \tframes: [\n\t\t * \t\t// x, y, width, height, imageIndex*, regX*, regY*\n\t\t * \t\t[64, 0, 96, 64],\n\t\t * \t\t[0, 0, 64, 64, 1, 32, 32]\n\t\t * \t\t// etc.\n\t\t * \t]\n\t\t *\n\t\t * <h4>animations</h4>\n\t\t * Optional. An object defining sequences of frames to play as named animations. Each property corresponds to an\n\t\t * animation of the same name. Each animation must specify the frames to play, and may\n\t\t * also include a relative playback `speed` (ex. 2 would playback at double speed, 0.5 at half), and\n\t\t * the name of the `next` animation to sequence to after it completes.\n\t\t *\n\t\t * There are three formats supported for defining the frames in an animation, which can be mixed and matched as appropriate:\n\t\t * <ol>\n\t\t * \t<li>for a single frame animation, you can simply specify the frame index\n\t\t *\n\t\t * \t\tanimations: {\n\t\t * \t\t\tsit: 7\n\t\t * \t\t}\n\t\t *\n\t\t * </li>\n\t\t * <li>\n\t\t *      for an animation of consecutive frames, you can use an array with two required, and two optional entries\n\t\t * \t\tin the order: `start`, `end`, `next`, and `speed`. This will play the frames from start to end inclusive.\n\t\t *\n\t\t * \t\tanimations: {\n\t\t * \t\t\t// start, end, next*, speed*\n\t\t * \t\t\trun: [0, 8],\n\t\t * \t\t\tjump: [9, 12, \"run\", 2]\n\t\t * \t\t}\n\t\t *\n\t\t *  </li>\n\t\t *  <li>\n\t\t *     for non-consecutive frames, you can use an object with a `frames` property defining an array of frame\n\t\t *     indexes to play in order. The object can also specify `next` and `speed` properties.\n\t\t *\n\t\t * \t\tanimations: {\n\t\t * \t\t\twalk: {\n\t\t * \t\t\t\tframes: [1,2,3,3,2,1]\n\t\t * \t\t\t},\n\t\t * \t\t\tshoot: {\n\t\t * \t\t\t\tframes: [1,4,5,6],\n\t\t * \t\t\t\tnext: \"walk\",\n\t\t * \t\t\t\tspeed: 0.5\n\t\t * \t\t\t}\n\t\t * \t\t}\n\t\t *\n\t\t *  </li>\n\t\t * </ol>\n\t\t * <strong>Note:</strong> the `speed` property was added in EaselJS 0.7.0. Earlier versions had a `frequency`\n\t\t * property instead, which was the inverse of `speed`. For example, a value of \"4\" would be 1/4 normal speed in\n\t\t * earlier versions, but is 4x normal speed in EaselJS 0.7.0+.\n\t\t *\n\t\t * <h4>framerate</h4>\n\t\t * Optional. Indicates the default framerate to play this spritesheet at in frames per second. See\n\t\t * {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} for more information.\n\t\t *\n\t\t * \t\tframerate: 20\n\t\t *\n\t\t * Note that the Sprite framerate will only work if the stage update method is provided with the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n\t\t * event generated by the {{#crossLink \"Ticker\"}}{{/crossLink}}.\n\t\t *\n\t\t * \t\tcreatejs.Ticker.on(\"tick\", handleTick);\n\t\t * \t\tfunction handleTick(event) {\n\t\t *\t\t\tstage.update(event);\n\t\t *\t\t}\n\t\t *\n\t\t * <h3>Example</h3>\n\t\t * To define a simple sprite sheet, with a single image \"sprites.jpg\" arranged in a regular 50x50 grid with three\n\t\t * animations: \"stand\" showing the first frame, \"run\" looping frame 1-5 inclusive, and \"jump\" playing frame 6-8 and\n\t\t * sequencing back to run.\n\t\t *\n\t\t * \t\tvar data = {\n\t\t * \t\t\timages: [\"sprites.jpg\"],\n\t\t * \t\t\tframes: {width:50, height:50},\n\t\t * \t\t\tanimations: {\n\t\t * \t\t\t\tstand:0,\n\t\t * \t\t\t\trun:[1,5],\n\t\t * \t\t\t\tjump:[6,8,\"run\"]\n\t\t * \t\t\t}\n\t\t * \t\t};\n\t\t * \t\tvar spriteSheet = new createjs.SpriteSheet(data);\n\t\t * \t\tvar animation = new createjs.Sprite(spriteSheet, \"run\");\n\t\t *\n\t\t * <h3>Generating SpriteSheet Images</h3>\n\t\t * Spritesheets can be created manually by combining images in PhotoShop, and specifying the frame size or\n\t\t * coordinates manually, however there are a number of tools that facilitate this.\n\t\t * <ul>\n\t\t *     <li>Exporting SpriteSheets or HTML5 content from Adobe Flash/Animate supports the EaselJS SpriteSheet format.</li>\n\t\t *     <li>The popular <a href=\"https://www.codeandweb.com/texturepacker/easeljs\" target=\"_blank\">Texture Packer</a> has\n\t\t *     EaselJS support.\n\t\t *     <li>SWF animations in Adobe Flash/Animate can be exported to SpriteSheets using <a href=\"http://createjs.com/zoe\" target=\"_blank\">Zo&euml;</a></li>\n\t\t * </ul>\n\t\t *\n\t\t * <h3>Cross Origin Issues</h3>\n\t\t * <strong>Warning:</strong> Images loaded cross-origin will throw cross-origin security errors when interacted with\n\t\t * using:\n\t\t * <ul>\n\t\t *     <li>a mouse</li>\n\t\t *     <li>methods such as {{#crossLink \"Container/getObjectUnderPoint\"}}{{/crossLink}}</li>\n\t\t *     <li>Filters (see {{#crossLink \"Filter\"}}{{/crossLink}})</li>\n\t\t *     <li>caching (see {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}})</li>\n\t\t * </ul>\n\t\t * You can get around this by setting `crossOrigin` property on your images before passing them to EaselJS, or\n\t\t * setting the `crossOrigin` property on PreloadJS' LoadQueue or LoadItems.\n\t\t *\n\t\t * \t\tvar image = new Image();\n\t\t * \t\timg.crossOrigin=\"Anonymous\";\n\t\t * \t\timg.src = \"http://server-with-CORS-support.com/path/to/image.jpg\";\n\t\t *\n\t\t * If you pass string paths to SpriteSheets, they will not work cross-origin. The server that stores the image must\n\t\t * support cross-origin requests, or this will not work. For more information, check out\n\t\t * <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS\" target=\"_blank\">CORS overview on MDN</a>.\n\t\t *\n\t\t * @class SpriteSheet\n\t\t * @constructor\n\t\t * @param {Object} data An object describing the SpriteSheet data.\n\t\t * @extends EventDispatcher\n\t\t **/\n\t\tfunction SpriteSheet(data) {\n\t\t\tthis.EventDispatcher_constructor();\n\t\n\t\n\t\t\t// public properties:\n\t\t\t/**\n\t\t\t * Indicates whether all images are finished loading.\n\t\t\t * @property complete\n\t\t\t * @type Boolean\n\t\t\t * @readonly\n\t\t\t **/\n\t\t\tthis.complete = true;\n\t\n\t\t\t/**\n\t\t\t * Specifies the framerate to use by default for Sprite instances using the SpriteSheet. See the Sprite class\n\t\t\t * {{#crossLink \"Sprite/framerate:property\"}}{{/crossLink}} for more information.\n\t\t\t * @property framerate\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis.framerate = 0;\n\t\n\t\n\t\t\t// private properties:\n\t\t\t/**\n\t\t\t * @property _animations\n\t\t\t * @protected\n\t\t\t * @type Array\n\t\t\t **/\n\t\t\tthis._animations = null;\n\t\n\t\t\t/**\n\t\t\t * @property _frames\n\t\t\t * @protected\n\t\t\t * @type Array\n\t\t\t **/\n\t\t\tthis._frames = null;\n\t\n\t\t\t/**\n\t\t\t * @property _images\n\t\t\t * @protected\n\t\t\t * @type Array\n\t\t\t **/\n\t\t\tthis._images = null;\n\t\n\t\t\t/**\n\t\t\t * @property _data\n\t\t\t * @protected\n\t\t\t * @type Object\n\t\t\t **/\n\t\t\tthis._data = null;\n\t\n\t\t\t/**\n\t\t\t * @property _loadCount\n\t\t\t * @protected\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis._loadCount = 0;\n\t\n\t\t\t// only used for simple frame defs:\n\t\t\t/**\n\t\t\t * @property _frameHeight\n\t\t\t * @protected\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis._frameHeight = 0;\n\t\n\t\t\t/**\n\t\t\t * @property _frameWidth\n\t\t\t * @protected\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis._frameWidth = 0;\n\t\n\t\t\t/**\n\t\t\t * @property _numFrames\n\t\t\t * @protected\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis._numFrames = 0;\n\t\n\t\t\t/**\n\t\t\t * @property _regX\n\t\t\t * @protected\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis._regX = 0;\n\t\n\t\t\t/**\n\t\t\t * @property _regY\n\t\t\t * @protected\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis._regY = 0;\n\t\n\t\t\t/**\n\t\t\t * @property _spacing\n\t\t\t * @protected\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis._spacing = 0;\n\t\n\t\t\t/**\n\t\t\t * @property _margin\n\t\t\t * @protected\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis._margin = 0;\n\t\n\t\t\t// setup:\n\t\t\tthis._parseData(data);\n\t\t}\n\t\tvar p = createjs.extend(SpriteSheet, createjs.EventDispatcher);\n\t\n\t\t// TODO: deprecated\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\n\t\n\t// events:\n\t\t/**\n\t\t * Dispatched when all images are loaded.  Note that this only fires if the images\n\t\t * were not fully loaded when the sprite sheet was initialized. You should check the complete property\n\t\t * to prior to adding a listener. Ex.\n\t\t *\n\t\t * \tvar sheet = new createjs.SpriteSheet(data);\n\t\t * \tif (!sheet.complete) {\n\t\t * \t\t// not preloaded, listen for the complete event:\n\t\t * \t\tsheet.addEventListener(\"complete\", handler);\n\t\t * \t}\n\t\t *\n\t\t * @event complete\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @since 0.6.0\n\t\t */\n\t\n\t\t/**\n\t\t * Dispatched when getFrame is called with a valid frame index. This is primarily intended for use by {{#crossLink \"SpriteSheetBuilder\"}}{{/crossLink}}\n\t\t * when doing on-demand rendering.\n\t\t * @event getframe\n\t\t * @param {Number} index The frame index.\n\t\t * @param {Object} frame The frame object that getFrame will return.\n\t\t */\n\t\n\t\t/**\n\t\t * Dispatched when an image encounters an error. A SpriteSheet will dispatch an error event for each image that\n\t\t * encounters an error, and will still dispatch a {{#crossLink \"SpriteSheet/complete:event\"}}{{/crossLink}}\n\t\t * event once all images are finished processing, even if an error is encountered.\n\t\t * @event error\n\t\t * @param {String} src The source of the image that failed to load.\n\t\t * @since 0.8.2\n\t\t */\n\t\n\t\n\t// getter / setters:\n\t\t/**\n\t\t * Use the {{#crossLink \"SpriteSheet/animations:property\"}}{{/crossLink}} property instead.\n\t\t * @method getAnimations\n\t\t * @return {Array}\n\t\t * @deprecated\n\t\t **/\n\t\tp.getAnimations = function() {\n\t\t\treturn this._animations.slice();\n\t\t};\n\t\n\t\t/**\n\t\t * Returns an array of all available animation names available on this sprite sheet as strings.\n\t\t * @property animations\n\t\t * @type {Array}\n\t\t * @readonly\n\t\t **/\n\t\ttry {\n\t\t\tObject.defineProperties(p, {\n\t\t\t\tanimations: { get: p.getAnimations }\n\t\t\t});\n\t\t} catch (e) {}\n\t\n\t\n\t// public methods:\n\t\t/**\n\t\t * Returns the total number of frames in the specified animation, or in the whole sprite\n\t\t * sheet if the animation param is omitted. Returns 0 if the spritesheet relies on calculated frame counts, and\n\t\t * the images have not been fully loaded.\n\t\t * @method getNumFrames\n\t\t * @param {String} animation The name of the animation to get a frame count for.\n\t\t * @return {Number} The number of frames in the animation, or in the entire sprite sheet if the animation param is omitted.\n\t\t */\n\t\tp.getNumFrames = function(animation) {\n\t\t\tif (animation == null) {\n\t\t\t\treturn this._frames ? this._frames.length : this._numFrames || 0;\n\t\t\t} else {\n\t\t\t\tvar data = this._data[animation];\n\t\t\t\tif (data == null) { return 0; }\n\t\t\t\telse { return data.frames.length; }\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Returns an object defining the specified animation. The returned object contains:<UL>\n\t\t * \t<li>frames: an array of the frame ids in the animation</li>\n\t\t * \t<li>speed: the playback speed for this animation</li>\n\t\t * \t<li>name: the name of the animation</li>\n\t\t * \t<li>next: the default animation to play next. If the animation loops, the name and next property will be the\n\t\t * \tsame.</li>\n\t\t * </UL>\n\t\t * @method getAnimation\n\t\t * @param {String} name The name of the animation to get.\n\t\t * @return {Object} a generic object with frames, speed, name, and next properties.\n\t\t **/\n\t\tp.getAnimation = function(name) {\n\t\t\treturn this._data[name];\n\t\t};\n\t\n\t\t/**\n\t\t * Returns an object specifying the image and source rect of the specified frame. The returned object has:<UL>\n\t\t * \t<li>an image property holding a reference to the image object in which the frame is found</li>\n\t\t * \t<li>a rect property containing a Rectangle instance which defines the boundaries for the frame within that\n\t\t * \timage.</li>\n\t\t * \t<li> A regX and regY property corresponding to the regX/Y values for the frame.\n\t\t * </UL>\n\t\t * @method getFrame\n\t\t * @param {Number} frameIndex The index of the frame.\n\t\t * @return {Object} a generic object with image and rect properties. Returns null if the frame does not exist.\n\t\t **/\n\t\tp.getFrame = function(frameIndex) {\n\t\t\tvar frame;\n\t\t\tif (this._frames && (frame=this._frames[frameIndex])) { return frame; }\n\t\t\treturn null;\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the specified frame relative\n\t\t * to the origin. For example, a 90 x 70 frame with a regX of 50 and a regY of 40 would return:\n\t\t *\n\t\t * \t[x=-50, y=-40, width=90, height=70]\n\t\t *\n\t\t * @method getFrameBounds\n\t\t * @param {Number} frameIndex The index of the frame.\n\t\t * @param {Rectangle} [rectangle] A Rectangle instance to copy the values into. By default a new instance is created.\n\t\t * @return {Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully loaded.\n\t\t **/\n\t\tp.getFrameBounds = function(frameIndex, rectangle) {\n\t\t\tvar frame = this.getFrame(frameIndex);\n\t\t\treturn frame ? (rectangle||new createjs.Rectangle()).setValues(-frame.regX, -frame.regY, frame.rect.width, frame.rect.height) : null;\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a string representation of this object.\n\t\t * @method toString\n\t\t * @return {String} a string representation of the instance.\n\t\t **/\n\t\tp.toString = function() {\n\t\t\treturn \"[SpriteSheet]\";\n\t\t};\n\t\n\t\t/**\n\t\t * SpriteSheet cannot be cloned. A SpriteSheet can be shared by multiple Sprite instances without cloning it.\n\t\t * @method clone\n\t\t **/\n\t\tp.clone = function() {\n\t\t\tthrow(\"SpriteSheet cannot be cloned.\")\n\t\t};\n\t\n\t// private methods:\n\t\t/**\n\t\t * @method _parseData\n\t\t * @param {Object} data An object describing the SpriteSheet data.\n\t\t * @protected\n\t\t **/\n\t\tp._parseData = function(data) {\n\t\t\tvar i,l,o,a;\n\t\t\tif (data == null) { return; }\n\t\n\t\t\tthis.framerate = data.framerate||0;\n\t\n\t\t\t// parse images:\n\t\t\tif (data.images && (l=data.images.length) > 0) {\n\t\t\t\ta = this._images = [];\n\t\t\t\tfor (i=0; i<l; i++) {\n\t\t\t\t\tvar img = data.images[i];\n\t\t\t\t\tif (typeof img == \"string\") {\n\t\t\t\t\t\tvar src = img;\n\t\t\t\t\t\timg = document.createElement(\"img\");\n\t\t\t\t\t\timg.src = src;\n\t\t\t\t\t}\n\t\t\t\t\ta.push(img);\n\t\t\t\t\tif (!img.getContext && !img.naturalWidth) {\n\t\t\t\t\t\tthis._loadCount++;\n\t\t\t\t\t\tthis.complete = false;\n\t\t\t\t\t\t(function(o, src) { img.onload = function() { o._handleImageLoad(src); } })(this, src);\n\t\t\t\t\t\t(function(o, src) { img.onerror = function() { o._handleImageError(src); } })(this, src);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// parse frames:\n\t\t\tif (data.frames == null) { // nothing\n\t\t\t} else if (Array.isArray(data.frames)) {\n\t\t\t\tthis._frames = [];\n\t\t\t\ta = data.frames;\n\t\t\t\tfor (i=0,l=a.length;i<l;i++) {\n\t\t\t\t\tvar arr = a[i];\n\t\t\t\t\tthis._frames.push({image:this._images[arr[4]?arr[4]:0], rect:new createjs.Rectangle(arr[0],arr[1],arr[2],arr[3]), regX:arr[5]||0, regY:arr[6]||0 });\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\to = data.frames;\n\t\t\t\tthis._frameWidth = o.width;\n\t\t\t\tthis._frameHeight = o.height;\n\t\t\t\tthis._regX = o.regX||0;\n\t\t\t\tthis._regY = o.regY||0;\n\t\t\t\tthis._spacing = o.spacing||0;\n\t\t\t\tthis._margin = o.margin||0;\n\t\t\t\tthis._numFrames = o.count;\n\t\t\t\tif (this._loadCount == 0) { this._calculateFrames(); }\n\t\t\t}\n\t\n\t\t\t// parse animations:\n\t\t\tthis._animations = [];\n\t\t\tif ((o=data.animations) != null) {\n\t\t\t\tthis._data = {};\n\t\t\t\tvar name;\n\t\t\t\tfor (name in o) {\n\t\t\t\t\tvar anim = {name:name};\n\t\t\t\t\tvar obj = o[name];\n\t\t\t\t\tif (typeof obj == \"number\") { // single frame\n\t\t\t\t\t\ta = anim.frames = [obj];\n\t\t\t\t\t} else if (Array.isArray(obj)) { // simple\n\t\t\t\t\t\tif (obj.length == 1) { anim.frames = [obj[0]]; }\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tanim.speed = obj[3];\n\t\t\t\t\t\t\tanim.next = obj[2];\n\t\t\t\t\t\t\ta = anim.frames = [];\n\t\t\t\t\t\t\tfor (i=obj[0];i<=obj[1];i++) {\n\t\t\t\t\t\t\t\ta.push(i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { // complex\n\t\t\t\t\t\tanim.speed = obj.speed;\n\t\t\t\t\t\tanim.next = obj.next;\n\t\t\t\t\t\tvar frames = obj.frames;\n\t\t\t\t\t\ta = anim.frames = (typeof frames == \"number\") ? [frames] : frames.slice(0);\n\t\t\t\t\t}\n\t\t\t\t\tif (anim.next === true || anim.next === undefined) { anim.next = name; } // loop\n\t\t\t\t\tif (anim.next === false || (a.length < 2 && anim.next == name)) { anim.next = null; } // stop\n\t\t\t\t\tif (!anim.speed) { anim.speed = 1; }\n\t\t\t\t\tthis._animations.push(name);\n\t\t\t\t\tthis._data[name] = anim;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * @method _handleImageLoad\n\t\t * @protected\n\t\t **/\n\t\tp._handleImageLoad = function(src) {\n\t\t\tif (--this._loadCount == 0) {\n\t\t\t\tthis._calculateFrames();\n\t\t\t\tthis.complete = true;\n\t\t\t\tthis.dispatchEvent(\"complete\");\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * @method _handleImageError\n\t\t * @protected\n\t\t */\n\t\tp._handleImageError = function (src) {\n\t\t\tvar errorEvent = new createjs.Event(\"error\");\n\t\t\terrorEvent.src = src;\n\t\t\tthis.dispatchEvent(errorEvent);\n\t\n\t\t\t// Complete is still dispatched.\n\t\t\tif (--this._loadCount == 0) {\n\t\t\t\tthis.dispatchEvent(\"complete\");\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * @method _calculateFrames\n\t\t * @protected\n\t\t **/\n\t\tp._calculateFrames = function() {\n\t\t\tif (this._frames || this._frameWidth == 0) { return; }\n\t\n\t\t\tthis._frames = [];\n\t\n\t\t\tvar maxFrames = this._numFrames || 100000; // if we go over this, something is wrong.\n\t\t\tvar frameCount = 0, frameWidth = this._frameWidth, frameHeight = this._frameHeight;\n\t\t\tvar spacing = this._spacing, margin = this._margin;\n\t\t\t\n\t\t\timgLoop:\n\t\t\tfor (var i=0, imgs=this._images; i<imgs.length; i++) {\n\t\t\t\tvar img = imgs[i], imgW = img.width, imgH = img.height;\n\t\n\t\t\t\tvar y = margin;\n\t\t\t\twhile (y <= imgH-margin-frameHeight) {\n\t\t\t\t\tvar x = margin;\n\t\t\t\t\twhile (x <= imgW-margin-frameWidth) {\n\t\t\t\t\t\tif (frameCount >= maxFrames) { break imgLoop; }\n\t\t\t\t\t\tframeCount++;\n\t\t\t\t\t\tthis._frames.push({\n\t\t\t\t\t\t\t\timage: img,\n\t\t\t\t\t\t\t\trect: new createjs.Rectangle(x, y, frameWidth, frameHeight),\n\t\t\t\t\t\t\t\tregX: this._regX,\n\t\t\t\t\t\t\t\tregY: this._regY\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tx += frameWidth+spacing;\n\t\t\t\t\t}\n\t\t\t\t\ty += frameHeight+spacing;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._numFrames = frameCount;\n\t\t};\n\t\n\t\n\t\tcreatejs.SpriteSheet = createjs.promote(SpriteSheet, \"EventDispatcher\");\n\t}());\n\t\n\t//##############################################################################\n\t// Graphics.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t\t * The Graphics class exposes an easy to use API for generating vector drawing instructions and drawing them to a\n\t\t * specified context. Note that you can use Graphics without any dependency on the EaselJS framework by calling {{#crossLink \"Graphics/draw\"}}{{/crossLink}}\n\t\t * directly, or it can be used with the {{#crossLink \"Shape\"}}{{/crossLink}} object to draw vector graphics within the\n\t\t * context of an EaselJS display list.\n\t\t *\n\t\t * There are two approaches to working with Graphics object: calling methods on a Graphics instance (the \"Graphics API\"), or\n\t\t * instantiating Graphics command objects and adding them to the graphics queue via {{#crossLink \"Graphics/append\"}}{{/crossLink}}.\n\t\t * The former abstracts the latter, simplifying beginning and ending paths, fills, and strokes.\n\t\t *\n\t\t *      var g = new createjs.Graphics();\n\t\t *      g.setStrokeStyle(1);\n\t\t *      g.beginStroke(\"#000000\");\n\t\t *      g.beginFill(\"red\");\n\t\t *      g.drawCircle(0,0,30);\n\t\t *\n\t\t * All drawing methods in Graphics return the Graphics instance, so they can be chained together. For example,\n\t\t * the following line of code would generate the instructions to draw a rectangle with a red stroke and blue fill:\n\t\t *\n\t\t *      myGraphics.beginStroke(\"red\").beginFill(\"blue\").drawRect(20, 20, 100, 50);\n\t\t *\n\t\t * Each graphics API call generates a command object (see below). The last command to be created can be accessed via\n\t\t * {{#crossLink \"Graphics/command:property\"}}{{/crossLink}}:\n\t\t *\n\t\t *      var fillCommand = myGraphics.beginFill(\"red\").command;\n\t\t *      // ... later, update the fill style/color:\n\t\t *      fillCommand.style = \"blue\";\n\t\t *      // or change it to a bitmap fill:\n\t\t *      fillCommand.bitmap(myImage);\n\t\t *\n\t\t * For more direct control of rendering, you can instantiate and append command objects to the graphics queue directly. In this case, you\n\t\t * need to manage path creation manually, and ensure that fill/stroke is applied to a defined path:\n\t\t *\n\t\t *      // start a new path. Graphics.beginCmd is a reusable BeginPath instance:\n\t\t *      myGraphics.append(createjs.Graphics.beginCmd);\n\t\t *      // we need to define the path before applying the fill:\n\t\t *      var circle = new createjs.Graphics.Circle(0,0,30);\n\t\t *      myGraphics.append(circle);\n\t\t *      // fill the path we just defined:\n\t\t *      var fill = new createjs.Graphics.Fill(\"red\");\n\t\t *      myGraphics.append(fill);\n\t\t *\n\t\t * These approaches can be used together, for example to insert a custom command:\n\t\t *\n\t\t *      myGraphics.beginFill(\"red\");\n\t\t *      var customCommand = new CustomSpiralCommand(etc);\n\t\t *      myGraphics.append(customCommand);\n\t\t *      myGraphics.beginFill(\"blue\");\n\t\t *      myGraphics.drawCircle(0, 0, 30);\n\t\t *\n\t\t * See {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more info on creating custom commands.\n\t\t *\n\t\t * <h4>Tiny API</h4>\n\t\t * The Graphics class also includes a \"tiny API\", which is one or two-letter methods that are shortcuts for all of the\n\t\t * Graphics methods. These methods are great for creating compact instructions, and is used by the Toolkit for CreateJS\n\t\t * to generate readable code. All tiny methods are marked as protected, so you can view them by enabling protected\n\t\t * descriptions in the docs.\n\t\t *\n\t\t * <table>\n\t\t *     <tr><td><b>Tiny</b></td><td><b>Method</b></td><td><b>Tiny</b></td><td><b>Method</b></td></tr>\n\t\t *     <tr><td>mt</td><td>{{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} </td>\n\t\t *     <td>lt</td> <td>{{#crossLink \"Graphics/lineTo\"}}{{/crossLink}}</td></tr>\n\t\t *     <tr><td>a/at</td><td>{{#crossLink \"Graphics/arc\"}}{{/crossLink}} / {{#crossLink \"Graphics/arcTo\"}}{{/crossLink}} </td>\n\t\t *     <td>bt</td><td>{{#crossLink \"Graphics/bezierCurveTo\"}}{{/crossLink}} </td></tr>\n\t\t *     <tr><td>qt</td><td>{{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} (also curveTo)</td>\n\t\t *     <td>r</td><td>{{#crossLink \"Graphics/rect\"}}{{/crossLink}} </td></tr>\n\t\t *     <tr><td>cp</td><td>{{#crossLink \"Graphics/closePath\"}}{{/crossLink}} </td>\n\t\t *     <td>c</td><td>{{#crossLink \"Graphics/clear\"}}{{/crossLink}} </td></tr>\n\t\t *     <tr><td>f</td><td>{{#crossLink \"Graphics/beginFill\"}}{{/crossLink}} </td>\n\t\t *     <td>lf</td><td>{{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} </td></tr>\n\t\t *     <tr><td>rf</td><td>{{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} </td>\n\t\t *     <td>bf</td><td>{{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} </td></tr>\n\t\t *     <tr><td>ef</td><td>{{#crossLink \"Graphics/endFill\"}}{{/crossLink}} </td>\n\t\t *     <td>ss / sd</td><td>{{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} / {{#crossLink \"Graphics/setStrokeDash\"}}{{/crossLink}} </td></tr>\n\t\t *     <tr><td>s</td><td>{{#crossLink \"Graphics/beginStroke\"}}{{/crossLink}} </td>\n\t\t *     <td>ls</td><td>{{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} </td></tr>\n\t\t *     <tr><td>rs</td><td>{{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} </td>\n\t\t *     <td>bs</td><td>{{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} </td></tr>\n\t\t *     <tr><td>es</td><td>{{#crossLink \"Graphics/endStroke\"}}{{/crossLink}} </td>\n\t\t *     <td>dr</td><td>{{#crossLink \"Graphics/drawRect\"}}{{/crossLink}} </td></tr>\n\t\t *     <tr><td>rr</td><td>{{#crossLink \"Graphics/drawRoundRect\"}}{{/crossLink}} </td>\n\t\t *     <td>rc</td><td>{{#crossLink \"Graphics/drawRoundRectComplex\"}}{{/crossLink}} </td></tr>\n\t\t *     <tr><td>dc</td><td>{{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}} </td>\n\t\t *     <td>de</td><td>{{#crossLink \"Graphics/drawEllipse\"}}{{/crossLink}} </td></tr>\n\t\t *     <tr><td>dp</td><td>{{#crossLink \"Graphics/drawPolyStar\"}}{{/crossLink}} </td>\n\t\t *     <td>p</td><td>{{#crossLink \"Graphics/decodePath\"}}{{/crossLink}} </td></tr>\n\t\t * </table>\n\t\t *\n\t\t * Here is the above example, using the tiny API instead.\n\t\t *\n\t\t *      myGraphics.s(\"red\").f(\"blue\").r(20, 20, 100, 50);\n\t\t *\n\t\t * @class Graphics\n\t\t * @constructor\n\t\t **/\n\t\tfunction Graphics() {\n\t\n\t\n\t\t// public properties\n\t\t\t/**\n\t\t\t * Holds a reference to the last command that was created or appended. For example, you could retain a reference\n\t\t\t * to a Fill command in order to dynamically update the color later by using:\n\t\t\t *\n\t\t\t * \t\tvar myFill = myGraphics.beginFill(\"red\").command;\n\t\t\t * \t\t// update color later:\n\t\t\t * \t\tmyFill.style = \"yellow\";\n\t\t\t *\n\t\t\t * @property command\n\t\t\t * @type Object\n\t\t\t **/\n\t\t\tthis.command = null;\n\t\n\t\n\t\t// private properties\n\t\t\t/**\n\t\t\t * @property _stroke\n\t\t\t * @protected\n\t\t\t * @type {Stroke}\n\t\t\t **/\n\t\t\tthis._stroke = null;\n\t\n\t\t\t/**\n\t\t\t * @property _strokeStyle\n\t\t\t * @protected\n\t\t\t * @type {StrokeStyle}\n\t\t\t **/\n\t\t\tthis._strokeStyle = null;\n\t\t\t\n\t\t\t/**\n\t\t\t * @property _oldStrokeStyle\n\t\t\t * @protected\n\t\t\t * @type {StrokeStyle}\n\t\t\t **/\n\t\t\tthis._oldStrokeStyle = null;\n\t\t\t\n\t\t\t/**\n\t\t\t * @property _strokeDash\n\t\t\t * @protected\n\t\t\t * @type {StrokeDash}\n\t\t\t **/\n\t\t\tthis._strokeDash = null;\n\t\t\t\n\t\t\t/**\n\t\t\t * @property _oldStrokeDash\n\t\t\t * @protected\n\t\t\t * @type {StrokeDash}\n\t\t\t **/\n\t\t\tthis._oldStrokeDash = null;\n\t\n\t\t\t/**\n\t\t\t * @property _strokeIgnoreScale\n\t\t\t * @protected\n\t\t\t * @type Boolean\n\t\t\t **/\n\t\t\tthis._strokeIgnoreScale = false;\n\t\n\t\t\t/**\n\t\t\t * @property _fill\n\t\t\t * @protected\n\t\t\t * @type {Fill}\n\t\t\t **/\n\t\t\tthis._fill = null;\n\t\n\t\t\t/**\n\t\t\t * @property _instructions\n\t\t\t * @protected\n\t\t\t * @type {Array}\n\t\t\t **/\n\t\t\tthis._instructions = [];\n\t\n\t\t\t/**\n\t\t\t * Indicates the last instruction index that was committed.\n\t\t\t * @property _commitIndex\n\t\t\t * @protected\n\t\t\t * @type {Number}\n\t\t\t **/\n\t\t\tthis._commitIndex = 0;\n\t\n\t\t\t/**\n\t\t\t * Uncommitted instructions.\n\t\t\t * @property _activeInstructions\n\t\t\t * @protected\n\t\t\t * @type {Array}\n\t\t\t **/\n\t\t\tthis._activeInstructions = [];\n\t\n\t\t\t/**\n\t\t\t * This indicates that there have been changes to the activeInstruction list since the last updateInstructions call.\n\t\t\t * @property _dirty\n\t\t\t * @protected\n\t\t\t * @type {Boolean}\n\t\t\t * @default false\n\t\t\t **/\n\t\t\tthis._dirty = false;\n\t\n\t\t\t/**\n\t\t\t * Index to draw from if a store operation has happened.\n\t\t\t * @property _storeIndex\n\t\t\t * @protected\n\t\t\t * @type {Number}\n\t\t\t * @default 0\n\t\t\t **/\n\t\t\tthis._storeIndex = 0;\n\t\n\t\t// setup:\n\t\t\tthis.clear();\n\t\t}\n\t\tvar p = Graphics.prototype;\n\t\tvar G = Graphics; // shortcut\n\t\n\t\t/**\n\t\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t\t * for details.\n\t\t *\n\t\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t\t *\n\t\t * @method initialize\n\t\t * @protected\n\t\t * @deprecated\n\t\t */\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\t\n\t\n\t// static public methods:\n\t\t/**\n\t\t * Returns a CSS compatible color string based on the specified RGB numeric color values in the format\n\t\t * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\". For example,\n\t\t *\n\t\t *      createjs.Graphics.getRGB(50, 100, 150, 0.5);\n\t\t *      // Returns \"rgba(50,100,150,0.5)\"\n\t\t *\n\t\t * It also supports passing a single hex color value as the first param, and an optional alpha value as the second\n\t\t * param. For example,\n\t\t *\n\t\t *      createjs.Graphics.getRGB(0xFF00FF, 0.2);\n\t\t *      // Returns \"rgba(255,0,255,0.2)\"\n\t\t *\n\t\t * @method getRGB\n\t\t * @static\n\t\t * @param {Number} r The red component for the color, between 0 and 0xFF (255).\n\t\t * @param {Number} g The green component for the color, between 0 and 0xFF (255).\n\t\t * @param {Number} b The blue component for the color, between 0 and 0xFF (255).\n\t\t * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n\t\t * @return {String} A CSS compatible color string based on the specified RGB numeric color values in the format\n\t\t * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\".\n\t\t **/\n\t\tGraphics.getRGB = function(r, g, b, alpha) {\n\t\t\tif (r != null && b == null) {\n\t\t\t\talpha = g;\n\t\t\t\tb = r&0xFF;\n\t\t\t\tg = r>>8&0xFF;\n\t\t\t\tr = r>>16&0xFF;\n\t\t\t}\n\t\t\tif (alpha == null) {\n\t\t\t\treturn \"rgb(\"+r+\",\"+g+\",\"+b+\")\";\n\t\t\t} else {\n\t\t\t\treturn \"rgba(\"+r+\",\"+g+\",\"+b+\",\"+alpha+\")\";\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a CSS compatible color string based on the specified HSL numeric color values in the format \"hsla(360,100,100,1.0)\",\n\t\t * or if alpha is null then in the format \"hsl(360,100,100)\".\n\t\t *\n\t\t *      createjs.Graphics.getHSL(150, 100, 70);\n\t\t *      // Returns \"hsl(150,100,70)\"\n\t\t *\n\t\t * @method getHSL\n\t\t * @static\n\t\t * @param {Number} hue The hue component for the color, between 0 and 360.\n\t\t * @param {Number} saturation The saturation component for the color, between 0 and 100.\n\t\t * @param {Number} lightness The lightness component for the color, between 0 and 100.\n\t\t * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n\t\t * @return {String} A CSS compatible color string based on the specified HSL numeric color values in the format\n\t\t * \"hsla(360,100,100,1.0)\", or if alpha is null then in the format \"hsl(360,100,100)\".\n\t\t **/\n\t\tGraphics.getHSL = function(hue, saturation, lightness, alpha) {\n\t\t\tif (alpha == null) {\n\t\t\t\treturn \"hsl(\"+(hue%360)+\",\"+saturation+\"%,\"+lightness+\"%)\";\n\t\t\t} else {\n\t\t\t\treturn \"hsla(\"+(hue%360)+\",\"+saturation+\"%,\"+lightness+\"%,\"+alpha+\")\";\n\t\t\t}\n\t\t};\n\t\n\t\n\t// static properties:\n\t\t/**\n\t\t * A reusable instance of {{#crossLink \"Graphics/BeginPath\"}}{{/crossLink}} to avoid\n\t\t * unnecessary instantiation.\n\t\t * @property beginCmd\n\t\t * @type {Graphics.BeginPath}\n\t\t * @static\n\t\t **/\n\t\t // defined at the bottom of this file.\n\t\n\t\t/**\n\t\t * Map of Base64 characters to values. Used by {{#crossLink \"Graphics/decodePath\"}}{{/crossLink}}.\n\t\t * @property BASE_64\n\t\t * @static\n\t\t * @final\n\t\t * @readonly\n\t\t * @type {Object}\n\t\t **/\n\t\tGraphics.BASE_64 = {\"A\":0,\"B\":1,\"C\":2,\"D\":3,\"E\":4,\"F\":5,\"G\":6,\"H\":7,\"I\":8,\"J\":9,\"K\":10,\"L\":11,\"M\":12,\"N\":13,\"O\":14,\"P\":15,\"Q\":16,\"R\":17,\"S\":18,\"T\":19,\"U\":20,\"V\":21,\"W\":22,\"X\":23,\"Y\":24,\"Z\":25,\"a\":26,\"b\":27,\"c\":28,\"d\":29,\"e\":30,\"f\":31,\"g\":32,\"h\":33,\"i\":34,\"j\":35,\"k\":36,\"l\":37,\"m\":38,\"n\":39,\"o\":40,\"p\":41,\"q\":42,\"r\":43,\"s\":44,\"t\":45,\"u\":46,\"v\":47,\"w\":48,\"x\":49,\"y\":50,\"z\":51,\"0\":52,\"1\":53,\"2\":54,\"3\":55,\"4\":56,\"5\":57,\"6\":58,\"7\":59,\"8\":60,\"9\":61,\"+\":62,\"/\":63};\n\t\n\t\t/**\n\t\t * Maps numeric values for the caps parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\n\t\t * corresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n\t\t * \"butt\", 1 to \"round\", and 2 to \"square\".\n\t\t * For example, to set the line caps to \"square\":\n\t\t *\n\t\t *      myGraphics.ss(16, 2);\n\t\t *\n\t\t * @property STROKE_CAPS_MAP\n\t\t * @static\n\t\t * @final\n\t\t * @readonly\n\t\t * @type {Array}\n\t\t **/\n\t\tGraphics.STROKE_CAPS_MAP = [\"butt\", \"round\", \"square\"];\n\t\n\t\t/**\n\t\t * Maps numeric values for the joints parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\n\t\t * corresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n\t\t * \"miter\", 1 to \"round\", and 2 to \"bevel\".\n\t\t * For example, to set the line joints to \"bevel\":\n\t\t *\n\t\t *      myGraphics.ss(16, 0, 2);\n\t\t *\n\t\t * @property STROKE_JOINTS_MAP\n\t\t * @static\n\t\t * @final\n\t\t * @readonly\n\t\t * @type {Array}\n\t\t **/\n\t\tGraphics.STROKE_JOINTS_MAP = [\"miter\", \"round\", \"bevel\"];\n\t\n\t\t/**\n\t\t * @property _ctx\n\t\t * @static\n\t\t * @protected\n\t\t * @type {CanvasRenderingContext2D}\n\t\t **/\n\t\tvar canvas = (createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"));\n\t\tif (canvas.getContext) {\n\t\t\tGraphics._ctx = canvas.getContext(\"2d\");\n\t\t\tcanvas.width = canvas.height = 1;\n\t\t}\n\t\n\t\n\t// getter / setters:\n\t\t/**\n\t\t * Use the {{#crossLink \"Graphics/instructions:property\"}}{{/crossLink}} property instead.\n\t\t * @method getInstructions\n\t\t * @return {Array}\n\t\t * @deprecated\n\t\t **/\n\t\tp.getInstructions = function() {\n\t\t\tthis._updateInstructions();\n\t\t\treturn this._instructions;\n\t\t};\n\t\n\t\t/**\n\t\t * Returns the graphics instructions array. Each entry is a graphics command object (ex. Graphics.Fill, Graphics.Rect)\n\t\t * Modifying the returned array directly is not recommended, and is likely to result in unexpected behaviour.\n\t\t *\n\t\t * This property is mainly intended for introspection of the instructions (ex. for graphics export).\n\t\t * @property instructions\n\t\t * @type {Array}\n\t\t * @readonly\n\t\t **/\n\t\ttry {\n\t\t\tObject.defineProperties(p, {\n\t\t\t\tinstructions: { get: p.getInstructions }\n\t\t\t});\n\t\t} catch (e) {}\n\t\n\t\n\t// public methods:\n\t\t/**\n\t\t * Returns true if this Graphics instance has no drawing commands.\n\t\t * @method isEmpty\n\t\t * @return {Boolean} Returns true if this Graphics instance has no drawing commands.\n\t\t **/\n\t\tp.isEmpty = function() {\n\t\t\treturn !(this._instructions.length || this._activeInstructions.length);\n\t\t};\n\t\n\t\t/**\n\t\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t\t * Returns true if the draw was handled (useful for overriding functionality).\n\t\t *\n\t\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t\t * @method draw\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t\t * @param {Object} data Optional data that is passed to graphics command exec methods. When called from a Shape instance, the shape passes itself as the data parameter. This can be used by custom graphic commands to insert contextual data.\n\t\t **/\n\t\tp.draw = function(ctx, data) {\n\t\t\tthis._updateInstructions();\n\t\t\tvar instr = this._instructions;\n\t\t\tfor (var i=this._storeIndex, l=instr.length; i<l; i++) {\n\t\t\t\tinstr[i].exec(ctx, data);\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Draws only the path described for this Graphics instance, skipping any non-path instructions, including fill and\n\t\t * stroke descriptions. Used for <code>DisplayObject.mask</code> to draw the clipping path, for example.\n\t\t *\n\t\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t\t * @method drawAsPath\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t\t **/\n\t\tp.drawAsPath = function(ctx) {\n\t\t\tthis._updateInstructions();\n\t\t\tvar instr, instrs = this._instructions;\n\t\t\tfor (var i=this._storeIndex, l=instrs.length; i<l; i++) {\n\t\t\t\t// the first command is always a beginPath command.\n\t\t\t\tif ((instr = instrs[i]).path !== false) { instr.exec(ctx); }\n\t\t\t}\n\t\t};\n\t\n\t\n\t// public methods that map directly to context 2D calls:\n\t\t/**\n\t\t * Moves the drawing point to the specified position. A tiny API method \"mt\" also exists.\n\t\t * @method moveTo\n\t\t * @param {Number} x The x coordinate the drawing point should move to.\n\t\t * @param {Number} y The y coordinate the drawing point should move to.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls).\n\t\t * @chainable\n\t\t **/\n\t\tp.moveTo = function(x, y) {\n\t\t\treturn this.append(new G.MoveTo(x,y), true);\n\t\t};\n\t\n\t\t/**\n\t\t * Draws a line from the current drawing point to the specified position, which become the new current drawing\n\t\t * point. Note that you *must* call {{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} before the first `lineTo()`.\n\t\t * A tiny API method \"lt\" also exists.\n\t\t *\n\t\t * For detailed information, read the\n\t\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#complex-shapes-(paths)\">\n\t\t * whatwg spec</a>.\n\t\t * @method lineTo\n\t\t * @param {Number} x The x coordinate the drawing point should draw to.\n\t\t * @param {Number} y The y coordinate the drawing point should draw to.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.lineTo = function(x, y) {\n\t\t\treturn this.append(new G.LineTo(x,y));\n\t\t};\n\t\n\t\t/**\n\t\t * Draws an arc with the specified control points and radius.  For detailed information, read the\n\t\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arcto\">\n\t\t * whatwg spec</a>. A tiny API method \"at\" also exists.\n\t\t * @method arcTo\n\t\t * @param {Number} x1\n\t\t * @param {Number} y1\n\t\t * @param {Number} x2\n\t\t * @param {Number} y2\n\t\t * @param {Number} radius\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.arcTo = function(x1, y1, x2, y2, radius) {\n\t\t\treturn this.append(new G.ArcTo(x1, y1, x2, y2, radius));\n\t\t};\n\t\n\t\t/**\n\t\t * Draws an arc defined by the radius, startAngle and endAngle arguments, centered at the position (x, y). For\n\t\t * example, to draw a full circle with a radius of 20 centered at (100, 100):\n\t\t *\n\t\t *      arc(100, 100, 20, 0, Math.PI*2);\n\t\t *\n\t\t * For detailed information, read the\n\t\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arc\">whatwg spec</a>.\n\t\t * A tiny API method \"a\" also exists.\n\t\t * @method arc\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} radius\n\t\t * @param {Number} startAngle Measured in radians.\n\t\t * @param {Number} endAngle Measured in radians.\n\t\t * @param {Boolean} anticlockwise\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.arc = function(x, y, radius, startAngle, endAngle, anticlockwise) {\n\t\t\treturn this.append(new G.Arc(x, y, radius, startAngle, endAngle, anticlockwise));\n\t\t};\n\t\n\t\t/**\n\t\t * Draws a quadratic curve from the current drawing point to (x, y) using the control point (cpx, cpy). For detailed\n\t\t * information, read the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-quadraticcurveto\">\n\t\t * whatwg spec</a>. A tiny API method \"qt\" also exists.\n\t\t * @method quadraticCurveTo\n\t\t * @param {Number} cpx\n\t\t * @param {Number} cpy\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.quadraticCurveTo = function(cpx, cpy, x, y) {\n\t\t\treturn this.append(new G.QuadraticCurveTo(cpx, cpy, x, y));\n\t\t};\n\t\n\t\t/**\n\t\t * Draws a bezier curve from the current drawing point to (x, y) using the control points (cp1x, cp1y) and (cp2x,\n\t\t * cp2y). For detailed information, read the\n\t\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-beziercurveto\">\n\t\t * whatwg spec</a>. A tiny API method \"bt\" also exists.\n\t\t * @method bezierCurveTo\n\t\t * @param {Number} cp1x\n\t\t * @param {Number} cp1y\n\t\t * @param {Number} cp2x\n\t\t * @param {Number} cp2y\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.bezierCurveTo = function(cp1x, cp1y, cp2x, cp2y, x, y) {\n\t\t\treturn this.append(new G.BezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y));\n\t\t};\n\t\n\t\t/**\n\t\t * Draws a rectangle at (x, y) with the specified width and height using the current fill and/or stroke.\n\t\t * For detailed information, read the\n\t\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-rect\">\n\t\t * whatwg spec</a>. A tiny API method \"r\" also exists.\n\t\t * @method rect\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} w Width of the rectangle\n\t\t * @param {Number} h Height of the rectangle\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.rect = function(x, y, w, h) {\n\t\t\treturn this.append(new G.Rect(x, y, w, h));\n\t\t};\n\t\n\t\t/**\n\t\t * Closes the current path, effectively drawing a line from the current drawing point to the first drawing point specified\n\t\t * since the fill or stroke was last set. A tiny API method \"cp\" also exists.\n\t\t * @method closePath\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.closePath = function() {\n\t\t\treturn this._activeInstructions.length ? this.append(new G.ClosePath()) : this;\n\t\t};\n\t\n\t\n\t// public methods that roughly map to Adobe Flash/Animate graphics APIs:\n\t\t/**\n\t\t * Clears all drawing instructions, effectively resetting this Graphics instance. Any line and fill styles will need\n\t\t * to be redefined to draw shapes following a clear call. A tiny API method \"c\" also exists.\n\t\t * @method clear\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.clear = function() {\n\t\t\tthis._instructions.length = this._activeInstructions.length = this._commitIndex = 0;\n\t\t\tthis._strokeStyle = this._oldStrokeStyle = this._stroke = this._fill = this._strokeDash = this._oldStrokeDash = null;\n\t\t\tthis._dirty = this._strokeIgnoreScale = false;\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * Begins a fill with the specified color. This ends the current sub-path. A tiny API method \"f\" also exists.\n\t\t * @method beginFill\n\t\t * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t\t * null will result in no fill.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.beginFill = function(color) {\n\t\t\treturn this._setFill(color ? new G.Fill(color) : null);\n\t\t};\n\t\n\t\t/**\n\t\t * Begins a linear gradient fill defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\n\t\t * example, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\n\t\t * square to display it:\n\t\t *\n\t\t *      myGraphics.beginLinearGradientFill([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n\t\t *\n\t\t * A tiny API method \"lf\" also exists.\n\t\t * @method beginLinearGradientFill\n\t\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n\t\t * drawing from red to blue.\n\t\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n\t\t * the first color to 10% then interpolating to the second color at 90%.\n\t\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.beginLinearGradientFill = function(colors, ratios, x0, y0, x1, y1) {\n\t\t\treturn this._setFill(new G.Fill().linearGradient(colors, ratios, x0, y0, x1, y1));\n\t\t};\n\t\n\t\t/**\n\t\t * Begins a radial gradient fill. This ends the current sub-path. For example, the following code defines a red to\n\t\t * blue radial gradient centered at (100, 100), with a radius of 50, and draws a circle to display it:\n\t\t *\n\t\t *      myGraphics.beginRadialGradientFill([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50).drawCircle(100, 100, 50);\n\t\t *\n\t\t * A tiny API method \"rf\" also exists.\n\t\t * @method beginRadialGradientFill\n\t\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t\t * a gradient drawing from red to blue.\n\t\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.beginRadialGradientFill = function(colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\t\treturn this._setFill(new G.Fill().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n\t\t};\n\t\n\t\t/**\n\t\t * Begins a pattern fill using the specified image. This ends the current sub-path. A tiny API method \"bf\" also\n\t\t * exists.\n\t\t * @method beginBitmapFill\n\t\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t\t * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t\t * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n\t\t * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n\t\t * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n\t\t * @param {Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n\t\t * will be applied relative to the parent transform.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.beginBitmapFill = function(image, repetition, matrix) {\n\t\t\treturn this._setFill(new G.Fill(null,matrix).bitmap(image, repetition));\n\t\t};\n\t\n\t\t/**\n\t\t * Ends the current sub-path, and begins a new one with no fill. Functionally identical to <code>beginFill(null)</code>.\n\t\t * A tiny API method \"ef\" also exists.\n\t\t * @method endFill\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.endFill = function() {\n\t\t\treturn this.beginFill();\n\t\t};\n\t\n\t\t/**\n\t\t * Sets the stroke style. Like all drawing methods, this can be chained, so you can define\n\t\t * the stroke style and color in a single line of code like so:\n\t\t *\n\t\t * \tmyGraphics.setStrokeStyle(8,\"round\").beginStroke(\"#F00\");\n\t\t *\n\t\t * A tiny API method \"ss\" also exists.\n\t\t * @method setStrokeStyle\n\t\t * @param {Number} thickness The width of the stroke.\n\t\t * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n\t\t * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n\t\t * the tiny API.\n\t\t * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n\t\t * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n\t\t * for use with the tiny API.\n\t\t * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n\t\t * controls at what point a mitered joint will be clipped.\n\t\t * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n\t\t * of active transformations.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.setStrokeStyle = function(thickness, caps, joints, miterLimit, ignoreScale) {\n\t\t\tthis._updateInstructions(true);\n\t\t\tthis._strokeStyle = this.command = new G.StrokeStyle(thickness, caps, joints, miterLimit, ignoreScale);\n\t\n\t\t\t// ignoreScale lives on Stroke, not StrokeStyle, so we do a little trickery:\n\t\t\tif (this._stroke) { this._stroke.ignoreScale = ignoreScale; }\n\t\t\tthis._strokeIgnoreScale = ignoreScale;\n\t\t\treturn this;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Sets or clears the stroke dash pattern.\n\t\t *\n\t\t * \tmyGraphics.setStrokeDash([20, 10], 0);\n\t\t *\n\t\t * A tiny API method `sd` also exists.\n\t\t * @method setStrokeDash\n\t\t * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n\t\t * For example, `[20,10]` would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n\t\t * Passing null or an empty array will clear the existing stroke dash.\n\t\t * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.setStrokeDash = function(segments, offset) {\n\t\t\tthis._updateInstructions(true);\n\t\t\tthis._strokeDash = this.command = new G.StrokeDash(segments, offset);\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * Begins a stroke with the specified color. This ends the current sub-path. A tiny API method \"s\" also exists.\n\t\t * @method beginStroke\n\t\t * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t\t * null will result in no stroke.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.beginStroke = function(color) {\n\t\t\treturn this._setStroke(color ? new G.Stroke(color) : null);\n\t\t};\n\t\n\t\t/**\n\t\t * Begins a linear gradient stroke defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\n\t\t * example, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\n\t\t * square to display it:\n\t\t *\n\t\t *      myGraphics.setStrokeStyle(10).\n\t\t *          beginLinearGradientStroke([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n\t\t *\n\t\t * A tiny API method \"ls\" also exists.\n\t\t * @method beginLinearGradientStroke\n\t\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t\t * a gradient drawing from red to blue.\n\t\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.beginLinearGradientStroke = function(colors, ratios, x0, y0, x1, y1) {\n\t\t\treturn this._setStroke(new G.Stroke().linearGradient(colors, ratios, x0, y0, x1, y1));\n\t\t};\n\t\n\t\t/**\n\t\t * Begins a radial gradient stroke. This ends the current sub-path. For example, the following code defines a red to\n\t\t * blue radial gradient centered at (100, 100), with a radius of 50, and draws a rectangle to display it:\n\t\t *\n\t\t *      myGraphics.setStrokeStyle(10)\n\t\t *          .beginRadialGradientStroke([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50)\n\t\t *          .drawRect(50, 90, 150, 110);\n\t\t *\n\t\t * A tiny API method \"rs\" also exists.\n\t\t * @method beginRadialGradientStroke\n\t\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t\t * a gradient drawing from red to blue.\n\t\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n\t\t * to 100%.\n\t\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.beginRadialGradientStroke = function(colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\t\treturn this._setStroke(new G.Stroke().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n\t\t};\n\t\n\t\t/**\n\t\t * Begins a pattern fill using the specified image. This ends the current sub-path. Note that unlike bitmap fills,\n\t\t * strokes do not currently support a matrix parameter due to limitations in the canvas API. A tiny API method \"bs\"\n\t\t * also exists.\n\t\t * @method beginBitmapStroke\n\t\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t\t * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t\t * @param {String} [repetition=repeat] Optional. Indicates whether to repeat the image in the fill area. One of\n\t\t * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.beginBitmapStroke = function(image, repetition) {\n\t\t\t// NOTE: matrix is not supported for stroke because transforms on strokes also affect the drawn stroke width.\n\t\t\treturn this._setStroke(new G.Stroke().bitmap(image, repetition));\n\t\t};\n\t\n\t\t/**\n\t\t * Ends the current sub-path, and begins a new one with no stroke. Functionally identical to <code>beginStroke(null)</code>.\n\t\t * A tiny API method \"es\" also exists.\n\t\t * @method endStroke\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.endStroke = function() {\n\t\t\treturn this.beginStroke();\n\t\t};\n\t\n\t\t/**\n\t\t * Maps the familiar ActionScript <code>curveTo()</code> method to the functionally similar {{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}}\n\t\t * method.\n\t\t * @method curveTo\n\t\t * @param {Number} cpx\n\t\t * @param {Number} cpy\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.curveTo = p.quadraticCurveTo;\n\t\n\t\t/**\n\t\t *\n\t\t * Maps the familiar ActionScript <code>drawRect()</code> method to the functionally similar {{#crossLink \"Graphics/rect\"}}{{/crossLink}}\n\t\t * method.\n\t\t * @method drawRect\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} w Width of the rectangle\n\t\t * @param {Number} h Height of the rectangle\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.drawRect = p.rect;\n\t\n\t\t/**\n\t\t * Draws a rounded rectangle with all corners with the specified radius.\n\t\t * @method drawRoundRect\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} w\n\t\t * @param {Number} h\n\t\t * @param {Number} radius Corner radius.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.drawRoundRect = function(x, y, w, h, radius) {\n\t\t\treturn this.drawRoundRectComplex(x, y, w, h, radius, radius, radius, radius);\n\t\t};\n\t\n\t\t/**\n\t\t * Draws a rounded rectangle with different corner radii. Supports positive and negative corner radii. A tiny API\n\t\t * method \"rc\" also exists.\n\t\t * @method drawRoundRectComplex\n\t\t * @param {Number} x The horizontal coordinate to draw the round rect.\n\t\t * @param {Number} y The vertical coordinate to draw the round rect.\n\t\t * @param {Number} w The width of the round rect.\n\t\t * @param {Number} h The height of the round rect.\n\t\t * @param {Number} radiusTL Top left corner radius.\n\t\t * @param {Number} radiusTR Top right corner radius.\n\t\t * @param {Number} radiusBR Bottom right corner radius.\n\t\t * @param {Number} radiusBL Bottom left corner radius.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.drawRoundRectComplex = function(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n\t\t\treturn this.append(new G.RoundRect(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL));\n\t\t};\n\t\n\t\t/**\n\t\t * Draws a circle with the specified radius at (x, y).\n\t\t *\n\t\t *      var g = new createjs.Graphics();\n\t\t *\t    g.setStrokeStyle(1);\n\t\t *\t    g.beginStroke(createjs.Graphics.getRGB(0,0,0));\n\t\t *\t    g.beginFill(createjs.Graphics.getRGB(255,0,0));\n\t\t *\t    g.drawCircle(0,0,3);\n\t\t *\n\t\t *\t    var s = new createjs.Shape(g);\n\t\t *\t\ts.x = 100;\n\t\t *\t\ts.y = 100;\n\t\t *\n\t\t *\t    stage.addChild(s);\n\t\t *\t    stage.update();\n\t\t *\n\t\t * A tiny API method \"dc\" also exists.\n\t\t * @method drawCircle\n\t\t * @param {Number} x x coordinate center point of circle.\n\t\t * @param {Number} y y coordinate center point of circle.\n\t\t * @param {Number} radius Radius of circle.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.drawCircle = function(x, y, radius) {\n\t\t\treturn this.append(new G.Circle(x, y, radius));\n\t\t};\n\t\n\t\t/**\n\t\t * Draws an ellipse (oval) with a specified width (w) and height (h). Similar to {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}},\n\t\t * except the width and height can be different. A tiny API method \"de\" also exists.\n\t\t * @method drawEllipse\n\t\t * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t\t * which draws from center.\n\t\t * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t\t * which draws from the center.\n\t\t * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n\t\t * number.\n\t\t * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.drawEllipse = function(x, y, w, h) {\n\t\t\treturn this.append(new G.Ellipse(x, y, w, h));\n\t\t};\n\t\n\t\t/**\n\t\t * Draws a star if pointSize is greater than 0, or a regular polygon if pointSize is 0 with the specified number of\n\t\t * points. For example, the following code will draw a familiar 5 pointed star shape centered at 100, 100 and with a\n\t\t * radius of 50:\n\t\t *\n\t\t *      myGraphics.beginFill(\"#FF0\").drawPolyStar(100, 100, 50, 5, 0.6, -90);\n\t\t *      // Note: -90 makes the first point vertical\n\t\t *\n\t\t * A tiny API method \"dp\" also exists.\n\t\t *\n\t\t * @method drawPolyStar\n\t\t * @param {Number} x Position of the center of the shape.\n\t\t * @param {Number} y Position of the center of the shape.\n\t\t * @param {Number} radius The outer radius of the shape.\n\t\t * @param {Number} sides The number of points on the star or sides on the polygon.\n\t\t * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n\t\t * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n\t\t * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n\t\t * directly to the right of the center.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.drawPolyStar = function(x, y, radius, sides, pointSize, angle) {\n\t\t\treturn this.append(new G.PolyStar(x, y, radius, sides, pointSize, angle));\n\t\t};\n\t\n\t\t// TODO: deprecated.\n\t\t/**\n\t\t * Removed in favour of using custom command objects with {{#crossLink \"Graphics/append\"}}{{/crossLink}}.\n\t\t * @method inject\n\t\t * @deprecated\n\t\t **/\n\t\n\t\t/**\n\t\t * Appends a graphics command object to the graphics queue. Command objects expose an \"exec\" method\n\t\t * that accepts two parameters: the Context2D to operate on, and an arbitrary data object passed into\n\t\t * {{#crossLink \"Graphics/draw\"}}{{/crossLink}}. The latter will usually be the Shape instance that called draw.\n\t\t *\n\t\t * This method is used internally by Graphics methods, such as drawCircle, but can also be used directly to insert\n\t\t * built-in or custom graphics commands. For example:\n\t\t *\n\t\t * \t\t// attach data to our shape, so we can access it during the draw:\n\t\t * \t\tmyShape.color = \"red\";\n\t\t *\n\t\t * \t\t// append a Circle command object:\n\t\t * \t\tmyShape.graphics.append(new createjs.Graphics.Circle(50, 50, 30));\n\t\t *\n\t\t * \t\t// append a custom command object with an exec method that sets the fill style\n\t\t * \t\t// based on the shape's data, and then fills the circle.\n\t\t * \t\tmyShape.graphics.append({exec:function(ctx, shape) {\n\t\t * \t\t\tctx.fillStyle = shape.color;\n\t\t * \t\t\tctx.fill();\n\t\t * \t\t}});\n\t\t *\n\t\t * @method append\n\t\t * @param {Object} command A graphics command object exposing an \"exec\" method.\n\t\t * @param {boolean} clean The clean param is primarily for internal use. A value of true indicates that a command does not generate a path that should be stroked or filled.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.append = function(command, clean) {\n\t\t\tthis._activeInstructions.push(command);\n\t\t\tthis.command = command;\n\t\t\tif (!clean) { this._dirty = true; }\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * Decodes a compact encoded path string into a series of draw instructions.\n\t\t * This format is not intended to be human readable, and is meant for use by authoring tools.\n\t\t * The format uses a base64 character set, with each character representing 6 bits, to define a series of draw\n\t\t * commands.\n\t\t *\n\t\t * Each command is comprised of a single \"header\" character followed by a variable number of alternating x and y\n\t\t * position values. Reading the header bits from left to right (most to least significant): bits 1 to 3 specify the\n\t\t * type of operation (0-moveTo, 1-lineTo, 2-quadraticCurveTo, 3-bezierCurveTo, 4-closePath, 5-7 unused). Bit 4\n\t\t * indicates whether position values use 12 bits (2 characters) or 18 bits (3 characters), with a one indicating the\n\t\t * latter. Bits 5 and 6 are currently unused.\n\t\t *\n\t\t * Following the header is a series of 0 (closePath), 2 (moveTo, lineTo), 4 (quadraticCurveTo), or 6 (bezierCurveTo)\n\t\t * parameters. These parameters are alternating x/y positions represented by 2 or 3 characters (as indicated by the\n\t\t * 4th bit in the command char). These characters consist of a 1 bit sign (1 is negative, 0 is positive), followed\n\t\t * by an 11 (2 char) or 17 (3 char) bit integer value. All position values are in tenths of a pixel. Except in the\n\t\t * case of move operations which are absolute, this value is a delta from the previous x or y position (as\n\t\t * appropriate).\n\t\t *\n\t\t * For example, the string \"A3cAAMAu4AAA\" represents a line starting at -150,0 and ending at 150,0.\n\t\t * <br />A - bits 000000. First 3 bits (000) indicate a moveTo operation. 4th bit (0) indicates 2 chars per\n\t\t * parameter.\n\t\t * <br />n0 - 110111011100. Absolute x position of -150.0px. First bit indicates a negative value, remaining bits\n\t\t * indicate 1500 tenths of a pixel.\n\t\t * <br />AA - 000000000000. Absolute y position of 0.\n\t\t * <br />I - 001100. First 3 bits (001) indicate a lineTo operation. 4th bit (1) indicates 3 chars per parameter.\n\t\t * <br />Au4 - 000000101110111000. An x delta of 300.0px, which is added to the previous x value of -150.0px to\n\t\t * provide an absolute position of +150.0px.\n\t\t * <br />AAA - 000000000000000000. A y delta value of 0.\n\t\t *\n\t\t * A tiny API method \"p\" also exists.\n\t\t * @method decodePath\n\t\t * @param {String} str The path string to decode.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.decodePath = function(str) {\n\t\t\tvar instructions = [this.moveTo, this.lineTo, this.quadraticCurveTo, this.bezierCurveTo, this.closePath];\n\t\t\tvar paramCount = [2, 2, 4, 6, 0];\n\t\t\tvar i=0, l=str.length;\n\t\t\tvar params = [];\n\t\t\tvar x=0, y=0;\n\t\t\tvar base64 = Graphics.BASE_64;\n\t\n\t\t\twhile (i<l) {\n\t\t\t\tvar c = str.charAt(i);\n\t\t\t\tvar n = base64[c];\n\t\t\t\tvar fi = n>>3; // highest order bits 1-3 code for operation.\n\t\t\t\tvar f = instructions[fi];\n\t\t\t\t// check that we have a valid instruction & that the unused bits are empty:\n\t\t\t\tif (!f || (n&3)) { throw(\"bad path data (@\"+i+\"): \"+c); }\n\t\t\t\tvar pl = paramCount[fi];\n\t\t\t\tif (!fi) { x=y=0; } // move operations reset the position.\n\t\t\t\tparams.length = 0;\n\t\t\t\ti++;\n\t\t\t\tvar charCount = (n>>2&1)+2;  // 4th header bit indicates number size for this operation.\n\t\t\t\tfor (var p=0; p<pl; p++) {\n\t\t\t\t\tvar num = base64[str.charAt(i)];\n\t\t\t\t\tvar sign = (num>>5) ? -1 : 1;\n\t\t\t\t\tnum = ((num&31)<<6)|(base64[str.charAt(i+1)]);\n\t\t\t\t\tif (charCount == 3) { num = (num<<6)|(base64[str.charAt(i+2)]); }\n\t\t\t\t\tnum = sign*num/10;\n\t\t\t\t\tif (p%2) { x = (num += x); }\n\t\t\t\t\telse { y = (num += y); }\n\t\t\t\t\tparams[p] = num;\n\t\t\t\t\ti += charCount;\n\t\t\t\t}\n\t\t\t\tf.apply(this,params);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * Stores all graphics commands so they won't be executed in future draws. Calling store() a second time adds to\n\t\t * the existing store. This also affects `drawAsPath()`.\n\t\t *\n\t\t * This is useful in cases where you are creating vector graphics in an iterative manner (ex. generative art), so\n\t\t * that only new graphics need to be drawn (which can provide huge performance benefits), but you wish to retain all\n\t\t * of the vector instructions for later use (ex. scaling, modifying, or exporting).\n\t\t *\n\t\t * Note that calling store() will force the active path (if any) to be ended in a manner similar to changing\n\t\t * the fill or stroke.\n\t\t *\n\t\t * For example, consider a application where the user draws lines with the mouse. As each line segment (or collection of\n\t\t * segments) are added to a Shape, it can be rasterized using {{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}},\n\t\t * and then stored, so that it can be redrawn at a different scale when the application is resized, or exported to SVG.\n\t\t *\n\t\t * \t// set up cache:\n\t\t * \tmyShape.cache(0,0,500,500,scale);\n\t\t *\n\t\t * \t// when the user drags, draw a new line:\n\t\t * \tmyShape.graphics.moveTo(oldX,oldY).lineTo(newX,newY);\n\t\t * \t// then draw it into the existing cache:\n\t\t * \tmyShape.updateCache(\"source-over\");\n\t\t * \t// store the new line, so it isn't redrawn next time:\n\t\t * \tmyShape.store();\n\t\t *\n\t\t * \t// then, when the window resizes, we can re-render at a different scale:\n\t\t * \t// first, unstore all our lines:\n\t\t * \tmyShape.unstore();\n\t\t * \t// then cache using the new scale:\n\t\t * \tmyShape.cache(0,0,500,500,newScale);\n\t\t * \t// finally, store the existing commands again:\n\t\t * \tmyShape.store();\n\t\t *\n\t\t * @method store\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.store = function() {\n\t\t\tthis._updateInstructions(true);\n\t\t\tthis._storeIndex = this._instructions.length;\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * Unstores any graphics commands that were previously stored using {{#crossLink \"Graphics/store\"}}{{/crossLink}}\n\t\t * so that they will be executed in subsequent draw calls.\n\t\t *\n\t\t * @method unstore\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.unstore = function() {\n\t\t\tthis._storeIndex = 0;\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a clone of this Graphics instance. Note that the individual command objects are not cloned.\n\t\t * @method clone\n\t\t * @return {Graphics} A clone of the current Graphics instance.\n\t\t **/\n\t\tp.clone = function() {\n\t\t\tvar o = new Graphics();\n\t\t\to.command = this.command;\n\t\t\to._stroke = this._stroke;\n\t\t\to._strokeStyle = this._strokeStyle;\n\t\t\to._strokeDash = this._strokeDash;\n\t\t\to._strokeIgnoreScale = this._strokeIgnoreScale;\n\t\t\to._fill = this._fill;\n\t\t\to._instructions = this._instructions.slice();\n\t\t\to._commitIndex = this._commitIndex;\n\t\t\to._activeInstructions = this._activeInstructions.slice();\n\t\t\to._dirty = this._dirty;\n\t\t\to._storeIndex = this._storeIndex;\n\t\t\treturn o;\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a string representation of this object.\n\t\t * @method toString\n\t\t * @return {String} a string representation of the instance.\n\t\t **/\n\t\tp.toString = function() {\n\t\t\treturn \"[Graphics]\";\n\t\t};\n\t\n\t\n\t// tiny API:\n\t\t/**\n\t\t * Shortcut to moveTo.\n\t\t * @method mt\n\t\t * @param {Number} x The x coordinate the drawing point should move to.\n\t\t * @param {Number} y The y coordinate the drawing point should move to.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls).\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.mt = p.moveTo;\n\t\n\t\t/**\n\t\t * Shortcut to lineTo.\n\t\t * @method lt\n\t\t * @param {Number} x The x coordinate the drawing point should draw to.\n\t\t * @param {Number} y The y coordinate the drawing point should draw to.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.lt = p.lineTo;\n\t\n\t\t/**\n\t\t * Shortcut to arcTo.\n\t\t * @method at\n\t\t * @param {Number} x1\n\t\t * @param {Number} y1\n\t\t * @param {Number} x2\n\t\t * @param {Number} y2\n\t\t * @param {Number} radius\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.at = p.arcTo;\n\t\n\t\t/**\n\t\t * Shortcut to bezierCurveTo.\n\t\t * @method bt\n\t\t * @param {Number} cp1x\n\t\t * @param {Number} cp1y\n\t\t * @param {Number} cp2x\n\t\t * @param {Number} cp2y\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.bt = p.bezierCurveTo;\n\t\n\t\t/**\n\t\t * Shortcut to quadraticCurveTo / curveTo.\n\t\t * @method qt\n\t\t * @param {Number} cpx\n\t\t * @param {Number} cpy\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @protected\n\t\t * @chainable\n\t\t **/\n\t\tp.qt = p.quadraticCurveTo;\n\t\n\t\t/**\n\t\t * Shortcut to arc.\n\t\t * @method a\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} radius\n\t\t * @param {Number} startAngle Measured in radians.\n\t\t * @param {Number} endAngle Measured in radians.\n\t\t * @param {Boolean} anticlockwise\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @protected\n\t\t * @chainable\n\t\t **/\n\t\tp.a = p.arc;\n\t\n\t\t/**\n\t\t * Shortcut to rect.\n\t\t * @method r\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} w Width of the rectangle\n\t\t * @param {Number} h Height of the rectangle\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.r = p.rect;\n\t\n\t\t/**\n\t\t * Shortcut to closePath.\n\t\t * @method cp\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.cp = p.closePath;\n\t\n\t\t/**\n\t\t * Shortcut to clear.\n\t\t * @method c\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.c = p.clear;\n\t\n\t\t/**\n\t\t * Shortcut to beginFill.\n\t\t * @method f\n\t\t * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t\t * null will result in no fill.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.f = p.beginFill;\n\t\n\t\t/**\n\t\t * Shortcut to beginLinearGradientFill.\n\t\t * @method lf\n\t\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n\t\t * drawing from red to blue.\n\t\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n\t\t * the first color to 10% then interpolating to the second color at 90%.\n\t\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.lf = p.beginLinearGradientFill;\n\t\n\t\t/**\n\t\t * Shortcut to beginRadialGradientFill.\n\t\t * @method rf\n\t\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t\t * a gradient drawing from red to blue.\n\t\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.rf = p.beginRadialGradientFill;\n\t\n\t\t/**\n\t\t * Shortcut to beginBitmapFill.\n\t\t * @method bf\n\t\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t\t * as the pattern.\n\t\t * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n\t\t * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n\t\t * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n\t\t * @param {Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n\t\t * will be applied relative to the parent transform.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.bf = p.beginBitmapFill;\n\t\n\t\t/**\n\t\t * Shortcut to endFill.\n\t\t * @method ef\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.ef = p.endFill;\n\t\n\t\t/**\n\t\t * Shortcut to setStrokeStyle.\n\t\t * @method ss\n\t\t * @param {Number} thickness The width of the stroke.\n\t\t * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n\t\t * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n\t\t * the tiny API.\n\t\t * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n\t\t * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n\t\t * for use with the tiny API.\n\t\t * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n\t\t * controls at what point a mitered joint will be clipped.\n\t\t * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n\t\t * of active transformations.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.ss = p.setStrokeStyle;\n\t\t\n\t\t/**\n\t\t * Shortcut to setStrokeDash.\n\t\t * @method sd\n\t\t * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n\t\t * For example, [20,10] would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n\t\t * Passing null or an empty array will clear any existing dash.\n\t\t * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.sd = p.setStrokeDash;\n\t\n\t\t/**\n\t\t * Shortcut to beginStroke.\n\t\t * @method s\n\t\t * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t\t * null will result in no stroke.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.s = p.beginStroke;\n\t\n\t\t/**\n\t\t * Shortcut to beginLinearGradientStroke.\n\t\t * @method ls\n\t\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t\t * a gradient drawing from red to blue.\n\t\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.ls = p.beginLinearGradientStroke;\n\t\n\t\t/**\n\t\t * Shortcut to beginRadialGradientStroke.\n\t\t * @method rs\n\t\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t\t * a gradient drawing from red to blue.\n\t\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n\t\t * to 100%.\n\t\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.rs = p.beginRadialGradientStroke;\n\t\n\t\t/**\n\t\t * Shortcut to beginBitmapStroke.\n\t\t * @method bs\n\t\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t\t * as the pattern.\n\t\t * @param {String} [repetition=repeat] Optional. Indicates whether to repeat the image in the fill area. One of\n\t\t * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.bs = p.beginBitmapStroke;\n\t\n\t\t/**\n\t\t * Shortcut to endStroke.\n\t\t * @method es\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.es = p.endStroke;\n\t\n\t\t/**\n\t\t * Shortcut to drawRect.\n\t\t * @method dr\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} w Width of the rectangle\n\t\t * @param {Number} h Height of the rectangle\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.dr = p.drawRect;\n\t\n\t\t/**\n\t\t * Shortcut to drawRoundRect.\n\t\t * @method rr\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} w\n\t\t * @param {Number} h\n\t\t * @param {Number} radius Corner radius.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.rr = p.drawRoundRect;\n\t\n\t\t/**\n\t\t * Shortcut to drawRoundRectComplex.\n\t\t * @method rc\n\t\t * @param {Number} x The horizontal coordinate to draw the round rect.\n\t\t * @param {Number} y The vertical coordinate to draw the round rect.\n\t\t * @param {Number} w The width of the round rect.\n\t\t * @param {Number} h The height of the round rect.\n\t\t * @param {Number} radiusTL Top left corner radius.\n\t\t * @param {Number} radiusTR Top right corner radius.\n\t\t * @param {Number} radiusBR Bottom right corner radius.\n\t\t * @param {Number} radiusBL Bottom left corner radius.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.rc = p.drawRoundRectComplex;\n\t\n\t\t/**\n\t\t * Shortcut to drawCircle.\n\t\t * @method dc\n\t\t * @param {Number} x x coordinate center point of circle.\n\t\t * @param {Number} y y coordinate center point of circle.\n\t\t * @param {Number} radius Radius of circle.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.dc = p.drawCircle;\n\t\n\t\t/**\n\t\t * Shortcut to drawEllipse.\n\t\t * @method de\n\t\t * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t\t * which draws from center.\n\t\t * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t\t * which draws from the center.\n\t\t * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n\t\t * number.\n\t\t * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.de = p.drawEllipse;\n\t\n\t\t/**\n\t\t * Shortcut to drawPolyStar.\n\t\t * @method dp\n\t\t * @param {Number} x Position of the center of the shape.\n\t\t * @param {Number} y Position of the center of the shape.\n\t\t * @param {Number} radius The outer radius of the shape.\n\t\t * @param {Number} sides The number of points on the star or sides on the polygon.\n\t\t * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n\t\t * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n\t\t * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n\t\t * directly to the right of the center.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.dp = p.drawPolyStar;\n\t\n\t\t/**\n\t\t * Shortcut to decodePath.\n\t\t * @method p\n\t\t * @param {String} str The path string to decode.\n\t\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t * @protected\n\t\t **/\n\t\tp.p = p.decodePath;\n\t\n\t\n\t// private methods:\n\t\t/**\n\t\t * @method _updateInstructions\n\t\t * @param commit\n\t\t * @protected\n\t\t **/\n\t\tp._updateInstructions = function(commit) {\n\t\t\tvar instr = this._instructions, active = this._activeInstructions, commitIndex = this._commitIndex;\n\t\n\t\t\tif (this._dirty && active.length) {\n\t\t\t\tinstr.length = commitIndex; // remove old, uncommitted commands\n\t\t\t\tinstr.push(Graphics.beginCmd);\n\t\n\t\t\t\tvar l = active.length, ll = instr.length;\n\t\t\t\tinstr.length = ll+l;\n\t\t\t\tfor (var i=0; i<l; i++) { instr[i+ll] = active[i]; }\n\t\n\t\t\t\tif (this._fill) { instr.push(this._fill); }\n\t\t\t\tif (this._stroke) {\n\t\t\t\t\t// doesn't need to be re-applied if it hasn't changed.\n\t\t\t\t\tif (this._strokeDash !== this._oldStrokeDash) {\n\t\t\t\t\t\tthis._oldStrokeDash = this._strokeDash;\n\t\t\t\t\t\tinstr.push(this._strokeDash);\n\t\t\t\t\t}\n\t\t\t\t\tif (this._strokeStyle !== this._oldStrokeStyle) {\n\t\t\t\t\t\tthis._oldStrokeStyle = this._strokeStyle;\n\t\t\t\t\t\tinstr.push(this._strokeStyle);\n\t\t\t\t\t}\n\t\t\t\t\tinstr.push(this._stroke);\n\t\t\t\t}\n\t\n\t\t\t\tthis._dirty = false;\n\t\t\t}\n\t\n\t\t\tif (commit) {\n\t\t\t\tactive.length = 0;\n\t\t\t\tthis._commitIndex = instr.length;\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * @method _setFill\n\t\t * @param fill\n\t\t * @protected\n\t\t **/\n\t\tp._setFill = function(fill) {\n\t\t\tthis._updateInstructions(true);\n\t\t\tthis.command = this._fill = fill;\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * @method _setStroke\n\t\t * @param stroke\n\t\t * @protected\n\t\t **/\n\t\tp._setStroke = function(stroke) {\n\t\t\tthis._updateInstructions(true);\n\t\t\tif (this.command = this._stroke = stroke) {\n\t\t\t\tstroke.ignoreScale = this._strokeIgnoreScale;\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\t\n\t// Command Objects:\n\t\t/**\n\t\t * @namespace Graphics\n\t\t */\n\t\t/**\n\t\t * Graphics command object. See {{#crossLink \"Graphics/lineTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information. See {{#crossLink \"Graphics\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t\t * @class LineTo\n\t\t * @constructor\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t **/\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * Execute the Graphics command in the provided Canvas context.\n\t\t * @method exec\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t\t */\n\t\t(G.LineTo = function(x, y) {\n\t\t\tthis.x = x; this.y = y;\n\t\t}).prototype.exec = function(ctx) { ctx.lineTo(this.x,this.y); };\n\t\n\t\t/**\n\t\t * Graphics command object. See {{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t\t * @class MoveTo\n\t\t * @constructor\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t **/\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @method exec\n\t\t * @param {CanvasRenderingContext2D} ctx\n\t\t */\n\t\t(G.MoveTo = function(x, y) {\n\t\t\tthis.x = x; this.y = y;\n\t\t}).prototype.exec = function(ctx) { ctx.moveTo(this.x, this.y); };\n\t\n\t\n\t\t/**\n\t\t * Graphics command object. See {{#crossLink \"Graphics/arcTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t\t * @class ArcTo\n\t\t * @constructor\n\t\t * @param {Number} x1\n\t\t * @param {Number} y1\n\t\t * @param {Number} x2\n\t\t * @param {Number} y2\n\t\t * @param {Number} radius\n\t\t **/\n\t\t/**\n\t\t * @property x1\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property y1\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property x2\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property y2\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property radius\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * Execute the Graphics command in the provided Canvas context.\n\t\t * @method exec\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t\t */\n\t\t(G.ArcTo = function(x1, y1, x2, y2, radius) {\n\t\t\tthis.x1 = x1; this.y1 = y1;\n\t\t\tthis.x2 = x2; this.y2 = y2;\n\t\t\tthis.radius = radius;\n\t\t}).prototype.exec = function(ctx) { ctx.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius); };\n\t\n\t\t/**\n\t\t * Graphics command object. See {{#crossLink \"Graphics/arc\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t\t * @class Arc\n\t\t * @constructor\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} radius\n\t\t * @param {Number} startAngle\n\t\t * @param {Number} endAngle\n\t\t * @param {Number} anticlockwise\n\t\t **/\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property radius\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property startAngle\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property endAngle\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property anticlockwise\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * Execute the Graphics command in the provided Canvas context.\n\t\t * @method exec\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t\t */\n\t\t(G.Arc = function(x, y, radius, startAngle, endAngle, anticlockwise) {\n\t\t\tthis.x = x; this.y = y;\n\t\t\tthis.radius = radius;\n\t\t\tthis.startAngle = startAngle; this.endAngle = endAngle;\n\t\t\tthis.anticlockwise = !!anticlockwise;\n\t\t}).prototype.exec = function(ctx) { ctx.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.anticlockwise); };\n\t\n\t\t/**\n\t\t * Graphics command object. See {{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t\t * @class QuadraticCurveTo\n\t\t * @constructor\n\t\t * @param {Number} cpx\n\t\t * @param {Number} cpy\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t **/\n\t\t/**\n\t\t * @property cpx\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property cpy\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * Execute the Graphics command in the provided Canvas context.\n\t\t * @method exec\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t\t */\n\t\t(G.QuadraticCurveTo = function(cpx, cpy, x, y) {\n\t\t\tthis.cpx = cpx; this.cpy = cpy;\n\t\t\tthis.x = x; this.y = y;\n\t\t}).prototype.exec = function(ctx) { ctx.quadraticCurveTo(this.cpx, this.cpy, this.x, this.y); };\n\t\n\t\t/**\n\t\t * Graphics command object. See {{#crossLink \"Graphics/bezierCurveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t\t * @class BezierCurveTo\n\t\t * @constructor\n\t\t * @param {Number} cp1x\n\t\t * @param {Number} cp1y\n\t\t * @param {Number} cp2x\n\t\t * @param {Number} cp2y\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t **/\n\t\t/**\n\t\t * @property cp1x\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property cp1y\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property cp2x\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property cp2y\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * Execute the Graphics command in the provided Canvas context.\n\t\t * @method exec\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t\t */\n\t\t(G.BezierCurveTo = function(cp1x, cp1y, cp2x, cp2y, x, y) {\n\t\t\tthis.cp1x = cp1x; this.cp1y = cp1y;\n\t\t\tthis.cp2x = cp2x; this.cp2y = cp2y;\n\t\t\tthis.x = x; this.y = y;\n\t\t}).prototype.exec = function(ctx) { ctx.bezierCurveTo(this.cp1x, this.cp1y, this.cp2x, this.cp2y, this.x, this.y); };\n\t\n\t\t/**\n\t\t * Graphics command object. See {{#crossLink \"Graphics/rect\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t\t * @class Rect\n\t\t * @constructor\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} w\n\t\t * @param {Number} h\n\t\t **/\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property w\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property h\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * Execute the Graphics command in the provided Canvas context.\n\t\t * @method exec\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t\t */\n\t\t(G.Rect = function(x, y, w, h) {\n\t\t\tthis.x = x; this.y = y;\n\t\t\tthis.w = w; this.h = h;\n\t\t}).prototype.exec = function(ctx) { ctx.rect(this.x, this.y, this.w, this.h); };\n\t\n\t\t/**\n\t\t * Graphics command object. See {{#crossLink \"Graphics/closePath\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t\t * @class ClosePath\n\t\t * @constructor\n\t\t **/\n\t\t/**\n\t\t * Execute the Graphics command in the provided Canvas context.\n\t\t * @method exec\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t\t */\n\t\t(G.ClosePath = function() {\n\t\t}).prototype.exec = function(ctx) { ctx.closePath(); };\n\t\n\t\t/**\n\t\t * Graphics command object to begin a new path. See {{#crossLink \"Graphics\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t\t * @class BeginPath\n\t\t * @constructor\n\t\t **/\n\t\t/**\n\t\t * Execute the Graphics command in the provided Canvas context.\n\t\t * @method exec\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t\t */\n\t\t(G.BeginPath = function() {\n\t\t}).prototype.exec = function(ctx) { ctx.beginPath(); };\n\t\n\t\t/**\n\t\t * Graphics command object. See {{#crossLink \"Graphics/beginFill\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t\t * @class Fill\n\t\t * @constructor\n\t\t * @param {Object} style A valid Context2D fillStyle.\n\t\t * @param {Matrix2D} matrix\n\t\t **/\n\t\t/**\n\t\t * A valid Context2D fillStyle.\n\t\t * @property style\n\t\t * @type Object\n\t\t */\n\t\t/**\n\t\t * @property matrix\n\t\t * @type Matrix2D\n\t\t */\n\t\t/**\n\t\t * Execute the Graphics command in the provided Canvas context.\n\t\t * @method exec\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t\t */\n\t\tp = (G.Fill = function(style, matrix) {\n\t\t\tthis.style = style;\n\t\t\tthis.matrix = matrix;\n\t\t}).prototype;\n\t\tp.exec = function(ctx) {\n\t\t\tif (!this.style) { return; }\n\t\t\tctx.fillStyle = this.style;\n\t\t\tvar mtx = this.matrix;\n\t\t\tif (mtx) { ctx.save(); ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty); }\n\t\t\tctx.fill();\n\t\t\tif (mtx) { ctx.restore(); }\n\t\t};\n\t\t/**\n\t\t * Creates a linear gradient style and assigns it to {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n\t\t * See {{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} for more information.\n\t\t * @method linearGradient\n\t\t * @param {Array} colors\n\t\t *\n\t\t * @param {Array} ratios\n\t\t * @param {Number} x0\n\t\t * @param {Number} y0\n\t\t * @param {Number} x1\n\t\t * @param {Number} y1\n\t\t * @return {Fill} Returns this Fill object for chaining or assignment.\n\t\t */\n\t\tp.linearGradient = function(colors, ratios, x0, y0, x1, y1) {\n\t\t\tvar o = this.style =  Graphics._ctx.createLinearGradient(x0, y0, x1, y1);\n\t\t\tfor (var i=0, l=colors.length; i<l; i++) { o.addColorStop(ratios[i], colors[i]); }\n\t\t\to.props = {colors:colors, ratios:ratios, x0:x0, y0:y0, x1:x1, y1:y1, type:\"linear\"};\n\t\t\treturn this;\n\t\t};\n\t\t/**\n\t\t * Creates a radial gradient style and assigns it to {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n\t\t * See {{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} for more information.\n\t\t * @method radialGradient\n\t\t * @param {Array} colors\n\t\t * @param {Array} ratios\n\t\t * @param {Number} x0\n\t\t * @param {Number} y0\n\t\t * @param {Number} r0\n\t\t * @param {Number} x1\n\t\t * @param {Number} y1\n\t\t * @param {Number} r1\n\t\t * @return {Fill} Returns this Fill object for chaining or assignment.\n\t\t */\n\t\tp.radialGradient = function(colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\t\tvar o = this.style =  Graphics._ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);\n\t\t\tfor (var i=0, l=colors.length; i<l; i++) { o.addColorStop(ratios[i], colors[i]); }\n\t\t\to.props = {colors:colors, ratios:ratios, x0:x0, y0:y0, r0:r0, x1:x1, y1:y1, r1:r1, type:\"radial\"};\n\t\t\treturn this;\n\t\t};\n\t\t/**\n\t\t * Creates a bitmap fill style and assigns it to the {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n\t\t * See {{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} for more information.\n\t\t * @method bitmap\n\t\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image  Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t\t * @param {String} [repetition] One of: repeat, repeat-x, repeat-y, or no-repeat.\n\t\t * @return {Fill} Returns this Fill object for chaining or assignment.\n\t\t */\n\t\tp.bitmap = function(image, repetition) {\n\t\t\tif (image.naturalWidth || image.getContext || image.readyState >= 2) {\n\t\t\t\tvar o = this.style = Graphics._ctx.createPattern(image, repetition || \"\");\n\t\t\t\to.props = {image: image, repetition: repetition, type: \"bitmap\"};\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\t\tp.path = false;\n\t\n\t\t/**\n\t\t * Graphics command object. See {{#crossLink \"Graphics/beginStroke\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t\t * @class Stroke\n\t\t * @constructor\n\t\t * @param {Object} style A valid Context2D fillStyle.\n\t\t * @param {Boolean} ignoreScale\n\t\t **/\n\t\t/**\n\t\t * A valid Context2D strokeStyle.\n\t\t * @property style\n\t\t * @type Object\n\t\t */\n\t\t/**\n\t\t * @property ignoreScale\n\t\t * @type Boolean\n\t\t */\n\t\t/**\n\t\t * Execute the Graphics command in the provided Canvas context.\n\t\t * @method exec\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t\t */\n\t\tp = (G.Stroke = function(style, ignoreScale) {\n\t\t\tthis.style = style;\n\t\t\tthis.ignoreScale = ignoreScale;\n\t\t}).prototype;\n\t\tp.exec = function(ctx) {\n\t\t\tif (!this.style) { return; }\n\t\t\tctx.strokeStyle = this.style;\n\t\t\tif (this.ignoreScale) { ctx.save(); ctx.setTransform(1,0,0,1,0,0); }\n\t\t\tctx.stroke();\n\t\t\tif (this.ignoreScale) { ctx.restore(); }\n\t\t};\n\t\t/**\n\t\t * Creates a linear gradient style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n\t\t * See {{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} for more information.\n\t\t * @method linearGradient\n\t\t * @param {Array} colors\n\t\t * @param {Array} ratios\n\t\t * @param {Number} x0\n\t\t * @param {Number} y0\n\t\t * @param {Number} x1\n\t\t * @param {Number} y1\n\t\t * @return {Fill} Returns this Stroke object for chaining or assignment.\n\t\t */\n\t\tp.linearGradient = G.Fill.prototype.linearGradient;\n\t\t/**\n\t\t * Creates a radial gradient style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n\t\t * See {{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} for more information.\n\t\t * @method radialGradient\n\t\t * @param {Array} colors\n\t\t * @param {Array} ratios\n\t\t * @param {Number} x0\n\t\t * @param {Number} y0\n\t\t * @param {Number} r0\n\t\t * @param {Number} x1\n\t\t * @param {Number} y1\n\t\t * @param {Number} r1\n\t\t * @return {Fill} Returns this Stroke object for chaining or assignment.\n\t\t */\n\t\tp.radialGradient = G.Fill.prototype.radialGradient;\n\t\t/**\n\t\t * Creates a bitmap fill style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n\t\t * See {{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} for more information.\n\t\t * @method bitmap\n\t\t * @param {HTMLImageElement} image\n\t\t * @param {String} [repetition] One of: repeat, repeat-x, repeat-y, or no-repeat.\n\t\t * @return {Fill} Returns this Stroke object for chaining or assignment.\n\t\t */\n\t\tp.bitmap = G.Fill.prototype.bitmap;\n\t\tp.path = false;\n\t\n\t\t/**\n\t\t * Graphics command object. See {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t\t * @class StrokeStyle\n\t\t * @constructor\n\t\t * @param {Number} width\n\t\t * @param {String} [caps=butt]\n\t\t * @param {String} [joints=miter]\n\t\t * @param {Number} [miterLimit=10]\n\t\t * @param {Boolean} [ignoreScale=false]\n\t\t **/\n\t\t/**\n\t\t * @property width\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * One of: butt, round, square\n\t\t * @property caps\n\t\t * @type String\n\t\t */\n\t\t/**\n\t\t * One of: round, bevel, miter\n\t\t * @property joints\n\t\t * @type String\n\t\t */\n\t\t/**\n\t\t * @property miterLimit\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * Execute the Graphics command in the provided Canvas context.\n\t\t * @method exec\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t\t */\n\t\tp = (G.StrokeStyle = function(width, caps, joints, miterLimit, ignoreScale) {\n\t\t\tthis.width = width;\n\t\t\tthis.caps = caps;\n\t\t\tthis.joints = joints;\n\t\t\tthis.miterLimit = miterLimit;\n\t\t\tthis.ignoreScale = ignoreScale;\n\t\t}).prototype;\n\t\tp.exec = function(ctx) {\n\t\t\tctx.lineWidth = (this.width == null ? \"1\" : this.width);\n\t\t\tctx.lineCap = (this.caps == null ? \"butt\" : (isNaN(this.caps) ? this.caps : Graphics.STROKE_CAPS_MAP[this.caps]));\n\t\t\tctx.lineJoin = (this.joints == null ? \"miter\" : (isNaN(this.joints) ? this.joints : Graphics.STROKE_JOINTS_MAP[this.joints]));\n\t\t\tctx.miterLimit = (this.miterLimit == null ? \"10\" : this.miterLimit);\n\t\t\tctx.ignoreScale = (this.ignoreScale == null ? false : this.ignoreScale);\n\t\t};\n\t\tp.path = false;\n\t\t\n\t\t/**\n\t\t * Graphics command object. See {{#crossLink \"Graphics/setStrokeDash\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t\t * @class StrokeDash\n\t\t * @constructor\n\t\t * @param {Array} [segments]\n\t\t * @param {Number} [offset=0]\n\t\t **/\n\t\t/**\n\t\t * @property segments\n\t\t * @type Array\n\t\t */\n\t\t/**\n\t\t * @property offset\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * Execute the Graphics command in the provided Canvas context.\n\t\t * @method exec\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t\t */\n\t\t(G.StrokeDash = function(segments, offset) {\n\t\t\tthis.segments = segments;\n\t\t\tthis.offset = offset||0;\n\t\t}).prototype.exec = function(ctx) {\n\t\t\tif (ctx.setLineDash) { // feature detection.\n\t\t\t\tctx.setLineDash(this.segments|| G.StrokeDash.EMPTY_SEGMENTS); // instead of [] to reduce churn.\n\t\t\t\tctx.lineDashOffset = this.offset||0;\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * The default value for segments (ie. no dash).\n\t\t * @property EMPTY_SEGMENTS\n\t\t * @static\n\t\t * @final\n\t\t * @readonly\n\t\t * @protected\n\t\t * @type {Array}\n\t\t **/\n\t\tG.StrokeDash.EMPTY_SEGMENTS = [];\n\t\n\t\t/**\n\t\t * Graphics command object. See {{#crossLink \"Graphics/drawRoundRectComplex\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t\t * @class RoundRect\n\t\t * @constructor\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} w\n\t\t * @param {Number} h\n\t\t * @param {Number} radiusTL\n\t\t * @param {Number} radiusTR\n\t\t * @param {Number} radiusBR\n\t\t * @param {Number} radiusBL\n\t\t **/\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property w\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property h\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property radiusTL\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property radiusTR\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property radiusBR\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property radiusBL\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * Execute the Graphics command in the provided Canvas context.\n\t\t * @method exec\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t\t */\n\t\t(G.RoundRect = function(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n\t\t\tthis.x = x; this.y = y;\n\t\t\tthis.w = w; this.h = h;\n\t\t\tthis.radiusTL = radiusTL; this.radiusTR = radiusTR;\n\t\t\tthis.radiusBR = radiusBR; this.radiusBL = radiusBL;\n\t\t}).prototype.exec = function(ctx) {\n\t\t\tvar max = (w<h?w:h)/2;\n\t\t\tvar mTL=0, mTR=0, mBR=0, mBL=0;\n\t\t\tvar x = this.x, y = this.y, w = this.w, h = this.h;\n\t\t\tvar rTL = this.radiusTL, rTR = this.radiusTR, rBR = this.radiusBR, rBL = this.radiusBL;\n\t\n\t\t\tif (rTL < 0) { rTL *= (mTL=-1); }\n\t\t\tif (rTL > max) { rTL = max; }\n\t\t\tif (rTR < 0) { rTR *= (mTR=-1); }\n\t\t\tif (rTR > max) { rTR = max; }\n\t\t\tif (rBR < 0) { rBR *= (mBR=-1); }\n\t\t\tif (rBR > max) { rBR = max; }\n\t\t\tif (rBL < 0) { rBL *= (mBL=-1); }\n\t\t\tif (rBL > max) { rBL = max; }\n\t\n\t\t\tctx.moveTo(x+w-rTR, y);\n\t\t\tctx.arcTo(x+w+rTR*mTR, y-rTR*mTR, x+w, y+rTR, rTR);\n\t\t\tctx.lineTo(x+w, y+h-rBR);\n\t\t\tctx.arcTo(x+w+rBR*mBR, y+h+rBR*mBR, x+w-rBR, y+h, rBR);\n\t\t\tctx.lineTo(x+rBL, y+h);\n\t\t\tctx.arcTo(x-rBL*mBL, y+h+rBL*mBL, x, y+h-rBL, rBL);\n\t\t\tctx.lineTo(x, y+rTL);\n\t\t\tctx.arcTo(x-rTL*mTL, y-rTL*mTL, x+rTL, y, rTL);\n\t\t\tctx.closePath();\n\t\t};\n\t\n\t\t/**\n\t\t * Graphics command object. See {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t\t * @class Circle\n\t\t * @constructor\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} radius\n\t\t **/\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property radius\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * Execute the Graphics command in the provided Canvas context.\n\t\t * @method exec\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t\t */\n\t\t(G.Circle = function(x, y, radius) {\n\t\t\tthis.x = x; this.y = y;\n\t\t\tthis.radius = radius;\n\t\t}).prototype.exec = function(ctx) { ctx.arc(this.x, this.y, this.radius, 0, Math.PI*2); };\n\t\n\t\t/**\n\t\t * Graphics command object. See {{#crossLink \"Graphics/drawEllipse\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t\t * @class Ellipse\n\t\t * @constructor\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} w\n\t\t * @param {Number} h\n\t\t **/\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property w\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property h\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * Execute the Graphics command in the provided Canvas context.\n\t\t * @method exec\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t\t */\n\t\t(G.Ellipse = function(x, y, w, h) {\n\t\t\tthis.x = x; this.y = y;\n\t\t\tthis.w = w; this.h = h;\n\t\t}).prototype.exec = function(ctx) {\n\t\t\tvar x = this.x, y = this.y;\n\t\t\tvar w = this.w, h = this.h;\n\t\n\t\t\tvar k = 0.5522848;\n\t\t\tvar ox = (w / 2) * k;\n\t\t\tvar oy = (h / 2) * k;\n\t\t\tvar xe = x + w;\n\t\t\tvar ye = y + h;\n\t\t\tvar xm = x + w / 2;\n\t\t\tvar ym = y + h / 2;\n\t\n\t\t\tctx.moveTo(x, ym);\n\t\t\tctx.bezierCurveTo(x, ym-oy, xm-ox, y, xm, y);\n\t\t\tctx.bezierCurveTo(xm+ox, y, xe, ym-oy, xe, ym);\n\t\t\tctx.bezierCurveTo(xe, ym+oy, xm+ox, ye, xm, ye);\n\t\t\tctx.bezierCurveTo(xm-ox, ye, x, ym+oy, x, ym);\n\t\t};\n\t\n\t\t/**\n\t\t * Graphics command object. See {{#crossLink \"Graphics/drawPolyStar\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t\t * @class PolyStar\n\t\t * @constructor\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} radius\n\t\t * @param {Number} sides\n\t\t * @param {Number} pointSize\n\t\t * @param {Number} angle\n\t\t **/\n\t\t/**\n\t\t * @property x\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property y\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property radius\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property sides\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property pointSize\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * @property angle\n\t\t * @type Number\n\t\t */\n\t\t/**\n\t\t * Execute the Graphics command in the provided Canvas context.\n\t\t * @method exec\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t\t */\n\t\t(G.PolyStar = function(x, y, radius, sides, pointSize, angle) {\n\t\t\tthis.x = x; this.y = y;\n\t\t\tthis.radius = radius;\n\t\t\tthis.sides = sides;\n\t\t\tthis.pointSize = pointSize;\n\t\t\tthis.angle = angle;\n\t\t}).prototype.exec = function(ctx) {\n\t\t\tvar x = this.x, y = this.y;\n\t\t\tvar radius = this.radius;\n\t\t\tvar angle = (this.angle||0)/180*Math.PI;\n\t\t\tvar sides = this.sides;\n\t\t\tvar ps = 1-(this.pointSize||0);\n\t\t\tvar a = Math.PI/sides;\n\t\n\t\t\tctx.moveTo(x+Math.cos(angle)*radius, y+Math.sin(angle)*radius);\n\t\t\tfor (var i=0; i<sides; i++) {\n\t\t\t\tangle += a;\n\t\t\t\tif (ps != 1) {\n\t\t\t\t\tctx.lineTo(x+Math.cos(angle)*radius*ps, y+Math.sin(angle)*radius*ps);\n\t\t\t\t}\n\t\t\t\tangle += a;\n\t\t\t\tctx.lineTo(x+Math.cos(angle)*radius, y+Math.sin(angle)*radius);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t};\n\t\n\t\t// docced above.\n\t\tGraphics.beginCmd = new G.BeginPath(); // so we don't have to instantiate multiple instances.\n\t\n\t\n\t\tcreatejs.Graphics = Graphics;\n\t}());\n\t\n\t//##############################################################################\n\t// DisplayObject.js\n\t//##############################################################################\n\t\n\t(function() {\r\n\t\t\"use strict\";\r\n\t\r\n\t\r\n\t// constructor:\r\n\t\t/**\r\n\t\t * DisplayObject is an abstract class that should not be constructed directly. Instead construct subclasses such as\r\n\t\t * {{#crossLink \"Container\"}}{{/crossLink}}, {{#crossLink \"Bitmap\"}}{{/crossLink}}, and {{#crossLink \"Shape\"}}{{/crossLink}}.\r\n\t\t * DisplayObject is the base class for all display classes in the EaselJS library. It defines the core properties and\r\n\t\t * methods that are shared between all display objects, such as transformation properties (x, y, scaleX, scaleY, etc),\r\n\t\t * caching, and mouse handlers.\r\n\t\t * @class DisplayObject\r\n\t\t * @extends EventDispatcher\r\n\t\t * @constructor\r\n\t\t **/\r\n\t\tfunction DisplayObject() {\r\n\t\t\tthis.EventDispatcher_constructor();\r\n\t\t\t\r\n\t\t\t\r\n\t\t// public properties:\r\n\t\t\t/**\r\n\t\t\t * The alpha (transparency) for this display object. 0 is fully transparent, 1 is fully opaque.\r\n\t\t\t * @property alpha\r\n\t\t\t * @type {Number}\r\n\t\t\t * @default 1\r\n\t\t\t **/\r\n\t\t\tthis.alpha = 1;\r\n\t\t\r\n\t\t\t/**\r\n\t\t\t * If a cache is active, this returns the canvas that holds the cached version of this display object. See {{#crossLink \"cache\"}}{{/crossLink}}\r\n\t\t\t * for more information.\r\n\t\t\t * @property cacheCanvas\r\n\t\t\t * @type {HTMLCanvasElement | Object}\r\n\t\t\t * @default null\r\n\t\t\t * @readonly\r\n\t\t\t **/\r\n\t\t\tthis.cacheCanvas = null;\r\n\t\t\r\n\t\t\t/**\r\n\t\t\t * Returns an ID number that uniquely identifies the current cache for this display object. This can be used to\r\n\t\t\t * determine if the cache has changed since a previous check.\r\n\t\t\t * @property cacheID\r\n\t\t\t * @type {Number}\r\n\t\t\t * @default 0\r\n\t\t\t */\r\n\t\t\tthis.cacheID = 0;\r\n\t\t\r\n\t\t\t/**\r\n\t\t\t * Unique ID for this display object. Makes display objects easier for some uses.\r\n\t\t\t * @property id\r\n\t\t\t * @type {Number}\r\n\t\t\t * @default -1\r\n\t\t\t **/\r\n\t\t\tthis.id = createjs.UID.get();\r\n\t\t\r\n\t\t\t/**\r\n\t\t\t * Indicates whether to include this object when running mouse interactions. Setting this to `false` for children\r\n\t\t\t * of a {{#crossLink \"Container\"}}{{/crossLink}} will cause events on the Container to not fire when that child is\r\n\t\t\t * clicked. Setting this property to `false` does not prevent the {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}\r\n\t\t\t * method from returning the child.\r\n\t\t\t *\r\n\t\t\t * <strong>Note:</strong> In EaselJS 0.7.0, the mouseEnabled property will not work properly with nested Containers. Please\r\n\t\t\t * check out the latest NEXT version in <a href=\"https://github.com/CreateJS/EaselJS/tree/master/lib\">GitHub</a> for an updated version with this issue resolved. The fix will be\r\n\t\t\t * provided in the next release of EaselJS.\r\n\t\t\t * @property mouseEnabled\r\n\t\t\t * @type {Boolean}\r\n\t\t\t * @default true\r\n\t\t\t **/\r\n\t\t\tthis.mouseEnabled = true;\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * If false, the tick will not run on this display object (or its children). This can provide some performance benefits.\r\n\t\t\t * In addition to preventing the \"tick\" event from being dispatched, it will also prevent tick related updates\r\n\t\t\t * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\r\n\t\t\t * @property tickEnabled\r\n\t\t\t * @type Boolean\r\n\t\t\t * @default true\r\n\t\t\t **/\r\n\t\t\tthis.tickEnabled = true;\r\n\t\t\r\n\t\t\t/**\r\n\t\t\t * An optional name for this display object. Included in {{#crossLink \"DisplayObject/toString\"}}{{/crossLink}} . Useful for\r\n\t\t\t * debugging.\r\n\t\t\t * @property name\r\n\t\t\t * @type {String}\r\n\t\t\t * @default null\r\n\t\t\t **/\r\n\t\t\tthis.name = null;\r\n\t\t\r\n\t\t\t/**\r\n\t\t\t * A reference to the {{#crossLink \"Container\"}}{{/crossLink}} or {{#crossLink \"Stage\"}}{{/crossLink}} object that\r\n\t\t\t * contains this display object, or null if it has not been added\r\n\t\t\t * to one.\r\n\t\t\t * @property parent\r\n\t\t\t * @final\r\n\t\t\t * @type {Container}\r\n\t\t\t * @default null\r\n\t\t\t * @readonly\r\n\t\t\t **/\r\n\t\t\tthis.parent = null;\r\n\t\t\r\n\t\t\t/**\r\n\t\t\t * The left offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate\r\n\t\t\t * around its center, you would set regX and {{#crossLink \"DisplayObject/regY:property\"}}{{/crossLink}} to 50.\r\n\t\t\t * @property regX\r\n\t\t\t * @type {Number}\r\n\t\t\t * @default 0\r\n\t\t\t **/\r\n\t\t\tthis.regX = 0;\r\n\t\t\r\n\t\t\t/**\r\n\t\t\t * The y offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate around\r\n\t\t\t * its center, you would set {{#crossLink \"DisplayObject/regX:property\"}}{{/crossLink}} and regY to 50.\r\n\t\t\t * @property regY\r\n\t\t\t * @type {Number}\r\n\t\t\t * @default 0\r\n\t\t\t **/\r\n\t\t\tthis.regY = 0;\r\n\t\t\r\n\t\t\t/**\r\n\t\t\t * The rotation in degrees for this display object.\r\n\t\t\t * @property rotation\r\n\t\t\t * @type {Number}\r\n\t\t\t * @default 0\r\n\t\t\t **/\r\n\t\t\tthis.rotation = 0;\r\n\t\t\r\n\t\t\t/**\r\n\t\t\t * The factor to stretch this display object horizontally. For example, setting scaleX to 2 will stretch the display\r\n\t\t\t * object to twice its nominal width. To horizontally flip an object, set the scale to a negative number.\r\n\t\t\t * @property scaleX\r\n\t\t\t * @type {Number}\r\n\t\t\t * @default 1\r\n\t\t\t **/\r\n\t\t\tthis.scaleX = 1;\r\n\t\t\r\n\t\t\t/**\r\n\t\t\t * The factor to stretch this display object vertically. For example, setting scaleY to 0.5 will stretch the display\r\n\t\t\t * object to half its nominal height. To vertically flip an object, set the scale to a negative number.\r\n\t\t\t * @property scaleY\r\n\t\t\t * @type {Number}\r\n\t\t\t * @default 1\r\n\t\t\t **/\r\n\t\t\tthis.scaleY = 1;\r\n\t\t\r\n\t\t\t/**\r\n\t\t\t * The factor to skew this display object horizontally.\r\n\t\t\t * @property skewX\r\n\t\t\t * @type {Number}\r\n\t\t\t * @default 0\r\n\t\t\t **/\r\n\t\t\tthis.skewX = 0;\r\n\t\t\r\n\t\t\t/**\r\n\t\t\t * The factor to skew this display object vertically.\r\n\t\t\t * @property skewY\r\n\t\t\t * @type {Number}\r\n\t\t\t * @default 0\r\n\t\t\t **/\r\n\t\t\tthis.skewY = 0;\r\n\t\t\r\n\t\t\t/**\r\n\t\t\t * A shadow object that defines the shadow to render on this display object. Set to `null` to remove a shadow. If\r\n\t\t\t * null, this property is inherited from the parent container.\r\n\t\t\t * @property shadow\r\n\t\t\t * @type {Shadow}\r\n\t\t\t * @default null\r\n\t\t\t **/\r\n\t\t\tthis.shadow = null;\r\n\t\t\r\n\t\t\t/**\r\n\t\t\t * Indicates whether this display object should be rendered to the canvas and included when running the Stage\r\n\t\t\t * {{#crossLink \"Stage/getObjectsUnderPoint\"}}{{/crossLink}} method.\r\n\t\t\t * @property visible\r\n\t\t\t * @type {Boolean}\r\n\t\t\t * @default true\r\n\t\t\t **/\r\n\t\t\tthis.visible = true;\r\n\t\t\r\n\t\t\t/**\r\n\t\t\t * The x (horizontal) position of the display object, relative to its parent.\r\n\t\t\t * @property x\r\n\t\t\t * @type {Number}\r\n\t\t\t * @default 0\r\n\t\t\t **/\r\n\t\t\tthis.x = 0;\r\n\t\t\r\n\t\t\t/** The y (vertical) position of the display object, relative to its parent.\r\n\t\t\t * @property y\r\n\t\t\t * @type {Number}\r\n\t\t\t * @default 0\r\n\t\t\t **/\r\n\t\t\tthis.y = 0;\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * If set, defines the transformation for this display object, overriding all other transformation properties\r\n\t\t\t * (x, y, rotation, scale, skew).\r\n\t\t\t * @property transformMatrix\r\n\t\t\t * @type {Matrix2D}\r\n\t\t\t * @default null\r\n\t\t\t **/\r\n\t\t\tthis.transformMatrix = null;\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * The composite operation indicates how the pixels of this display object will be composited with the elements\r\n\t\t\t * behind it. If `null`, this property is inherited from the parent container. For more information, read the\r\n\t\t\t * <a href=\"https://html.spec.whatwg.org/multipage/scripting.html#dom-context-2d-globalcompositeoperation\">\r\n\t\t\t * whatwg spec on compositing</a>. For a list of supported compositeOperation value, visit\r\n\t\t\t * <a href=\"https://drafts.fxtf.org/compositing/\">the W3C draft on Compositing and Blending</a>.\r\n\t\t\t * @property compositeOperation\r\n\t\t\t * @type {String}\r\n\t\t\t * @default null\r\n\t\t\t **/\r\n\t\t\tthis.compositeOperation = null;\r\n\t\t\r\n\t\t\t/**\r\n\t\t\t * Indicates whether the display object should be drawn to a whole pixel when\r\n\t\t\t * {{#crossLink \"Stage/snapToPixelEnabled\"}}{{/crossLink}} is true. To enable/disable snapping on whole\r\n\t\t\t * categories of display objects, set this value on the prototype (Ex. Text.prototype.snapToPixel = true).\r\n\t\t\t * @property snapToPixel\r\n\t\t\t * @type {Boolean}\r\n\t\t\t * @default true\r\n\t\t\t **/\r\n\t\t\tthis.snapToPixel = true;\r\n\t\t\r\n\t\t\t/**\r\n\t\t\t * An array of Filter objects to apply to this display object. Filters are only applied / updated when {{#crossLink \"cache\"}}{{/crossLink}}\r\n\t\t\t * or {{#crossLink \"updateCache\"}}{{/crossLink}} is called on the display object, and only apply to the area that is\r\n\t\t\t * cached.\r\n\t\t\t * @property filters\r\n\t\t\t * @type {Array}\r\n\t\t\t * @default null\r\n\t\t\t **/\r\n\t\t\tthis.filters = null;\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * A Shape instance that defines a vector mask (clipping path) for this display object.  The shape's transformation\r\n\t\t\t * will be applied relative to the display object's parent coordinates (as if it were a child of the parent).\r\n\t\t\t * @property mask\r\n\t\t\t * @type {Shape}\r\n\t\t\t * @default null\r\n\t\t\t */\r\n\t\t\tthis.mask = null;\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * A display object that will be tested when checking mouse interactions or testing {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}.\r\n\t\t\t * The hit area will have its transformation applied relative to this display object's coordinate space (as though\r\n\t\t\t * the hit test object were a child of this display object and relative to its regX/Y). The hitArea will be tested\r\n\t\t\t * using only its own `alpha` value regardless of the alpha value on the target display object, or the target's\r\n\t\t\t * ancestors (parents).\r\n\t\t\t * \r\n\t\t\t * If set on a {{#crossLink \"Container\"}}{{/crossLink}}, children of the Container will not receive mouse events.\r\n\t\t\t * This is similar to setting {{#crossLink \"mouseChildren\"}}{{/crossLink}} to false.\r\n\t\t\t *\r\n\t\t\t * Note that hitArea is NOT currently used by the `hitTest()` method, nor is it supported for {{#crossLink \"Stage\"}}{{/crossLink}}.\r\n\t\t\t * @property hitArea\r\n\t\t\t * @type {DisplayObject}\r\n\t\t\t * @default null\r\n\t\t\t */\r\n\t\t\tthis.hitArea = null;\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * A CSS cursor (ex. \"pointer\", \"help\", \"text\", etc) that will be displayed when the user hovers over this display\r\n\t\t\t * object. You must enable mouseover events using the {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}} method to\r\n\t\t\t * use this property. Setting a non-null cursor on a Container will override the cursor set on its descendants.\r\n\t\t\t * @property cursor\r\n\t\t\t * @type {String}\r\n\t\t\t * @default null\r\n\t\t\t */\r\n\t\t\tthis.cursor = null;\r\n\t\t\r\n\t\t\r\n\t\t// private properties:\r\n\t\t\t/**\r\n\t\t\t * @property _cacheOffsetX\r\n\t\t\t * @protected\r\n\t\t\t * @type {Number}\r\n\t\t\t * @default 0\r\n\t\t\t **/\r\n\t\t\tthis._cacheOffsetX = 0;\r\n\t\t\r\n\t\t\t/**\r\n\t\t\t * @property _cacheOffsetY\r\n\t\t\t * @protected\r\n\t\t\t * @type {Number}\r\n\t\t\t * @default 0\r\n\t\t\t **/\r\n\t\t\tthis._cacheOffsetY = 0;\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @property _filterOffsetX\r\n\t\t\t * @protected\r\n\t\t\t * @type {Number}\r\n\t\t\t * @default 0\r\n\t\t\t **/\r\n\t\t\tthis._filterOffsetX = 0;\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @property _filterOffsetY\r\n\t\t\t * @protected\r\n\t\t\t * @type {Number}\r\n\t\t\t * @default 0\r\n\t\t\t **/\r\n\t\t\tthis._filterOffsetY = 0;\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * @property _cacheScale\r\n\t\t\t * @protected\r\n\t\t\t * @type {Number}\r\n\t\t\t * @default 1\r\n\t\t\t **/\r\n\t\t\tthis._cacheScale = 1;\r\n\t\t\r\n\t\t\t/**\r\n\t\t\t* @property _cacheDataURLID\r\n\t\t\t* @protected\r\n\t\t\t* @type {Number}\r\n\t\t\t* @default 0\r\n\t\t\t*/\r\n\t\t\tthis._cacheDataURLID = 0;\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t* @property _cacheDataURL\r\n\t\t\t* @protected\r\n\t\t\t* @type {String}\r\n\t\t\t* @default null\r\n\t\t\t*/\r\n\t\t\tthis._cacheDataURL = null;\r\n\t\t\r\n\t\t\t/**\r\n\t\t\t * @property _props\r\n\t\t\t * @protected\r\n\t\t\t * @type {DisplayObject}\r\n\t\t\t * @default null\r\n\t\t\t **/\r\n\t\t\tthis._props = new createjs.DisplayProps();\r\n\t\t\r\n\t\t\t/**\r\n\t\t\t * @property _rectangle\r\n\t\t\t * @protected\r\n\t\t\t * @type {Rectangle}\r\n\t\t\t * @default null\r\n\t\t\t **/\r\n\t\t\tthis._rectangle = new createjs.Rectangle();\r\n\t\t\r\n\t\t\t/**\r\n\t\t\t * @property _bounds\r\n\t\t\t * @protected\r\n\t\t\t * @type {Rectangle}\r\n\t\t\t * @default null\r\n\t\t\t **/\r\n\t\t\tthis._bounds = null;\r\n\t\t}\r\n\t\tvar p = createjs.extend(DisplayObject, createjs.EventDispatcher);\r\n\t\r\n\t\t// TODO: deprecated\r\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\r\n\t\t\r\n\t// static properties:\r\n\t\t/**\r\n\t\t * Listing of mouse event names. Used in _hasMouseEventListener.\r\n\t\t * @property _MOUSE_EVENTS\r\n\t\t * @protected\r\n\t\t * @static\r\n\t\t * @type {Array}\r\n\t\t **/\r\n\t\tDisplayObject._MOUSE_EVENTS = [\"click\",\"dblclick\",\"mousedown\",\"mouseout\",\"mouseover\",\"pressmove\",\"pressup\",\"rollout\",\"rollover\"];\r\n\t\r\n\t\t/**\r\n\t\t * Suppresses errors generated when using features like hitTest, mouse events, and {{#crossLink \"getObjectsUnderPoint\"}}{{/crossLink}}\r\n\t\t * with cross domain content.\r\n\t\t * @property suppressCrossDomainErrors\r\n\t\t * @static\r\n\t\t * @type {Boolean}\r\n\t\t * @default false\r\n\t\t **/\r\n\t\tDisplayObject.suppressCrossDomainErrors = false;\r\n\t\t\r\n\t\t/**\r\n\t\t * @property _snapToPixelEnabled\r\n\t\t * @protected\r\n\t\t * @static\r\n\t\t * @type {Boolean}\r\n\t\t * @default false\r\n\t\t **/\r\n\t\tDisplayObject._snapToPixelEnabled = false; // stage.snapToPixelEnabled is temporarily copied here during a draw to provide global access.\r\n\t\r\n\t\t/**\r\n\t\t * @property _hitTestCanvas\r\n\t\t * @type {HTMLCanvasElement | Object}\r\n\t\t * @static\r\n\t\t * @protected\r\n\t\t **/\r\n\t\t/**\r\n\t\t * @property _hitTestContext\r\n\t\t * @type {CanvasRenderingContext2D}\r\n\t\t * @static\r\n\t\t * @protected\r\n\t\t **/\r\n\t\tvar canvas = createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"); // prevent errors on load in browsers without canvas.\r\n\t\tif (canvas.getContext) {\r\n\t\t\tDisplayObject._hitTestCanvas = canvas;\r\n\t\t\tDisplayObject._hitTestContext = canvas.getContext(\"2d\");\r\n\t\t\tcanvas.width = canvas.height = 1;\r\n\t\t}\r\n\t\r\n\t\t/**\r\n\t\t * @property _nextCacheID\r\n\t\t * @type {Number}\r\n\t\t * @static\r\n\t\t * @protected\r\n\t\t **/\r\n\t\tDisplayObject._nextCacheID = 1;\r\n\t\r\n\t\r\n\t// events:\r\n\t\t/**\r\n\t\t * Dispatched when the user presses their left mouse button over the display object. See the \r\n\t\t * {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n\t\t * @event mousedown\r\n\t\t * @since 0.6.0\r\n\t\t */\r\n\t\t \r\n\t\t/**\r\n\t\t * Dispatched when the user presses their left mouse button and then releases it while over the display object.\r\n\t\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n\t\t * @event click\r\n\t\t * @since 0.6.0\r\n\t\t */\r\n\t\t \r\n\t\t/**\r\n\t\t * Dispatched when the user double clicks their left mouse button over this display object.\r\n\t\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n\t\t * @event dblclick\r\n\t\t * @since 0.6.0\r\n\t\t */\r\n\t\t \r\n\t\t/**\r\n\t\t * Dispatched when the user's mouse enters this display object. This event must be enabled using \r\n\t\t * {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}. See also {{#crossLink \"DisplayObject/rollover:event\"}}{{/crossLink}}.\r\n\t\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n\t\t * @event mouseover\r\n\t\t * @since 0.6.0\r\n\t\t */\r\n\t\r\n\t\t/**\r\n\t\t * Dispatched when the user's mouse leaves this display object. This event must be enabled using \r\n\t\t * {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}. See also {{#crossLink \"DisplayObject/rollout:event\"}}{{/crossLink}}.\r\n\t\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n\t\t * @event mouseout\r\n\t\t * @since 0.6.0\r\n\t\t */\r\n\t\t \r\n\t\t/**\r\n\t\t * This event is similar to {{#crossLink \"DisplayObject/mouseover:event\"}}{{/crossLink}}, with the following\r\n\t\t * differences: it does not bubble, and it considers {{#crossLink \"Container\"}}{{/crossLink}} instances as an\r\n\t\t * aggregate of their content.\r\n\t\t * \r\n\t\t * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\r\n\t\t * shapeA and then directly on to shapeB. With a listener for {{#crossLink \"mouseover:event\"}}{{/crossLink}} on\r\n\t\t * myContainer, two events would be received, each targeting a child element:<OL>\r\n\t\t * <LI>when the mouse enters shapeA (target=shapeA)</LI>\r\n\t\t * <LI>when the mouse enters shapeB (target=shapeB)</LI>\r\n\t\t * </OL>\r\n\t\t * However, with a listener for \"rollover\" instead, only a single event is received when the mouse first enters\r\n\t\t * the aggregate myContainer content (target=myContainer).\r\n\t\t * \r\n\t\t * This event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\r\n\t\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n\t\t * @event rollover\r\n\t\t * @since 0.7.0\r\n\t\t */\r\n\t\t \r\n\t\t/**\r\n\t\t * This event is similar to {{#crossLink \"DisplayObject/mouseout:event\"}}{{/crossLink}}, with the following\r\n\t\t * differences: it does not bubble, and it considers {{#crossLink \"Container\"}}{{/crossLink}} instances as an\r\n\t\t * aggregate of their content.\r\n\t\t * \r\n\t\t * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\r\n\t\t * shapeA, then directly on to shapeB, then off both. With a listener for {{#crossLink \"mouseout:event\"}}{{/crossLink}}\r\n\t\t * on myContainer, two events would be received, each targeting a child element:<OL>\r\n\t\t * <LI>when the mouse leaves shapeA (target=shapeA)</LI>\r\n\t\t * <LI>when the mouse leaves shapeB (target=shapeB)</LI>\r\n\t\t * </OL>\r\n\t\t * However, with a listener for \"rollout\" instead, only a single event is received when the mouse leaves\r\n\t\t * the aggregate myContainer content (target=myContainer).\r\n\t\t * \r\n\t\t * This event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\r\n\t\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n\t\t * @event rollout\r\n\t\t * @since 0.7.0\r\n\t\t */\r\n\t\t \r\n\t\t/**\r\n\t\t * After a {{#crossLink \"DisplayObject/mousedown:event\"}}{{/crossLink}} occurs on a display object, a pressmove\r\n\t\t * event will be generated on that object whenever the mouse moves until the mouse press is released. This can be\r\n\t\t * useful for dragging and similar operations.\r\n\t\t *\r\n\t\t * **Please note** that if the initial mouse target from a `mousedown` event is removed from the stage after being pressed\r\n\t\t * (e.g. during a `pressmove` event), a `pressmove` event is still generated. However since it is no longer in the\r\n\t\t * display list, the event can not bubble. This means that previous ancestors (parent containers) will not receive\r\n\t\t * the event, and therefore can not re-dispatch it. If you intend to listen for `{{#crossLink \"DisplayObject/pressup:event\"}}{{/crossLink}}`\r\n\t\t * or `pressmove` on a dynamic object (such as a {{#crossLink \"MovieClip\"}}{{/crossLink}} or {{#crossLink \"Container\"}}{{/crossLink}}),\r\n\t\t * then ensure you set {{#crossLink \"Container/mouseChildren:property\"}}{{/crossLink}} to `false`.\r\n\t\t * @event pressmove\r\n\t\t * @since 0.7.0\r\n\t\t */\r\n\t\t \r\n\t\t/**\r\n\t\t * After a {{#crossLink \"DisplayObject/mousedown:event\"}}{{/crossLink}} occurs on a display object, a pressup event\r\n\t\t * will be generated on that object when that mouse press is released. This can be useful for dragging and similar\r\n\t\t * operations.\r\n\t\t *\r\n\t\t * **Please note** that if the initial mouse target from a `mousedown` event is removed from the stage after being pressed\r\n\t\t * (e.g. during a `pressmove` event), a `pressup` event is still generated. However since it is no longer in the\r\n\t\t * display list, the event can not bubble. This means that previous ancestors (parent containers) will not receive\r\n\t\t * the event, and therefore can not re-dispatch it. If you intend to listen for `{{#crossLink \"DisplayObject/pressmove:event\"}}{{/crossLink}}`\r\n\t\t * or `pressup` on a dynamic object (such as a {{#crossLink \"MovieClip\"}}{{/crossLink}} or {{#crossLink \"Container\"}}{{/crossLink}}),\r\n\t\t * then ensure you set {{#crossLink \"Container/mouseChildren:property\"}}{{/crossLink}} to `false`.\r\n\t\t * @event pressup\r\n\t\t * @since 0.7.0\r\n\t\t */\r\n\t\t \r\n\t\t/**\r\n\t\t * Dispatched when the display object is added to a parent container.\r\n\t\t * @event added\r\n\t\t */\r\n\t\t \r\n\t\t/**\r\n\t\t * Dispatched when the display object is removed from its parent container.\r\n\t\t * @event removed\r\n\t\t */\r\n\t\t \r\n\t\t/**\r\n\t\t * Dispatched on each display object on a stage whenever the stage updates. This occurs immediately before the\r\n\t\t * rendering (draw) pass. When {{#crossLink \"Stage/update\"}}{{/crossLink}} is called, first all display objects on\r\n\t\t * the stage dispatch the tick event, then all of the display objects are drawn to stage. Children will have their\r\n\t\t * {{#crossLink \"tick:event\"}}{{/crossLink}} event dispatched in order of their depth prior to the event being\r\n\t\t * dispatched on their parent.\r\n\t\t * @event tick\r\n\t\t * @param {Object} target The object that dispatched the event.\r\n\t\t * @param {String} type The event type.\r\n\t\t * @param {Array} params An array containing any arguments that were passed to the Stage.update() method. For\r\n\t\t *      example if you called stage.update(\"hello\"), then the params would be [\"hello\"].\r\n\t\t * @since 0.6.0\r\n\t\t */\r\n\t\t\r\n\t\t\r\n\t// getter / setters:\r\n\t\t/**\r\n\t\t * Use the {{#crossLink \"DisplayObject/stage:property\"}}{{/crossLink}} property instead.\r\n\t\t * @method getStage\r\n\t\t * @return {Stage}\r\n\t\t * @deprecated\r\n\t\t **/\r\n\t\tp.getStage = function() {\r\n\t\t\t// uses dynamic access to avoid circular dependencies;\r\n\t\t\tvar o = this, _Stage = createjs[\"Stage\"];\r\n\t\t\twhile (o.parent) { o = o.parent; }\r\n\t\t\tif (o instanceof _Stage) { return o; }\r\n\t\t\treturn null;\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Returns the Stage instance that this display object will be rendered on, or null if it has not been added to one.\r\n\t\t * @property stage\r\n\t\t * @type {Stage}\r\n\t\t * @readonly\r\n\t\t **/\r\n\t\ttry {\r\n\t\t\tObject.defineProperties(p, {\r\n\t\t\t\tstage: { get: p.getStage }\r\n\t\t\t});\r\n\t\t} catch (e) {}\r\n\t\r\n\t\r\n\t// public methods:\r\n\t\t/**\r\n\t\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\r\n\t\t * This does not account for whether it would be visible within the boundaries of the stage.\r\n\t\t *\r\n\t\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\r\n\t\t * @method isVisible\r\n\t\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\r\n\t\t **/\r\n\t\tp.isVisible = function() {\r\n\t\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\r\n\t\t * Returns <code>true</code> if the draw was handled (useful for overriding functionality).\r\n\t\t *\r\n\t\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\r\n\t\t * @method draw\r\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\r\n\t\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\r\n\t\t * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\r\n\t\t * @return {Boolean}\r\n\t\t **/\r\n\t\tp.draw = function(ctx, ignoreCache) {\r\n\t\t\tvar cacheCanvas = this.cacheCanvas;\r\n\t\t\tif (ignoreCache || !cacheCanvas) { return false; }\r\n\t\t\tvar scale = this._cacheScale;\r\n\t\t\tctx.drawImage(cacheCanvas, this._cacheOffsetX+this._filterOffsetX, this._cacheOffsetY+this._filterOffsetY, cacheCanvas.width/scale, cacheCanvas.height/scale);\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Applies this display object's transformation, alpha, globalCompositeOperation, clipping path (mask), and shadow\r\n\t\t * to the specified context. This is typically called prior to {{#crossLink \"DisplayObject/draw\"}}{{/crossLink}}.\r\n\t\t * @method updateContext\r\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas 2D to update.\r\n\t\t **/\r\n\t\tp.updateContext = function(ctx) {\r\n\t\t\tvar o=this, mask=o.mask, mtx= o._props.matrix;\r\n\t\t\t\r\n\t\t\tif (mask && mask.graphics && !mask.graphics.isEmpty()) {\r\n\t\t\t\tmask.getMatrix(mtx);\r\n\t\t\t\tctx.transform(mtx.a,  mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\r\n\t\t\t\t\r\n\t\t\t\tmask.graphics.drawAsPath(ctx);\r\n\t\t\t\tctx.clip();\r\n\t\t\t\t\r\n\t\t\t\tmtx.invert();\r\n\t\t\t\tctx.transform(mtx.a,  mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.getMatrix(mtx);\r\n\t\t\tvar tx = mtx.tx, ty = mtx.ty;\r\n\t\t\tif (DisplayObject._snapToPixelEnabled && o.snapToPixel) {\r\n\t\t\t\ttx = tx + (tx < 0 ? -0.5 : 0.5) | 0;\r\n\t\t\t\tty = ty + (ty < 0 ? -0.5 : 0.5) | 0;\r\n\t\t\t}\r\n\t\t\tctx.transform(mtx.a,  mtx.b, mtx.c, mtx.d, tx, ty);\r\n\t\t\tctx.globalAlpha *= o.alpha;\r\n\t\t\tif (o.compositeOperation) { ctx.globalCompositeOperation = o.compositeOperation; }\r\n\t\t\tif (o.shadow) { this._applyShadow(ctx, o.shadow); }\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Draws the display object into a new canvas, which is then used for subsequent draws. For complex content\r\n\t\t * that does not change frequently (ex. a Container with many children that do not move, or a complex vector Shape),\r\n\t\t * this can provide for much faster rendering because the content does not need to be re-rendered each tick. The\r\n\t\t * cached display object can be moved, rotated, faded, etc freely, however if its content changes, you must\r\n\t\t * manually update the cache by calling <code>updateCache()</code> or <code>cache()</code> again. You must specify\r\n\t\t * the cache area via the x, y, w, and h parameters. This defines the rectangle that will be rendered and cached\r\n\t\t * using this display object's coordinates.\r\n\t\t *\r\n\t\t * <h4>Example</h4>\r\n\t\t * For example if you defined a Shape that drew a circle at 0, 0 with a radius of 25:\r\n\t\t *\r\n\t\t *      var shape = new createjs.Shape();\r\n\t\t *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0, 0, 25);\r\n\t\t *      myShape.cache(-25, -25, 50, 50);\r\n\t\t *\r\n\t\t * Note that filters need to be defined <em>before</em> the cache is applied. Check out the {{#crossLink \"Filter\"}}{{/crossLink}}\r\n\t\t * class for more information. Some filters (ex. BlurFilter) will not work as expected in conjunction with the scale param.\r\n\t\t * \r\n\t\t * Usually, the resulting cacheCanvas will have the dimensions width*scale by height*scale, however some filters (ex. BlurFilter)\r\n\t\t * will add padding to the canvas dimensions.\r\n\t\t *\r\n\t\t * @method cache\r\n\t\t * @param {Number} x The x coordinate origin for the cache region.\r\n\t\t * @param {Number} y The y coordinate origin for the cache region.\r\n\t\t * @param {Number} width The width of the cache region.\r\n\t\t * @param {Number} height The height of the cache region.\r\n\t\t * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape using\r\n\t\t * \tmyShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and rotate\r\n\t\t * \tcached elements with greater fidelity. Default is 1.\r\n\t\t **/\r\n\t\tp.cache = function(x, y, width, height, scale) {\r\n\t\t\t// draw to canvas.\r\n\t\t\tscale = scale||1;\r\n\t\t\tif (!this.cacheCanvas) { this.cacheCanvas = createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"); }\r\n\t\t\tthis._cacheWidth = width;\r\n\t\t\tthis._cacheHeight = height;\r\n\t\t\tthis._cacheOffsetX = x;\r\n\t\t\tthis._cacheOffsetY = y;\r\n\t\t\tthis._cacheScale = scale;\r\n\t\t\tthis.updateCache();\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Redraws the display object to its cache. Calling updateCache without an active cache will throw an error.\r\n\t\t * If compositeOperation is null the current cache will be cleared prior to drawing. Otherwise the display object\r\n\t\t * will be drawn over the existing cache using the specified compositeOperation.\r\n\t\t *\r\n\t\t * <h4>Example</h4>\r\n\t\t * Clear the current graphics of a cached shape, draw some new instructions, and then update the cache. The new line\r\n\t\t * will be drawn on top of the old one.\r\n\t\t *\r\n\t\t *      // Not shown: Creating the shape, and caching it.\r\n\t\t *      shapeInstance.clear();\r\n\t\t *      shapeInstance.setStrokeStyle(3).beginStroke(\"#ff0000\").moveTo(100, 100).lineTo(200,200);\r\n\t\t *      shapeInstance.updateCache();\r\n\t\t *\r\n\t\t * @method updateCache\r\n\t\t * @param {String} compositeOperation The compositeOperation to use, or null to clear the cache and redraw it.\r\n\t\t * <a href=\"https://html.spec.whatwg.org/multipage/scripting.html#dom-context-2d-globalcompositeoperation\">\r\n\t\t * whatwg spec on compositing</a>.\r\n\t\t **/\r\n\t\tp.updateCache = function(compositeOperation) {\r\n\t\t\tvar cacheCanvas = this.cacheCanvas;\r\n\t\t\tif (!cacheCanvas) { throw \"cache() must be called before updateCache()\"; }\r\n\t\t\tvar scale = this._cacheScale, offX = this._cacheOffsetX*scale, offY = this._cacheOffsetY*scale;\r\n\t\t\tvar w = this._cacheWidth, h = this._cacheHeight, ctx = cacheCanvas.getContext(\"2d\");\r\n\t\t\t\r\n\t\t\tvar fBounds = this._getFilterBounds();\r\n\t\t\toffX += (this._filterOffsetX = fBounds.x);\r\n\t\t\toffY += (this._filterOffsetY = fBounds.y);\r\n\t\t\t\r\n\t\t\tw = Math.ceil(w*scale) + fBounds.width;\r\n\t\t\th = Math.ceil(h*scale) + fBounds.height;\r\n\t\t\tif (w != cacheCanvas.width || h != cacheCanvas.height) {\r\n\t\t\t\t// TODO: it would be nice to preserve the content if there is a compositeOperation.\r\n\t\t\t\tcacheCanvas.width = w;\r\n\t\t\t\tcacheCanvas.height = h;\r\n\t\t\t} else if (!compositeOperation) {\r\n\t\t\t\tctx.clearRect(0, 0, w+1, h+1);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tctx.save();\r\n\t\t\tctx.globalCompositeOperation = compositeOperation;\r\n\t\t\tctx.setTransform(scale, 0, 0, scale, -offX, -offY);\r\n\t\t\tthis.draw(ctx, true);\r\n\t\t\t// TODO: filters and cache scale don't play well together at present.\r\n\t\t\tthis._applyFilters();\r\n\t\t\tctx.restore();\r\n\t\t\tthis.cacheID = DisplayObject._nextCacheID++;\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Clears the current cache. See {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} for more information.\r\n\t\t * @method uncache\r\n\t\t **/\r\n\t\tp.uncache = function() {\r\n\t\t\tthis._cacheDataURL = this.cacheCanvas = null;\r\n\t\t\tthis.cacheID = this._cacheOffsetX = this._cacheOffsetY = this._filterOffsetX = this._filterOffsetY = 0;\r\n\t\t\tthis._cacheScale = 1;\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Returns a data URL for the cache, or null if this display object is not cached.\r\n\t\t * Uses cacheID to ensure a new data URL is not generated if the cache has not changed.\r\n\t\t * @method getCacheDataURL\r\n\t\t * @return {String} The image data url for the cache.\r\n\t\t **/\r\n\t\tp.getCacheDataURL = function() {\r\n\t\t\tif (!this.cacheCanvas) { return null; }\r\n\t\t\tif (this.cacheID != this._cacheDataURLID) { this._cacheDataURL = this.cacheCanvas.toDataURL(); }\r\n\t\t\treturn this._cacheDataURL;\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Transforms the specified x and y position from the coordinate space of the display object\r\n\t\t * to the global (stage) coordinate space. For example, this could be used to position an HTML label\r\n\t\t * over a specific point on a nested display object. Returns a Point instance with x and y properties\r\n\t\t * correlating to the transformed coordinates on the stage.\r\n\t\t *\r\n\t\t * <h4>Example</h4>\r\n\t\t *\r\n\t\t *      displayObject.x = 300;\r\n\t\t *      displayObject.y = 200;\r\n\t\t *      stage.addChild(displayObject);\r\n\t\t *      var point = displayObject.localToGlobal(100, 100);\r\n\t\t *      // Results in x=400, y=300\r\n\t\t *\r\n\t\t * @method localToGlobal\r\n\t\t * @param {Number} x The x position in the source display object to transform.\r\n\t\t * @param {Number} y The y position in the source display object to transform.\r\n\t\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned. \r\n\t\t * @return {Point} A Point instance with x and y properties correlating to the transformed coordinates\r\n\t\t * on the stage.\r\n\t\t **/\r\n\t\tp.localToGlobal = function(x, y, pt) {\r\n\t\t\treturn this.getConcatenatedMatrix(this._props.matrix).transformPoint(x,y, pt||new createjs.Point());\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Transforms the specified x and y position from the global (stage) coordinate space to the\r\n\t\t * coordinate space of the display object. For example, this could be used to determine\r\n\t\t * the current mouse position within the display object. Returns a Point instance with x and y properties\r\n\t\t * correlating to the transformed position in the display object's coordinate space.\r\n\t\t *\r\n\t\t * <h4>Example</h4>\r\n\t\t *\r\n\t\t *      displayObject.x = 300;\r\n\t\t *      displayObject.y = 200;\r\n\t\t *      stage.addChild(displayObject);\r\n\t\t *      var point = displayObject.globalToLocal(100, 100);\r\n\t\t *      // Results in x=-200, y=-100\r\n\t\t *\r\n\t\t * @method globalToLocal\r\n\t\t * @param {Number} x The x position on the stage to transform.\r\n\t\t * @param {Number} y The y position on the stage to transform.\r\n\t\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned. \r\n\t\t * @return {Point} A Point instance with x and y properties correlating to the transformed position in the\r\n\t\t * display object's coordinate space.\r\n\t\t **/\r\n\t\tp.globalToLocal = function(x, y, pt) {\r\n\t\t\treturn this.getConcatenatedMatrix(this._props.matrix).invert().transformPoint(x,y, pt||new createjs.Point());\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Transforms the specified x and y position from the coordinate space of this display object to the coordinate\r\n\t\t * space of the target display object. Returns a Point instance with x and y properties correlating to the\r\n\t\t * transformed position in the target's coordinate space. Effectively the same as using the following code with\r\n\t\t * {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}} and {{#crossLink \"DisplayObject/globalToLocal\"}}{{/crossLink}}.\r\n\t\t *\r\n\t\t *      var pt = this.localToGlobal(x, y);\r\n\t\t *      pt = target.globalToLocal(pt.x, pt.y);\r\n\t\t *\r\n\t\t * @method localToLocal\r\n\t\t * @param {Number} x The x position in the source display object to transform.\r\n\t\t * @param {Number} y The y position on the source display object to transform.\r\n\t\t * @param {DisplayObject} target The target display object to which the coordinates will be transformed.\r\n\t\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned. \r\n\t\t * @return {Point} Returns a Point instance with x and y properties correlating to the transformed position\r\n\t\t * in the target's coordinate space.\r\n\t\t **/\r\n\t\tp.localToLocal = function(x, y, target, pt) {\r\n\t\t\tpt = this.localToGlobal(x, y, pt);\r\n\t\t\treturn target.globalToLocal(pt.x, pt.y, pt);\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Shortcut method to quickly set the transform properties on the display object. All parameters are optional.\r\n\t\t * Omitted parameters will have the default value set.\r\n\t\t *\r\n\t\t * <h4>Example</h4>\r\n\t\t *\r\n\t\t *      displayObject.setTransform(100, 100, 2, 2);\r\n\t\t *\r\n\t\t * @method setTransform\r\n\t\t * @param {Number} [x=0] The horizontal translation (x position) in pixels\r\n\t\t * @param {Number} [y=0] The vertical translation (y position) in pixels\r\n\t\t * @param {Number} [scaleX=1] The horizontal scale, as a percentage of 1\r\n\t\t * @param {Number} [scaleY=1] the vertical scale, as a percentage of 1\r\n\t\t * @param {Number} [rotation=0] The rotation, in degrees\r\n\t\t * @param {Number} [skewX=0] The horizontal skew factor\r\n\t\t * @param {Number} [skewY=0] The vertical skew factor\r\n\t\t * @param {Number} [regX=0] The horizontal registration point in pixels\r\n\t\t * @param {Number} [regY=0] The vertical registration point in pixels\r\n\t\t * @return {DisplayObject} Returns this instance. Useful for chaining commands.\r\n\t\t * @chainable\r\n\t\t*/\r\n\t\tp.setTransform = function(x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\r\n\t\t\tthis.x = x || 0;\r\n\t\t\tthis.y = y || 0;\r\n\t\t\tthis.scaleX = scaleX == null ? 1 : scaleX;\r\n\t\t\tthis.scaleY = scaleY == null ? 1 : scaleY;\r\n\t\t\tthis.rotation = rotation || 0;\r\n\t\t\tthis.skewX = skewX || 0;\r\n\t\t\tthis.skewY = skewY || 0;\r\n\t\t\tthis.regX = regX || 0;\r\n\t\t\tthis.regY = regY || 0;\r\n\t\t\treturn this;\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Returns a matrix based on this object's current transform.\r\n\t\t * @method getMatrix\r\n\t\t * @param {Matrix2D} matrix Optional. A Matrix2D object to populate with the calculated values. If null, a new\r\n\t\t * Matrix object is returned.\r\n\t\t * @return {Matrix2D} A matrix representing this display object's transform.\r\n\t\t **/\r\n\t\tp.getMatrix = function(matrix) {\r\n\t\t\tvar o = this, mtx = matrix&&matrix.identity() || new createjs.Matrix2D();\r\n\t\t\treturn o.transformMatrix ?  mtx.copy(o.transformMatrix) : mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Generates a Matrix2D object representing the combined transform of the display object and all of its\r\n\t\t * parent Containers up to the highest level ancestor (usually the {{#crossLink \"Stage\"}}{{/crossLink}}). This can\r\n\t\t * be used to transform positions between coordinate spaces, such as with {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}}\r\n\t\t * and {{#crossLink \"DisplayObject/globalToLocal\"}}{{/crossLink}}.\r\n\t\t * @method getConcatenatedMatrix\r\n\t\t * @param {Matrix2D} [matrix] A {{#crossLink \"Matrix2D\"}}{{/crossLink}} object to populate with the calculated values.\r\n\t\t * If null, a new Matrix2D object is returned.\r\n\t\t * @return {Matrix2D} The combined matrix.\r\n\t\t **/\r\n\t\tp.getConcatenatedMatrix = function(matrix) {\r\n\t\t\tvar o = this, mtx = this.getMatrix(matrix);\r\n\t\t\twhile (o = o.parent) {\r\n\t\t\t\tmtx.prependMatrix(o.getMatrix(o._props.matrix));\r\n\t\t\t}\r\n\t\t\treturn mtx;\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Generates a DisplayProps object representing the combined display properties of the  object and all of its\r\n\t\t * parent Containers up to the highest level ancestor (usually the {{#crossLink \"Stage\"}}{{/crossLink}}).\r\n\t\t * @method getConcatenatedDisplayProps\r\n\t\t * @param {DisplayProps} [props] A {{#crossLink \"DisplayProps\"}}{{/crossLink}} object to populate with the calculated values.\r\n\t\t * If null, a new DisplayProps object is returned.\r\n\t\t * @return {DisplayProps} The combined display properties.\r\n\t\t **/\r\n\t\tp.getConcatenatedDisplayProps = function(props) {\r\n\t\t\tprops = props ? props.identity() : new createjs.DisplayProps();\r\n\t\t\tvar o = this, mtx = o.getMatrix(props.matrix); \r\n\t\t\tdo {\r\n\t\t\t\tprops.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation);\r\n\t\t\t\t\r\n\t\t\t\t// we do this to avoid problems with the matrix being used for both operations when o._props.matrix is passed in as the props param.\r\n\t\t\t\t// this could be simplified (ie. just done as part of the prepend above) if we switched to using a pool.\r\n\t\t\t\tif (o != this) { mtx.prependMatrix(o.getMatrix(o._props.matrix)); }\r\n\t\t\t} while (o = o.parent);\r\n\t\t\treturn props;\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Tests whether the display object intersects the specified point in <em>local</em> coordinates (ie. draws a pixel\r\n\t\t * with alpha > 0 at the specified position). This ignores the alpha, shadow, hitArea, mask, and compositeOperation\r\n\t\t * of the display object.\r\n\t\t *\r\n\t\t * <h4>Example</h4>\r\n\t\t *\r\n\t\t * \t\tvar myShape = new createjs.Shape();\r\n\t\t * \t\tmyShape.graphics.beginFill(\"red\").drawRect(100, 100, 20, 50);\r\n\t\t *\r\n\t\t * \t\tconsole.log(myShape.hitTest(10,10); // false\r\n\t\t * \t\tconsole.log(myShape.hitTest(110, 25); // true\r\n\t\t *\r\n\t\t * Note that to use Stage coordinates (such as {{#crossLink \"Stage/mouseX:property\"}}{{/crossLink}}), they must\r\n\t\t * first be converted to local coordinates:\r\n\t\t *\r\n\t\t *      stage.addEventListener(\"stagemousedown\", handleMouseDown);\r\n\t\t *      function handleMouseDown(event) {\r\n\t\t *      \tvar p = myShape.globalToLocal(stage.mouseX, stage.mouseY);\r\n\t\t *          var hit = myShape.hitTest(p.x, p.y);\r\n\t\t *      }\r\n\t\t *\r\n\t\t * Shape-to-shape collision is not currently supported by EaselJS.\r\n\t\t *\r\n\t\t * @method hitTest\r\n\t\t * @param {Number} x The x position to check in the display object's local coordinates.\r\n\t\t * @param {Number} y The y position to check in the display object's local coordinates.\r\n\t\t * @return {Boolean} A Boolean indicating whether a visible portion of the DisplayObject intersect the specified\r\n\t\t * local Point.\r\n\t\t*/\r\n\t\tp.hitTest = function(x, y) {\r\n\t\t\tvar ctx = DisplayObject._hitTestContext;\r\n\t\t\tctx.setTransform(1, 0, 0, 1, -x, -y);\r\n\t\t\tthis.draw(ctx);\r\n\t\r\n\t\t\tvar hit = this._testHit(ctx);\r\n\t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\t\tctx.clearRect(0, 0, 2, 2);\r\n\t\t\treturn hit;\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Provides a chainable shortcut method for setting a number of properties on the instance.\r\n\t\t *\r\n\t\t * <h4>Example</h4>\r\n\t\t *\r\n\t\t *      var myGraphics = new createjs.Graphics().beginFill(\"#ff0000\").drawCircle(0, 0, 25);\r\n\t\t *      var shape = stage.addChild(new createjs.Shape()).set({graphics:myGraphics, x:100, y:100, alpha:0.5});\r\n\t\t *\r\n\t\t * @method set\r\n\t\t * @param {Object} props A generic object containing properties to copy to the DisplayObject instance.\r\n\t\t * @return {DisplayObject} Returns the instance the method is called on (useful for chaining calls.)\r\n\t\t * @chainable\r\n\t\t*/\r\n\t\tp.set = function(props) {\r\n\t\t\tfor (var n in props) { this[n] = props[n]; }\r\n\t\t\treturn this;\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Returns a rectangle representing this object's bounds in its local coordinate system (ie. with no transformation).\r\n\t\t * Objects that have been cached will return the bounds of the cache.\r\n\t\t * \r\n\t\t * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use \r\n\t\t * {{#crossLink \"DisplayObject/setBounds\"}}{{/crossLink}} so that they are included when calculating Container\r\n\t\t * bounds.\r\n\t\t * \r\n\t\t * <table>\r\n\t\t * \t<tr><td><b>All</b></td><td>\r\n\t\t * \t\tAll display objects support setting bounds manually using setBounds(). Likewise, display objects that\r\n\t\t * \t\thave been cached using cache() will return the bounds of their cache. Manual and cache bounds will override\r\n\t\t * \t\tthe automatic calculations listed below.\r\n\t\t * \t</td></tr>\r\n\t\t * \t<tr><td><b>Bitmap</b></td><td>\r\n\t\t * \t\tReturns the width and height of the sourceRect (if specified) or image, extending from (x=0,y=0).\r\n\t\t * \t</td></tr>\r\n\t\t * \t<tr><td><b>Sprite</b></td><td>\r\n\t\t * \t\tReturns the bounds of the current frame. May have non-zero x/y if a frame registration point was specified\r\n\t\t * \t\tin the spritesheet data. See also {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}}\r\n\t\t * \t</td></tr>\r\n\t\t * \t<tr><td><b>Container</b></td><td>\r\n\t\t * \t\tReturns the aggregate (combined) bounds of all children that return a non-null value from getBounds().\r\n\t\t * \t</td></tr>\r\n\t\t * \t<tr><td><b>Shape</b></td><td>\r\n\t\t * \t\tDoes not currently support automatic bounds calculations. Use setBounds() to manually define bounds.\r\n\t\t * \t</td></tr>\r\n\t\t * \t<tr><td><b>Text</b></td><td>\r\n\t\t * \t\tReturns approximate bounds. Horizontal values (x/width) are quite accurate, but vertical values (y/height) are\r\n\t\t * \t\tnot, especially when using textBaseline values other than \"top\".\r\n\t\t * \t</td></tr>\r\n\t\t * \t<tr><td><b>BitmapText</b></td><td>\r\n\t\t * \t\tReturns approximate bounds. Values will be more accurate if spritesheet frame registration points are close\r\n\t\t * \t\tto (x=0,y=0).\r\n\t\t * \t</td></tr>\r\n\t\t* </table>\r\n\t\t * \r\n\t\t * Bounds can be expensive to calculate for some objects (ex. text, or containers with many children), and\r\n\t\t * are recalculated each time you call getBounds(). You can prevent recalculation on static objects by setting the\r\n\t\t * bounds explicitly:\r\n\t\t * \r\n\t\t * \tvar bounds = obj.getBounds();\r\n\t\t * \tobj.setBounds(bounds.x, bounds.y, bounds.width, bounds.height);\r\n\t\t * \t// getBounds will now use the set values, instead of recalculating\r\n\t\t * \r\n\t\t * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\r\n\t\t * values if you need to retain it.\r\n\t\t * \r\n\t\t * \tvar myBounds = obj.getBounds().clone();\r\n\t\t * \t// OR:\r\n\t\t * \tmyRect.copy(obj.getBounds());\r\n\t\t * \r\n\t\t * @method getBounds\r\n\t\t * @return {Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this\r\n\t\t * object.\r\n\t\t **/\r\n\t\tp.getBounds = function() {\r\n\t\t\tif (this._bounds) { return this._rectangle.copy(this._bounds); }\r\n\t\t\tvar cacheCanvas = this.cacheCanvas;\r\n\t\t\tif (cacheCanvas) {\r\n\t\t\t\tvar scale = this._cacheScale;\r\n\t\t\t\treturn this._rectangle.setValues(this._cacheOffsetX, this._cacheOffsetY, cacheCanvas.width/scale, cacheCanvas.height/scale);\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Returns a rectangle representing this object's bounds in its parent's coordinate system (ie. with transformations applied).\r\n\t\t * Objects that have been cached will return the transformed bounds of the cache.\r\n\t\t * \r\n\t\t * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use \r\n\t\t * {{#crossLink \"DisplayObject/setBounds\"}}{{/crossLink}} so that they are included when calculating Container\r\n\t\t * bounds.\r\n\t\t * \r\n\t\t * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\r\n\t\t * values if you need to retain it.\r\n\t\t * \r\n\t\t * Container instances calculate aggregate bounds for all children that return bounds via getBounds.\r\n\t\t * @method getTransformedBounds\r\n\t\t * @return {Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this object.\r\n\t\t **/\r\n\t\tp.getTransformedBounds = function() {\r\n\t\t\treturn this._getBounds();\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Allows you to manually specify the bounds of an object that either cannot calculate their own bounds (ex. Shape &\r\n\t\t * Text) for future reference, or so the object can be included in Container bounds. Manually set bounds will always\r\n\t\t * override calculated bounds.\r\n\t\t * \r\n\t\t * The bounds should be specified in the object's local (untransformed) coordinates. For example, a Shape instance\r\n\t\t * with a 25px radius circle centered at 0,0 would have bounds of (-25, -25, 50, 50).\r\n\t\t * @method setBounds\r\n\t\t * @param {Number} x The x origin of the bounds. Pass null to remove the manual bounds.\r\n\t\t * @param {Number} y The y origin of the bounds.\r\n\t\t * @param {Number} width The width of the bounds.\r\n\t\t * @param {Number} height The height of the bounds.\r\n\t\t **/\r\n\t\tp.setBounds = function(x, y, width, height) {\r\n\t\t\tif (x == null) { this._bounds = x; }\r\n\t\t\tthis._bounds = (this._bounds || new createjs.Rectangle()).setValues(x, y, width, height);\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Returns a clone of this DisplayObject. Some properties that are specific to this instance's current context are\r\n\t\t * reverted to their defaults (for example .parent). Caches are not maintained across clones, and some elements\r\n\t\t * are copied by reference (masks, individual filter instances, hit area)\r\n\t\t * @method clone\r\n\t\t * @return {DisplayObject} A clone of the current DisplayObject instance.\r\n\t\t **/\r\n\t\tp.clone = function() {\r\n\t\t\treturn this._cloneProps(new DisplayObject());\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Returns a string representation of this object.\r\n\t\t * @method toString\r\n\t\t * @return {String} a string representation of the instance.\r\n\t\t **/\r\n\t\tp.toString = function() {\r\n\t\t\treturn \"[DisplayObject (name=\"+  this.name +\")]\";\r\n\t\t};\r\n\t\r\n\t\r\n\t// private methods:\r\n\t\t// separated so it can be used more easily in subclasses:\r\n\t\t/**\r\n\t\t * @method _cloneProps\r\n\t\t * @param {DisplayObject} o The DisplayObject instance which will have properties from the current DisplayObject\r\n\t\t * instance copied into.\r\n\t\t * @return {DisplayObject} o\r\n\t\t * @protected\r\n\t\t **/\r\n\t\tp._cloneProps = function(o) {\r\n\t\t\to.alpha = this.alpha;\r\n\t\t\to.mouseEnabled = this.mouseEnabled;\r\n\t\t\to.tickEnabled = this.tickEnabled;\r\n\t\t\to.name = this.name;\r\n\t\t\to.regX = this.regX;\r\n\t\t\to.regY = this.regY;\r\n\t\t\to.rotation = this.rotation;\r\n\t\t\to.scaleX = this.scaleX;\r\n\t\t\to.scaleY = this.scaleY;\r\n\t\t\to.shadow = this.shadow;\r\n\t\t\to.skewX = this.skewX;\r\n\t\t\to.skewY = this.skewY;\r\n\t\t\to.visible = this.visible;\r\n\t\t\to.x  = this.x;\r\n\t\t\to.y = this.y;\r\n\t\t\to.compositeOperation = this.compositeOperation;\r\n\t\t\to.snapToPixel = this.snapToPixel;\r\n\t\t\to.filters = this.filters==null?null:this.filters.slice(0);\r\n\t\t\to.mask = this.mask;\r\n\t\t\to.hitArea = this.hitArea;\r\n\t\t\to.cursor = this.cursor;\r\n\t\t\to._bounds = this._bounds;\r\n\t\t\treturn o;\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * @method _applyShadow\r\n\t\t * @protected\r\n\t\t * @param {CanvasRenderingContext2D} ctx\r\n\t\t * @param {Shadow} shadow\r\n\t\t **/\r\n\t\tp._applyShadow = function(ctx, shadow) {\r\n\t\t\tshadow = shadow || Shadow.identity;\r\n\t\t\tctx.shadowColor = shadow.color;\r\n\t\t\tctx.shadowOffsetX = shadow.offsetX;\r\n\t\t\tctx.shadowOffsetY = shadow.offsetY;\r\n\t\t\tctx.shadowBlur = shadow.blur;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t/**\r\n\t\t * @method _tick\r\n\t\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\r\n\t\t * @protected\r\n\t\t **/\r\n\t\tp._tick = function(evtObj) {\r\n\t\t\t// because tick can be really performance sensitive, check for listeners before calling dispatchEvent.\r\n\t\t\tvar ls = this._listeners;\r\n\t\t\tif (ls && ls[\"tick\"]) {\r\n\t\t\t\t// reset & reuse the event object to avoid construction / GC costs:\r\n\t\t\t\tevtObj.target = null;\r\n\t\t\t\tevtObj.propagationStopped = evtObj.immediatePropagationStopped = false;\r\n\t\t\t\tthis.dispatchEvent(evtObj);\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * @method _testHit\r\n\t\t * @protected\r\n\t\t * @param {CanvasRenderingContext2D} ctx\r\n\t\t * @return {Boolean}\r\n\t\t **/\r\n\t\tp._testHit = function(ctx) {\r\n\t\t\ttry {\r\n\t\t\t\tvar hit = ctx.getImageData(0, 0, 1, 1).data[3] > 1;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tif (!DisplayObject.suppressCrossDomainErrors) {\r\n\t\t\t\t\tthrow \"An error has occurred. This is most likely due to security restrictions on reading canvas pixel data with local or cross-domain images.\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn hit;\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * @method _applyFilters\r\n\t\t * @protected\r\n\t\t **/\r\n\t\tp._applyFilters = function() {\r\n\t\t\tif (!this.filters || this.filters.length == 0 || !this.cacheCanvas) { return; }\r\n\t\t\tvar l = this.filters.length;\r\n\t\t\tvar ctx = this.cacheCanvas.getContext(\"2d\");\r\n\t\t\tvar w = this.cacheCanvas.width;\r\n\t\t\tvar h = this.cacheCanvas.height;\r\n\t\t\tfor (var i=0; i<l; i++) {\r\n\t\t\t\tthis.filters[i].applyFilter(ctx, 0, 0, w, h);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * @method _getFilterBounds\r\n\t\t * @return {Rectangle}\r\n\t\t * @protected\r\n\t\t **/\r\n\t\tp._getFilterBounds = function(rect) {\r\n\t\t\tvar l, filters = this.filters, bounds = this._rectangle.setValues(0,0,0,0);\r\n\t\t\tif (!filters || !(l=filters.length)) { return bounds; }\r\n\t\t\t\r\n\t\t\tfor (var i=0; i<l; i++) {\r\n\t\t\t\tvar f = this.filters[i];\r\n\t\t\t\tf.getBounds&&f.getBounds(bounds);\r\n\t\t\t}\r\n\t\t\treturn bounds;\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * @method _getBounds\r\n\t\t * @param {Matrix2D} matrix\r\n\t\t * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\r\n\t\t * @return {Rectangle}\r\n\t\t * @protected\r\n\t\t **/\r\n\t\tp._getBounds = function(matrix, ignoreTransform){\r\n\t\t\treturn this._transformBounds(this.getBounds(), matrix, ignoreTransform);\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * @method _transformBounds\r\n\t\t * @param {Rectangle} bounds\r\n\t\t * @param {Matrix2D} matrix\r\n\t\t * @param {Boolean} ignoreTransform\r\n\t\t * @return {Rectangle}\r\n\t\t * @protected\r\n\t\t **/\r\n\t\tp._transformBounds = function(bounds, matrix, ignoreTransform) {\r\n\t\t\tif (!bounds) { return bounds; }\r\n\t\t\tvar x = bounds.x, y = bounds.y, width = bounds.width, height = bounds.height, mtx = this._props.matrix;\r\n\t\t\tmtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\r\n\t\t\t\r\n\t\t\tif (x || y) { mtx.appendTransform(0,0,1,1,0,0,0,-x,-y); } // TODO: simplify this.\r\n\t\t\tif (matrix) { mtx.prependMatrix(matrix); }\r\n\t\t\t\r\n\t\t\tvar x_a = width*mtx.a, x_b = width*mtx.b;\r\n\t\t\tvar y_c = height*mtx.c, y_d = height*mtx.d;\r\n\t\t\tvar tx = mtx.tx, ty = mtx.ty;\r\n\t\t\t\r\n\t\t\tvar minX = tx, maxX = tx, minY = ty, maxY = ty;\r\n\t\r\n\t\t\tif ((x = x_a + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\r\n\t\t\tif ((x = x_a + y_c + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\r\n\t\t\tif ((x = y_c + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\r\n\t\t\t\r\n\t\t\tif ((y = x_b + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\r\n\t\t\tif ((y = x_b + y_d + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\r\n\t\t\tif ((y = y_d + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\r\n\t\t\t\r\n\t\t\treturn bounds.setValues(minX, minY, maxX-minX, maxY-minY);\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Indicates whether the display object has any mouse event listeners or a cursor.\r\n\t\t * @method _isMouseOpaque\r\n\t\t * @return {Boolean}\r\n\t\t * @protected\r\n\t\t **/\r\n\t\tp._hasMouseEventListener = function() {\r\n\t\t\tvar evts = DisplayObject._MOUSE_EVENTS;\r\n\t\t\tfor (var i= 0, l=evts.length; i<l; i++) {\r\n\t\t\t\tif (this.hasEventListener(evts[i])) { return true; }\r\n\t\t\t}\r\n\t\t\treturn !!this.cursor;\r\n\t\t};\r\n\t\r\n\t\tcreatejs.DisplayObject = createjs.promote(DisplayObject, \"EventDispatcher\");\r\n\t}());\n\t\n\t//##############################################################################\n\t// Container.js\n\t//##############################################################################\n\t\n\t(function() {\r\n\t\t\"use strict\";\r\n\t\t\r\n\t\r\n\t// constructor:\r\n\t/**\r\n\t * A Container is a nestable display list that allows you to work with compound display elements. For  example you could\r\n\t * group arm, leg, torso and head {{#crossLink \"Bitmap\"}}{{/crossLink}} instances together into a Person Container, and\r\n\t * transform them as a group, while still being able to move the individual parts relative to each other. Children of\r\n\t * containers have their <code>transform</code> and <code>alpha</code> properties concatenated with their parent\r\n\t * Container.\r\n\t *\r\n\t * For example, a {{#crossLink \"Shape\"}}{{/crossLink}} with x=100 and alpha=0.5, placed in a Container with <code>x=50</code>\r\n\t * and <code>alpha=0.7</code> will be rendered to the canvas at <code>x=150</code> and <code>alpha=0.35</code>.\r\n\t * Containers have some overhead, so you generally shouldn't create a Container to hold a single child.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      var container = new createjs.Container();\r\n\t *      container.addChild(bitmapInstance, shapeInstance);\r\n\t *      container.x = 100;\r\n\t *\r\n\t * @class Container\r\n\t * @extends DisplayObject\r\n\t * @constructor\r\n\t **/\r\n\t\tfunction Container() {\r\n\t\t\tthis.DisplayObject_constructor();\r\n\t\t\t\r\n\t\t// public properties:\r\n\t\t\t/**\r\n\t\t\t * The array of children in the display list. You should usually use the child management methods such as\r\n\t\t\t * {{#crossLink \"Container/addChild\"}}{{/crossLink}}, {{#crossLink \"Container/removeChild\"}}{{/crossLink}},\r\n\t\t\t * {{#crossLink \"Container/swapChildren\"}}{{/crossLink}}, etc, rather than accessing this directly, but it is\r\n\t\t\t * included for advanced uses.\r\n\t\t\t * @property children\r\n\t\t\t * @type Array\r\n\t\t\t * @default null\r\n\t\t\t **/\r\n\t\t\tthis.children = [];\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Indicates whether the children of this container are independently enabled for mouse/pointer interaction.\r\n\t\t\t * If false, the children will be aggregated under the container - for example, a click on a child shape would\r\n\t\t\t * trigger a click event on the container.\r\n\t\t\t * @property mouseChildren\r\n\t\t\t * @type Boolean\r\n\t\t\t * @default true\r\n\t\t\t **/\r\n\t\t\tthis.mouseChildren = true;\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * If false, the tick will not be propagated to children of this Container. This can provide some performance benefits.\r\n\t\t\t * In addition to preventing the \"tick\" event from being dispatched, it will also prevent tick related updates\r\n\t\t\t * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\r\n\t\t\t * @property tickChildren\r\n\t\t\t * @type Boolean\r\n\t\t\t * @default true\r\n\t\t\t **/\r\n\t\t\tthis.tickChildren = true;\r\n\t\t}\r\n\t\tvar p = createjs.extend(Container, createjs.DisplayObject);\r\n\t\t\r\n\t\t\r\n\t// getter / setters:\r\n\t\t/**\r\n\t\t * Use the {{#crossLink \"Container/numChildren:property\"}}{{/crossLink}} property instead.\r\n\t\t * @method getNumChildren\r\n\t\t * @return {Number}\r\n\t\t * @deprecated\r\n\t\t **/\r\n\t\tp.getNumChildren = function() {\r\n\t\t\treturn this.children.length;\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Returns the number of children in the container.\r\n\t\t * @property numChildren\r\n\t\t * @type {Number}\r\n\t\t * @readonly\r\n\t\t **/\r\n\t\ttry {\r\n\t\t\tObject.defineProperties(p, {\r\n\t\t\t\tnumChildren: { get: p.getNumChildren }\r\n\t\t\t});\r\n\t\t} catch (e) {}\r\n\t\t\r\n\t\r\n\t// public methods:\r\n\t\t/**\r\n\t\t * Constructor alias for backwards compatibility. This method will be removed in future versions.\r\n\t\t * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\r\n\t\t * @method initialize\r\n\t\t * @deprecated in favour of `createjs.promote()`\r\n\t\t **/\r\n\t\tp.initialize = Container; // TODO: deprecated.\r\n\t\t\r\n\t\t/**\r\n\t\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\r\n\t\t * This does not account for whether it would be visible within the boundaries of the stage.\r\n\t\t *\r\n\t\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\r\n\t\t * @method isVisible\r\n\t\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\r\n\t\t **/\r\n\t\tp.isVisible = function() {\r\n\t\t\tvar hasContent = this.cacheCanvas || this.children.length;\r\n\t\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\r\n\t\t * Returns true if the draw was handled (useful for overriding functionality).\r\n\t\t *\r\n\t\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\r\n\t\t * @method draw\r\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\r\n\t\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache.\r\n\t\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\r\n\t\t * into itself).\r\n\t\t **/\r\n\t\tp.draw = function(ctx, ignoreCache) {\r\n\t\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\r\n\t\t\t\r\n\t\t\t// this ensures we don't have issues with display list changes that occur during a draw:\r\n\t\t\tvar list = this.children.slice();\r\n\t\t\tfor (var i=0,l=list.length; i<l; i++) {\r\n\t\t\t\tvar child = list[i];\r\n\t\t\t\tif (!child.isVisible()) { continue; }\r\n\t\t\t\t\r\n\t\t\t\t// draw the child:\r\n\t\t\t\tctx.save();\r\n\t\t\t\tchild.updateContext(ctx);\r\n\t\t\t\tchild.draw(ctx);\r\n\t\t\t\tctx.restore();\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Adds a child to the top of the display list.\r\n\t\t *\r\n\t\t * <h4>Example</h4>\r\n\t\t *\r\n\t\t * \t\tcontainer.addChild(bitmapInstance);\r\n\t\t *\r\n\t\t * You can also add multiple children at once:\r\n\t\t *\r\n\t\t * \t\tcontainer.addChild(bitmapInstance, shapeInstance, textInstance);\r\n\t\t *\r\n\t\t * @method addChild\r\n\t\t * @param {DisplayObject} child The display object to add.\r\n\t\t * @return {DisplayObject} The child that was added, or the last child if multiple children were added.\r\n\t\t **/\r\n\t\tp.addChild = function(child) {\r\n\t\t\tif (child == null) { return child; }\r\n\t\t\tvar l = arguments.length;\r\n\t\t\tif (l > 1) {\r\n\t\t\t\tfor (var i=0; i<l; i++) { this.addChild(arguments[i]); }\r\n\t\t\t\treturn arguments[l-1];\r\n\t\t\t}\r\n\t\t\tif (child.parent) { child.parent.removeChild(child); }\r\n\t\t\tchild.parent = this;\r\n\t\t\tthis.children.push(child);\r\n\t\t\tchild.dispatchEvent(\"added\");\r\n\t\t\treturn child;\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Adds a child to the display list at the specified index, bumping children at equal or greater indexes up one, and\r\n\t\t * setting its parent to this Container.\r\n\t\t *\r\n\t\t * <h4>Example</h4>\r\n\t\t *\r\n\t\t *      addChildAt(child1, index);\r\n\t\t *\r\n\t\t * You can also add multiple children, such as:\r\n\t\t *\r\n\t\t *      addChildAt(child1, child2, ..., index);\r\n\t\t *\r\n\t\t * The index must be between 0 and numChildren. For example, to add myShape under otherShape in the display list,\r\n\t\t * you could use:\r\n\t\t *\r\n\t\t *      container.addChildAt(myShape, container.getChildIndex(otherShape));\r\n\t\t *\r\n\t\t * This would also bump otherShape's index up by one. Fails silently if the index is out of range.\r\n\t\t *\r\n\t\t * @method addChildAt\r\n\t\t * @param {DisplayObject} child The display object to add.\r\n\t\t * @param {Number} index The index to add the child at.\r\n\t\t * @return {DisplayObject} Returns the last child that was added, or the last child if multiple children were added.\r\n\t\t **/\r\n\t\tp.addChildAt = function(child, index) {\r\n\t\t\tvar l = arguments.length;\r\n\t\t\tvar indx = arguments[l-1]; // can't use the same name as the index param or it replaces arguments[1]\r\n\t\t\tif (indx < 0 || indx > this.children.length) { return arguments[l-2]; }\r\n\t\t\tif (l > 2) {\r\n\t\t\t\tfor (var i=0; i<l-1; i++) { this.addChildAt(arguments[i], indx+i); }\r\n\t\t\t\treturn arguments[l-2];\r\n\t\t\t}\r\n\t\t\tif (child.parent) { child.parent.removeChild(child); }\r\n\t\t\tchild.parent = this;\r\n\t\t\tthis.children.splice(index, 0, child);\r\n\t\t\tchild.dispatchEvent(\"added\");\r\n\t\t\treturn child;\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Removes the specified child from the display list. Note that it is faster to use removeChildAt() if the index is\r\n\t\t * already known.\r\n\t\t *\r\n\t\t * <h4>Example</h4>\r\n\t\t *\r\n\t\t *      container.removeChild(child);\r\n\t\t *\r\n\t\t * You can also remove multiple children:\r\n\t\t *\r\n\t\t *      removeChild(child1, child2, ...);\r\n\t\t *\r\n\t\t * Returns true if the child (or children) was removed, or false if it was not in the display list.\r\n\t\t * @method removeChild\r\n\t\t * @param {DisplayObject} child The child to remove.\r\n\t\t * @return {Boolean} true if the child (or children) was removed, or false if it was not in the display list.\r\n\t\t **/\r\n\t\tp.removeChild = function(child) {\r\n\t\t\tvar l = arguments.length;\r\n\t\t\tif (l > 1) {\r\n\t\t\t\tvar good = true;\r\n\t\t\t\tfor (var i=0; i<l; i++) { good = good && this.removeChild(arguments[i]); }\r\n\t\t\t\treturn good;\r\n\t\t\t}\r\n\t\t\treturn this.removeChildAt(createjs.indexOf(this.children, child));\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Removes the child at the specified index from the display list, and sets its parent to null.\r\n\t\t *\r\n\t\t * <h4>Example</h4>\r\n\t\t *\r\n\t\t *      container.removeChildAt(2);\r\n\t\t *\r\n\t\t * You can also remove multiple children:\r\n\t\t *\r\n\t\t *      container.removeChild(2, 7, ...)\r\n\t\t *\r\n\t\t * Returns true if the child (or children) was removed, or false if any index was out of range.\r\n\t\t * @method removeChildAt\r\n\t\t * @param {Number} index The index of the child to remove.\r\n\t\t * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\r\n\t\t **/\r\n\t\tp.removeChildAt = function(index) {\r\n\t\t\tvar l = arguments.length;\r\n\t\t\tif (l > 1) {\r\n\t\t\t\tvar a = [];\r\n\t\t\t\tfor (var i=0; i<l; i++) { a[i] = arguments[i]; }\r\n\t\t\t\ta.sort(function(a, b) { return b-a; });\r\n\t\t\t\tvar good = true;\r\n\t\t\t\tfor (var i=0; i<l; i++) { good = good && this.removeChildAt(a[i]); }\r\n\t\t\t\treturn good;\r\n\t\t\t}\r\n\t\t\tif (index < 0 || index > this.children.length-1) { return false; }\r\n\t\t\tvar child = this.children[index];\r\n\t\t\tif (child) { child.parent = null; }\r\n\t\t\tthis.children.splice(index, 1);\r\n\t\t\tchild.dispatchEvent(\"removed\");\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Removes all children from the display list.\r\n\t\t *\r\n\t\t * <h4>Example</h4>\r\n\t\t *\r\n\t\t * \tcontainer.removeAllChildren();\r\n\t\t *\r\n\t\t * @method removeAllChildren\r\n\t\t **/\r\n\t\tp.removeAllChildren = function() {\r\n\t\t\tvar kids = this.children;\r\n\t\t\twhile (kids.length) { this.removeChildAt(0); }\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Returns the child at the specified index.\r\n\t\t *\r\n\t\t * <h4>Example</h4>\r\n\t\t *\r\n\t\t *      container.getChildAt(2);\r\n\t\t *\r\n\t\t * @method getChildAt\r\n\t\t * @param {Number} index The index of the child to return.\r\n\t\t * @return {DisplayObject} The child at the specified index. Returns null if there is no child at the index.\r\n\t\t **/\r\n\t\tp.getChildAt = function(index) {\r\n\t\t\treturn this.children[index];\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Returns the child with the specified name.\r\n\t\t * @method getChildByName\r\n\t\t * @param {String} name The name of the child to return.\r\n\t\t * @return {DisplayObject} The child with the specified name.\r\n\t\t **/\r\n\t\tp.getChildByName = function(name) {\r\n\t\t\tvar kids = this.children;\r\n\t\t\tfor (var i=0,l=kids.length;i<l;i++) {\r\n\t\t\t\tif(kids[i].name == name) { return kids[i]; }\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Performs an array sort operation on the child list.\r\n\t\t *\r\n\t\t * <h4>Example: Display children with a higher y in front.</h4>\r\n\t\t * \r\n\t\t *      var sortFunction = function(obj1, obj2, options) {\r\n\t\t *          if (obj1.y > obj2.y) { return 1; }\r\n\t\t *          if (obj1.y < obj2.y) { return -1; }\r\n\t\t *          return 0;\r\n\t\t *      }\r\n\t\t *      container.sortChildren(sortFunction);\r\n\t\t *\r\n\t\t * @method sortChildren\r\n\t\t * @param {Function} sortFunction the function to use to sort the child list. See JavaScript's <code>Array.sort</code>\r\n\t\t * documentation for details.\r\n\t\t **/\r\n\t\tp.sortChildren = function(sortFunction) {\r\n\t\t\tthis.children.sort(sortFunction);\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Returns the index of the specified child in the display list, or -1 if it is not in the display list.\r\n\t\t *\r\n\t\t * <h4>Example</h4>\r\n\t\t *\r\n\t\t *      var index = container.getChildIndex(child);\r\n\t\t *\r\n\t\t * @method getChildIndex\r\n\t\t * @param {DisplayObject} child The child to return the index of.\r\n\t\t * @return {Number} The index of the specified child. -1 if the child is not found.\r\n\t\t **/\r\n\t\tp.getChildIndex = function(child) {\r\n\t\t\treturn createjs.indexOf(this.children, child);\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Swaps the children at the specified indexes. Fails silently if either index is out of range.\r\n\t\t * @method swapChildrenAt\r\n\t\t * @param {Number} index1\r\n\t\t * @param {Number} index2\r\n\t\t **/\r\n\t\tp.swapChildrenAt = function(index1, index2) {\r\n\t\t\tvar kids = this.children;\r\n\t\t\tvar o1 = kids[index1];\r\n\t\t\tvar o2 = kids[index2];\r\n\t\t\tif (!o1 || !o2) { return; }\r\n\t\t\tkids[index1] = o2;\r\n\t\t\tkids[index2] = o1;\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Swaps the specified children's depth in the display list. Fails silently if either child is not a child of this\r\n\t\t * Container.\r\n\t\t * @method swapChildren\r\n\t\t * @param {DisplayObject} child1\r\n\t\t * @param {DisplayObject} child2\r\n\t\t **/\r\n\t\tp.swapChildren = function(child1, child2) {\r\n\t\t\tvar kids = this.children;\r\n\t\t\tvar index1,index2;\r\n\t\t\tfor (var i=0,l=kids.length;i<l;i++) {\r\n\t\t\t\tif (kids[i] == child1) { index1 = i; }\r\n\t\t\t\tif (kids[i] == child2) { index2 = i; }\r\n\t\t\t\tif (index1 != null && index2 != null) { break; }\r\n\t\t\t}\r\n\t\t\tif (i==l) { return; } // TODO: throw error?\r\n\t\t\tkids[index1] = child2;\r\n\t\t\tkids[index2] = child1;\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Changes the depth of the specified child. Fails silently if the child is not a child of this container, or the index is out of range.\r\n\t\t * @param {DisplayObject} child\r\n\t\t * @param {Number} index  \r\n\t\t * @method setChildIndex\r\n\t\t **/\r\n\t\tp.setChildIndex = function(child, index) {\r\n\t\t\tvar kids = this.children, l=kids.length;\r\n\t\t\tif (child.parent != this || index < 0 || index >= l) { return; }\r\n\t\t\tfor (var i=0;i<l;i++) {\r\n\t\t\t\tif (kids[i] == child) { break; }\r\n\t\t\t}\r\n\t\t\tif (i==l || i == index) { return; }\r\n\t\t\tkids.splice(i,1);\r\n\t\t\tkids.splice(index,0,child);\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Returns true if the specified display object either is this container or is a descendent (child, grandchild, etc)\r\n\t\t * of this container.\r\n\t\t * @method contains\r\n\t\t * @param {DisplayObject} child The DisplayObject to be checked.\r\n\t\t * @return {Boolean} true if the specified display object either is this container or is a descendent.\r\n\t\t **/\r\n\t\tp.contains = function(child) {\r\n\t\t\twhile (child) {\r\n\t\t\t\tif (child == this) { return true; }\r\n\t\t\t\tchild = child.parent;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Tests whether the display object intersects the specified local point (ie. draws a pixel with alpha > 0 at the\r\n\t\t * specified position). This ignores the alpha, shadow and compositeOperation of the display object, and all\r\n\t\t * transform properties including regX/Y.\r\n\t\t * @method hitTest\r\n\t\t * @param {Number} x The x position to check in the display object's local coordinates.\r\n\t\t * @param {Number} y The y position to check in the display object's local coordinates.\r\n\t\t * @return {Boolean} A Boolean indicating whether there is a visible section of a DisplayObject that overlaps the specified\r\n\t\t * coordinates.\r\n\t\t **/\r\n\t\tp.hitTest = function(x, y) {\r\n\t\t\t// TODO: optimize to use the fast cache check where possible.\r\n\t\t\treturn (this.getObjectUnderPoint(x, y) != null);\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Returns an array of all display objects under the specified coordinates that are in this container's display\r\n\t\t * list. This routine ignores any display objects with {{#crossLink \"DisplayObject/mouseEnabled:property\"}}{{/crossLink}}\r\n\t\t * set to `false`. The array will be sorted in order of visual depth, with the top-most display object at index 0.\r\n\t\t * This uses shape based hit detection, and can be an expensive operation to run, so it is best to use it carefully.\r\n\t\t * For example, if testing for objects under the mouse, test on tick (instead of on {{#crossLink \"DisplayObject/mousemove:event\"}}{{/crossLink}}),\r\n\t\t * and only if the mouse's position has changed.\r\n\t\t * \r\n\t\t * <ul>\r\n\t\t *     <li>By default (mode=0) this method evaluates all display objects.</li>\r\n\t\t *     <li>By setting the `mode` parameter to `1`, the {{#crossLink \"DisplayObject/mouseEnabled:property\"}}{{/crossLink}}\r\n\t\t * \t\tand {{#crossLink \"mouseChildren:property\"}}{{/crossLink}} properties will be respected.</li>\r\n\t\t * \t   <li>Setting the `mode` to `2` additionally excludes display objects that do not have active mouse event\r\n\t\t * \t   \tlisteners or a {{#crossLink \"DisplayObject:cursor:property\"}}{{/crossLink}} property. That is, only objects\r\n\t\t * \t   \tthat would normally intercept mouse interaction will be included. This can significantly improve performance\r\n\t\t * \t   \tin some cases by reducing the number of display objects that need to be tested.</li>\r\n\t\t * </li>\r\n\t\t * \r\n\t\t * This method accounts for both {{#crossLink \"DisplayObject/hitArea:property\"}}{{/crossLink}} and {{#crossLink \"DisplayObject/mask:property\"}}{{/crossLink}}.\r\n\t\t * @method getObjectsUnderPoint\r\n\t\t * @param {Number} x The x position in the container to test.\r\n\t\t * @param {Number} y The y position in the container to test.\r\n\t\t * @param {Number} [mode=0] The mode to use to determine which display objects to include. 0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\r\n\t\t * @return {Array} An Array of DisplayObjects under the specified coordinates.\r\n\t\t **/\r\n\t\tp.getObjectsUnderPoint = function(x, y, mode) {\r\n\t\t\tvar arr = [];\r\n\t\t\tvar pt = this.localToGlobal(x, y);\r\n\t\t\tthis._getObjectsUnderPoint(pt.x, pt.y, arr, mode>0, mode==1);\r\n\t\t\treturn arr;\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Similar to {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}, but returns only the top-most display\r\n\t\t * object. This runs significantly faster than <code>getObjectsUnderPoint()</code>, but is still potentially an expensive\r\n\t\t * operation. See {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}} for more information.\r\n\t\t * @method getObjectUnderPoint\r\n\t\t * @param {Number} x The x position in the container to test.\r\n\t\t * @param {Number} y The y position in the container to test.\r\n\t\t * @param {Number} mode The mode to use to determine which display objects to include.  0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\r\n\t\t * @return {DisplayObject} The top-most display object under the specified coordinates.\r\n\t\t **/\r\n\t\tp.getObjectUnderPoint = function(x, y, mode) {\r\n\t\t\tvar pt = this.localToGlobal(x, y);\r\n\t\t\treturn this._getObjectsUnderPoint(pt.x, pt.y, null, mode>0, mode==1);\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Docced in superclass.\r\n\t\t */\r\n\t\tp.getBounds = function() {\r\n\t\t\treturn this._getBounds(null, true);\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t/**\r\n\t\t * Docced in superclass.\r\n\t\t */\r\n\t\tp.getTransformedBounds = function() {\r\n\t\t\treturn this._getBounds();\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Returns a clone of this Container. Some properties that are specific to this instance's current context are\r\n\t\t * reverted to their defaults (for example .parent).\r\n\t\t * @method clone\r\n\t\t * @param {Boolean} [recursive=false] If true, all of the descendants of this container will be cloned recursively. If false, the\r\n\t\t * properties of the container will be cloned, but the new instance will not have any children.\r\n\t\t * @return {Container} A clone of the current Container instance.\r\n\t\t **/\r\n\t\tp.clone = function(recursive) {\r\n\t\t\tvar o = this._cloneProps(new Container());\r\n\t\t\tif (recursive) { this._cloneChildren(o); }\r\n\t\t\treturn o;\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Returns a string representation of this object.\r\n\t\t * @method toString\r\n\t\t * @return {String} a string representation of the instance.\r\n\t\t **/\r\n\t\tp.toString = function() {\r\n\t\t\treturn \"[Container (name=\"+  this.name +\")]\";\r\n\t\t};\r\n\t\r\n\t\r\n\t// private methods:\r\n\t\t/**\r\n\t\t * @method _tick\r\n\t\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\r\n\t\t * @protected\r\n\t\t **/\r\n\t\tp._tick = function(evtObj) {\r\n\t\t\tif (this.tickChildren) {\r\n\t\t\t\tfor (var i=this.children.length-1; i>=0; i--) {\r\n\t\t\t\t\tvar child = this.children[i];\r\n\t\t\t\t\tif (child.tickEnabled && child._tick) { child._tick(evtObj); }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.DisplayObject__tick(evtObj);\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Recursively clones all children of this container, and adds them to the target container.\r\n\t\t * @method cloneChildren\r\n\t\t * @protected\r\n\t\t * @param {Container} o The target container.\r\n\t\t **/\r\n\t\tp._cloneChildren = function(o) {\r\n\t\t\tif (o.children.length) { o.removeAllChildren(); }\r\n\t\t\tvar arr = o.children;\r\n\t\t\tfor (var i=0, l=this.children.length; i<l; i++) {\r\n\t\t\t\tvar clone = this.children[i].clone(true);\r\n\t\t\t\tclone.parent = o;\r\n\t\t\t\tarr.push(clone);\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * @method _getObjectsUnderPoint\r\n\t\t * @param {Number} x\r\n\t\t * @param {Number} y\r\n\t\t * @param {Array} arr\r\n\t\t * @param {Boolean} mouse If true, it will respect mouse interaction properties like mouseEnabled, mouseChildren, and active listeners.\r\n\t\t * @param {Boolean} activeListener If true, there is an active mouse event listener on a parent object.\r\n\t\t * @param {Number} currentDepth Indicates the current depth of the search.\r\n\t\t * @return {DisplayObject}\r\n\t\t * @protected\r\n\t\t **/\r\n\t\tp._getObjectsUnderPoint = function(x, y, arr, mouse, activeListener, currentDepth) {\r\n\t\t\tcurrentDepth = currentDepth || 0;\r\n\t\t\tif (!currentDepth && !this._testMask(this, x, y)) { return null; }\r\n\t\t\tvar mtx, ctx = createjs.DisplayObject._hitTestContext;\r\n\t\t\tactiveListener = activeListener || (mouse&&this._hasMouseEventListener());\r\n\t\r\n\t\t\t// draw children one at a time, and check if we get a hit:\r\n\t\t\tvar children = this.children, l = children.length;\r\n\t\t\tfor (var i=l-1; i>=0; i--) {\r\n\t\t\t\tvar child = children[i];\r\n\t\t\t\tvar hitArea = child.hitArea;\r\n\t\t\t\tif (!child.visible || (!hitArea && !child.isVisible()) || (mouse && !child.mouseEnabled)) { continue; }\r\n\t\t\t\tif (!hitArea && !this._testMask(child, x, y)) { continue; }\r\n\t\t\t\t\r\n\t\t\t\t// if a child container has a hitArea then we only need to check its hitArea, so we can treat it as a normal DO:\r\n\t\t\t\tif (!hitArea && child instanceof Container) {\r\n\t\t\t\t\tvar result = child._getObjectsUnderPoint(x, y, arr, mouse, activeListener, currentDepth+1);\r\n\t\t\t\t\tif (!arr && result) { return (mouse && !this.mouseChildren) ? this : result; }\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (mouse && !activeListener && !child._hasMouseEventListener()) { continue; }\r\n\t\t\t\t\t\r\n\t\t\t\t\t// TODO: can we pass displayProps forward, to avoid having to calculate this backwards every time? It's kind of a mixed bag. When we're only hunting for DOs with event listeners, it may not make sense.\r\n\t\t\t\t\tvar props = child.getConcatenatedDisplayProps(child._props);\r\n\t\t\t\t\tmtx = props.matrix;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (hitArea) {\r\n\t\t\t\t\t\tmtx.appendMatrix(hitArea.getMatrix(hitArea._props.matrix));\r\n\t\t\t\t\t\tprops.alpha = hitArea.alpha;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tctx.globalAlpha = props.alpha;\r\n\t\t\t\t\tctx.setTransform(mtx.a,  mtx.b, mtx.c, mtx.d, mtx.tx-x, mtx.ty-y);\r\n\t\t\t\t\t(hitArea||child).draw(ctx);\r\n\t\t\t\t\tif (!this._testHit(ctx)) { continue; }\r\n\t\t\t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\t\t\t\tctx.clearRect(0, 0, 2, 2);\r\n\t\t\t\t\tif (arr) { arr.push(child); }\r\n\t\t\t\t\telse { return (mouse && !this.mouseChildren) ? this : child; }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * @method _testMask\r\n\t\t * @param {DisplayObject} target\r\n\t\t * @param {Number} x\r\n\t\t * @param {Number} y\r\n\t\t * @return {Boolean} Indicates whether the x/y is within the masked region.\r\n\t\t * @protected\r\n\t\t **/\r\n\t\tp._testMask = function(target, x, y) {\r\n\t\t\tvar mask = target.mask;\r\n\t\t\tif (!mask || !mask.graphics || mask.graphics.isEmpty()) { return true; }\r\n\t\t\t\r\n\t\t\tvar mtx = this._props.matrix, parent = target.parent;\r\n\t\t\tmtx = parent ? parent.getConcatenatedMatrix(mtx) : mtx.identity();\r\n\t\t\tmtx = mask.getMatrix(mask._props.matrix).prependMatrix(mtx);\r\n\t\t\t\r\n\t\t\tvar ctx = createjs.DisplayObject._hitTestContext;\r\n\t\t\tctx.setTransform(mtx.a,  mtx.b, mtx.c, mtx.d, mtx.tx-x, mtx.ty-y);\r\n\t\t\t\r\n\t\t\t// draw the mask as a solid fill:\r\n\t\t\tmask.graphics.drawAsPath(ctx);\r\n\t\t\tctx.fillStyle = \"#000\";\r\n\t\t\tctx.fill();\r\n\t\t\t\r\n\t\t\tif (!this._testHit(ctx)) { return false; }\r\n\t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\t\tctx.clearRect(0, 0, 2, 2);\r\n\t\t\t\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * @method _getBounds\r\n\t\t * @param {Matrix2D} matrix\r\n\t\t * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\r\n\t\t * @return {Rectangle}\r\n\t\t * @protected\r\n\t\t **/\r\n\t\tp._getBounds = function(matrix, ignoreTransform) {\r\n\t\t\tvar bounds = this.DisplayObject_getBounds();\r\n\t\t\tif (bounds) { return this._transformBounds(bounds, matrix, ignoreTransform); }\r\n\t\t\t\r\n\t\t\tvar mtx = this._props.matrix;\r\n\t\t\tmtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\r\n\t\t\tif (matrix) { mtx.prependMatrix(matrix); }\r\n\t\t\t\r\n\t\t\tvar l = this.children.length, rect=null;\r\n\t\t\tfor (var i=0; i<l; i++) {\r\n\t\t\t\tvar child = this.children[i];\r\n\t\t\t\tif (!child.visible || !(bounds = child._getBounds(mtx))) { continue; }\r\n\t\t\t\tif (rect) { rect.extend(bounds.x, bounds.y, bounds.width, bounds.height); }\r\n\t\t\t\telse { rect = bounds.clone(); }\r\n\t\t\t}\r\n\t\t\treturn rect;\r\n\t\t};\r\n\t\r\n\t\r\n\t\tcreatejs.Container = createjs.promote(Container, \"DisplayObject\");\r\n\t}());\n\t\n\t//##############################################################################\n\t// Stage.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t\t * A stage is the root level {{#crossLink \"Container\"}}{{/crossLink}} for a display list. Each time its {{#crossLink \"Stage/tick\"}}{{/crossLink}}\n\t\t * method is called, it will render its display list to its target canvas.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t * This example creates a stage, adds a child to it, then uses {{#crossLink \"Ticker\"}}{{/crossLink}} to update the child\n\t\t * and redraw the stage using {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n\t\t *\n\t\t *      var stage = new createjs.Stage(\"canvasElementId\");\n\t\t *      var image = new createjs.Bitmap(\"imagePath.png\");\n\t\t *      stage.addChild(image);\n\t\t *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n\t\t *      function handleTick(event) {\n\t\t *          image.x += 10;\n\t\t *          stage.update();\n\t\t *      }\n\t\t *\n\t\t * @class Stage\n\t\t * @extends Container\n\t\t * @constructor\n\t\t * @param {HTMLCanvasElement | String | Object} canvas A canvas object that the Stage will render to, or the string id\n\t\t * of a canvas object in the current document.\n\t\t **/\n\t\tfunction Stage(canvas) {\n\t\t\tthis.Container_constructor();\n\t\t\n\t\t\n\t\t// public properties:\n\t\t\t/**\n\t\t\t * Indicates whether the stage should automatically clear the canvas before each render. You can set this to <code>false</code>\n\t\t\t * to manually control clearing (for generative art, or when pointing multiple stages at the same canvas for\n\t\t\t * example).\n\t\t\t *\n\t\t\t * <h4>Example</h4>\n\t\t\t *\n\t\t\t *      var stage = new createjs.Stage(\"canvasId\");\n\t\t\t *      stage.autoClear = false;\n\t\t\t *\n\t\t\t * @property autoClear\n\t\t\t * @type Boolean\n\t\t\t * @default true\n\t\t\t **/\n\t\t\tthis.autoClear = true;\n\t\t\n\t\t\t/**\n\t\t\t * The canvas the stage will render to. Multiple stages can share a single canvas, but you must disable autoClear for all but the\n\t\t\t * first stage that will be ticked (or they will clear each other's render).\n\t\t\t *\n\t\t\t * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n\t\t\t * new canvas or mouse events will not work as expected. For example:\n\t\t\t *\n\t\t\t *      myStage.enableDOMEvents(false);\n\t\t\t *      myStage.canvas = anotherCanvas;\n\t\t\t *      myStage.enableDOMEvents(true);\n\t\t\t *\n\t\t\t * @property canvas\n\t\t\t * @type HTMLCanvasElement | Object\n\t\t\t **/\n\t\t\tthis.canvas = (typeof canvas == \"string\") ? document.getElementById(canvas) : canvas;\n\t\t\n\t\t\t/**\n\t\t\t * The current mouse X position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n\t\t\t * position over the canvas, and mouseInBounds will be set to false.\n\t\t\t * @property mouseX\n\t\t\t * @type Number\n\t\t\t * @readonly\n\t\t\t **/\n\t\t\tthis.mouseX = 0;\n\t\t\n\t\t\t/**\n\t\t\t * The current mouse Y position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n\t\t\t * position over the canvas, and mouseInBounds will be set to false.\n\t\t\t * @property mouseY\n\t\t\t * @type Number\n\t\t\t * @readonly\n\t\t\t **/\n\t\t\tthis.mouseY = 0;\n\t\t\n\t\t\t/**\n\t\t\t * Specifies the area of the stage to affect when calling update. This can be use to selectively\n\t\t\t * re-draw specific regions of the canvas. If null, the whole canvas area is drawn.\n\t\t\t * @property drawRect\n\t\t\t * @type {Rectangle}\n\t\t\t */\n\t\t\tthis.drawRect = null;\n\t\t\n\t\t\t/**\n\t\t\t * Indicates whether display objects should be rendered on whole pixels. You can set the\n\t\t\t * {{#crossLink \"DisplayObject/snapToPixel\"}}{{/crossLink}} property of\n\t\t\t * display objects to false to enable/disable this behaviour on a per instance basis.\n\t\t\t * @property snapToPixelEnabled\n\t\t\t * @type Boolean\n\t\t\t * @default false\n\t\t\t **/\n\t\t\tthis.snapToPixelEnabled = false;\n\t\t\n\t\t\t/**\n\t\t\t * Indicates whether the mouse is currently within the bounds of the canvas.\n\t\t\t * @property mouseInBounds\n\t\t\t * @type Boolean\n\t\t\t * @default false\n\t\t\t **/\n\t\t\tthis.mouseInBounds = false;\n\t\t\n\t\t\t/**\n\t\t\t * If true, tick callbacks will be called on all display objects on the stage prior to rendering to the canvas.\n\t\t\t * @property tickOnUpdate\n\t\t\t * @type Boolean\n\t\t\t * @default true\n\t\t\t **/\n\t\t\tthis.tickOnUpdate = true;\n\t\t\n\t\t\t/**\n\t\t\t * If true, mouse move events will continue to be called when the mouse leaves the target canvas. See\n\t\t\t * {{#crossLink \"Stage/mouseInBounds:property\"}}{{/crossLink}}, and {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n\t\t\t * x/y/rawX/rawY.\n\t\t\t * @property mouseMoveOutside\n\t\t\t * @type Boolean\n\t\t\t * @default false\n\t\t\t **/\n\t\t\tthis.mouseMoveOutside = false;\n\t\t\t\n\t\t\t\n\t\t\t/**\n\t\t\t * Prevents selection of other elements in the html page if the user clicks and drags, or double clicks on the canvas.\n\t\t\t * This works by calling `preventDefault()` on any mousedown events (or touch equivalent) originating on the canvas.\n\t\t\t * @property preventSelection\n\t\t\t * @type Boolean\n\t\t\t * @default true\n\t\t\t **/\n\t\t\tthis.preventSelection = true;\n\t\t\n\t\t\t/**\n\t\t\t * The hitArea property is not supported for Stage.\n\t\t\t * @property hitArea\n\t\t\t * @type {DisplayObject}\n\t\t\t * @default null\n\t\t\t */\n\t\t\t \n\t\t\t \n\t\t// private properties:\n\t\t\t/**\n\t\t\t * Holds objects with data for each active pointer id. Each object has the following properties:\n\t\t\t * x, y, event, target, overTarget, overX, overY, inBounds, posEvtObj (native event that last updated position)\n\t\t\t * @property _pointerData\n\t\t\t * @type {Object}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._pointerData = {};\n\t\t\n\t\t\t/**\n\t\t\t * Number of active pointers.\n\t\t\t * @property _pointerCount\n\t\t\t * @type {Object}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._pointerCount = 0;\n\t\t\n\t\t\t/**\n\t\t\t * The ID of the primary pointer.\n\t\t\t * @property _primaryPointerID\n\t\t\t * @type {Object}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._primaryPointerID = null;\n\t\t\n\t\t\t/**\n\t\t\t * @property _mouseOverIntervalID\n\t\t\t * @protected\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis._mouseOverIntervalID = null;\n\t\t\t\n\t\t\t/**\n\t\t\t * @property _nextStage\n\t\t\t * @protected\n\t\t\t * @type Stage\n\t\t\t **/\n\t\t\tthis._nextStage = null;\n\t\t\t\n\t\t\t/**\n\t\t\t * @property _prevStage\n\t\t\t * @protected\n\t\t\t * @type Stage\n\t\t\t **/\n\t\t\tthis._prevStage = null;\n\t\t\t\n\t\t\t\n\t\t// initialize:\n\t\t\tthis.enableDOMEvents(true);\n\t\t}\n\t\tvar p = createjs.extend(Stage, createjs.Container);\n\t\n\t\t/**\n\t\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t\t * for details.\n\t\t *\n\t\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t\t *\n\t\t * @method initialize\n\t\t * @protected\n\t\t * @deprecated\n\t\t */\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\t\n\t\n\t// events:\n\t\t/**\n\t\t * Dispatched when the user moves the mouse over the canvas.\n\t\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t\t * @event stagemousemove\n\t\t * @since 0.6.0\n\t\t */\n\t\n\t\t/**\n\t\t * Dispatched when the user presses their left mouse button on the canvas. See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n\t\t * class for a listing of event properties.\n\t\t * @event stagemousedown\n\t\t * @since 0.6.0\n\t\t */\n\t\n\t\t/**\n\t\t * Dispatched when the user the user presses somewhere on the stage, then releases the mouse button anywhere that the page can detect it (this varies slightly between browsers).\n\t\t * You can use {{#crossLink \"Stage/mouseInBounds:property\"}}{{/crossLink}} to check whether the mouse is currently within the stage bounds.\n\t\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t\t * @event stagemouseup\n\t\t * @since 0.6.0\n\t\t */\n\t\n\t\t/**\n\t\t * Dispatched when the mouse moves from within the canvas area (mouseInBounds == true) to outside it (mouseInBounds == false).\n\t\t * This is currently only dispatched for mouse input (not touch). See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n\t\t * class for a listing of event properties.\n\t\t * @event mouseleave\n\t\t * @since 0.7.0\n\t\t */\n\t\n\t\t/**\n\t\t * Dispatched when the mouse moves into the canvas area (mouseInBounds == false) from outside it (mouseInBounds == true).\n\t\t * This is currently only dispatched for mouse input (not touch). See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n\t\t * class for a listing of event properties.\n\t\t * @event mouseenter\n\t\t * @since 0.7.0\n\t\t */\n\t\t \n\t\t/**\n\t\t * Dispatched each update immediately before the tick event is propagated through the display list.\n\t\t * You can call preventDefault on the event object to cancel propagating the tick event.\n\t\t * @event tickstart\n\t\t * @since 0.7.0\n\t\t */\n\t\t \n\t\t/**\n\t\t * Dispatched each update immediately after the tick event is propagated through the display list. Does not fire if\n\t\t * tickOnUpdate is false. Precedes the \"drawstart\" event.\n\t\t * @event tickend\n\t\t * @since 0.7.0\n\t\t */\n\t\t \n\t\t/**\n\t\t * Dispatched each update immediately before the canvas is cleared and the display list is drawn to it.\n\t\t * You can call preventDefault on the event object to cancel the draw.\n\t\t * @event drawstart\n\t\t * @since 0.7.0\n\t\t */\n\t\t \n\t\t/**\n\t\t * Dispatched each update immediately after the display list is drawn to the canvas and the canvas context is restored.\n\t\t * @event drawend\n\t\t * @since 0.7.0\n\t\t */\n\t\n\t\t \n\t// getter / setters:\n\t\t/**\n\t\t * Specifies a target stage that will have mouse / touch interactions relayed to it after this stage handles them.\n\t\t * This can be useful in cases where you have multiple layered canvases and want user interactions\n\t\t * events to pass through. For example, this would relay mouse events from topStage to bottomStage:\n\t\t *\n\t\t *      topStage.nextStage = bottomStage;\n\t\t *\n\t\t * To disable relaying, set nextStage to null.\n\t\t * \n\t\t * MouseOver, MouseOut, RollOver, and RollOut interactions are also passed through using the mouse over settings\n\t\t * of the top-most stage, but are only processed if the target stage has mouse over interactions enabled.\n\t\t * Considerations when using roll over in relay targets:<OL>\n\t\t * <LI> The top-most (first) stage must have mouse over interactions enabled (via enableMouseOver)</LI>\n\t\t * <LI> All stages that wish to participate in mouse over interaction must enable them via enableMouseOver</LI>\n\t\t * <LI> All relay targets will share the frequency value of the top-most stage</LI>\n\t\t * </OL>\n\t\t * To illustrate, in this example the targetStage would process mouse over interactions at 10hz (despite passing\n\t\t * 30 as it's desired frequency):\n\t\t * \ttopStage.nextStage = targetStage;\n\t\t * \ttopStage.enableMouseOver(10);\n\t\t * \ttargetStage.enableMouseOver(30);\n\t\t * \n\t\t * If the target stage's canvas is completely covered by this stage's canvas, you may also want to disable its\n\t\t * DOM events using:\n\t\t * \n\t\t *\ttargetStage.enableDOMEvents(false);\n\t\t * \n\t\t * @property nextStage\n\t\t * @type {Stage}\n\t\t **/\n\t\tp._get_nextStage = function() {\n\t\t\treturn this._nextStage;\n\t\t};\n\t\tp._set_nextStage = function(value) {\n\t\t\tif (this._nextStage) { this._nextStage._prevStage = null; }\n\t\t\tif (value) { value._prevStage = this; }\n\t\t\tthis._nextStage = value;\n\t\t};\n\t\t\n\t\ttry {\n\t\t\tObject.defineProperties(p, {\n\t\t\t\tnextStage: { get: p._get_nextStage, set: p._set_nextStage }\n\t\t\t});\n\t\t} catch (e) {} // TODO: use Log\n\t\n\t\n\t// public methods:\n\t\t/**\n\t\t * Each time the update method is called, the stage will call {{#crossLink \"Stage/tick\"}}{{/crossLink}}\n\t\t * unless {{#crossLink \"Stage/tickOnUpdate:property\"}}{{/crossLink}} is set to false,\n\t\t * and then render the display list to the canvas.\n\t\t *\n\t\t * @method update\n\t\t * @param {Object} [props] Props object to pass to `tick()`. Should usually be a {{#crossLink \"Ticker\"}}{{/crossLink}} event object, or similar object with a delta property.\n\t\t **/\n\t\tp.update = function(props) {\n\t\t\tif (!this.canvas) { return; }\n\t\t\tif (this.tickOnUpdate) { this.tick(props); }\n\t\t\tif (this.dispatchEvent(\"drawstart\", false, true) === false) { return; }\n\t\t\tcreatejs.DisplayObject._snapToPixelEnabled = this.snapToPixelEnabled;\n\t\t\tvar r = this.drawRect, ctx = this.canvas.getContext(\"2d\");\n\t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tif (this.autoClear) {\n\t\t\t\tif (r) { ctx.clearRect(r.x, r.y, r.width, r.height); }\n\t\t\t\telse { ctx.clearRect(0, 0, this.canvas.width+1, this.canvas.height+1); }\n\t\t\t}\n\t\t\tctx.save();\n\t\t\tif (this.drawRect) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.rect(r.x, r.y, r.width, r.height);\n\t\t\t\tctx.clip();\n\t\t\t}\n\t\t\tthis.updateContext(ctx);\n\t\t\tthis.draw(ctx, false);\n\t\t\tctx.restore();\n\t\t\tthis.dispatchEvent(\"drawend\");\n\t\t};\n\t\t\n\t\t/**\n\t\t * Propagates a tick event through the display list. This is automatically called by {{#crossLink \"Stage/update\"}}{{/crossLink}}\n\t\t * unless {{#crossLink \"Stage/tickOnUpdate:property\"}}{{/crossLink}} is set to false.\n\t\t *\n\t\t * If a props object is passed to `tick()`, then all of its properties will be copied to the event object that is\n\t\t * propagated to listeners.\n\t\t *\n\t\t * Some time-based features in EaselJS (for example {{#crossLink \"Sprite/framerate\"}}{{/crossLink}} require that\n\t\t * a {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}} event object (or equivalent object with a delta property) be\n\t\t * passed as the `props` parameter to `tick()`. For example:\n\t\t *\n\t\t * \tTicker.on(\"tick\", handleTick);\n\t\t * \tfunction handleTick(evtObj) {\n\t\t * \t\t// clone the event object from Ticker, and add some custom data to it:\n\t\t * \t\tvar evt = evtObj.clone().set({greeting:\"hello\", name:\"world\"});\n\t\t * \t\t\n\t\t * \t\t// pass it to stage.update():\n\t\t * \t\tmyStage.update(evt); // subsequently calls tick() with the same param\n\t\t * \t}\n\t\t * \t\n\t\t * \t// ...\n\t\t * \tmyDisplayObject.on(\"tick\", handleDisplayObjectTick);\n\t\t * \tfunction handleDisplayObjectTick(evt) {\n\t\t * \t\tconsole.log(evt.delta); // the delta property from the Ticker tick event object\n\t\t * \t\tconsole.log(evt.greeting, evt.name); // custom data: \"hello world\"\n\t\t * \t}\n\t\t * \n\t\t * @method tick\n\t\t * @param {Object} [props] An object with properties that should be copied to the event object. Should usually be a Ticker event object, or similar object with a delta property.\n\t\t **/\n\t\tp.tick = function(props) {\n\t\t\tif (!this.tickEnabled || this.dispatchEvent(\"tickstart\", false, true) === false) { return; }\n\t\t\tvar evtObj = new createjs.Event(\"tick\");\n\t\t\tif (props) {\n\t\t\t\tfor (var n in props) {\n\t\t\t\t\tif (props.hasOwnProperty(n)) { evtObj[n] = props[n]; }\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._tick(evtObj);\n\t\t\tthis.dispatchEvent(\"tickend\");\n\t\t};\n\t\n\t\t/**\n\t\t * Default event handler that calls the Stage {{#crossLink \"Stage/update\"}}{{/crossLink}} method when a {{#crossLink \"DisplayObject/tick:event\"}}{{/crossLink}}\n\t\t * event is received. This allows you to register a Stage instance as a event listener on {{#crossLink \"Ticker\"}}{{/crossLink}}\n\t\t * directly, using:\n\t\t *\n\t\t *      Ticker.addEventListener(\"tick\", myStage);\n\t\t *\n\t\t * Note that if you subscribe to ticks using this pattern, then the tick event object will be passed through to\n\t\t * display object tick handlers, instead of <code>delta</code> and <code>paused</code> parameters.\n\t\t * @property handleEvent\n\t\t * @type Function\n\t\t **/\n\t\tp.handleEvent = function(evt) {\n\t\t\tif (evt.type == \"tick\") { this.update(evt); }\n\t\t};\n\t\n\t\t/**\n\t\t * Clears the target canvas. Useful if {{#crossLink \"Stage/autoClear:property\"}}{{/crossLink}} is set to `false`.\n\t\t * @method clear\n\t\t **/\n\t\tp.clear = function() {\n\t\t\tif (!this.canvas) { return; }\n\t\t\tvar ctx = this.canvas.getContext(\"2d\");\n\t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tctx.clearRect(0, 0, this.canvas.width+1, this.canvas.height+1);\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a data url that contains a Base64-encoded image of the contents of the stage. The returned data url can\n\t\t * be specified as the src value of an image element.\n\t\t * @method toDataURL\n\t\t * @param {String} [backgroundColor] The background color to be used for the generated image. Any valid CSS color\n\t\t * value is allowed. The default value is a transparent background.\n\t\t * @param {String} [mimeType=\"image/png\"] The MIME type of the image format to be create. The default is \"image/png\". If an unknown MIME type\n\t\t * is passed in, or if the browser does not support the specified MIME type, the default value will be used.\n\t\t * @return {String} a Base64 encoded image.\n\t\t **/\n\t\tp.toDataURL = function(backgroundColor, mimeType) {\n\t\t\tvar data, ctx = this.canvas.getContext('2d'), w = this.canvas.width, h = this.canvas.height;\n\t\n\t\t\tif (backgroundColor) {\n\t\t\t\tdata = ctx.getImageData(0, 0, w, h);\n\t\t\t\tvar compositeOperation = ctx.globalCompositeOperation;\n\t\t\t\tctx.globalCompositeOperation = \"destination-over\";\n\t\t\t\t\n\t\t\t\tctx.fillStyle = backgroundColor;\n\t\t\t\tctx.fillRect(0, 0, w, h);\n\t\t\t}\n\t\n\t\t\tvar dataURL = this.canvas.toDataURL(mimeType||\"image/png\");\n\t\n\t\t\tif(backgroundColor) {\n\t\t\t\tctx.putImageData(data, 0, 0);\n\t\t\t\tctx.globalCompositeOperation = compositeOperation;\n\t\t\t}\n\t\n\t\t\treturn dataURL;\n\t\t};\n\t\n\t\t/**\n\t\t * Enables or disables (by passing a frequency of 0) mouse over ({{#crossLink \"DisplayObject/mouseover:event\"}}{{/crossLink}}\n\t\t * and {{#crossLink \"DisplayObject/mouseout:event\"}}{{/crossLink}}) and roll over events ({{#crossLink \"DisplayObject/rollover:event\"}}{{/crossLink}}\n\t\t * and {{#crossLink \"DisplayObject/rollout:event\"}}{{/crossLink}}) for this stage's display list. These events can\n\t\t * be expensive to generate, so they are disabled by default. The frequency of the events can be controlled\n\t\t * independently of mouse move events via the optional `frequency` parameter.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var stage = new createjs.Stage(\"canvasId\");\n\t\t *      stage.enableMouseOver(10); // 10 updates per second\n\t\t *\n\t\t * @method enableMouseOver\n\t\t * @param {Number} [frequency=20] Optional param specifying the maximum number of times per second to broadcast\n\t\t * mouse over/out events. Set to 0 to disable mouse over events completely. Maximum is 50. A lower frequency is less\n\t\t * responsive, but uses less CPU.\n\t\t **/\n\t\tp.enableMouseOver = function(frequency) {\n\t\t\tif (this._mouseOverIntervalID) {\n\t\t\t\tclearInterval(this._mouseOverIntervalID);\n\t\t\t\tthis._mouseOverIntervalID = null;\n\t\t\t\tif (frequency == 0) {\n\t\t\t\t\tthis._testMouseOver(true);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (frequency == null) { frequency = 20; }\n\t\t\telse if (frequency <= 0) { return; }\n\t\t\tvar o = this;\n\t\t\tthis._mouseOverIntervalID = setInterval(function(){ o._testMouseOver(); }, 1000/Math.min(50,frequency));\n\t\t};\n\t\n\t\t/**\n\t\t * Enables or disables the event listeners that stage adds to DOM elements (window, document and canvas). It is good\n\t\t * practice to disable events when disposing of a Stage instance, otherwise the stage will continue to receive\n\t\t * events from the page.\n\t\t *\n\t\t * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n\t\t * new canvas or mouse events will not work as expected. For example:\n\t\t *\n\t\t *      myStage.enableDOMEvents(false);\n\t\t *      myStage.canvas = anotherCanvas;\n\t\t *      myStage.enableDOMEvents(true);\n\t\t *\n\t\t * @method enableDOMEvents\n\t\t * @param {Boolean} [enable=true] Indicates whether to enable or disable the events. Default is true.\n\t\t **/\n\t\tp.enableDOMEvents = function(enable) {\n\t\t\tif (enable == null) { enable = true; }\n\t\t\tvar n, o, ls = this._eventListeners;\n\t\t\tif (!enable && ls) {\n\t\t\t\tfor (n in ls) {\n\t\t\t\t\to = ls[n];\n\t\t\t\t\to.t.removeEventListener(n, o.f, false);\n\t\t\t\t}\n\t\t\t\tthis._eventListeners = null;\n\t\t\t} else if (enable && !ls && this.canvas) {\n\t\t\t\tvar t = window.addEventListener ? window : document;\n\t\t\t\tvar _this = this;\n\t\t\t\tls = this._eventListeners = {};\n\t\t\t\tls[\"mouseup\"] = {t:t, f:function(e) { _this._handleMouseUp(e)} };\n\t\t\t\tls[\"mousemove\"] = {t:t, f:function(e) { _this._handleMouseMove(e)} };\n\t\t\t\tls[\"dblclick\"] = {t:this.canvas, f:function(e) { _this._handleDoubleClick(e)} };\n\t\t\t\tls[\"mousedown\"] = {t:this.canvas, f:function(e) { _this._handleMouseDown(e)} };\n\t\n\t\t\t\tfor (n in ls) {\n\t\t\t\t\to = ls[n];\n\t\t\t\t\to.t.addEventListener(n, o.f, false);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Stage instances cannot be cloned.\n\t\t * @method clone\n\t\t **/\n\t\tp.clone = function() {\n\t\t\tthrow(\"Stage cannot be cloned.\");\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a string representation of this object.\n\t\t * @method toString\n\t\t * @return {String} a string representation of the instance.\n\t\t **/\n\t\tp.toString = function() {\n\t\t\treturn \"[Stage (name=\"+  this.name +\")]\";\n\t\t};\n\t\n\t\n\t// private methods:\n\t\t/**\n\t\t * @method _getElementRect\n\t\t * @protected\n\t\t * @param {HTMLElement} e\n\t\t **/\n\t\tp._getElementRect = function(e) {\n\t\t\tvar bounds;\n\t\t\ttry { bounds = e.getBoundingClientRect(); } // this can fail on disconnected DOM elements in IE9\n\t\t\tcatch (err) { bounds = {top: e.offsetTop, left: e.offsetLeft, width:e.offsetWidth, height:e.offsetHeight}; }\n\t\n\t\t\tvar offX = (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || document.body.clientLeft || 0);\n\t\t\tvar offY = (window.pageYOffset || document.scrollTop || 0) - (document.clientTop  || document.body.clientTop  || 0);\n\t\n\t\t\tvar styles = window.getComputedStyle ? getComputedStyle(e,null) : e.currentStyle; // IE <9 compatibility.\n\t\t\tvar padL = parseInt(styles.paddingLeft)+parseInt(styles.borderLeftWidth);\n\t\t\tvar padT = parseInt(styles.paddingTop)+parseInt(styles.borderTopWidth);\n\t\t\tvar padR = parseInt(styles.paddingRight)+parseInt(styles.borderRightWidth);\n\t\t\tvar padB = parseInt(styles.paddingBottom)+parseInt(styles.borderBottomWidth);\n\t\n\t\t\t// note: in some browsers bounds properties are read only.\n\t\t\treturn {\n\t\t\t\tleft: bounds.left+offX+padL,\n\t\t\t\tright: bounds.right+offX-padR,\n\t\t\t\ttop: bounds.top+offY+padT,\n\t\t\t\tbottom: bounds.bottom+offY-padB\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * @method _getPointerData\n\t\t * @protected\n\t\t * @param {Number} id\n\t\t **/\n\t\tp._getPointerData = function(id) {\n\t\t\tvar data = this._pointerData[id];\n\t\t\tif (!data) { data = this._pointerData[id] = {x:0,y:0}; }\n\t\t\treturn data;\n\t\t};\n\t\n\t\t/**\n\t\t * @method _handleMouseMove\n\t\t * @protected\n\t\t * @param {MouseEvent} e\n\t\t **/\n\t\tp._handleMouseMove = function(e) {\n\t\t\tif(!e){ e = window.event; }\n\t\t\tthis._handlePointerMove(-1, e, e.pageX, e.pageY);\n\t\t};\n\t\n\t\t/**\n\t\t * @method _handlePointerMove\n\t\t * @protected\n\t\t * @param {Number} id\n\t\t * @param {Event} e\n\t\t * @param {Number} pageX\n\t\t * @param {Number} pageY\n\t\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t\t **/\n\t\tp._handlePointerMove = function(id, e, pageX, pageY, owner) {\n\t\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\t\t\tif (!this.canvas) { return; }\n\t\t\tvar nextStage=this._nextStage, o=this._getPointerData(id);\n\t\n\t\t\tvar inBounds = o.inBounds;\n\t\t\tthis._updatePointerPosition(id, e, pageX, pageY);\n\t\t\tif (inBounds || o.inBounds || this.mouseMoveOutside) {\n\t\t\t\tif (id === -1 && o.inBounds == !inBounds) {\n\t\t\t\t\tthis._dispatchMouseEvent(this, (inBounds ? \"mouseleave\" : \"mouseenter\"), false, id, o, e);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis._dispatchMouseEvent(this, \"stagemousemove\", false, id, o, e);\n\t\t\t\tthis._dispatchMouseEvent(o.target, \"pressmove\", true, id, o, e);\n\t\t\t}\n\t\t\t\n\t\t\tnextStage&&nextStage._handlePointerMove(id, e, pageX, pageY, null);\n\t\t};\n\t\n\t\t/**\n\t\t * @method _updatePointerPosition\n\t\t * @protected\n\t\t * @param {Number} id\n\t\t * @param {Event} e\n\t\t * @param {Number} pageX\n\t\t * @param {Number} pageY\n\t\t **/\n\t\tp._updatePointerPosition = function(id, e, pageX, pageY) {\n\t\t\tvar rect = this._getElementRect(this.canvas);\n\t\t\tpageX -= rect.left;\n\t\t\tpageY -= rect.top;\n\t\n\t\t\tvar w = this.canvas.width;\n\t\t\tvar h = this.canvas.height;\n\t\t\tpageX /= (rect.right-rect.left)/w;\n\t\t\tpageY /= (rect.bottom-rect.top)/h;\n\t\t\tvar o = this._getPointerData(id);\n\t\t\tif (o.inBounds = (pageX >= 0 && pageY >= 0 && pageX <= w-1 && pageY <= h-1)) {\n\t\t\t\to.x = pageX;\n\t\t\t\to.y = pageY;\n\t\t\t} else if (this.mouseMoveOutside) {\n\t\t\t\to.x = pageX < 0 ? 0 : (pageX > w-1 ? w-1 : pageX);\n\t\t\t\to.y = pageY < 0 ? 0 : (pageY > h-1 ? h-1 : pageY);\n\t\t\t}\n\t\n\t\t\to.posEvtObj = e;\n\t\t\to.rawX = pageX;\n\t\t\to.rawY = pageY;\n\t\n\t\t\tif (id === this._primaryPointerID || id === -1) {\n\t\t\t\tthis.mouseX = o.x;\n\t\t\t\tthis.mouseY = o.y;\n\t\t\t\tthis.mouseInBounds = o.inBounds;\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * @method _handleMouseUp\n\t\t * @protected\n\t\t * @param {MouseEvent} e\n\t\t **/\n\t\tp._handleMouseUp = function(e) {\n\t\t\tthis._handlePointerUp(-1, e, false);\n\t\t};\n\t\n\t\t/**\n\t\t * @method _handlePointerUp\n\t\t * @protected\n\t\t * @param {Number} id\n\t\t * @param {Event} e\n\t\t * @param {Boolean} clear\n\t\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t\t **/\n\t\tp._handlePointerUp = function(id, e, clear, owner) {\n\t\t\tvar nextStage = this._nextStage, o = this._getPointerData(id);\n\t\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\t\t\t\n\t\t\tvar target=null, oTarget = o.target;\n\t\t\tif (!owner && (oTarget || nextStage)) { target = this._getObjectsUnderPoint(o.x, o.y, null, true); }\n\t\t\t\n\t\t\tif (o.down) { this._dispatchMouseEvent(this, \"stagemouseup\", false, id, o, e, target); o.down = false; }\n\t\t\t\n\t\t\tif (target == oTarget) { this._dispatchMouseEvent(oTarget, \"click\", true, id, o, e); }\n\t\t\tthis._dispatchMouseEvent(oTarget, \"pressup\", true, id, o, e);\n\t\t\t\n\t\t\tif (clear) {\n\t\t\t\tif (id==this._primaryPointerID) { this._primaryPointerID = null; }\n\t\t\t\tdelete(this._pointerData[id]);\n\t\t\t} else { o.target = null; }\n\t\t\t\n\t\t\tnextStage&&nextStage._handlePointerUp(id, e, clear, owner || target && this);\n\t\t};\n\t\n\t\t/**\n\t\t * @method _handleMouseDown\n\t\t * @protected\n\t\t * @param {MouseEvent} e\n\t\t **/\n\t\tp._handleMouseDown = function(e) {\n\t\t\tthis._handlePointerDown(-1, e, e.pageX, e.pageY);\n\t\t};\n\t\n\t\t/**\n\t\t * @method _handlePointerDown\n\t\t * @protected\n\t\t * @param {Number} id\n\t\t * @param {Event} e\n\t\t * @param {Number} pageX\n\t\t * @param {Number} pageY\n\t\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t\t **/\n\t\tp._handlePointerDown = function(id, e, pageX, pageY, owner) {\n\t\t\tif (this.preventSelection) { e.preventDefault(); }\n\t\t\tif (this._primaryPointerID == null || id === -1) { this._primaryPointerID = id; } // mouse always takes over.\n\t\t\t\n\t\t\tif (pageY != null) { this._updatePointerPosition(id, e, pageX, pageY); }\n\t\t\tvar target = null, nextStage = this._nextStage, o = this._getPointerData(id);\n\t\t\tif (!owner) { target = o.target = this._getObjectsUnderPoint(o.x, o.y, null, true); }\n\t\n\t\t\tif (o.inBounds) { this._dispatchMouseEvent(this, \"stagemousedown\", false, id, o, e, target); o.down = true; }\n\t\t\tthis._dispatchMouseEvent(target, \"mousedown\", true, id, o, e);\n\t\t\t\n\t\t\tnextStage&&nextStage._handlePointerDown(id, e, pageX, pageY, owner || target && this);\n\t\t};\n\t\n\t\t/**\n\t\t * @method _testMouseOver\n\t\t * @param {Boolean} clear If true, clears the mouseover / rollover (ie. no target)\n\t\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t\t * @param {Stage} eventTarget The stage that the cursor is actively over.\n\t\t * @protected\n\t\t **/\n\t\tp._testMouseOver = function(clear, owner, eventTarget) {\n\t\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\t\t\t\n\t\t\tvar nextStage = this._nextStage;\n\t\t\tif (!this._mouseOverIntervalID) {\n\t\t\t\t// not enabled for mouseover, but should still relay the event.\n\t\t\t\tnextStage&&nextStage._testMouseOver(clear, owner, eventTarget);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar o = this._getPointerData(-1);\n\t\t\t// only update if the mouse position has changed. This provides a lot of optimization, but has some trade-offs.\n\t\t\tif (!o || (!clear && this.mouseX == this._mouseOverX && this.mouseY == this._mouseOverY && this.mouseInBounds)) { return; }\n\t\t\t\n\t\t\tvar e = o.posEvtObj;\n\t\t\tvar isEventTarget = eventTarget || e&&(e.target == this.canvas);\n\t\t\tvar target=null, common = -1, cursor=\"\", t, i, l;\n\t\t\t\n\t\t\tif (!owner && (clear || this.mouseInBounds && isEventTarget)) {\n\t\t\t\ttarget = this._getObjectsUnderPoint(this.mouseX, this.mouseY, null, true);\n\t\t\t\tthis._mouseOverX = this.mouseX;\n\t\t\t\tthis._mouseOverY = this.mouseY;\n\t\t\t}\n\t\n\t\t\tvar oldList = this._mouseOverTarget||[];\n\t\t\tvar oldTarget = oldList[oldList.length-1];\n\t\t\tvar list = this._mouseOverTarget = [];\n\t\n\t\t\t// generate ancestor list and check for cursor:\n\t\t\tt = target;\n\t\t\twhile (t) {\n\t\t\t\tlist.unshift(t);\n\t\t\t\tif (!cursor) { cursor = t.cursor; }\n\t\t\t\tt = t.parent;\n\t\t\t}\n\t\t\tthis.canvas.style.cursor = cursor;\n\t\t\tif (!owner && eventTarget) { eventTarget.canvas.style.cursor = cursor; }\n\t\n\t\t\t// find common ancestor:\n\t\t\tfor (i=0,l=list.length; i<l; i++) {\n\t\t\t\tif (list[i] != oldList[i]) { break; }\n\t\t\t\tcommon = i;\n\t\t\t}\n\t\n\t\t\tif (oldTarget != target) {\n\t\t\t\tthis._dispatchMouseEvent(oldTarget, \"mouseout\", true, -1, o, e, target);\n\t\t\t}\n\t\n\t\t\tfor (i=oldList.length-1; i>common; i--) {\n\t\t\t\tthis._dispatchMouseEvent(oldList[i], \"rollout\", false, -1, o, e, target);\n\t\t\t}\n\t\n\t\t\tfor (i=list.length-1; i>common; i--) {\n\t\t\t\tthis._dispatchMouseEvent(list[i], \"rollover\", false, -1, o, e, oldTarget);\n\t\t\t}\n\t\n\t\t\tif (oldTarget != target) {\n\t\t\t\tthis._dispatchMouseEvent(target, \"mouseover\", true, -1, o, e, oldTarget);\n\t\t\t}\n\t\t\t\n\t\t\tnextStage&&nextStage._testMouseOver(clear, owner || target && this, eventTarget || isEventTarget && this);\n\t\t};\n\t\n\t\t/**\n\t\t * @method _handleDoubleClick\n\t\t * @protected\n\t\t * @param {MouseEvent} e\n\t\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t\t **/\n\t\tp._handleDoubleClick = function(e, owner) {\n\t\t\tvar target=null, nextStage=this._nextStage, o=this._getPointerData(-1);\n\t\t\tif (!owner) {\n\t\t\t\ttarget = this._getObjectsUnderPoint(o.x, o.y, null, true);\n\t\t\t\tthis._dispatchMouseEvent(target, \"dblclick\", true, -1, o, e);\n\t\t\t}\n\t\t\tnextStage&&nextStage._handleDoubleClick(e, owner || target && this);\n\t\t};\n\t\n\t\t/**\n\t\t * @method _dispatchMouseEvent\n\t\t * @protected\n\t\t * @param {DisplayObject} target\n\t\t * @param {String} type\n\t\t * @param {Boolean} bubbles\n\t\t * @param {Number} pointerId\n\t\t * @param {Object} o\n\t\t * @param {MouseEvent} [nativeEvent]\n\t\t * @param {DisplayObject} [relatedTarget]\n\t\t **/\n\t\tp._dispatchMouseEvent = function(target, type, bubbles, pointerId, o, nativeEvent, relatedTarget) {\n\t\t\t// TODO: might be worth either reusing MouseEvent instances, or adding a willTrigger method to avoid GC.\n\t\t\tif (!target || (!bubbles && !target.hasEventListener(type))) { return; }\n\t\t\t/*\n\t\t\t// TODO: account for stage transformations?\n\t\t\tthis._mtx = this.getConcatenatedMatrix(this._mtx).invert();\n\t\t\tvar pt = this._mtx.transformPoint(o.x, o.y);\n\t\t\tvar evt = new createjs.MouseEvent(type, bubbles, false, pt.x, pt.y, nativeEvent, pointerId, pointerId==this._primaryPointerID || pointerId==-1, o.rawX, o.rawY);\n\t\t\t*/\n\t\t\tvar evt = new createjs.MouseEvent(type, bubbles, false, o.x, o.y, nativeEvent, pointerId, pointerId === this._primaryPointerID || pointerId === -1, o.rawX, o.rawY, relatedTarget);\n\t\t\ttarget.dispatchEvent(evt);\n\t\t};\n\t\n\t\n\t\tcreatejs.Stage = createjs.promote(Stage, \"Container\");\n\t}());\n\t\n\t//##############################################################################\n\t// Bitmap.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\n\t\t/**\n\t\t * A Bitmap represents an Image, Canvas, or Video in the display list. A Bitmap can be instantiated using an existing\n\t\t * HTML element, or a string.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var bitmap = new createjs.Bitmap(\"imagePath.jpg\");\n\t\t *\n\t\t * <strong>Notes:</strong>\n\t\t * <ol>\n\t\t *     <li>When a string path or image tag that is not yet loaded is used, the stage may need to be redrawn before it\n\t\t *      will be displayed.</li>\n\t\t *     <li>Bitmaps with an SVG source currently will not respect an alpha value other than 0 or 1. To get around this,\n\t\t *     the Bitmap can be cached.</li>\n\t\t *     <li>Bitmaps with an SVG source will taint the canvas with cross-origin data, which prevents interactivity. This\n\t\t *     happens in all browsers except recent Firefox builds.</li>\n\t\t *     <li>Images loaded cross-origin will throw cross-origin security errors when interacted with using a mouse, using\n\t\t *     methods such as `getObjectUnderPoint`, or using filters, or caching. You can get around this by setting\n\t\t *     `crossOrigin` flags on your images before passing them to EaselJS, eg: `img.crossOrigin=\"Anonymous\";`</li>\n\t\t * </ol>\n\t\t *\n\t\t * @class Bitmap\n\t\t * @extends DisplayObject\n\t\t * @constructor\n\t\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | String} imageOrUri The source object or URI to an image to\n\t\t * display. This can be either an Image, Canvas, or Video object, or a string URI to an image file to load and use.\n\t\t * If it is a URI, a new Image object will be constructed and assigned to the .image property.\n\t\t **/\n\t\tfunction Bitmap(imageOrUri) {\n\t\t\tthis.DisplayObject_constructor();\n\t\t\t\n\t\t\t\n\t\t// public properties:\n\t\t\t/**\n\t\t\t * The image to render. This can be an Image, a Canvas, or a Video. Not all browsers (especially\n\t\t\t * mobile browsers) support drawing video to a canvas.\n\t\t\t * @property image\n\t\t\t * @type HTMLImageElement | HTMLCanvasElement | HTMLVideoElement\n\t\t\t **/\n\t\t\tif (typeof imageOrUri == \"string\") {\n\t\t\t\tthis.image = document.createElement(\"img\");\n\t\t\t\tthis.image.src = imageOrUri;\n\t\t\t} else {\n\t\t\t\tthis.image = imageOrUri;\n\t\t\t}\n\t\t\n\t\t\t/**\n\t\t\t * Specifies an area of the source image to draw. If omitted, the whole image will be drawn.\n\t\t\t * Note that video sources must have a width / height set to work correctly with `sourceRect`.\n\t\t\t * @property sourceRect\n\t\t\t * @type Rectangle\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis.sourceRect = null;\n\t\t}\n\t\tvar p = createjs.extend(Bitmap, createjs.DisplayObject);\n\t\t\n\t\t\n\t// public methods:\n\t\t/**\n\t\t * Constructor alias for backwards compatibility. This method will be removed in future versions.\n\t\t * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\n\t\t * @method initialize\n\t\t * @deprecated in favour of `createjs.promote()`\n\t\t **/\n\t\tp.initialize = Bitmap; // TODO: deprecated.\n\t\n\t\t/**\n\t\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t\t *\n\t\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t\t * @method isVisible\n\t\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t\t **/\n\t\tp.isVisible = function() {\n\t\t\tvar image = this.image;\n\t\t\tvar hasContent = this.cacheCanvas || (image && (image.naturalWidth || image.getContext || image.readyState >= 2));\n\t\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t\t};\n\t\n\t\t/**\n\t\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t\t * Returns true if the draw was handled (useful for overriding functionality).\n\t\t *\n\t\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t\t * @method draw\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache.\n\t\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t\t * into itself).\n\t\t * @return {Boolean}\n\t\t **/\n\t\tp.draw = function(ctx, ignoreCache) {\n\t\t\tif (this.DisplayObject_draw(ctx, ignoreCache) || !this.image) { return true; }\n\t\t\tvar img = this.image, rect = this.sourceRect;\n\t\t\tif (rect) {\n\t\t\t\t// some browsers choke on out of bound values, so we'll fix them:\n\t\t\t\tvar x1 = rect.x, y1 = rect.y, x2 = x1 + rect.width, y2 = y1 + rect.height, x = 0, y = 0, w = img.width, h = img.height;\n\t\t\t\tif (x1 < 0) { x -= x1; x1 = 0; }\n\t\t\t\tif (x2 > w) { x2 = w; }\n\t\t\t\tif (y1 < 0) { y -= y1; y1 = 0; }\n\t\t\t\tif (y2 > h) { y2 = h; }\n\t\t\t\tctx.drawImage(img, x1, y1, x2-x1, y2-y1, x, y, x2-x1, y2-y1);\n\t\t\t} else {\n\t\t\t\tctx.drawImage(img, 0, 0);\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\t\n\t\t//Note, the doc sections below document using the specified APIs (from DisplayObject)  from\n\t\t//Bitmap. This is why they have no method implementations.\n\t\t\n\t\t/**\n\t\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t\t *\n\t\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t\t * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t\t * method.\n\t\t * @method cache\n\t\t **/\n\t\t\n\t\t/**\n\t\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t\t *\n\t\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t\t * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t\t * method.\n\t\t * @method updateCache\n\t\t **/\n\t\t\n\t\t/**\n\t\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t\t *\n\t\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t\t * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t\t * method.\n\t\t * @method uncache\n\t\t **/\n\t\n\t\t/**\n\t\t * Docced in superclass.\n\t\t */\n\t\tp.getBounds = function() {\n\t\t\tvar rect = this.DisplayObject_getBounds();\n\t\t\tif (rect) { return rect; }\n\t\t\tvar image = this.image, o = this.sourceRect || image;\n\t\t\tvar hasContent = (image && (image.naturalWidth || image.getContext || image.readyState >= 2));\n\t\t\treturn hasContent ? this._rectangle.setValues(0, 0, o.width, o.height) : null;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Returns a clone of the Bitmap instance.\n\t\t * @method clone\n\t\t * @return {Bitmap} a clone of the Bitmap instance.\n\t\t **/\n\t\tp.clone = function() {\n\t\t\tvar o = new Bitmap(this.image);\n\t\t\tif (this.sourceRect) { o.sourceRect = this.sourceRect.clone(); }\n\t\t\tthis._cloneProps(o);\n\t\t\treturn o;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Returns a string representation of this object.\n\t\t * @method toString\n\t\t * @return {String} a string representation of the instance.\n\t\t **/\n\t\tp.toString = function() {\n\t\t\treturn \"[Bitmap (name=\"+  this.name +\")]\";\n\t\t};\n\t\n\t\t\n\t\tcreatejs.Bitmap = createjs.promote(Bitmap, \"DisplayObject\");\n\t}());\n\t\n\t//##############################################################################\n\t// Sprite.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t\t * Displays a frame or sequence of frames (ie. an animation) from a SpriteSheet instance. A sprite sheet is a series of\n\t\t * images (usually animation frames) combined into a single image. For example, an animation consisting of 8 100x100\n\t\t * images could be combined into a 400x200 sprite sheet (4 frames across by 2 high). You can display individual frames,\n\t\t * play frames as an animation, and even sequence animations together.\n\t\t *\n\t\t * See the {{#crossLink \"SpriteSheet\"}}{{/crossLink}} class for more information on setting up frames and animations.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var instance = new createjs.Sprite(spriteSheet);\n\t\t *      instance.gotoAndStop(\"frameName\");\n\t\t *\n\t\t * Until {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} or {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}} is called,\n\t\t * only the first defined frame defined in the sprite sheet will be displayed.\n\t\t *\n\t\t * @class Sprite\n\t\t * @extends DisplayObject\n\t\t * @constructor\n\t\t * @param {SpriteSheet} spriteSheet The SpriteSheet instance to play back. This includes the source image(s), frame\n\t\t * dimensions, and frame data. See {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.\n\t\t * @param {String|Number} [frameOrAnimation] The frame number or animation to play initially.\n\t\t **/\n\t\tfunction Sprite(spriteSheet, frameOrAnimation) {\n\t\t\tthis.DisplayObject_constructor();\n\t\t\t\n\t\t\t\n\t\t// public properties:\n\t\t\t/**\n\t\t\t * The frame index that will be drawn when draw is called. Note that with some {{#crossLink \"SpriteSheet\"}}{{/crossLink}}\n\t\t\t * definitions, this will advance non-sequentially. This will always be an integer value.\n\t\t\t * @property currentFrame\n\t\t\t * @type {Number}\n\t\t\t * @default 0\n\t\t\t * @readonly\n\t\t\t **/\n\t\t\tthis.currentFrame = 0;\n\t\t\n\t\t\t/**\n\t\t\t * Returns the name of the currently playing animation.\n\t\t\t * @property currentAnimation\n\t\t\t * @type {String}\n\t\t\t * @final\n\t\t\t * @readonly\n\t\t\t **/\n\t\t\tthis.currentAnimation = null;\n\t\t\n\t\t\t/**\n\t\t\t * Prevents the animation from advancing each tick automatically. For example, you could create a sprite\n\t\t\t * sheet of icons, set paused to true, and display the appropriate icon by setting <code>currentFrame</code>.\n\t\t\t * @property paused\n\t\t\t * @type {Boolean}\n\t\t\t * @default false\n\t\t\t **/\n\t\t\tthis.paused = true;\n\t\t\n\t\t\t/**\n\t\t\t * The SpriteSheet instance to play back. This includes the source image, frame dimensions, and frame\n\t\t\t * data. See {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.\n\t\t\t * @property spriteSheet\n\t\t\t * @type {SpriteSheet}\n\t\t\t * @readonly\n\t\t\t **/\n\t\t\tthis.spriteSheet = spriteSheet;\n\t\t\n\t\t\t/**\n\t\t\t * Specifies the current frame index within the currently playing animation. When playing normally, this will increase\n\t\t\t * from 0 to n-1, where n is the number of frames in the current animation.\n\t\t\t *\n\t\t\t * This could be a non-integer value if\n\t\t\t * using time-based playback (see {{#crossLink \"Sprite/framerate\"}}{{/crossLink}}, or if the animation's speed is\n\t\t\t * not an integer.\n\t\t\t * @property currentAnimationFrame\n\t\t\t * @type {Number}\n\t\t\t * @default 0\n\t\t\t **/\n\t\t\tthis.currentAnimationFrame = 0;\n\t\t\n\t\t\t/**\n\t\t\t * By default Sprite instances advance one frame per tick. Specifying a framerate for the Sprite (or its related\n\t\t\t * SpriteSheet) will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n\t\t\t * framerate.\n\t\t\t *\n\t\t\t * For example, if a Sprite with a framerate of 10 is placed on a Stage being updated at 40fps, then the Sprite will\n\t\t\t * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n\t\t\t * vary slightly between frames.\n\t\t\t *\n\t\t\t * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n\t\t\t * passed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n\t\t\t * @property framerate\n\t\t\t * @type {Number}\n\t\t\t * @default 0\n\t\t\t **/\n\t\t\tthis.framerate = 0;\n\t\t\n\t\t\n\t\t// private properties:\n\t\t\t/**\n\t\t\t * Current animation object.\n\t\t\t * @property _animation\n\t\t\t * @protected\n\t\t\t * @type {Object}\n\t\t\t * @default null\n\t\t\t **/\n\t\t\tthis._animation = null;\n\t\t\n\t\t\t/**\n\t\t\t * Current frame index.\n\t\t\t * @property _currentFrame\n\t\t\t * @protected\n\t\t\t * @type {Number}\n\t\t\t * @default null\n\t\t\t **/\n\t\t\tthis._currentFrame = null;\n\t\t\t\n\t\t\t/**\n\t\t\t * Skips the next auto advance. Used by gotoAndPlay to avoid immediately jumping to the next frame\n\t\t\t * @property _skipAdvance\n\t\t\t * @protected\n\t\t\t * @type {Boolean}\n\t\t\t * @default false\n\t\t\t **/\n\t\t\tthis._skipAdvance = false;\n\t\t\t\n\t\t\t\n\t\t\tif (frameOrAnimation != null) { this.gotoAndPlay(frameOrAnimation); }\n\t\t}\n\t\tvar p = createjs.extend(Sprite, createjs.DisplayObject);\n\t\n\t\t/**\n\t\t * Constructor alias for backwards compatibility. This method will be removed in future versions.\n\t\t * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\n\t\t * @method initialize\n\t\t * @deprecated in favour of `createjs.promote()`\n\t\t **/\n\t\tp.initialize = Sprite; // TODO: Deprecated. This is for backwards support of Flash/Animate spritesheet export.\n\t\n\t\n\t// events:\n\t\t/**\n\t\t * Dispatched when an animation reaches its ends.\n\t\t * @event animationend\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @param {String} name The name of the animation that just ended.\n\t\t * @param {String} next The name of the next animation that will be played, or null. This will be the same as name if the animation is looping.\n\t\t * @since 0.6.0\n\t\t */\n\t\t \n\t\t/**\n\t\t * Dispatched any time the current frame changes. For example, this could be due to automatic advancement on a tick,\n\t\t * or calling gotoAndPlay() or gotoAndStop().\n\t\t * @event change\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t */\n\t\n\t\n\t// public methods:\n\t\t/**\n\t\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t\t * @method isVisible\n\t\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t\t **/\n\t\tp.isVisible = function() {\n\t\t\tvar hasContent = this.cacheCanvas || this.spriteSheet.complete;\n\t\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t\t};\n\t\n\t\t/**\n\t\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t\t * Returns true if the draw was handled (useful for overriding functionality).\n\t\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t\t * @method draw\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t\t * into itself).\n\t\t **/\n\t\tp.draw = function(ctx, ignoreCache) {\n\t\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n\t\t\tthis._normalizeFrame();\n\t\t\tvar o = this.spriteSheet.getFrame(this._currentFrame|0);\n\t\t\tif (!o) { return false; }\n\t\t\tvar rect = o.rect;\n\t\t\tif (rect.width && rect.height) { ctx.drawImage(o.image, rect.x, rect.y, rect.width, rect.height, -o.regX, -o.regY, rect.width, rect.height); }\n\t\t\treturn true;\n\t\t};\n\t\n\t\t//Note, the doc sections below document using the specified APIs (from DisplayObject)  from\n\t\t//Bitmap. This is why they have no method implementations.\n\t\n\t\t/**\n\t\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t\t * You should not cache Sprite instances as it can degrade performance.\n\t\t * @method cache\n\t\t **/\n\t\n\t\t/**\n\t\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t\t * You should not cache Sprite instances as it can degrade performance.\n\t\t * @method updateCache\n\t\t **/\n\t\n\t\t/**\n\t\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t\t * You should not cache Sprite instances as it can degrade performance.\n\t\t * @method uncache\n\t\t **/\n\t\n\t\t/**\n\t\t * Play (unpause) the current animation. The Sprite will be paused if either {{#crossLink \"Sprite/stop\"}}{{/crossLink}}\n\t\t * or {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} is called. Single frame animations will remain\n\t\t * unchanged.\n\t\t * @method play\n\t\t **/\n\t\tp.play = function() {\n\t\t\tthis.paused = false;\n\t\t};\n\t\n\t\t/**\n\t\t * Stop playing a running animation. The Sprite will be playing if {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}}\n\t\t * is called. Note that calling {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}} or {{#crossLink \"Sprite/play\"}}{{/crossLink}}\n\t\t * will resume playback.\n\t\t * @method stop\n\t\t **/\n\t\tp.stop = function() {\n\t\t\tthis.paused = true;\n\t\t};\n\t\n\t\t/**\n\t\t * Sets paused to false and plays the specified animation name, named frame, or frame number.\n\t\t * @method gotoAndPlay\n\t\t * @param {String|Number} frameOrAnimation The frame number or animation name that the playhead should move to\n\t\t * and begin playing.\n\t\t **/\n\t\tp.gotoAndPlay = function(frameOrAnimation) {\n\t\t\tthis.paused = false;\n\t\t\tthis._skipAdvance = true;\n\t\t\tthis._goto(frameOrAnimation);\n\t\t};\n\t\n\t\t/**\n\t\t * Sets paused to true and seeks to the specified animation name, named frame, or frame number.\n\t\t * @method gotoAndStop\n\t\t * @param {String|Number} frameOrAnimation The frame number or animation name that the playhead should move to\n\t\t * and stop.\n\t\t **/\n\t\tp.gotoAndStop = function(frameOrAnimation) {\n\t\t\tthis.paused = true;\n\t\t\tthis._goto(frameOrAnimation);\n\t\t};\n\t\n\t\t/**\n\t\t * Advances the playhead. This occurs automatically each tick by default.\n\t\t * @param [time] {Number} The amount of time in ms to advance by. Only applicable if framerate is set on the Sprite\n\t\t * or its SpriteSheet.\n\t\t * @method advance\n\t\t*/\n\t\tp.advance = function(time) {\n\t\t\tvar fps = this.framerate || this.spriteSheet.framerate;\n\t\t\tvar t = (fps && time != null) ? time/(1000/fps) : 1;\n\t\t\tthis._normalizeFrame(t);\n\t\t};\n\t\t\n\t\t/**\n\t\t * Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the current frame relative to\n\t\t * the origin. For example, a 90 x 70 frame with <code>regX=50</code> and <code>regY=40</code> would return a\n\t\t * rectangle with [x=-50, y=-40, width=90, height=70]. This ignores transformations on the display object.\n\t\t *\n\t\t * Also see the SpriteSheet {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}} method.\n\t\t * @method getBounds\n\t\t * @return {Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully\n\t\t * loaded.\n\t\t **/\n\t\tp.getBounds = function() {\n\t\t\t// TODO: should this normalizeFrame?\n\t\t\treturn this.DisplayObject_getBounds() || this.spriteSheet.getFrameBounds(this.currentFrame, this._rectangle);\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a clone of the Sprite instance. Note that the same SpriteSheet is shared between cloned\n\t\t * instances.\n\t\t * @method clone\n\t\t * @return {Sprite} a clone of the Sprite instance.\n\t\t **/\n\t\tp.clone = function() {\n\t\t\treturn this._cloneProps(new Sprite(this.spriteSheet));\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a string representation of this object.\n\t\t * @method toString\n\t\t * @return {String} a string representation of the instance.\n\t\t **/\n\t\tp.toString = function() {\n\t\t\treturn \"[Sprite (name=\"+  this.name +\")]\";\n\t\t};\n\t\n\t// private methods:\n\t\t/**\n\t\t * @method _cloneProps\n\t\t * @param {Sprite} o\n\t\t * @return {Sprite} o\n\t\t * @protected\n\t\t **/\n\t\tp._cloneProps = function(o) {\n\t\t\tthis.DisplayObject__cloneProps(o);\n\t\t\to.currentFrame = this.currentFrame;\n\t\t\to.currentAnimation = this.currentAnimation;\n\t\t\to.paused = this.paused;\n\t\t\to.currentAnimationFrame = this.currentAnimationFrame;\n\t\t\to.framerate = this.framerate;\n\t\t\t\n\t\t\to._animation = this._animation;\n\t\t\to._currentFrame = this._currentFrame;\n\t\t\to._skipAdvance = this._skipAdvance;\n\t\t\treturn o;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Advances the <code>currentFrame</code> if paused is not true. This is called automatically when the {{#crossLink \"Stage\"}}{{/crossLink}}\n\t\t * ticks.\n\t\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t\t * @protected\n\t\t * @method _tick\n\t\t **/\n\t\tp._tick = function(evtObj) {\n\t\t\tif (!this.paused) {\n\t\t\t\tif (!this._skipAdvance) { this.advance(evtObj&&evtObj.delta); }\n\t\t\t\tthis._skipAdvance = false;\n\t\t\t}\n\t\t\tthis.DisplayObject__tick(evtObj);\n\t\t};\n\t\n\t\n\t\t/**\n\t\t * Normalizes the current frame, advancing animations and dispatching callbacks as appropriate.\n\t\t * @protected\n\t\t * @method _normalizeFrame\n\t\t **/\n\t\tp._normalizeFrame = function(frameDelta) {\n\t\t\tframeDelta = frameDelta || 0;\n\t\t\tvar animation = this._animation;\n\t\t\tvar paused = this.paused;\n\t\t\tvar frame = this._currentFrame;\n\t\t\tvar l;\n\t\t\t\n\t\t\tif (animation) {\n\t\t\t\tvar speed = animation.speed || 1;\n\t\t\t\tvar animFrame = this.currentAnimationFrame;\n\t\t\t\tl = animation.frames.length;\n\t\t\t\tif (animFrame + frameDelta * speed >= l) {\n\t\t\t\t\tvar next = animation.next;\n\t\t\t\t\tif (this._dispatchAnimationEnd(animation, frame, paused, next, l - 1)) {\n\t\t\t\t\t\t// something changed in the event stack, so we shouldn't make any more changes here.\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (next) {\n\t\t\t\t\t\t// sequence. Automatically calls _normalizeFrame again with the remaining frames.\n\t\t\t\t\t\treturn this._goto(next, frameDelta - (l - animFrame) / speed);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// end.\n\t\t\t\t\t\tthis.paused = true;\n\t\t\t\t\t\tanimFrame = animation.frames.length - 1;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tanimFrame += frameDelta * speed;\n\t\t\t\t}\n\t\t\t\tthis.currentAnimationFrame = animFrame;\n\t\t\t\tthis._currentFrame = animation.frames[animFrame | 0]\n\t\t\t} else {\n\t\t\t\tframe = (this._currentFrame += frameDelta);\n\t\t\t\tl = this.spriteSheet.getNumFrames();\n\t\t\t\tif (frame >= l && l > 0) {\n\t\t\t\t\tif (!this._dispatchAnimationEnd(animation, frame, paused, l - 1)) {\n\t\t\t\t\t\t// looped.\n\t\t\t\t\t\tif ((this._currentFrame -= l) >= l) { return this._normalizeFrame(); }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tframe = this._currentFrame | 0;\n\t\t\tif (this.currentFrame != frame) {\n\t\t\t\tthis.currentFrame = frame;\n\t\t\t\tthis.dispatchEvent(\"change\");\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Dispatches the \"animationend\" event. Returns true if a handler changed the animation (ex. calling {{#crossLink \"Sprite/stop\"}}{{/crossLink}},\n\t\t * {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}}, etc.)\n\t\t * @property _dispatchAnimationEnd\n\t\t * @private\n\t\t * @type {Function}\n\t\t **/\n\t\tp._dispatchAnimationEnd = function(animation, frame, paused, next, end) {\n\t\t\tvar name = animation ? animation.name : null;\n\t\t\tif (this.hasEventListener(\"animationend\")) {\n\t\t\t\tvar evt = new createjs.Event(\"animationend\");\n\t\t\t\tevt.name = name;\n\t\t\t\tevt.next = next;\n\t\t\t\tthis.dispatchEvent(evt);\n\t\t\t}\n\t\t\t// did the animation get changed in the event stack?:\n\t\t\tvar changed = (this._animation != animation || this._currentFrame != frame);\n\t\t\t// if the animation hasn't changed, but the sprite was paused, then we want to stick to the last frame:\n\t\t\tif (!changed && !paused && this.paused) { this.currentAnimationFrame = end; changed = true; }\n\t\t\treturn changed;\n\t\t};\n\t\n\t\t/**\n\t\t * Moves the playhead to the specified frame number or animation.\n\t\t * @method _goto\n\t\t * @param {String|Number} frameOrAnimation The frame number or animation that the playhead should move to.\n\t\t * @param {Boolean} [frame] The frame of the animation to go to. Defaults to 0.\n\t\t * @protected\n\t\t **/\n\t\tp._goto = function(frameOrAnimation, frame) {\n\t\t\tthis.currentAnimationFrame = 0;\n\t\t\tif (isNaN(frameOrAnimation)) {\n\t\t\t\tvar data = this.spriteSheet.getAnimation(frameOrAnimation);\n\t\t\t\tif (data) {\n\t\t\t\t\tthis._animation = data;\n\t\t\t\t\tthis.currentAnimation = frameOrAnimation;\n\t\t\t\t\tthis._normalizeFrame(frame);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.currentAnimation = this._animation = null;\n\t\t\t\tthis._currentFrame = frameOrAnimation;\n\t\t\t\tthis._normalizeFrame();\n\t\t\t}\n\t\t};\n\t\n\t\n\t\tcreatejs.Sprite = createjs.promote(Sprite, \"DisplayObject\");\n\t}());\n\t\n\t//##############################################################################\n\t// Shape.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t\t * A Shape allows you to display vector art in the display list. It composites a {{#crossLink \"Graphics\"}}{{/crossLink}}\n\t\t * instance which exposes all of the vector drawing methods. The Graphics instance can be shared between multiple Shape\n\t\t * instances to display the same vector graphics with different positions or transforms.\n\t\t *\n\t\t * If the vector art will not\n\t\t * change between draws, you may want to use the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} method to reduce the\n\t\t * rendering cost.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var graphics = new createjs.Graphics().beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n\t\t *      var shape = new createjs.Shape(graphics);\n\t\t *\n\t\t *      //Alternatively use can also use the graphics property of the Shape class to renderer the same as above.\n\t\t *      var shape = new createjs.Shape();\n\t\t *      shape.graphics.beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n\t\t *\n\t\t * @class Shape\n\t\t * @extends DisplayObject\n\t\t * @constructor\n\t\t * @param {Graphics} graphics Optional. The graphics instance to display. If null, a new Graphics instance will be created.\n\t\t **/\n\t\tfunction Shape(graphics) {\n\t\t\tthis.DisplayObject_constructor();\n\t\t\t\n\t\t\t\n\t\t// public properties:\n\t\t\t/**\n\t\t\t * The graphics instance to display.\n\t\t\t * @property graphics\n\t\t\t * @type Graphics\n\t\t\t **/\n\t\t\tthis.graphics = graphics ? graphics : new createjs.Graphics();\n\t\t}\n\t\tvar p = createjs.extend(Shape, createjs.DisplayObject);\n\t\n\t\t// TODO: deprecated\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\n\t\n\t// public methods:\n\t\t/**\n\t\t * Returns true or false indicating whether the Shape would be visible if drawn to a canvas.\n\t\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t\t * @method isVisible\n\t\t * @return {Boolean} Boolean indicating whether the Shape would be visible if drawn to a canvas\n\t\t **/\n\t\tp.isVisible = function() {\n\t\t\tvar hasContent = this.cacheCanvas || (this.graphics && !this.graphics.isEmpty());\n\t\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t\t};\n\t\n\t\t/**\n\t\t * Draws the Shape into the specified context ignoring its visible, alpha, shadow, and transform. Returns true if\n\t\t * the draw was handled (useful for overriding functionality).\n\t\t *\n\t\t * <i>NOTE: This method is mainly for internal use, though it may be useful for advanced uses.</i>\n\t\t * @method draw\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n\t\t * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t\t * @return {Boolean}\n\t\t **/\n\t\tp.draw = function(ctx, ignoreCache) {\n\t\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n\t\t\tthis.graphics.draw(ctx, this);\n\t\t\treturn true;\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a clone of this Shape. Some properties that are specific to this instance's current context are reverted to\n\t\t * their defaults (for example .parent).\n\t\t * @method clone\n\t\t * @param {Boolean} recursive If true, this Shape's {{#crossLink \"Graphics\"}}{{/crossLink}} instance will also be\n\t\t * cloned. If false, the Graphics instance will be shared with the new Shape.\n\t\t **/\n\t\tp.clone = function(recursive) {\n\t\t\tvar g = (recursive && this.graphics) ? this.graphics.clone() : this.graphics;\n\t\t\treturn  this._cloneProps(new Shape(g));\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a string representation of this object.\n\t\t * @method toString\n\t\t * @return {String} a string representation of the instance.\n\t\t **/\n\t\tp.toString = function() {\n\t\t\treturn \"[Shape (name=\"+  this.name +\")]\";\n\t\t};\n\t\n\t\n\t\tcreatejs.Shape = createjs.promote(Shape, \"DisplayObject\");\n\t}());\n\t\n\t//##############################################################################\n\t// Text.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t\t * Display one or more lines of dynamic text (not user editable) in the display list. Line wrapping support (using the\n\t\t * lineWidth) is very basic, wrapping on spaces and tabs only. Note that as an alternative to Text, you can position HTML\n\t\t * text above or below the canvas relative to items in the display list using the {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}}\n\t\t * method, or using {{#crossLink \"DOMElement\"}}{{/crossLink}}.\n\t\t *\n\t\t * <b>Please note that Text does not support HTML text, and can only display one font style at a time.</b> To use\n\t\t * multiple font styles, you will need to create multiple text instances, and position them manually.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var text = new createjs.Text(\"Hello World\", \"20px Arial\", \"#ff7700\");\n\t\t *      text.x = 100;\n\t\t *      text.textBaseline = \"alphabetic\";\n\t\t *\n\t\t * CreateJS Text supports web fonts (the same rules as Canvas). The font must be loaded and supported by the browser\n\t\t * before it can be displayed.\n\t\t *\n\t\t * <strong>Note:</strong> Text can be expensive to generate, so cache instances where possible. Be aware that not all\n\t\t * browsers will render Text exactly the same.\n\t\t * @class Text\n\t\t * @extends DisplayObject\n\t\t * @constructor\n\t\t * @param {String} [text] The text to display.\n\t\t * @param {String} [font] The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold\n\t\t * 36px Arial\").\n\t\t * @param {String} [color] The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex.\n\t\t * \"#F00\", \"red\", or \"#FF0000\").\n\t\t **/\n\t\tfunction Text(text, font, color) {\n\t\t\tthis.DisplayObject_constructor();\n\t\t\t\n\t\t\t\n\t\t// public properties:\n\t\t\t/**\n\t\t\t * The text to display.\n\t\t\t * @property text\n\t\t\t * @type String\n\t\t\t **/\n\t\t\tthis.text = text;\n\t\t\n\t\t\t/**\n\t\t\t * The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold 36px Arial\").\n\t\t\t * @property font\n\t\t\t * @type String\n\t\t\t **/\n\t\t\tthis.font = font;\n\t\t\n\t\t\t/**\n\t\t\t * The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex. \"#F00\"). Default is \"#000\".\n\t\t\t * It will also accept valid canvas fillStyle values.\n\t\t\t * @property color\n\t\t\t * @type String\n\t\t\t **/\n\t\t\tthis.color = color;\n\t\t\n\t\t\t/**\n\t\t\t * The horizontal text alignment. Any of \"start\", \"end\", \"left\", \"right\", and \"center\". For detailed\n\t\t\t * information view the\n\t\t\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n\t\t\t * whatwg spec</a>. Default is \"left\".\n\t\t\t * @property textAlign\n\t\t\t * @type String\n\t\t\t **/\n\t\t\tthis.textAlign = \"left\";\n\t\t\n\t\t\t/**\n\t\t\t * The vertical alignment point on the font. Any of \"top\", \"hanging\", \"middle\", \"alphabetic\", \"ideographic\", or\n\t\t\t * \"bottom\". For detailed information view the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n\t\t\t * whatwg spec</a>. Default is \"top\".\n\t\t\t * @property textBaseline\n\t\t\t * @type String\n\t\t\t*/\n\t\t\tthis.textBaseline = \"top\";\n\t\t\n\t\t\t/**\n\t\t\t * The maximum width to draw the text. If maxWidth is specified (not null), the text will be condensed or\n\t\t\t * shrunk to make it fit in this width. For detailed information view the\n\t\t\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n\t\t\t * whatwg spec</a>.\n\t\t\t * @property maxWidth\n\t\t\t * @type Number\n\t\t\t*/\n\t\t\tthis.maxWidth = null;\n\t\t\n\t\t\t/**\n\t\t\t * If greater than 0, the text will be drawn as a stroke (outline) of the specified width.\n\t\t\t * @property outline\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis.outline = 0;\n\t\t\n\t\t\t/**\n\t\t\t * Indicates the line height (vertical distance between baselines) for multi-line text. If null or 0,\n\t\t\t * the value of getMeasuredLineHeight is used.\n\t\t\t * @property lineHeight\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis.lineHeight = 0;\n\t\t\n\t\t\t/**\n\t\t\t * Indicates the maximum width for a line of text before it is wrapped to multiple lines. If null,\n\t\t\t * the text will not be wrapped.\n\t\t\t * @property lineWidth\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis.lineWidth = null;\n\t\t}\n\t\tvar p = createjs.extend(Text, createjs.DisplayObject);\n\t\n\t\t// TODO: deprecated\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\n\t\t\n\t// static properties:\n\t\t/**\n\t\t * @property _workingContext\n\t\t * @type CanvasRenderingContext2D\n\t\t * @private\n\t\t **/\n\t\tvar canvas = (createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"));\n\t\tif (canvas.getContext) { Text._workingContext = canvas.getContext(\"2d\"); canvas.width = canvas.height = 1; }\n\t\t\n\t\t\n\t// constants:\n\t\t/**\n\t\t * Lookup table for the ratio to offset bounds x calculations based on the textAlign property.\n\t\t * @property H_OFFSETS\n\t\t * @type Object\n\t\t * @protected\n\t\t * @static\n\t\t **/\n\t\tText.H_OFFSETS = {start: 0, left: 0, center: -0.5, end: -1, right: -1};\n\t\t\n\t\t/**\n\t\t * Lookup table for the ratio to offset bounds y calculations based on the textBaseline property.\n\t\t * @property H_OFFSETS\n\t\t * @type Object\n\t\t * @protected\n\t\t * @static\n\t\t **/\n\t\tText.V_OFFSETS = {top: 0, hanging: -0.01, middle: -0.4, alphabetic: -0.8, ideographic: -0.85, bottom: -1};\n\t\n\t\n\t// public methods:\n\t\t/**\n\t\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t\t * @method isVisible\n\t\t * @return {Boolean} Whether the display object would be visible if drawn to a canvas\n\t\t **/\n\t\tp.isVisible = function() {\n\t\t\tvar hasContent = this.cacheCanvas || (this.text != null && this.text !== \"\");\n\t\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t\t};\n\t\n\t\t/**\n\t\t * Draws the Text into the specified context ignoring its visible, alpha, shadow, and transform.\n\t\t * Returns true if the draw was handled (useful for overriding functionality).\n\t\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t\t * @method draw\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t\t * into itself).\n\t\t **/\n\t\tp.draw = function(ctx, ignoreCache) {\n\t\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n\t\n\t\t\tvar col = this.color || \"#000\";\n\t\t\tif (this.outline) { ctx.strokeStyle = col; ctx.lineWidth = this.outline*1; }\n\t\t\telse { ctx.fillStyle = col; }\n\t\t\t\n\t\t\tthis._drawText(this._prepContext(ctx));\n\t\t\treturn true;\n\t\t};\n\t\n\t\t/**\n\t\t * Returns the measured, untransformed width of the text without wrapping. Use getBounds for a more robust value.\n\t\t * @method getMeasuredWidth\n\t\t * @return {Number} The measured, untransformed width of the text.\n\t\t **/\n\t\tp.getMeasuredWidth = function() {\n\t\t\treturn this._getMeasuredWidth(this.text);\n\t\t};\n\t\n\t\t/**\n\t\t * Returns an approximate line height of the text, ignoring the lineHeight property. This is based on the measured\n\t\t * width of a \"M\" character multiplied by 1.2, which provides an approximate line height for most fonts.\n\t\t * @method getMeasuredLineHeight\n\t\t * @return {Number} an approximate line height of the text, ignoring the lineHeight property. This is\n\t\t * based on the measured width of a \"M\" character multiplied by 1.2, which approximates em for most fonts.\n\t\t **/\n\t\tp.getMeasuredLineHeight = function() {\n\t\t\treturn this._getMeasuredWidth(\"M\")*1.2;\n\t\t};\n\t\n\t\t/**\n\t\t * Returns the approximate height of multi-line text by multiplying the number of lines against either the\n\t\t * <code>lineHeight</code> (if specified) or {{#crossLink \"Text/getMeasuredLineHeight\"}}{{/crossLink}}. Note that\n\t\t * this operation requires the text flowing logic to run, which has an associated CPU cost.\n\t\t * @method getMeasuredHeight\n\t\t * @return {Number} The approximate height of the untransformed multi-line text.\n\t\t **/\n\t\tp.getMeasuredHeight = function() {\n\t\t\treturn this._drawText(null,{}).height;\n\t\t};\n\t\n\t\t/**\n\t\t * Docced in superclass.\n\t\t */\n\t\tp.getBounds = function() {\n\t\t\tvar rect = this.DisplayObject_getBounds();\n\t\t\tif (rect) { return rect; }\n\t\t\tif (this.text == null || this.text === \"\") { return null; }\n\t\t\tvar o = this._drawText(null, {});\n\t\t\tvar w = (this.maxWidth && this.maxWidth < o.width) ? this.maxWidth : o.width;\n\t\t\tvar x = w * Text.H_OFFSETS[this.textAlign||\"left\"];\n\t\t\tvar lineHeight = this.lineHeight||this.getMeasuredLineHeight();\n\t\t\tvar y = lineHeight * Text.V_OFFSETS[this.textBaseline||\"top\"];\n\t\t\treturn this._rectangle.setValues(x, y, w, o.height);\n\t\t};\n\t\t\n\t\t/**\n\t\t * Returns an object with width, height, and lines properties. The width and height are the visual width and height\n\t\t * of the drawn text. The lines property contains an array of strings, one for\n\t\t * each line of text that will be drawn, accounting for line breaks and wrapping. These strings have trailing\n\t\t * whitespace removed.\n\t\t * @method getMetrics\n\t\t * @return {Object} An object with width, height, and lines properties.\n\t\t **/\n\t\tp.getMetrics = function() {\n\t\t\tvar o = {lines:[]};\n\t\t\to.lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n\t\t\to.vOffset = o.lineHeight * Text.V_OFFSETS[this.textBaseline||\"top\"];\n\t\t\treturn this._drawText(null, o, o.lines);\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a clone of the Text instance.\n\t\t * @method clone\n\t\t * @return {Text} a clone of the Text instance.\n\t\t **/\n\t\tp.clone = function() {\n\t\t\treturn this._cloneProps(new Text(this.text, this.font, this.color));\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a string representation of this object.\n\t\t * @method toString\n\t\t * @return {String} a string representation of the instance.\n\t\t **/\n\t\tp.toString = function() {\n\t\t\treturn \"[Text (text=\"+  (this.text.length > 20 ? this.text.substr(0, 17)+\"...\" : this.text) +\")]\";\n\t\t};\n\t\n\t\n\t// private methods:\n\t\t/**\n\t\t * @method _cloneProps\n\t\t * @param {Text} o\n\t\t * @protected\n\t\t * @return {Text} o\n\t\t **/\n\t\tp._cloneProps = function(o) {\n\t\t\tthis.DisplayObject__cloneProps(o);\n\t\t\to.textAlign = this.textAlign;\n\t\t\to.textBaseline = this.textBaseline;\n\t\t\to.maxWidth = this.maxWidth;\n\t\t\to.outline = this.outline;\n\t\t\to.lineHeight = this.lineHeight;\n\t\t\to.lineWidth = this.lineWidth;\n\t\t\treturn o;\n\t\t};\n\t\n\t\t/**\n\t\t * @method _getWorkingContext\n\t\t * @param {CanvasRenderingContext2D} ctx\n\t\t * @return {CanvasRenderingContext2D}\n\t\t * @protected\n\t\t **/\n\t\tp._prepContext = function(ctx) {\n\t\t\tctx.font = this.font||\"10px sans-serif\";\n\t\t\tctx.textAlign = this.textAlign||\"left\";\n\t\t\tctx.textBaseline = this.textBaseline||\"top\";\n\t\t\treturn ctx;\n\t\t};\n\t\n\t\t/**\n\t\t * Draws multiline text.\n\t\t * @method _drawText\n\t\t * @param {CanvasRenderingContext2D} ctx\n\t\t * @param {Object} o\n\t\t * @param {Array} lines\n\t\t * @return {Object}\n\t\t * @protected\n\t\t **/\n\t\tp._drawText = function(ctx, o, lines) {\n\t\t\tvar paint = !!ctx;\n\t\t\tif (!paint) {\n\t\t\t\tctx = Text._workingContext;\n\t\t\t\tctx.save();\n\t\t\t\tthis._prepContext(ctx);\n\t\t\t}\n\t\t\tvar lineHeight = this.lineHeight||this.getMeasuredLineHeight();\n\t\t\t\n\t\t\tvar maxW = 0, count = 0;\n\t\t\tvar hardLines = String(this.text).split(/(?:\\r\\n|\\r|\\n)/);\n\t\t\tfor (var i=0, l=hardLines.length; i<l; i++) {\n\t\t\t\tvar str = hardLines[i];\n\t\t\t\tvar w = null;\n\t\t\t\t\n\t\t\t\tif (this.lineWidth != null && (w = ctx.measureText(str).width) > this.lineWidth) {\n\t\t\t\t\t// text wrapping:\n\t\t\t\t\tvar words = str.split(/(\\s)/);\n\t\t\t\t\tstr = words[0];\n\t\t\t\t\tw = ctx.measureText(str).width;\n\t\t\t\t\t\n\t\t\t\t\tfor (var j=1, jl=words.length; j<jl; j+=2) {\n\t\t\t\t\t\t// Line needs to wrap:\n\t\t\t\t\t\tvar wordW = ctx.measureText(words[j] + words[j+1]).width;\n\t\t\t\t\t\tif (w + wordW > this.lineWidth) {\n\t\t\t\t\t\t\tif (paint) { this._drawTextLine(ctx, str, count*lineHeight); }\n\t\t\t\t\t\t\tif (lines) { lines.push(str); }\n\t\t\t\t\t\t\tif (w > maxW) { maxW = w; }\n\t\t\t\t\t\t\tstr = words[j+1];\n\t\t\t\t\t\t\tw = ctx.measureText(str).width;\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstr += words[j] + words[j+1];\n\t\t\t\t\t\t\tw += wordW;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (paint) { this._drawTextLine(ctx, str, count*lineHeight); }\n\t\t\t\tif (lines) { lines.push(str); }\n\t\t\t\tif (o && w == null) { w = ctx.measureText(str).width; }\n\t\t\t\tif (w > maxW) { maxW = w; }\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\t\n\t\t\tif (o) {\n\t\t\t\to.width = maxW;\n\t\t\t\to.height = count*lineHeight;\n\t\t\t}\n\t\t\tif (!paint) { ctx.restore(); }\n\t\t\treturn o;\n\t\t};\n\t\n\t\t/**\n\t\t * @method _drawTextLine\n\t\t * @param {CanvasRenderingContext2D} ctx\n\t\t * @param {String} text\n\t\t * @param {Number} y\n\t\t * @protected\n\t\t **/\n\t\tp._drawTextLine = function(ctx, text, y) {\n\t\t\t// Chrome 17 will fail to draw the text if the last param is included but null, so we feed it a large value instead:\n\t\t\tif (this.outline) { ctx.strokeText(text, 0, y, this.maxWidth||0xFFFF); }\n\t\t\telse { ctx.fillText(text, 0, y, this.maxWidth||0xFFFF); }\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * @method _getMeasuredWidth\n\t\t * @param {String} text\n\t\t * @protected\n\t\t **/\n\t\tp._getMeasuredWidth = function(text) {\n\t\t\tvar ctx = Text._workingContext;\n\t\t\tctx.save();\n\t\t\tvar w = this._prepContext(ctx).measureText(text).width;\n\t\t\tctx.restore();\n\t\t\treturn w;\n\t\t};\n\t\n\t\n\t\tcreatejs.Text = createjs.promote(Text, \"DisplayObject\");\n\t}());\n\t\n\t//##############################################################################\n\t// BitmapText.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t\t * Displays text using bitmap glyphs defined in a sprite sheet. Multi-line text is supported\n\t\t * using new line characters, but automatic wrapping is not supported. See the \n\t\t * {{#crossLink \"BitmapText/spriteSheet:property\"}}{{/crossLink}}\n\t\t * property for more information on defining glyphs.\n\t\t * \n\t\t * <strong>Important:</strong> BitmapText extends Container, but is not designed to be used as one.\n\t\t * As such, methods like addChild and removeChild are disabled.\n\t\t * @class BitmapText\n\t\t * @extends DisplayObject\n\t\t * @param {String} [text=\"\"] The text to display.\n\t\t * @param {SpriteSheet} [spriteSheet=null] The spritesheet that defines the character glyphs.\n\t\t * @constructor\n\t\t **/\n\t\tfunction BitmapText(text, spriteSheet) {\n\t\t\tthis.Container_constructor();\n\t\t\t\n\t\t\t\n\t\t// public properties:\n\t\t\t/**\n\t\t\t * The text to display.\n\t\t\t * @property text\n\t\t\t * @type String\n\t\t\t * @default \"\"\n\t\t\t **/\n\t\t\tthis.text = text||\"\";\n\t\t\t\n\t\t\t/**\n\t\t\t * A SpriteSheet instance that defines the glyphs for this bitmap text. Each glyph/character\n\t\t\t * should have a single frame animation defined in the sprite sheet named the same as\n\t\t\t * corresponding character. For example, the following animation definition:\n\t\t\t *\n\t\t\t * \t\t\"A\": {frames: [0]}\n\t\t\t *\n\t\t\t * would indicate that the frame at index 0 of the spritesheet should be drawn for the \"A\" character. The short form\n\t\t\t * is also acceptable:\n\t\t\t * \n\t\t\t * \t\t\"A\": 0\n\t\t\t *\n\t\t\t * Note that if a character in the text is not found in the sprite sheet, it will also\n\t\t\t * try to use the alternate case (upper or lower).\n\t\t\t *\n\t\t\t * See SpriteSheet for more information on defining sprite sheet data.\n\t\t\t * @property spriteSheet\n\t\t\t * @type SpriteSheet\n\t\t\t * @default null\n\t\t\t **/\n\t\t\tthis.spriteSheet = spriteSheet;\n\t\t\n\t\t\t/**\n\t\t\t * The height of each line of text. If 0, then it will use a line height calculated\n\t\t\t * by checking for the height of the \"1\", \"T\", or \"L\" character (in that order). If\n\t\t\t * those characters are not defined, it will use the height of the first frame of the\n\t\t\t * sprite sheet.\n\t\t\t * @property lineHeight\n\t\t\t * @type Number\n\t\t\t * @default 0\n\t\t\t **/\n\t\t\tthis.lineHeight = 0;\n\t\t\n\t\t\t/**\n\t\t\t * This spacing (in pixels) will be added after each character in the output.\n\t\t\t * @property letterSpacing\n\t\t\t * @type Number\n\t\t\t * @default 0\n\t\t\t **/\n\t\t\tthis.letterSpacing = 0;\n\t\t\n\t\t\t/**\n\t\t\t * If a space character is not defined in the sprite sheet, then empty pixels equal to\n\t\t\t * spaceWidth will be inserted instead. If 0, then it will use a value calculated\n\t\t\t * by checking for the width of the \"1\", \"l\", \"E\", or \"A\" character (in that order). If\n\t\t\t * those characters are not defined, it will use the width of the first frame of the\n\t\t\t * sprite sheet.\n\t\t\t * @property spaceWidth\n\t\t\t * @type Number\n\t\t\t * @default 0\n\t\t\t **/\n\t\t\tthis.spaceWidth = 0;\n\t\t\t\n\t\t\t\n\t\t// private properties:\n\t\t \t/**\n\t\t\t * @property _oldProps\n\t\t\t * @type Object\n\t\t\t * @protected\n\t\t\t **/\n\t\t\tthis._oldProps = {text:0,spriteSheet:0,lineHeight:0,letterSpacing:0,spaceWidth:0};\n\t\t}\n\t\tvar p = createjs.extend(BitmapText, createjs.Container);\n\t\n\t\t/**\n\t\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t\t * for details.\n\t\t *\n\t\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t\t *\n\t\t * @method initialize\n\t\t * @protected\n\t\t * @deprecated\n\t\t */\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\t\n\t// static properties:\n\t\t/**\n\t\t * BitmapText uses Sprite instances to draw text. To reduce the creation and destruction of instances (and thus garbage collection), it maintains\n\t\t * an internal object pool of sprite instances to reuse. Increasing this value can cause more sprites to be\n\t\t * retained, slightly increasing memory use, but reducing instantiation.\n\t\t * @property maxPoolSize\n\t\t * @type Number\n\t\t * @static\n\t\t * @default 100\n\t\t **/\n\t\tBitmapText.maxPoolSize = 100;\n\t\t\n\t\t/**\n\t\t * Sprite object pool.\n\t\t * @type {Array}\n\t\t * @static\n\t\t * @private\n\t\t */\n\t\tBitmapText._spritePool = [];\n\t\n\t\t\n\t// public methods:\n\t\t/**\n\t\t * Docced in superclass.\n\t\t **/\n\t\tp.draw = function(ctx, ignoreCache) {\n\t\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return; }\n\t\t\tthis._updateText();\n\t\t\tthis.Container_draw(ctx, ignoreCache);\n\t\t};\n\t\t\n\t\t/**\n\t\t * Docced in superclass.\n\t\t **/\n\t\tp.getBounds = function() {\n\t\t\tthis._updateText();\n\t\t\treturn this.Container_getBounds();\n\t\t};\n\t\t\n\t\t/**\n\t\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t\t * @method isVisible\n\t\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t\t **/\n\t\tp.isVisible = function() {\n\t\t\tvar hasContent = this.cacheCanvas || (this.spriteSheet && this.spriteSheet.complete && this.text);\n\t\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX !== 0 && this.scaleY !== 0 && hasContent);\n\t\t};\n\t\t\n\t\tp.clone = function() {\n\t\t\treturn this._cloneProps(new BitmapText(this.text, this.spriteSheet));\n\t\t};\n\t\t\n\t\t/**\n\t\t * <strong>Disabled in BitmapText.</strong>\n\t\t * @method addChild\n\t\t **/\n\t\t/**\n\t\t * <strong>Disabled in BitmapText.</strong>\n\t\t * @method addChildAt\n\t\t **/\n\t\t/**\n\t\t * <strong>Disabled in BitmapText.</strong>\n\t\t * @method removeChild\n\t\t **/\n\t\t/**\n\t\t * <strong>Disabled in BitmapText.</strong>\n\t\t * @method removeChildAt\n\t\t **/\n\t\t/**\n\t\t * <strong>Disabled in BitmapText.</strong>\n\t\t * @method removeAllChildren\n\t\t **/\n\t\tp.addChild = p.addChildAt = p.removeChild = p.removeChildAt = p.removeAllChildren = function() {};\n\t\n\t\n\t// private methods:\n\t \t/**\n\t\t * @method _cloneProps\n\t\t * @param {BitmapText} o\n\t\t * @return {BitmapText} o\n\t\t * @protected\n\t\t **/\n\t\tp._cloneProps = function(o) {\n\t\t\tthis.Container__cloneProps(o);\n\t\t\to.lineHeight = this.lineHeight;\n\t\t\to.letterSpacing = this.letterSpacing;\n\t\t\to.spaceWidth = this.spaceWidth;\n\t\t\treturn o;\n\t\t};\n\t\t\n\t\t/**\n\t\t * @method _getFrameIndex\n\t\t * @param {String} character\n\t\t * @param {SpriteSheet} spriteSheet\n\t\t * @return {Number}\n\t\t * @protected\n\t\t **/\n\t\tp._getFrameIndex = function(character, spriteSheet) {\n\t\t\tvar c, o = spriteSheet.getAnimation(character);\n\t\t\tif (!o) {\n\t\t\t\t(character != (c = character.toUpperCase())) || (character != (c = character.toLowerCase())) || (c=null);\n\t\t\t\tif (c) { o = spriteSheet.getAnimation(c); }\n\t\t\t}\n\t\t\treturn o && o.frames[0];\n\t\t};\n\t\t\n\t\t/**\n\t\t * @method _getFrame\n\t\t * @param {String} character\n\t\t * @param {SpriteSheet} spriteSheet\n\t\t * @return {Object}\n\t\t * @protected\n\t\t **/\n\t\tp._getFrame = function(character, spriteSheet) {\n\t\t\tvar index = this._getFrameIndex(character, spriteSheet);\n\t\t\treturn index == null ? index : spriteSheet.getFrame(index);\n\t\t};\n\t\t\n\t\t/**\n\t\t * @method _getLineHeight\n\t\t * @param {SpriteSheet} ss\n\t\t * @return {Number}\n\t\t * @protected\n\t\t **/\n\t\tp._getLineHeight = function(ss) {\n\t\t\tvar frame = this._getFrame(\"1\",ss) || this._getFrame(\"T\",ss) || this._getFrame(\"L\",ss) || ss.getFrame(0);\n\t\t\treturn frame ? frame.rect.height : 1;\n\t\t};\n\t\t/**\n\t\t * @method _getSpaceWidth\n\t\t * @param {SpriteSheet} ss\n\t\t * @return {Number}\n\t\t * @protected\n\t\t **/\n\t\tp._getSpaceWidth = function(ss) {\n\t\t\tvar frame = this._getFrame(\"1\",ss) || this._getFrame(\"l\",ss) || this._getFrame(\"e\",ss) || this._getFrame(\"a\",ss) || ss.getFrame(0);\n\t\t\treturn frame ? frame.rect.width : 1;\n\t\t};\n\t\t\n\t\t/**\n\t\t * @method _drawText\n\t\t * @protected\n\t\t **/\n\t\tp._updateText = function() {\n\t\t\tvar x=0, y=0, o=this._oldProps, change=false, spaceW=this.spaceWidth, lineH=this.lineHeight, ss=this.spriteSheet;\n\t\t\tvar pool=BitmapText._spritePool, kids=this.children, childIndex=0, numKids=kids.length, sprite;\n\t\t\t\n\t\t\tfor (var n in o) {\n\t\t\t\tif (o[n] != this[n]) {\n\t\t\t\t\to[n] = this[n];\n\t\t\t\t\tchange = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!change) { return; }\n\t\t\t\n\t\t\tvar hasSpace = !!this._getFrame(\" \", ss);\n\t\t\tif (!hasSpace && !spaceW) { spaceW = this._getSpaceWidth(ss); }\n\t\t\tif (!lineH) { lineH = this._getLineHeight(ss); }\n\t\t\t\n\t\t\tfor(var i=0, l=this.text.length; i<l; i++) {\n\t\t\t\tvar character = this.text.charAt(i);\n\t\t\t\tif (character == \" \" && !hasSpace) {\n\t\t\t\t\tx += spaceW;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (character==\"\\n\" || character==\"\\r\") {\n\t\t\t\t\tif (character==\"\\r\" && this.text.charAt(i+1) == \"\\n\") { i++; } // crlf\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty += lineH;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\n\t\t\t\tvar index = this._getFrameIndex(character, ss);\n\t\t\t\tif (index == null) { continue; }\n\t\t\t\t\n\t\t\t\tif (childIndex < numKids) {\n\t\t\t\t\tsprite = kids[childIndex];\n\t\t\t\t} else {\n\t\t\t\t\tkids.push(sprite = pool.length ? pool.pop() : new createjs.Sprite());\n\t\t\t\t\tsprite.parent = this;\n\t\t\t\t\tnumKids++;\n\t\t\t\t}\n\t\t\t\tsprite.spriteSheet = ss;\n\t\t\t\tsprite.gotoAndStop(index);\n\t\t\t\tsprite.x = x;\n\t\t\t\tsprite.y = y;\n\t\t\t\tchildIndex++;\n\t\t\t\t\n\t\t\t\tx += sprite.getBounds().width + this.letterSpacing;\n\t\t\t}\n\t\t\twhile (numKids > childIndex) {\n\t\t\t\t // faster than removeChild.\n\t\t\t\tpool.push(sprite = kids.pop());\n\t\t\t\tsprite.parent = null;\n\t\t\t\tnumKids--;\n\t\t\t}\n\t\t\tif (pool.length > BitmapText.maxPoolSize) { pool.length = BitmapText.maxPoolSize; }\n\t\t};\n\t\n\t\n\t\tcreatejs.BitmapText = createjs.promote(BitmapText, \"Container\");\n\t}());\n\t\n\t//##############################################################################\n\t// MovieClip.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t\t * The MovieClip class associates a TweenJS Timeline with an EaselJS {{#crossLink \"Container\"}}{{/crossLink}}. It allows\n\t\t * you to create objects which encapsulate timeline animations, state changes, and synched actions. The MovieClip\n\t\t * class has been included in the EaselJS minified file since 0.7.0.\n\t\t *\n\t\t * Currently MovieClip only works properly if it is tick based (as opposed to time based) though some concessions have\n\t\t * been made to support time-based timelines in the future.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t * This example animates two shapes back and forth. The grey shape starts on the left, but we jump to a mid-point in\n\t\t * the animation using {{#crossLink \"MovieClip/gotoAndPlay\"}}{{/crossLink}}.\n\t\t *\n\t\t *      var stage = new createjs.Stage(\"canvas\");\n\t\t *      createjs.Ticker.addEventListener(\"tick\", stage);\n\t\t *\n\t\t *      var mc = new createjs.MovieClip(null, 0, true, {start:20});\n\t\t *      stage.addChild(mc);\n\t\t *\n\t\t *      var child1 = new createjs.Shape(\n\t\t *          new createjs.Graphics().beginFill(\"#999999\")\n\t\t *              .drawCircle(30,30,30));\n\t\t *      var child2 = new createjs.Shape(\n\t\t *          new createjs.Graphics().beginFill(\"#5a9cfb\")\n\t\t *              .drawCircle(30,30,30));\n\t\t *\n\t\t *      mc.timeline.addTween(\n\t\t *          createjs.Tween.get(child1)\n\t\t *              .to({x:0}).to({x:60}, 50).to({x:0}, 50));\n\t\t *      mc.timeline.addTween(\n\t\t *          createjs.Tween.get(child2)\n\t\t *              .to({x:60}).to({x:0}, 50).to({x:60}, 50));\n\t\t *\n\t\t *      mc.gotoAndPlay(\"start\");\n\t\t *\n\t\t * It is recommended to use <code>tween.to()</code> to animate and set properties (use no duration to have it set\n\t\t * immediately), and the <code>tween.wait()</code> method to create delays between animations. Note that using the\n\t\t * <code>tween.set()</code> method to affect properties will likely not provide the desired result.\n\t\t *\n\t\t * @class MovieClip\n\t\t * @main MovieClip\n\t\t * @extends Container\n\t\t * @constructor\n\t\t * @param {String} [mode=independent] Initial value for the mode property. One of {{#crossLink \"MovieClip/INDEPENDENT:property\"}}{{/crossLink}},\n\t\t * {{#crossLink \"MovieClip/SINGLE_FRAME:property\"}}{{/crossLink}}, or {{#crossLink \"MovieClip/SYNCHED:property\"}}{{/crossLink}}.\n\t\t * The default is {{#crossLink \"MovieClip/INDEPENDENT:property\"}}{{/crossLink}}.\n\t\t * @param {Number} [startPosition=0] Initial value for the {{#crossLink \"MovieClip/startPosition:property\"}}{{/crossLink}}\n\t\t * property.\n\t\t * @param {Boolean} [loop=true] Initial value for the {{#crossLink \"MovieClip/loop:property\"}}{{/crossLink}}\n\t\t * property. The default is `true`.\n\t\t * @param {Object} [labels=null] A hash of labels to pass to the {{#crossLink \"MovieClip/timeline:property\"}}{{/crossLink}}\n\t\t * instance associated with this MovieClip. Labels only need to be passed if they need to be used.\n\t\t **/\n\t\tfunction MovieClip(mode, startPosition, loop, labels) {\n\t\t\tthis.Container_constructor();\n\t\t\t!MovieClip.inited&&MovieClip.init(); // static init\n\t\t\t\n\t\t\t\n\t\t// public properties:\n\t\t\t/**\n\t\t\t * Controls how this MovieClip advances its time. Must be one of 0 (INDEPENDENT), 1 (SINGLE_FRAME), or 2 (SYNCHED).\n\t\t\t * See each constant for a description of the behaviour.\n\t\t\t * @property mode\n\t\t\t * @type String\n\t\t\t * @default null\n\t\t\t **/\n\t\t\tthis.mode = mode||MovieClip.INDEPENDENT;\n\t\t\n\t\t\t/**\n\t\t\t * Specifies what the first frame to play in this movieclip, or the only frame to display if mode is SINGLE_FRAME.\n\t\t\t * @property startPosition\n\t\t\t * @type Number\n\t\t\t * @default 0\n\t\t\t */\n\t\t\tthis.startPosition = startPosition || 0;\n\t\t\n\t\t\t/**\n\t\t\t * Indicates whether this MovieClip should loop when it reaches the end of its timeline.\n\t\t\t * @property loop\n\t\t\t * @type Boolean\n\t\t\t * @default true\n\t\t\t */\n\t\t\tthis.loop = loop;\n\t\t\n\t\t\t/**\n\t\t\t * The current frame of the movieclip.\n\t\t\t * @property currentFrame\n\t\t\t * @type Number\n\t\t\t * @default 0\n\t\t\t * @readonly\n\t\t\t */\n\t\t\tthis.currentFrame = 0;\n\t\t\n\t\t\t/**\n\t\t\t * The TweenJS Timeline that is associated with this MovieClip. This is created automatically when the MovieClip\n\t\t\t * instance is initialized. Animations are created by adding <a href=\"http://tweenjs.com\">TweenJS</a> Tween\n\t\t\t * instances to the timeline.\n\t\t\t *\n\t\t\t * <h4>Example</h4>\n\t\t\t *\n\t\t\t *      var tween = createjs.Tween.get(target).to({x:0}).to({x:100}, 30);\n\t\t\t *      var mc = new createjs.MovieClip();\n\t\t\t *      mc.timeline.addTween(tween);\n\t\t\t *\n\t\t\t * Elements can be added and removed from the timeline by toggling an \"_off\" property\n\t\t\t * using the <code>tweenInstance.to()</code> method. Note that using <code>Tween.set</code> is not recommended to\n\t\t\t * create MovieClip animations. The following example will toggle the target off on frame 0, and then back on for\n\t\t\t * frame 1. You can use the \"visible\" property to achieve the same effect.\n\t\t\t *\n\t\t\t *      var tween = createjs.Tween.get(target).to({_off:false})\n\t\t\t *          .wait(1).to({_off:true})\n\t\t\t *          .wait(1).to({_off:false});\n\t\t\t *\n\t\t\t * @property timeline\n\t\t\t * @type Timeline\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis.timeline = new createjs.Timeline(null, labels, {paused:true, position:startPosition, useTicks:true});\n\t\t\n\t\t\t/**\n\t\t\t * If true, the MovieClip's position will not advance when ticked.\n\t\t\t * @property paused\n\t\t\t * @type Boolean\n\t\t\t * @default false\n\t\t\t */\n\t\t\tthis.paused = false;\n\t\t\n\t\t\t/**\n\t\t\t * If true, actions in this MovieClip's tweens will be run when the playhead advances.\n\t\t\t * @property actionsEnabled\n\t\t\t * @type Boolean\n\t\t\t * @default true\n\t\t\t */\n\t\t\tthis.actionsEnabled = true;\n\t\t\n\t\t\t/**\n\t\t\t * If true, the MovieClip will automatically be reset to its first frame whenever the timeline adds\n\t\t\t * it back onto the display list. This only applies to MovieClip instances with mode=INDEPENDENT.\n\t\t\t * <br><br>\n\t\t\t * For example, if you had a character animation with a \"body\" child MovieClip instance\n\t\t\t * with different costumes on each frame, you could set body.autoReset = false, so that\n\t\t\t * you can manually change the frame it is on, without worrying that it will be reset\n\t\t\t * automatically.\n\t\t\t * @property autoReset\n\t\t\t * @type Boolean\n\t\t\t * @default true\n\t\t\t */\n\t\t\tthis.autoReset = true;\n\t\t\t\n\t\t\t/**\n\t\t\t * An array of bounds for each frame in the MovieClip. This is mainly intended for tool output.\n\t\t\t * @property frameBounds\n\t\t\t * @type Array\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis.frameBounds = this.frameBounds||null; // TODO: Deprecated. This is for backwards support of Flash/Animate\n\t\t\t\n\t\t\t/**\n\t\t\t * By default MovieClip instances advance one frame per tick. Specifying a framerate for the MovieClip\n\t\t\t * will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n\t\t\t * framerate.\n\t\t\t *\n\t\t\t * For example, if a MovieClip with a framerate of 10 is placed on a Stage being updated at 40fps, then the MovieClip will\n\t\t\t * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n\t\t\t * vary slightly between frames.\n\t\t\t *\n\t\t\t * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n\t\t\t * passed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n\t\t\t * @property framerate\n\t\t\t * @type {Number}\n\t\t\t * @default null\n\t\t\t **/\n\t\t\tthis.framerate = null;\n\t\t\t\n\t\t\t\n\t\t// private properties:\n\t\t\t/**\n\t\t\t * @property _synchOffset\n\t\t\t * @type Number\n\t\t\t * @default 0\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._synchOffset = 0;\n\t\t\n\t\t\t/**\n\t\t\t * @property _prevPos\n\t\t\t * @type Number\n\t\t\t * @default -1\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._prevPos = -1; // TODO: evaluate using a ._reset Boolean prop instead of -1.\n\t\t\n\t\t\t/**\n\t\t\t * @property _prevPosition\n\t\t\t * @type Number\n\t\t\t * @default 0\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._prevPosition = 0;\n\t\t\n\t\t\t/**\n\t\t\t * The time remaining from the previous tick, only applicable when .framerate is set.\n\t\t\t * @property _t\n\t\t\t * @type Number\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._t = 0;\n\t\t\n\t\t\t/**\n\t\t\t * List of display objects that are actively being managed by the MovieClip.\n\t\t\t * @property _managed\n\t\t\t * @type Object\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._managed = {};\n\t\t}\n\t\tvar p = createjs.extend(MovieClip, createjs.Container);\n\t\n\t\n\t// constants:\n\t\t/**\n\t\t * The MovieClip will advance independently of its parent, even if its parent is paused.\n\t\t * This is the default mode.\n\t\t * @property INDEPENDENT\n\t\t * @static\n\t\t * @type String\n\t\t * @default \"independent\"\n\t\t * @readonly\n\t\t **/\n\t\tMovieClip.INDEPENDENT = \"independent\";\n\t\n\t\t/**\n\t\t * The MovieClip will only display a single frame (as determined by the startPosition property).\n\t\t * @property SINGLE_FRAME\n\t\t * @static\n\t\t * @type String\n\t\t * @default \"single\"\n\t\t * @readonly\n\t\t **/\n\t\tMovieClip.SINGLE_FRAME = \"single\";\n\t\n\t\t/**\n\t\t * The MovieClip will be advanced only when its parent advances and will be synched to the position of\n\t\t * the parent MovieClip.\n\t\t * @property SYNCHED\n\t\t * @static\n\t\t * @type String\n\t\t * @default \"synched\"\n\t\t * @readonly\n\t\t **/\n\t\tMovieClip.SYNCHED = \"synched\";\n\t\t\n\t\t\n\t// static properties:\n\t\tMovieClip.inited = false;\n\t\t\n\t\t\n\t// static methods:\n\t\tMovieClip.init = function() {\n\t\t\tif (MovieClip.inited) { return; }\n\t\t\t// plugins introduce some overhead to Tween, so we only install this if an MC is instantiated.\n\t\t\tMovieClipPlugin.install();\n\t\t\tMovieClip.inited = true;\n\t\t};\n\t\t\n\t\t\n\t// getter / setters:\n\t\t/**\n\t\t * Use the {{#crossLink \"MovieClip/labels:property\"}}{{/crossLink}} property instead.\n\t\t * @method getLabels\n\t\t * @return {Array}\n\t\t * @deprecated\n\t\t **/\n\t\tp.getLabels = function() {\n\t\t\treturn this.timeline.getLabels();\n\t\t};\n\t\t\n\t\t/**\n\t\t * Use the {{#crossLink \"MovieClip/currentLabel:property\"}}{{/crossLink}} property instead.\n\t\t * @method getCurrentLabel\n\t\t * @return {String}\n\t\t * @deprecated\n\t\t **/\n\t\tp.getCurrentLabel = function() {\n\t\t\tthis._updateTimeline();\n\t\t\treturn this.timeline.getCurrentLabel();\n\t\t};\n\t\t\n\t\t/**\n\t\t * Use the {{#crossLink \"MovieClip/duration:property\"}}{{/crossLink}} property instead.\n\t\t * @method getDuration\n\t\t * @return {Number}\n\t\t * @protected\n\t\t **/\n\t\tp.getDuration = function() {\n\t\t\treturn this.timeline.duration;\n\t\t};\n\t\n\t\t/**\n\t\t * Returns an array of objects with label and position (aka frame) properties, sorted by position.\n\t\t * Shortcut to TweenJS: Timeline.getLabels();\n\t\t * @property labels\n\t\t * @type {Array}\n\t\t * @readonly\n\t\t **/\n\t\t\n\t\t/**\n\t\t * Returns the name of the label on or immediately before the current frame. See TweenJS: Timeline.getCurrentLabel()\n\t\t * for more information.\n\t\t * @property currentLabel\n\t\t * @type {String}\n\t\t * @readonly\n\t\t **/\n\t\t\n\t\t/**\n\t\t * Returns the duration of this MovieClip in seconds or ticks. Identical to {{#crossLink \"MovieClip/duration:property\"}}{{/crossLink}}\n\t\t * and provided for Adobe Flash/Animate API compatibility.\n\t\t * @property totalFrames\n\t\t * @type {Number}\n\t\t * @readonly\n\t\t **/\n\t\t\n\t\t/**\n\t\t * Returns the duration of this MovieClip in seconds or ticks.\n\t\t * @property duration\n\t\t * @type {Number}\n\t\t * @readonly\n\t\t **/\n\t\ttry {\n\t\t\tObject.defineProperties(p, {\n\t\t\t\tlabels: { get: p.getLabels },\n\t\t\t\tcurrentLabel: { get: p.getCurrentLabel },\n\t\t\t\ttotalFrames: { get: p.getDuration },\n\t\t\t\tduration: { get: p.getDuration }\n\t\t\t});\n\t\t} catch (e) {}\n\t\n\t\n\t// public methods:\n\t\t/**\n\t\t * Constructor alias for backwards compatibility. This method will be removed in future versions.\n\t\t * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\n\t\t * @method initialize\n\t\t * @deprecated in favour of `createjs.promote()`\n\t\t **/\n\t\tp.initialize = MovieClip; // TODO: Deprecated. This is for backwards support of Adobe Flash/Animate\n\t\n\t\t/**\n\t\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t\t * @method isVisible\n\t\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t\t **/\n\t\tp.isVisible = function() {\n\t\t\t// children are placed in draw, so we can't determine if we have content.\n\t\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n\t\t};\n\t\n\t\t/**\n\t\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t\t * Returns true if the draw was handled (useful for overriding functionality).\n\t\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t\t * @method draw\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t\t * into itself).\n\t\t **/\n\t\tp.draw = function(ctx, ignoreCache) {\n\t\t\t// draw to cache first:\n\t\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n\t\t\tthis._updateTimeline();\n\t\t\tthis.Container_draw(ctx, ignoreCache);\n\t\t\treturn true;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Sets paused to false.\n\t\t * @method play\n\t\t **/\n\t\tp.play = function() {\n\t\t\tthis.paused = false;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Sets paused to true.\n\t\t * @method stop\n\t\t **/\n\t\tp.stop = function() {\n\t\t\tthis.paused = true;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Advances this movie clip to the specified position or label and sets paused to false.\n\t\t * @method gotoAndPlay\n\t\t * @param {String|Number} positionOrLabel The animation name or frame number to go to.\n\t\t **/\n\t\tp.gotoAndPlay = function(positionOrLabel) {\n\t\t\tthis.paused = false;\n\t\t\tthis._goto(positionOrLabel);\n\t\t};\n\t\t\n\t\t/**\n\t\t * Advances this movie clip to the specified position or label and sets paused to true.\n\t\t * @method gotoAndStop\n\t\t * @param {String|Number} positionOrLabel The animation or frame name to go to.\n\t\t **/\n\t\tp.gotoAndStop = function(positionOrLabel) {\n\t\t\tthis.paused = true;\n\t\t\tthis._goto(positionOrLabel);\n\t\t};\n\t\t\n\t\t/**\n\t\t * Advances the playhead. This occurs automatically each tick by default.\n\t\t * @param [time] {Number} The amount of time in ms to advance by. Only applicable if framerate is set.\n\t\t * @method advance\n\t\t*/\n\t\tp.advance = function(time) {\n\t\t\t// TODO: should we worry at all about clips who change their own modes via frame scripts?\n\t\t\tvar independent = MovieClip.INDEPENDENT;\n\t\t\tif (this.mode != independent) { return; }\n\t\t\t\n\t\t\tvar o=this, fps = o.framerate;\n\t\t\twhile ((o = o.parent) && fps == null) {\n\t\t\t\tif (o.mode == independent) { fps = o._framerate; }\n\t\t\t}\n\t\t\tthis._framerate = fps;\n\t\t\t\n\t\t\tvar t = (fps != null && fps != -1 && time != null) ? time/(1000/fps) + this._t : 1;\n\t\t\tvar frames = t|0;\n\t\t\tthis._t = t-frames; // leftover time\n\t\t\t\n\t\t\twhile (!this.paused && frames--) {\n\t\t\t\tthis._prevPosition = (this._prevPos < 0) ? 0 : this._prevPosition+1;\n\t\t\t\tthis._updateTimeline();\n\t\t\t}\n\t\t};\n\t\t\n\t\t/**\n\t\t * MovieClip instances cannot be cloned.\n\t\t * @method clone\n\t\t **/\n\t\tp.clone = function() {\n\t\t\t// TODO: add support for this? Need to clone the Timeline & retarget tweens - pretty complex.\n\t\t\tthrow(\"MovieClip cannot be cloned.\")\n\t\t};\n\t\t\n\t\t/**\n\t\t * Returns a string representation of this object.\n\t\t * @method toString\n\t\t * @return {String} a string representation of the instance.\n\t\t **/\n\t\tp.toString = function() {\n\t\t\treturn \"[MovieClip (name=\"+  this.name +\")]\";\n\t\t};\n\t\n\t\n\t// private methods:\n\t\t/**\n\t\t * @method _tick\n\t\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t\t * function.\n\t\t * @protected\n\t\t **/\n\t\tp._tick = function(evtObj) {\n\t\t\tthis.advance(evtObj&&evtObj.delta);\n\t\t\tthis.Container__tick(evtObj);\n\t\t};\n\t\t\n\t\t/**\n\t\t * @method _goto\n\t\t * @param {String|Number} positionOrLabel The animation name or frame number to go to.\n\t\t * @protected\n\t\t **/\n\t\tp._goto = function(positionOrLabel) {\n\t\t\tvar pos = this.timeline.resolve(positionOrLabel);\n\t\t\tif (pos == null) { return; }\n\t\t\t// prevent _updateTimeline from overwriting the new position because of a reset:\n\t\t\tif (this._prevPos == -1) { this._prevPos = NaN; }\n\t\t\tthis._prevPosition = pos;\n\t\t\tthis._t = 0;\n\t\t\tthis._updateTimeline();\n\t\t};\n\t\t\n\t\t/**\n\t\t * @method _reset\n\t\t * @private\n\t\t **/\n\t\tp._reset = function() {\n\t\t\tthis._prevPos = -1;\n\t\t\tthis._t = this.currentFrame = 0;\n\t\t\tthis.paused = false;\n\t\t};\n\t\t\n\t\t/**\n\t\t * @method _updateTimeline\n\t\t * @protected\n\t\t **/\n\t\tp._updateTimeline = function() {\n\t\t\tvar tl = this.timeline;\n\t\t\tvar synched = this.mode != MovieClip.INDEPENDENT;\n\t\t\ttl.loop = (this.loop==null) ? true : this.loop;\n\t\t\t\n\t\t\tvar pos = synched ? this.startPosition + (this.mode==MovieClip.SINGLE_FRAME?0:this._synchOffset) : (this._prevPos < 0 ? 0 : this._prevPosition);\n\t\t\tvar mode = synched || !this.actionsEnabled ? createjs.Tween.NONE : null;\n\t\t\t\n\t\t\t// pre-assign currentFrame so it is available to frame scripts:\n\t\t\tthis.currentFrame = tl._calcPosition(pos);\n\t\t\t\n\t\t\t// update timeline position, ignoring actions if this is a graphic.\n\t\t\ttl.setPosition(pos, mode);\n\t\n\t\t\tthis._prevPosition = tl._prevPosition;\n\t\t\tif (this._prevPos == tl._prevPos) { return; }\n\t\t\tthis.currentFrame = this._prevPos = tl._prevPos;\n\t\n\t\t\tfor (var n in this._managed) { this._managed[n] = 1; }\n\t\n\t\t\tvar tweens = tl._tweens;\n\t\t\tfor (var i=0, l=tweens.length; i<l; i++) {\n\t\t\t\tvar tween = tweens[i];\n\t\t\t\tvar target = tween._target;\n\t\t\t\tif (target == this || tween.passive) { continue; } // TODO: this assumes actions tween has this as the target. Valid?\n\t\t\t\tvar offset = tween._stepPosition;\n\t\n\t\t\t\tif (target instanceof createjs.DisplayObject) {\n\t\t\t\t\t// motion tween.\n\t\t\t\t\tthis._addManagedChild(target, offset);\n\t\t\t\t} else {\n\t\t\t\t\t// state tween.\n\t\t\t\t\tthis._setState(target.state, offset);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tvar kids = this.children;\n\t\t\tfor (i=kids.length-1; i>=0; i--) {\n\t\t\t\tvar id = kids[i].id;\n\t\t\t\tif (this._managed[id] == 1) {\n\t\t\t\t\tthis.removeChildAt(i);\n\t\t\t\t\tdelete(this._managed[id]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * @method _setState\n\t\t * @param {Array} state\n\t\t * @param {Number} offset\n\t\t * @protected\n\t\t **/\n\t\tp._setState = function(state, offset) {\n\t\t\tif (!state) { return; }\n\t\t\tfor (var i=state.length-1;i>=0;i--) {\n\t\t\t\tvar o = state[i];\n\t\t\t\tvar target = o.t;\n\t\t\t\tvar props = o.p;\n\t\t\t\tfor (var n in props) { target[n] = props[n]; }\n\t\t\t\tthis._addManagedChild(target, offset);\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Adds a child to the timeline, and sets it up as a managed child.\n\t\t * @method _addManagedChild\n\t\t * @param {MovieClip} child The child MovieClip to manage\n\t\t * @param {Number} offset\n\t\t * @private\n\t\t **/\n\t\tp._addManagedChild = function(child, offset) {\n\t\t\tif (child._off) { return; }\n\t\t\tthis.addChildAt(child,0);\n\t\n\t\t\tif (child instanceof MovieClip) {\n\t\t\t\tchild._synchOffset = offset;\n\t\t\t\t// TODO: this does not precisely match Adobe Flash/Animate, which loses track of the clip if it is renamed or removed from the timeline, which causes it to reset.\n\t\t\t\tif (child.mode == MovieClip.INDEPENDENT && child.autoReset && !this._managed[child.id]) { child._reset(); }\n\t\t\t}\n\t\t\tthis._managed[child.id] = 2;\n\t\t};\n\t\t\n\t\t/**\n\t\t * @method _getBounds\n\t\t * @param {Matrix2D} matrix\n\t\t * @param {Boolean} ignoreTransform\n\t\t * @return {Rectangle}\n\t\t * @protected\n\t\t **/\n\t\tp._getBounds = function(matrix, ignoreTransform) {\n\t\t\tvar bounds = this.DisplayObject_getBounds();\n\t\t\tif (!bounds) {\n\t\t\t\tthis._updateTimeline();\n\t\t\t\tif (this.frameBounds) { bounds = this._rectangle.copy(this.frameBounds[this.currentFrame]); }\n\t\t\t}\n\t\t\tif (bounds) { return this._transformBounds(bounds, matrix, ignoreTransform); }\n\t\t\treturn this.Container__getBounds(matrix, ignoreTransform);\n\t\t};\n\t\n\t\n\t\tcreatejs.MovieClip = createjs.promote(MovieClip, \"Container\");\n\t\n\t\n\t\n\t// MovieClipPlugin for TweenJS:\n\t\t/**\n\t\t * This plugin works with <a href=\"http://tweenjs.com\" target=\"_blank\">TweenJS</a> to prevent the startPosition\n\t\t * property from tweening.\n\t\t * @private\n\t\t * @class MovieClipPlugin\n\t\t * @constructor\n\t\t **/\n\t\tfunction MovieClipPlugin() {\n\t\t\tthrow(\"MovieClipPlugin cannot be instantiated.\")\n\t\t}\n\t\t\n\t\t/**\n\t\t * @method priority\n\t\t * @private\n\t\t **/\n\t\tMovieClipPlugin.priority = 100; // very high priority, should run first\n\t\n\t\t/**\n\t\t * @method install\n\t\t * @private\n\t\t **/\n\t\tMovieClipPlugin.install = function() {\n\t\t\tcreatejs.Tween.installPlugin(MovieClipPlugin, [\"startPosition\"]);\n\t\t};\n\t\t\n\t\t/**\n\t\t * @method init\n\t\t * @param {Tween} tween\n\t\t * @param {String} prop\n\t\t * @param {String|Number|Boolean} value\n\t\t * @private\n\t\t **/\n\t\tMovieClipPlugin.init = function(tween, prop, value) {\n\t\t\treturn value;\n\t\t};\n\t\t\n\t\t/**\n\t\t * @method step\n\t\t * @private\n\t\t **/\n\t\tMovieClipPlugin.step = function() {\n\t\t\t// unused.\n\t\t};\n\t\n\t\t/**\n\t\t * @method tween\n\t\t * @param {Tween} tween\n\t\t * @param {String} prop\n\t\t * @param {String | Number | Boolean} value\n\t\t * @param {Array} startValues\n\t\t * @param {Array} endValues\n\t\t * @param {Number} ratio\n\t\t * @param {Object} wait\n\t\t * @param {Object} end\n\t\t * @return {*}\n\t\t */\n\t\tMovieClipPlugin.tween = function(tween, prop, value, startValues, endValues, ratio, wait, end) {\n\t\t\tif (!(tween.target instanceof MovieClip)) { return value; }\n\t\t\treturn (ratio == 1 ? endValues[prop] : startValues[prop]);\n\t\t};\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// SpriteSheetUtils.js\n\t//##############################################################################\n\t\n\t(function() {\r\n\t\t\"use strict\";\r\n\t\t\r\n\t\t\r\n\t// constructor:\r\n\t\t/**\r\n\t\t * The SpriteSheetUtils class is a collection of static methods for working with {{#crossLink \"SpriteSheet\"}}{{/crossLink}}s.\r\n\t\t * A sprite sheet is a series of images (usually animation frames) combined into a single image on a regular grid. For\r\n\t\t * example, an animation consisting of 8 100x100 images could be combined into a 400x200 sprite sheet (4 frames across\r\n\t\t * by 2 high). The SpriteSheetUtils class uses a static interface and should not be instantiated.\r\n\t\t * @class SpriteSheetUtils\r\n\t\t * @static\r\n\t\t **/\r\n\t\tfunction SpriteSheetUtils() {\r\n\t\t\tthrow \"SpriteSheetUtils cannot be instantiated\";\r\n\t\t}\r\n\t\r\n\t\r\n\t// private static properties:\r\n\t\t/**\r\n\t\t * @property _workingCanvas\r\n\t\t * @static\r\n\t\t * @type HTMLCanvasElement | Object\r\n\t\t * @protected\r\n\t\t*/\r\n\t\t/**\r\n\t\t * @property _workingContext\r\n\t\t * @static\r\n\t\t * @type CanvasRenderingContext2D\r\n\t\t * @protected\r\n\t\t*/\r\n\t\tvar canvas = (createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"));\r\n\t\tif (canvas.getContext) {\r\n\t\t\tSpriteSheetUtils._workingCanvas = canvas;\r\n\t\t\tSpriteSheetUtils._workingContext = canvas.getContext(\"2d\");\r\n\t\t\tcanvas.width = canvas.height = 1;\r\n\t\t}\r\n\t\r\n\t\r\n\t// public static methods:\r\n\t\t/**\r\n\t\t * <b>This is an experimental method, and may be buggy. Please report issues.</b><br/><br/>\r\n\t\t * Extends the existing sprite sheet by flipping the original frames horizontally, vertically, or both,\r\n\t\t * and adding appropriate animation & frame data. The flipped animations will have a suffix added to their names\r\n\t\t * (_h, _v, _hv as appropriate). Make sure the sprite sheet images are fully loaded before using this method.\r\n\t\t * <br/><br/>\r\n\t\t * For example:<br/>\r\n\t\t * SpriteSheetUtils.addFlippedFrames(mySpriteSheet, true, true);\r\n\t\t * The above would add frames that are flipped horizontally AND frames that are flipped vertically.\r\n\t\t * <br/><br/>\r\n\t\t * Note that you can also flip any display object by setting its scaleX or scaleY to a negative value. On some\r\n\t\t * browsers (especially those without hardware accelerated canvas) this can result in slightly degraded performance,\r\n\t\t * which is why addFlippedFrames is available.\r\n\t\t * @method addFlippedFrames\r\n\t\t * @static\r\n\t\t * @param {SpriteSheet} spriteSheet\r\n\t\t * @param {Boolean} horizontal If true, horizontally flipped frames will be added.\r\n\t\t * @param {Boolean} vertical If true, vertically flipped frames will be added.\r\n\t\t * @param {Boolean} both If true, frames that are flipped both horizontally and vertically will be added.\r\n\t\t * @deprecated Modern browsers perform better when flipping via a transform (ex. scaleX=-1) rendering this obsolete.\r\n\t\t **/\r\n\t\tSpriteSheetUtils.addFlippedFrames = function(spriteSheet, horizontal, vertical, both) {\r\n\t\t\tif (!horizontal && !vertical && !both) { return; }\r\n\t\r\n\t\t\tvar count = 0;\r\n\t\t\tif (horizontal) { SpriteSheetUtils._flip(spriteSheet,++count,true,false); }\r\n\t\t\tif (vertical) { SpriteSheetUtils._flip(spriteSheet,++count,false,true); }\r\n\t\t\tif (both) { SpriteSheetUtils._flip(spriteSheet,++count,true,true); }\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Returns a single frame of the specified sprite sheet as a new PNG image. An example of when this may be useful is\r\n\t\t * to use a spritesheet frame as the source for a bitmap fill.\r\n\t\t *\r\n\t\t * <strong>WARNING:</strong> In almost all cases it is better to display a single frame using a {{#crossLink \"Sprite\"}}{{/crossLink}}\r\n\t\t * with a {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} call than it is to slice out a frame using this\r\n\t\t * method and display it with a Bitmap instance. You can also crop an image using the {{#crossLink \"Bitmap/sourceRect\"}}{{/crossLink}}\r\n\t\t * property of {{#crossLink \"Bitmap\"}}{{/crossLink}}.\r\n\t\t *\r\n\t\t * The extractFrame method may cause cross-domain warnings since it accesses pixels directly on the canvas.\r\n\t\t * @method extractFrame\r\n\t\t * @static\r\n\t\t * @param {SpriteSheet} spriteSheet The SpriteSheet instance to extract a frame from.\r\n\t\t * @param {Number|String} frameOrAnimation The frame number or animation name to extract. If an animation\r\n\t\t * name is specified, only the first frame of the animation will be extracted.\r\n\t\t * @return {HTMLImageElement} a single frame of the specified sprite sheet as a new PNG image.\r\n\t\t*/\r\n\t\tSpriteSheetUtils.extractFrame = function(spriteSheet, frameOrAnimation) {\r\n\t\t\tif (isNaN(frameOrAnimation)) {\r\n\t\t\t\tframeOrAnimation = spriteSheet.getAnimation(frameOrAnimation).frames[0];\r\n\t\t\t}\r\n\t\t\tvar data = spriteSheet.getFrame(frameOrAnimation);\r\n\t\t\tif (!data) { return null; }\r\n\t\t\tvar r = data.rect;\r\n\t\t\tvar canvas = SpriteSheetUtils._workingCanvas;\r\n\t\t\tcanvas.width = r.width;\r\n\t\t\tcanvas.height = r.height;\r\n\t\t\tSpriteSheetUtils._workingContext.drawImage(data.image, r.x, r.y, r.width, r.height, 0, 0, r.width, r.height);\r\n\t\t\tvar img = document.createElement(\"img\");\r\n\t\t\timg.src = canvas.toDataURL(\"image/png\");\r\n\t\t\treturn img;\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Merges the rgb channels of one image with the alpha channel of another. This can be used to combine a compressed\r\n\t\t * JPEG image containing color data with a PNG32 monochromatic image containing alpha data. With certain types of\r\n\t\t * images (those with detail that lend itself to JPEG compression) this can provide significant file size savings\r\n\t\t * versus a single RGBA PNG32. This method is very fast (generally on the order of 1-2 ms to run).\r\n\t\t * @method mergeAlpha\r\n\t\t * @static\r\n\t\t * @param {HTMLImageElement} rbgImage The image (or canvas) containing the RGB channels to use.\r\n\t\t * @param {HTMLImageElement} alphaImage The image (or canvas) containing the alpha channel to use.\r\n\t\t * @param {HTMLCanvasElement} canvas Optional. If specified, this canvas will be used and returned. If not, a new canvas will be created.\r\n\t\t * @return {HTMLCanvasElement} A canvas with the combined image data. This can be used as a source for Bitmap or SpriteSheet.\r\n\t\t * @deprecated Tools such as ImageAlpha generally provide better results. This will be moved to sandbox in the future.\r\n\t\t*/\r\n\t\tSpriteSheetUtils.mergeAlpha = function(rgbImage, alphaImage, canvas) {\r\n\t\t\tif (!canvas) { canvas = createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"); }\r\n\t\t\tcanvas.width = Math.max(alphaImage.width, rgbImage.width);\r\n\t\t\tcanvas.height = Math.max(alphaImage.height, rgbImage.height);\r\n\t\t\tvar ctx = canvas.getContext(\"2d\");\r\n\t\t\tctx.save();\r\n\t\t\tctx.drawImage(rgbImage,0,0);\r\n\t\t\tctx.globalCompositeOperation = \"destination-in\";\r\n\t\t\tctx.drawImage(alphaImage,0,0);\r\n\t\t\tctx.restore();\r\n\t\t\treturn canvas;\r\n\t\t};\r\n\t\r\n\t\r\n\t// private static methods:\r\n\t\tSpriteSheetUtils._flip = function(spriteSheet, count, h, v) {\r\n\t\t\tvar imgs = spriteSheet._images;\r\n\t\t\tvar canvas = SpriteSheetUtils._workingCanvas;\r\n\t\t\tvar ctx = SpriteSheetUtils._workingContext;\r\n\t\t\tvar il = imgs.length/count;\r\n\t\t\tfor (var i=0;i<il;i++) {\r\n\t\t\t\tvar src = imgs[i];\r\n\t\t\t\tsrc.__tmp = i; // a bit hacky, but faster than doing indexOf below.\r\n\t\t\t\tctx.setTransform(1,0,0,1,0,0);\r\n\t\t\t\tctx.clearRect(0,0,canvas.width+1,canvas.height+1);\r\n\t\t\t\tcanvas.width = src.width;\r\n\t\t\t\tcanvas.height = src.height;\r\n\t\t\t\tctx.setTransform(h?-1:1, 0, 0, v?-1:1, h?src.width:0, v?src.height:0);\r\n\t\t\t\tctx.drawImage(src,0,0);\r\n\t\t\t\tvar img = document.createElement(\"img\");\r\n\t\t\t\timg.src = canvas.toDataURL(\"image/png\");\r\n\t\t\t\t// work around a strange bug in Safari:\r\n\t\t\t\timg.width = src.width;\r\n\t\t\t\timg.height = src.height;\r\n\t\t\t\timgs.push(img);\r\n\t\t\t}\r\n\t\r\n\t\t\tvar frames = spriteSheet._frames;\r\n\t\t\tvar fl = frames.length/count;\r\n\t\t\tfor (i=0;i<fl;i++) {\r\n\t\t\t\tsrc = frames[i];\r\n\t\t\t\tvar rect = src.rect.clone();\r\n\t\t\t\timg = imgs[src.image.__tmp+il*count];\r\n\t\r\n\t\t\t\tvar frame = {image:img,rect:rect,regX:src.regX,regY:src.regY};\r\n\t\t\t\tif (h) {\r\n\t\t\t\t\trect.x = img.width-rect.x-rect.width; // update rect\r\n\t\t\t\t\tframe.regX = rect.width-src.regX; // update registration point\r\n\t\t\t\t}\r\n\t\t\t\tif (v) {\r\n\t\t\t\t\trect.y = img.height-rect.y-rect.height;  // update rect\r\n\t\t\t\t\tframe.regY = rect.height-src.regY; // update registration point\r\n\t\t\t\t}\r\n\t\t\t\tframes.push(frame);\r\n\t\t\t}\r\n\t\r\n\t\t\tvar sfx = \"_\"+(h?\"h\":\"\")+(v?\"v\":\"\");\r\n\t\t\tvar names = spriteSheet._animations;\r\n\t\t\tvar data = spriteSheet._data;\r\n\t\t\tvar al = names.length/count;\r\n\t\t\tfor (i=0;i<al;i++) {\r\n\t\t\t\tvar name = names[i];\r\n\t\t\t\tsrc = data[name];\r\n\t\t\t\tvar anim = {name:name+sfx,speed:src.speed,next:src.next,frames:[]};\r\n\t\t\t\tif (src.next) { anim.next += sfx; }\r\n\t\t\t\tframes = src.frames;\r\n\t\t\t\tfor (var j=0,l=frames.length;j<l;j++) {\r\n\t\t\t\t\tanim.frames.push(frames[j]+fl*count);\r\n\t\t\t\t}\r\n\t\t\t\tdata[anim.name] = anim;\r\n\t\t\t\tnames.push(anim.name);\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\r\n\t\tcreatejs.SpriteSheetUtils = SpriteSheetUtils;\r\n\t}());\n\t\n\t//##############################################################################\n\t// SpriteSheetBuilder.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t\t * The SpriteSheetBuilder allows you to generate {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances at run time\n\t\t * from any display object. This can allow you to maintain your assets as vector graphics (for low file size), and\n\t\t * render them at run time as SpriteSheets for better performance.\n\t\t *\n\t\t * SpriteSheets can be built either synchronously, or asynchronously, so that large SpriteSheets can be generated\n\t\t * without locking the UI.\n\t\t *\n\t\t * Note that the \"images\" used in the generated SpriteSheet are actually canvas elements, and that they will be\n\t\t * sized to the nearest power of 2 up to the value of {{#crossLink \"SpriteSheetBuilder/maxWidth:property\"}}{{/crossLink}}\n\t\t * or {{#crossLink \"SpriteSheetBuilder/maxHeight:property\"}}{{/crossLink}}.\n\t\t * @class SpriteSheetBuilder\n\t\t * @param {Number} [framerate=0] The {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} of\n\t\t * {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are created.\n\t\t * @extends EventDispatcher\n\t\t * @constructor\n\t\t **/\n\t\tfunction SpriteSheetBuilder(framerate) {\n\t\t\tthis.EventDispatcher_constructor();\n\t\t\t\n\t\t// public properties:\n\t\t\t/**\n\t\t\t * The maximum width for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n\t\t\t * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n\t\t\t * dimensions, then additional images will be created as needed.\n\t\t\t * @property maxWidth\n\t\t\t * @type Number\n\t\t\t * @default 2048\n\t\t\t*/\n\t\t\tthis.maxWidth = 2048;\n\t\t\n\t\t\t/**\n\t\t\t * The maximum height for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n\t\t\t * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n\t\t\t * dimensions, then additional images will be created as needed.\n\t\t\t * @property maxHeight\n\t\t\t * @type Number\n\t\t\t * @default 2048\n\t\t\t **/\n\t\t\tthis.maxHeight = 2048;\n\t\t\n\t\t\t/**\n\t\t\t * The SpriteSheet that was generated. This will be null before a build is completed successfully.\n\t\t\t * @property spriteSheet\n\t\t\t * @type SpriteSheet\n\t\t\t **/\n\t\t\tthis.spriteSheet = null;\n\t\t\n\t\t\t/**\n\t\t\t * The scale to apply when drawing all frames to the SpriteSheet. This is multiplied against any scale specified\n\t\t\t * in the addFrame call. This can be used, for example, to generate a SpriteSheet at run time that is tailored\n\t\t\t * to the a specific device resolution (ex. tablet vs mobile).\n\t\t\t * @property scale\n\t\t\t * @type Number\n\t\t\t * @default 1\n\t\t\t **/\n\t\t\tthis.scale = 1;\n\t\t\n\t\t\t/**\n\t\t\t* The padding to use between frames. This is helpful to preserve antialiasing on drawn vector content.\n\t\t\t* @property padding\n\t\t\t* @type Number\n\t\t\t* @default 1\n\t\t\t**/\n\t\t\tthis.padding = 1;\n\t\t\n\t\t\t/**\n\t\t\t * A number from 0.01 to 0.99 that indicates what percentage of time the builder can use. This can be\n\t\t\t * thought of as the number of seconds per second the builder will use. For example, with a timeSlice value of 0.3,\n\t\t\t * the builder will run 20 times per second, using approximately 15ms per build (30% of available time, or 0.3s per second).\n\t\t\t * Defaults to 0.3.\n\t\t\t * @property timeSlice\n\t\t\t * @type Number\n\t\t\t * @default 0.3\n\t\t\t **/\n\t\t\tthis.timeSlice = 0.3;\n\t\t\n\t\t\t/**\n\t\t\t * A value between 0 and 1 that indicates the progress of a build, or -1 if a build has not\n\t\t\t * been initiated.\n\t\t\t * @property progress\n\t\t\t * @type Number\n\t\t\t * @default -1\n\t\t\t * @readonly\n\t\t\t */\n\t\t\tthis.progress = -1;\n\t\n\t\t\t/**\n\t\t\t * A {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} value that will be passed to new {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are\n\t\t\t * created. If no framerate is specified (or it is 0), then SpriteSheets will use the {{#crossLink \"Ticker\"}}{{/crossLink}}\n\t\t\t * framerate.\n\t\t\t * @property framerate\n\t\t\t * @type Number\n\t\t\t * @default 0\n\t\t\t */\n\t\t\tthis.framerate = framerate || 0;\n\t\t\n\t\t\n\t\t// private properties:\n\t\t\t/**\n\t\t\t * @property _frames\n\t\t\t * @protected\n\t\t\t * @type Array\n\t\t\t **/\n\t\t\tthis._frames = [];\n\t\t\n\t\t\t/**\n\t\t\t * @property _animations\n\t\t\t * @protected\n\t\t\t * @type Array\n\t\t\t **/\n\t\t\tthis._animations = {};\n\t\t\n\t\t\t/**\n\t\t\t * @property _data\n\t\t\t * @protected\n\t\t\t * @type Array\n\t\t\t **/\n\t\t\tthis._data = null;\n\t\t\n\t\t\t/**\n\t\t\t * @property _nextFrameIndex\n\t\t\t * @protected\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis._nextFrameIndex = 0;\n\t\t\n\t\t\t/**\n\t\t\t * @property _index\n\t\t\t * @protected\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis._index = 0;\n\t\t\n\t\t\t/**\n\t\t\t * @property _timerID\n\t\t\t * @protected\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis._timerID = null;\n\t\t\n\t\t\t/**\n\t\t\t * @property _scale\n\t\t\t * @protected\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis._scale = 1;\n\t\t}\n\t\tvar p = createjs.extend(SpriteSheetBuilder, createjs.EventDispatcher);\n\t\n\t\t/**\n\t\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t\t * for details.\n\t\t *\n\t\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t\t *\n\t\t * @method initialize\n\t\t * @protected\n\t\t * @deprecated\n\t\t */\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\t\n\t\n\t// constants:\n\t\tSpriteSheetBuilder.ERR_DIMENSIONS = \"frame dimensions exceed max spritesheet dimensions\";\n\t\tSpriteSheetBuilder.ERR_RUNNING = \"a build is already running\";\n\t\n\t// events:\n\t\t/**\n\t\t * Dispatched when a build completes.\n\t\t * @event complete\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @since 0.6.0\n\t\t */\n\t\n\t\t/**\n\t\t * Dispatched when an asynchronous build has progress.\n\t\t * @event progress\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @param {Number} progress The current progress value (0-1).\n\t\t * @since 0.6.0\n\t\t */\n\t\n\t\n\t// public methods:\n\t\t/**\n\t\t * Adds a frame to the {{#crossLink \"SpriteSheet\"}}{{/crossLink}}. Note that the frame will not be drawn until you\n\t\t * call {{#crossLink \"SpriteSheetBuilder/build\"}}{{/crossLink}} method. The optional setup params allow you to have\n\t\t * a function run immediately before the draw occurs. For example, this allows you to add a single source multiple\n\t\t * times, but manipulate it or its children to change it to generate different frames.\n\t\t *\n\t\t * Note that the source's transformations (x, y, scale, rotate, alpha) will be ignored, except for regX/Y. To apply\n\t\t * transforms to a source object and have them captured in the SpriteSheet, simply place it into a {{#crossLink \"Container\"}}{{/crossLink}}\n\t\t * and pass in the Container as the source.\n\t\t * @method addFrame\n\t\t * @param {DisplayObject} source The source {{#crossLink \"DisplayObject\"}}{{/crossLink}}  to draw as the frame.\n\t\t * @param {Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the\n\t\t * source to draw to the frame. If not specified, it will look for a `getBounds` method, bounds property, or\n\t\t * `nominalBounds` property on the source to use. If one is not found, the frame will be skipped.\n\t\t * @param {Number} [scale=1] Optional. The scale to draw this frame at. Default is 1.\n\t\t * @param {Function} [setupFunction] A function to call immediately before drawing this frame. It will be called with two parameters: the source, and setupData.\n\t\t * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n\t\t * @return {Number} The index of the frame that was just added, or null if a sourceRect could not be determined.\n\t\t **/\n\t\tp.addFrame = function(source, sourceRect, scale, setupFunction, setupData) {\n\t\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\t\tvar rect = sourceRect||source.bounds||source.nominalBounds;\n\t\t\tif (!rect&&source.getBounds) { rect = source.getBounds(); }\n\t\t\tif (!rect) { return null; }\n\t\t\tscale = scale||1;\n\t\t\treturn this._frames.push({source:source, sourceRect:rect, scale:scale, funct:setupFunction, data:setupData, index:this._frames.length, height:rect.height*scale})-1;\n\t\t};\n\t\n\t\t/**\n\t\t * Adds an animation that will be included in the created {{#crossLink \"SpriteSheet\"}}{{/crossLink}}.\n\t\t * @method addAnimation\n\t\t * @param {String} name The name for the animation.\n\t\t * @param {Array} frames An array of frame indexes that comprise the animation. Ex. [3,6,5] would describe an animation\n\t\t * that played frame indexes 3, 6, and 5 in that order.\n\t\t * @param {String} [next] Specifies the name of the animation to continue to after this animation ends. You can\n\t\t * also pass false to have the animation stop when it ends. By default it will loop to the start of the same animation.\n\t\t * @param {Number} [speed] Specifies a frame advance speed for this animation. For example, a value of 0.5 would\n\t\t * cause the animation to advance every second tick. Note that earlier versions used `frequency` instead, which had\n\t\t * the opposite effect.\n\t\t **/\n\t\tp.addAnimation = function(name, frames, next, speed) {\n\t\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\t\tthis._animations[name] = {frames:frames, next:next, speed:speed};\n\t\t};\n\t\n\t\t/**\n\t\t * This will take a {{#crossLink \"MovieClip\"}}{{/crossLink}} instance, and add its frames and labels to this\n\t\t * builder. Labels will be added as an animation running from the label index to the next label. For example, if\n\t\t * there is a label named \"foo\" at frame 0 and a label named \"bar\" at frame 10, in a MovieClip with 15 frames, it\n\t\t * will add an animation named \"foo\" that runs from frame index 0 to 9, and an animation named \"bar\" that runs from\n\t\t * frame index 10 to 14.\n\t\t *\n\t\t * Note that this will iterate through the full MovieClip with {{#crossLink \"MovieClip/actionsEnabled:property\"}}{{/crossLink}}\n\t\t * set to `false`, ending on the last frame.\n\t\t * @method addMovieClip\n\t\t * @param {MovieClip} source The source MovieClip instance to add to the SpriteSheet.\n\t\t * @param {Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the source to\n\t\t * draw to the frame. If not specified, it will look for a {{#crossLink \"DisplayObject/getBounds\"}}{{/crossLink}}\n\t\t * method, `frameBounds` Array, `bounds` property, or `nominalBounds` property on the source to use. If one is not\n\t\t * found, the MovieClip will be skipped.\n\t\t * @param {Number} [scale=1] The scale to draw the movie clip at.\n\t\t * @param {Function} [setupFunction] A function to call immediately before drawing each frame. It will be called\n\t\t * with three parameters: the source, setupData, and the frame index.\n\t\t * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n\t\t * @param {Function} [labelFunction] This method will be called for each MovieClip label that is added with four\n\t\t * parameters: the label name, the source MovieClip instance, the starting frame index (in the movieclip timeline)\n\t\t * and the end index. It must return a new name for the label/animation, or `false` to exclude the label.\n\t\t **/\n\t\tp.addMovieClip = function(source, sourceRect, scale, setupFunction, setupData, labelFunction) {\n\t\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\t\tvar rects = source.frameBounds;\n\t\t\tvar rect = sourceRect||source.bounds||source.nominalBounds;\n\t\t\tif (!rect&&source.getBounds) { rect = source.getBounds(); }\n\t\t\tif (!rect && !rects) { return; }\n\t\n\t\t\tvar i, l, baseFrameIndex = this._frames.length;\n\t\t\tvar duration = source.timeline.duration;\n\t\t\tfor (i=0; i<duration; i++) {\n\t\t\t\tvar r = (rects&&rects[i]) ? rects[i] : rect;\n\t\t\t\tthis.addFrame(source, r, scale, this._setupMovieClipFrame, {i:i, f:setupFunction, d:setupData});\n\t\t\t}\n\t\t\tvar labels = source.timeline._labels;\n\t\t\tvar lbls = [];\n\t\t\tfor (var n in labels) {\n\t\t\t\tlbls.push({index:labels[n], label:n});\n\t\t\t}\n\t\t\tif (lbls.length) {\n\t\t\t\tlbls.sort(function(a,b){ return a.index-b.index; });\n\t\t\t\tfor (i=0,l=lbls.length; i<l; i++) {\n\t\t\t\t\tvar label = lbls[i].label;\n\t\t\t\t\tvar start = baseFrameIndex+lbls[i].index;\n\t\t\t\t\tvar end = baseFrameIndex+((i == l-1) ? duration : lbls[i+1].index);\n\t\t\t\t\tvar frames = [];\n\t\t\t\t\tfor (var j=start; j<end; j++) { frames.push(j); }\n\t\t\t\t\tif (labelFunction) {\n\t\t\t\t\t\tlabel = labelFunction(label, source, start, end);\n\t\t\t\t\t\tif (!label) { continue; }\n\t\t\t\t\t}\n\t\t\t\t\tthis.addAnimation(label, frames, true); // for now, this loops all animations.\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames.\n\t\t * @method build\n\t\t * @return {SpriteSheet} The created SpriteSheet instance, or null if a build is already running or an error\n\t\t * occurred.\n\t\t **/\n\t\tp.build = function() {\n\t\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\t\tthis._startBuild();\n\t\t\twhile (this._drawNext()) {}\n\t\t\tthis._endBuild();\n\t\t\treturn this.spriteSheet;\n\t\t};\n\t\n\t\t/**\n\t\t * Asynchronously builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames. It will\n\t\t * run 20 times per second, using an amount of time defined by `timeSlice`. When it is complete it will call the\n\t\t * specified callback.\n\t\t * @method buildAsync\n\t\t * @param {Number} [timeSlice] Sets the timeSlice property on this instance.\n\t\t **/\n\t\tp.buildAsync = function(timeSlice) {\n\t\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\t\tthis.timeSlice = timeSlice;\n\t\t\tthis._startBuild();\n\t\t\tvar _this = this;\n\t\t\tthis._timerID = setTimeout(function() { _this._run(); }, 50-Math.max(0.01, Math.min(0.99, this.timeSlice||0.3))*50);\n\t\t};\n\t\n\t\t/**\n\t\t * Stops the current asynchronous build.\n\t\t * @method stopAsync\n\t\t **/\n\t\tp.stopAsync = function() {\n\t\t\tclearTimeout(this._timerID);\n\t\t\tthis._data = null;\n\t\t};\n\t\n\t\t/**\n\t\t * SpriteSheetBuilder instances cannot be cloned.\n\t\t * @method clone\n\t\t **/\n\t\tp.clone = function() {\n\t\t\tthrow(\"SpriteSheetBuilder cannot be cloned.\");\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a string representation of this object.\n\t\t * @method toString\n\t\t * @return {String} a string representation of the instance.\n\t\t **/\n\t\tp.toString = function() {\n\t\t\treturn \"[SpriteSheetBuilder]\";\n\t\t};\n\t\n\t\n\t// private methods:\n\t\t/**\n\t\t * @method _startBuild\n\t\t * @protected\n\t\t **/\n\t\tp._startBuild = function() {\n\t\t\tvar pad = this.padding||0;\n\t\t\tthis.progress = 0;\n\t\t\tthis.spriteSheet = null;\n\t\t\tthis._index = 0;\n\t\t\tthis._scale = this.scale;\n\t\t\tvar dataFrames = [];\n\t\t\tthis._data = {\n\t\t\t\timages: [],\n\t\t\t\tframes: dataFrames,\n\t\t\t\tframerate: this.framerate,\n\t\t\t\tanimations: this._animations // TODO: should we \"clone\" _animations in case someone adds more animations after a build?\n\t\t\t};\n\t\n\t\t\tvar frames = this._frames.slice();\n\t\t\tframes.sort(function(a,b) { return (a.height<=b.height) ? -1 : 1; });\n\t\n\t\t\tif (frames[frames.length-1].height+pad*2 > this.maxHeight) { throw SpriteSheetBuilder.ERR_DIMENSIONS; }\n\t\t\tvar y=0, x=0;\n\t\t\tvar img = 0;\n\t\t\twhile (frames.length) {\n\t\t\t\tvar o = this._fillRow(frames, y, img, dataFrames, pad);\n\t\t\t\tif (o.w > x) { x = o.w; }\n\t\t\t\ty += o.h;\n\t\t\t\tif (!o.h || !frames.length) {\n\t\t\t\t\tvar canvas = createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\");\n\t\t\t\t\tcanvas.width = this._getSize(x,this.maxWidth);\n\t\t\t\t\tcanvas.height = this._getSize(y,this.maxHeight);\n\t\t\t\t\tthis._data.images[img] = canvas;\n\t\t\t\t\tif (!o.h) {\n\t\t\t\t\t\tx=y=0;\n\t\t\t\t\t\timg++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\t/**\n\t\t * @method _setupMovieClipFrame\n\t\t * @protected\n\t\t * @return {Number} The width & height of the row.\n\t\t **/\n\t\tp._setupMovieClipFrame = function(source, data) {\n\t\t\tvar ae = source.actionsEnabled;\n\t\t\tsource.actionsEnabled = false;\n\t\t\tsource.gotoAndStop(data.i);\n\t\t\tsource.actionsEnabled = ae;\n\t\t\tdata.f&&data.f(source, data.d, data.i);\n\t\t};\n\t\n\t\t/**\n\t\t * @method _getSize\n\t\t * @protected\n\t\t * @return {Number} The width & height of the row.\n\t\t **/\n\t\tp._getSize = function(size,max) {\n\t\t\tvar pow = 4;\n\t\t\twhile (Math.pow(2,++pow) < size){}\n\t\t\treturn Math.min(max,Math.pow(2,pow));\n\t\t};\n\t\n\t\t/**\n\t\t * @method _fillRow\n\t\t * @param {Array} frames\n\t\t * @param {Number} y\n\t\t * @param {HTMLImageElement} img\n\t\t * @param {Object} dataFrames\n\t\t * @param {Number} pad\n\t\t * @protected\n\t\t * @return {Number} The width & height of the row.\n\t\t **/\n\t\tp._fillRow = function(frames, y, img, dataFrames, pad) {\n\t\t\tvar w = this.maxWidth;\n\t\t\tvar maxH = this.maxHeight;\n\t\t\ty += pad;\n\t\t\tvar h = maxH-y;\n\t\t\tvar x = pad;\n\t\t\tvar height = 0;\n\t\t\tfor (var i=frames.length-1; i>=0; i--) {\n\t\t\t\tvar frame = frames[i];\n\t\t\t\tvar sc = this._scale*frame.scale;\n\t\t\t\tvar rect = frame.sourceRect;\n\t\t\t\tvar source = frame.source;\n\t\t\t\tvar rx = Math.floor(sc*rect.x-pad);\n\t\t\t\tvar ry = Math.floor(sc*rect.y-pad);\n\t\t\t\tvar rh = Math.ceil(sc*rect.height+pad*2);\n\t\t\t\tvar rw = Math.ceil(sc*rect.width+pad*2);\n\t\t\t\tif (rw > w) { throw SpriteSheetBuilder.ERR_DIMENSIONS; }\n\t\t\t\tif (rh > h || x+rw > w) { continue; }\n\t\t\t\tframe.img = img;\n\t\t\t\tframe.rect = new createjs.Rectangle(x,y,rw,rh);\n\t\t\t\theight = height || rh;\n\t\t\t\tframes.splice(i,1);\n\t\t\t\tdataFrames[frame.index] = [x,y,rw,rh,img,Math.round(-rx+sc*source.regX-pad),Math.round(-ry+sc*source.regY-pad)];\n\t\t\t\tx += rw;\n\t\t\t}\n\t\t\treturn {w:x, h:height};\n\t\t};\n\t\n\t\t/**\n\t\t * @method _endBuild\n\t\t * @protected\n\t\t **/\n\t\tp._endBuild = function() {\n\t\t\tthis.spriteSheet = new createjs.SpriteSheet(this._data);\n\t\t\tthis._data = null;\n\t\t\tthis.progress = 1;\n\t\t\tthis.dispatchEvent(\"complete\");\n\t\t};\n\t\n\t\t/**\n\t\t * @method _run\n\t\t * @protected\n\t\t **/\n\t\tp._run = function() {\n\t\t\tvar ts = Math.max(0.01, Math.min(0.99, this.timeSlice||0.3))*50;\n\t\t\tvar t = (new Date()).getTime()+ts;\n\t\t\tvar complete = false;\n\t\t\twhile (t > (new Date()).getTime()) {\n\t\t\t\tif (!this._drawNext()) { complete = true; break; }\n\t\t\t}\n\t\t\tif (complete) {\n\t\t\t\tthis._endBuild();\n\t\t\t} else {\n\t\t\t\tvar _this = this;\n\t\t\t\tthis._timerID = setTimeout(function() { _this._run(); }, 50-ts);\n\t\t\t}\n\t\t\tvar p = this.progress = this._index/this._frames.length;\n\t\t\tif (this.hasEventListener(\"progress\")) {\n\t\t\t\tvar evt = new createjs.Event(\"progress\");\n\t\t\t\tevt.progress = p;\n\t\t\t\tthis.dispatchEvent(evt);\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * @method _drawNext\n\t\t * @protected\n\t\t * @return Boolean Returns false if this is the last draw.\n\t\t **/\n\t\tp._drawNext = function() {\n\t\t\tvar frame = this._frames[this._index];\n\t\t\tvar sc = frame.scale*this._scale;\n\t\t\tvar rect = frame.rect;\n\t\t\tvar sourceRect = frame.sourceRect;\n\t\t\tvar canvas = this._data.images[frame.img];\n\t\t\tvar ctx = canvas.getContext(\"2d\");\n\t\t\tframe.funct&&frame.funct(frame.source, frame.data);\n\t\t\tctx.save();\n\t\t\tctx.beginPath();\n\t\t\tctx.rect(rect.x, rect.y, rect.width, rect.height);\n\t\t\tctx.clip();\n\t\t\tctx.translate(Math.ceil(rect.x-sourceRect.x*sc), Math.ceil(rect.y-sourceRect.y*sc));\n\t\t\tctx.scale(sc,sc);\n\t\t\tframe.source.draw(ctx); // display object will draw itself.\n\t\t\tctx.restore();\n\t\t\treturn (++this._index) < this._frames.length;\n\t\t};\n\t\n\t\n\t\tcreatejs.SpriteSheetBuilder = createjs.promote(SpriteSheetBuilder, \"EventDispatcher\");\n\t}());\n\t\n\t//##############################################################################\n\t// DOMElement.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t\t * <b>This class is still experimental, and more advanced use is likely to be buggy. Please report bugs.</b>\n\t\t *\n\t\t * A DOMElement allows you to associate a HTMLElement with the display list. It will be transformed\n\t\t * within the DOM as though it is child of the {{#crossLink \"Container\"}}{{/crossLink}} it is added to. However, it is\n\t\t * not rendered to canvas, and as such will retain whatever z-index it has relative to the canvas (ie. it will be\n\t\t * drawn in front of or behind the canvas).\n\t\t *\n\t\t * The position of a DOMElement is relative to their parent node in the DOM. It is recommended that\n\t\t * the DOM Object be added to a div that also contains the canvas so that they share the same position\n\t\t * on the page.\n\t\t *\n\t\t * DOMElement is useful for positioning HTML elements over top of canvas content, and for elements\n\t\t * that you want to display outside the bounds of the canvas. For example, a tooltip with rich HTML\n\t\t * content.\n\t\t *\n\t\t * <h4>Mouse Interaction</h4>\n\t\t *\n\t\t * DOMElement instances are not full EaselJS display objects, and do not participate in EaselJS mouse\n\t\t * events or support methods like hitTest. To get mouse events from a DOMElement, you must instead add handlers to\n\t\t * the htmlElement (note, this does not support EventDispatcher)\n\t\t *\n\t\t *      var domElement = new createjs.DOMElement(htmlElement);\n\t\t *      domElement.htmlElement.onclick = function() {\n\t\t *          console.log(\"clicked\");\n\t\t *      }\n\t\t *\n\t\t * @class DOMElement\n\t\t * @extends DisplayObject\n\t\t * @constructor\n\t\t * @param {HTMLElement} htmlElement A reference or id for the DOM element to manage.\n\t\t */\n\t\tfunction DOMElement(htmlElement) {\n\t\t\tthis.DisplayObject_constructor();\n\t\t\t\n\t\t\tif (typeof(htmlElement)==\"string\") { htmlElement = document.getElementById(htmlElement); }\n\t\t\tthis.mouseEnabled = false;\n\t\t\t\n\t\t\tvar style = htmlElement.style;\n\t\t\tstyle.position = \"absolute\";\n\t\t\tstyle.transformOrigin = style.WebkitTransformOrigin = style.msTransformOrigin = style.MozTransformOrigin = style.OTransformOrigin = \"0% 0%\";\n\t\t\t\n\t\t\t\n\t\t// public properties:\n\t\t\t/**\n\t\t\t * The DOM object to manage.\n\t\t\t * @property htmlElement\n\t\t\t * @type HTMLElement\n\t\t\t */\n\t\t\tthis.htmlElement = htmlElement;\n\t\t\n\t\t\n\t\t// private properties:\n\t\t\t/**\n\t\t\t * @property _oldMtx\n\t\t\t * @type Matrix2D\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis._oldProps = null;\n\t\t}\n\t\tvar p = createjs.extend(DOMElement, createjs.DisplayObject);\n\t\n\t\t// TODO: deprecated\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\n\t\n\t// public methods:\n\t\t/**\n\t\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t\t * @method isVisible\n\t\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t\t */\n\t\tp.isVisible = function() {\n\t\t\treturn this.htmlElement != null;\n\t\t};\n\t\n\t\t/**\n\t\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t\t * Returns true if the draw was handled (useful for overriding functionality).\n\t\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t\t * @method draw\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t\t * into itself).\n\t\t * @return {Boolean}\n\t\t */\n\t\tp.draw = function(ctx, ignoreCache) {\n\t\t\t// this relies on the _tick method because draw isn't called if the parent is not visible.\n\t\t\t// the actual update happens in _handleDrawEnd\n\t\t\treturn true;\n\t\t};\n\t\n\t\t/**\n\t\t * Not applicable to DOMElement.\n\t\t * @method cache\n\t\t */\n\t\tp.cache = function() {};\n\t\n\t\t/**\n\t\t * Not applicable to DOMElement.\n\t\t * @method uncache\n\t\t */\n\t\tp.uncache = function() {};\n\t\n\t\t/**\n\t\t * Not applicable to DOMElement.\n\t\t * @method updateCache\n\t\t */\n\t\tp.updateCache = function() {};\n\t\n\t\t/**\n\t\t * Not applicable to DOMElement.\n\t\t * @method hitTest\n\t\t */\n\t\tp.hitTest = function() {};\n\t\n\t\t/**\n\t\t * Not applicable to DOMElement.\n\t\t * @method localToGlobal\n\t\t */\n\t\tp.localToGlobal = function() {};\n\t\n\t\t/**\n\t\t * Not applicable to DOMElement.\n\t\t * @method globalToLocal\n\t\t */\n\t\tp.globalToLocal = function() {};\n\t\n\t\t/**\n\t\t * Not applicable to DOMElement.\n\t\t * @method localToLocal\n\t\t */\n\t\tp.localToLocal = function() {};\n\t\n\t\t/**\n\t\t * DOMElement cannot be cloned. Throws an error.\n\t\t * @method clone\n\t\t */\n\t\tp.clone = function() {\n\t\t\tthrow(\"DOMElement cannot be cloned.\")\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a string representation of this object.\n\t\t * @method toString\n\t\t * @return {String} a string representation of the instance.\n\t\t */\n\t\tp.toString = function() {\n\t\t\treturn \"[DOMElement (name=\"+  this.name +\")]\";\n\t\t};\n\t\n\t\t/**\n\t     * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n\t\t * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n\t\t * @event click\n\t\t */\n\t\n\t     /**\n\t     * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n\t \t * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n\t\t * @event dblClick\n\t\t */\n\t\n\t     /**\n\t      * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n\t \t  * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n\t\t  * @event mousedown\n\t\t  */\n\t\n\t     /**\n\t      * The HTMLElement can listen for the mouseover event, not the DOMElement instance.\n\t      * Since DOMElement instances are not full EaselJS display objects and do not participate in EaselJS mouse events.\n\t      * @event mouseover\n\t\t  */\n\t\n\t     /**\n\t      * Not applicable to DOMElement.\n\t\t  * @event tick\n\t\t  */\n\t\n\t\n\t// private methods:\n\t\t/**\n\t\t * @method _tick\n\t\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t\t * function.\n\t\t * @protected\n\t\t */\n\t\tp._tick = function(evtObj) {\n\t\t\tvar stage = this.getStage();\n\t\t\tstage&&stage.on(\"drawend\", this._handleDrawEnd, this, true);\n\t\t\tthis.DisplayObject__tick(evtObj);\n\t\t};\n\t\t\n\t\t/**\n\t\t * @method _handleDrawEnd\n\t\t * @param {Event} evt\n\t\t * @protected\n\t\t */\n\t\tp._handleDrawEnd = function(evt) {\n\t\t\tvar o = this.htmlElement;\n\t\t\tif (!o) { return; }\n\t\t\tvar style = o.style;\n\t\t\t\n\t\t\tvar props = this.getConcatenatedDisplayProps(this._props), mtx = props.matrix;\n\t\t\t\n\t\t\tvar visibility = props.visible ? \"visible\" : \"hidden\";\n\t\t\tif (visibility != style.visibility) { style.visibility = visibility; }\n\t\t\tif (!props.visible) { return; }\n\t\t\t\n\t\t\tvar oldProps = this._oldProps, oldMtx = oldProps&&oldProps.matrix;\n\t\t\tvar n = 10000; // precision\n\t\t\t\n\t\t\tif (!oldMtx || !oldMtx.equals(mtx)) {\n\t\t\t\tvar str = \"matrix(\" + (mtx.a*n|0)/n +\",\"+ (mtx.b*n|0)/n +\",\"+ (mtx.c*n|0)/n +\",\"+ (mtx.d*n|0)/n +\",\"+ (mtx.tx+0.5|0);\n\t\t\t\tstyle.transform = style.WebkitTransform = style.OTransform = style.msTransform = str +\",\"+ (mtx.ty+0.5|0) +\")\";\n\t\t\t\tstyle.MozTransform = str +\"px,\"+ (mtx.ty+0.5|0) +\"px)\";\n\t\t\t\tif (!oldProps) { oldProps = this._oldProps = new createjs.DisplayProps(true, NaN); }\n\t\t\t\toldProps.matrix.copy(mtx);\n\t\t\t}\n\t\t\t\n\t\t\tif (oldProps.alpha != props.alpha) {\n\t\t\t\tstyle.opacity = \"\"+(props.alpha*n|0)/n;\n\t\t\t\toldProps.alpha = props.alpha;\n\t\t\t}\n\t\t};\n\t\n\t\n\t\tcreatejs.DOMElement = createjs.promote(DOMElement, \"DisplayObject\");\n\t}());\n\t\n\t//##############################################################################\n\t// Filter.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t\t * Base class that all filters should inherit from. Filters need to be applied to objects that have been cached using\n\t\t * the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} method. If an object changes, please cache it again, or use\n\t\t * {{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}}. Note that the filters must be applied before caching.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      myInstance.filters = [\n\t\t *          new createjs.ColorFilter(0, 0, 0, 1, 255, 0, 0),\n\t\t *          new createjs.BlurFilter(5, 5, 10)\n\t\t *      ];\n\t\t *      myInstance.cache(0,0, 100, 100);\n\t\t *\n\t\t * Note that each filter can implement a {{#crossLink \"Filter/getBounds\"}}{{/crossLink}} method, which returns the\n\t\t * margins that need to be applied in order to fully display the filter. For example, the {{#crossLink \"BlurFilter\"}}{{/crossLink}}\n\t\t * will cause an object to feather outwards, resulting in a margin around the shape.\n\t\t *\n\t\t * <h4>EaselJS Filters</h4>\n\t\t * EaselJS comes with a number of pre-built filters:\n\t\t * <ul><li>{{#crossLink \"AlphaMapFilter\"}}{{/crossLink}} : Map a greyscale image to the alpha channel of a display object</li>\n\t\t *      <li>{{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}}: Map an image's alpha channel to the alpha channel of a display object</li>\n\t\t *      <li>{{#crossLink \"BlurFilter\"}}{{/crossLink}}: Apply vertical and horizontal blur to a display object</li>\n\t\t *      <li>{{#crossLink \"ColorFilter\"}}{{/crossLink}}: Color transform a display object</li>\n\t\t *      <li>{{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}: Transform an image using a {{#crossLink \"ColorMatrix\"}}{{/crossLink}}</li>\n\t\t * </ul>\n\t\t *\n\t\t * @class Filter\n\t\t * @constructor\n\t\t **/\n\t\tfunction Filter() {}\n\t\tvar p = Filter.prototype;\n\t\n\t\t/**\n\t\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t\t * for details.\n\t\t *\n\t\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t\t *\n\t\t * @method initialize\n\t\t * @protected\n\t\t * @deprecated\n\t\t */\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\t\n\t\n\t// public methods:\n\t\t/**\n\t\t * Provides padding values for this filter. That is, how much the filter will extend the visual bounds of an object it is applied to.\n\t\t * @method getBounds\n\t\t * @param {Rectangle} [rect] If specified, the provided Rectangle instance will be expanded by the padding amounts and returned.\n\t\t * @return {Rectangle} If a `rect` param was provided, it is returned. If not, either a new rectangle with the padding values, or null if no padding is required for this filter.\n\t\t **/\n\t\tp.getBounds = function(rect) {\n\t\t\treturn rect;\n\t\t};\n\t\n\t\t/**\n\t\t * Applies the filter to the specified context.\n\t\t * @method applyFilter\n\t\t * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n\t\t * @param {Number} x The x position to use for the source rect.\n\t\t * @param {Number} y The y position to use for the source rect.\n\t\t * @param {Number} width The width to use for the source rect.\n\t\t * @param {Number} height The height to use for the source rect.\n\t\t * @param {CanvasRenderingContext2D} [targetCtx] The 2D context to draw the result to. Defaults to the context passed to ctx.\n\t\t * @param {Number} [targetX] The x position to draw the result to. Defaults to the value passed to x.\n\t\t * @param {Number} [targetY] The y position to draw the result to. Defaults to the value passed to y.\n\t\t * @return {Boolean} If the filter was applied successfully.\n\t\t **/\n\t\tp.applyFilter = function(ctx, x, y, width, height, targetCtx, targetX, targetY) {\n\t\t\t// this is the default behaviour because most filters access pixel data. It is overridden when not needed.\n\t\t\ttargetCtx = targetCtx || ctx;\n\t\t\tif (targetX == null) { targetX = x; }\n\t\t\tif (targetY == null) { targetY = y; }\n\t\t\ttry {\n\t\t\t\tvar imageData = ctx.getImageData(x, y, width, height);\n\t\t\t} catch (e) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this._applyFilter(imageData)) {\n\t\t\t\ttargetCtx.putImageData(imageData, targetX, targetY);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a string representation of this object.\n\t\t * @method toString\n\t\t * @return {String} a string representation of the instance.\n\t\t **/\n\t\tp.toString = function() {\n\t\t\treturn \"[Filter]\";\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a clone of this Filter instance.\n\t\t * @method clone\n\t\t * @return {Filter} A clone of the current Filter instance.\n\t\t **/\n\t\tp.clone = function() {\n\t\t\treturn new Filter();\n\t\t};\n\t\t\n\t// private methods:\n\t\t/**\n\t\t * @method _applyFilter\n\t\t * @param {ImageData} imageData Target ImageData instance.\n\t\t * @return {Boolean}\n\t\t **/\n\t\tp._applyFilter = function(imageData) { return true; };\n\t\n\t\n\t\tcreatejs.Filter = Filter;\n\t}());\n\t\n\t//##############################################################################\n\t// BlurFilter.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t\t * Applies a box blur to DisplayObjects. Note that this filter is fairly CPU intensive, particularly if the quality is\n\t\t * set higher than 1.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t * This example creates a red circle, and then applies a 5 pixel blur to it. It uses the {{#crossLink \"Filter/getBounds\"}}{{/crossLink}}\n\t\t * method to account for the spread that the blur causes.\n\t\t *\n\t\t *      var shape = new createjs.Shape().set({x:100,y:100});\n\t\t *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n\t\t *\n\t\t *      var blurFilter = new createjs.BlurFilter(5, 5, 1);\n\t\t *      shape.filters = [blurFilter];\n\t\t *      var bounds = blurFilter.getBounds();\n\t\t *\n\t\t *      shape.cache(-50+bounds.x, -50+bounds.y, 100+bounds.width, 100+bounds.height);\n\t\t *\n\t\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n\t\t * @class BlurFilter\n\t\t * @extends Filter\n\t\t * @constructor\n\t\t * @param {Number} [blurX=0] The horizontal blur radius in pixels.\n\t\t * @param {Number} [blurY=0] The vertical blur radius in pixels.\n\t\t * @param {Number} [quality=1] The number of blur iterations.\n\t\t **/\n\t\tfunction BlurFilter( blurX, blurY, quality) {\n\t\t\tif ( isNaN(blurX) || blurX < 0 ) blurX = 0;\n\t\t\tif ( isNaN(blurY) || blurY < 0 ) blurY = 0;\n\t\t\tif ( isNaN(quality) || quality < 1  ) quality = 1;\n\t\n\t\n\t\t\t// public properties:\n\t\t\t/**\n\t\t\t * Horizontal blur radius in pixels\n\t\t\t * @property blurX\n\t\t\t * @default 0\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis.blurX = blurX | 0;\n\t\n\t\t\t/**\n\t\t\t * Vertical blur radius in pixels\n\t\t\t * @property blurY\n\t\t\t * @default 0\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis.blurY = blurY | 0;\n\t\n\t\t\t/**\n\t\t\t * Number of blur iterations. For example, a value of 1 will produce a rough blur. A value of 2 will produce a\n\t\t\t * smoother blur, but take twice as long to run.\n\t\t\t * @property quality\n\t\t\t * @default 1\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis.quality = quality | 0;\n\t\t}\n\t\tvar p = createjs.extend(BlurFilter, createjs.Filter);\n\t\n\t\t// TODO: deprecated\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\n\t\n\t// constants:\n\t\t/**\n\t\t * Array of multiply values for blur calculations.\n\t\t * @property MUL_TABLE\n\t\t * @type Array\n\t\t * @protected\n\t\t * @static\n\t\t **/\n\t\tBlurFilter.MUL_TABLE = [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265, 497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269, 261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369, 361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69, 271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446, 55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371, 367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317, 157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277, 275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491, 61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221, 439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202, 401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185, 23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341, 339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79, 315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295, 147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69, 275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130, 259, 129, 257, 1];\n\t\n\t\t/**\n\t\t * Array of shift values for blur calculations.\n\t\t * @property SHG_TABLE\n\t\t * @type Array\n\t\t * @protected\n\t\t * @static\n\t\t **/\n\t\tBlurFilter.SHG_TABLE = [0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14, 14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15, 15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14, 16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16, 14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16, 15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16, 17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16, 17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15, 16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17, 17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17, 16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14, 17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16, 17, 16, 17, 9];\n\t\n\t// public methods:\n\t\t/** docced in super class **/\n\t\tp.getBounds = function (rect) {\n\t\t\tvar x = this.blurX|0, y = this.blurY| 0;\n\t\t\tif (x <= 0 && y <= 0) { return rect; }\n\t\t\tvar q = Math.pow(this.quality, 0.2);\n\t\t\treturn (rect || new createjs.Rectangle()).pad(x*q+1,y*q+1,x*q+1,y*q+1);\n\t\t};\n\t\n\t\t/** docced in super class **/\n\t\tp.clone = function() {\n\t\t\treturn new BlurFilter(this.blurX, this.blurY, this.quality);\n\t\t};\n\t\n\t\t/** docced in super class **/\n\t\tp.toString = function() {\n\t\t\treturn \"[BlurFilter]\";\n\t\t};\n\t\n\t\n\t// private methods:\n\t\n\t\t/** docced in super class **/\n\t\tp._applyFilter = function (imageData) {\n\t\n\t\t\tvar radiusX = this.blurX >> 1;\n\t\t\tif (isNaN(radiusX) || radiusX < 0) return false;\n\t\t\tvar radiusY = this.blurY >> 1;\n\t\t\tif (isNaN(radiusY) || radiusY < 0) return false;\n\t\t\tif (radiusX == 0 && radiusY == 0) return false;\n\t\n\t\t\tvar iterations = this.quality;\n\t\t\tif (isNaN(iterations) || iterations < 1) iterations = 1;\n\t\t\titerations |= 0;\n\t\t\tif (iterations > 3) iterations = 3;\n\t\t\tif (iterations < 1) iterations = 1;\n\t\n\t\t\tvar px = imageData.data;\n\t\t\tvar x=0, y=0, i=0, p=0, yp=0, yi=0, yw=0, r=0, g=0, b=0, a=0, pr=0, pg=0, pb=0, pa=0;\n\t\n\t\t\tvar divx = (radiusX + radiusX + 1) | 0;\n\t\t\tvar divy = (radiusY + radiusY + 1) | 0;\n\t\t\tvar w = imageData.width | 0;\n\t\t\tvar h = imageData.height | 0;\n\t\n\t\t\tvar w1 = (w - 1) | 0;\n\t\t\tvar h1 = (h - 1) | 0;\n\t\t\tvar rxp1 = (radiusX + 1) | 0;\n\t\t\tvar ryp1 = (radiusY + 1) | 0;\n\t\n\t\t\tvar ssx = {r:0,b:0,g:0,a:0};\n\t\t\tvar sx = ssx;\n\t\t\tfor ( i = 1; i < divx; i++ )\n\t\t\t{\n\t\t\t\tsx = sx.n = {r:0,b:0,g:0,a:0};\n\t\t\t}\n\t\t\tsx.n = ssx;\n\t\n\t\t\tvar ssy = {r:0,b:0,g:0,a:0};\n\t\t\tvar sy = ssy;\n\t\t\tfor ( i = 1; i < divy; i++ )\n\t\t\t{\n\t\t\t\tsy = sy.n = {r:0,b:0,g:0,a:0};\n\t\t\t}\n\t\t\tsy.n = ssy;\n\t\n\t\t\tvar si = null;\n\t\n\t\n\t\t\tvar mtx = BlurFilter.MUL_TABLE[radiusX] | 0;\n\t\t\tvar stx = BlurFilter.SHG_TABLE[radiusX] | 0;\n\t\t\tvar mty = BlurFilter.MUL_TABLE[radiusY] | 0;\n\t\t\tvar sty = BlurFilter.SHG_TABLE[radiusY] | 0;\n\t\n\t\t\twhile (iterations-- > 0) {\n\t\n\t\t\t\tyw = yi = 0;\n\t\t\t\tvar ms = mtx;\n\t\t\t\tvar ss = stx;\n\t\t\t\tfor (y = h; --y > -1;) {\n\t\t\t\t\tr = rxp1 * (pr = px[(yi) | 0]);\n\t\t\t\t\tg = rxp1 * (pg = px[(yi + 1) | 0]);\n\t\t\t\t\tb = rxp1 * (pb = px[(yi + 2) | 0]);\n\t\t\t\t\ta = rxp1 * (pa = px[(yi + 3) | 0]);\n\t\n\t\t\t\t\tsx = ssx;\n\t\n\t\t\t\t\tfor( i = rxp1; --i > -1; )\n\t\t\t\t\t{\n\t\t\t\t\t\tsx.r = pr;\n\t\t\t\t\t\tsx.g = pg;\n\t\t\t\t\t\tsx.b = pb;\n\t\t\t\t\t\tsx.a = pa;\n\t\t\t\t\t\tsx = sx.n;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor( i = 1; i < rxp1; i++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tp = (yi + ((w1 < i ? w1 : i) << 2)) | 0;\n\t\t\t\t\t\tr += ( sx.r = px[p]);\n\t\t\t\t\t\tg += ( sx.g = px[p+1]);\n\t\t\t\t\t\tb += ( sx.b = px[p+2]);\n\t\t\t\t\t\ta += ( sx.a = px[p+3]);\n\t\n\t\t\t\t\t\tsx = sx.n;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tsi = ssx;\n\t\t\t\t\tfor ( x = 0; x < w; x++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tpx[yi++] = (r * ms) >>> ss;\n\t\t\t\t\t\tpx[yi++] = (g * ms) >>> ss;\n\t\t\t\t\t\tpx[yi++] = (b * ms) >>> ss;\n\t\t\t\t\t\tpx[yi++] = (a * ms) >>> ss;\n\t\n\t\t\t\t\t\tp = ((yw + ((p = x + radiusX + 1) < w1 ? p : w1)) << 2);\n\t\n\t\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\t\n\t\t\t\t\t\tsi = si.n;\n\t\n\t\t\t\t\t}\n\t\t\t\t\tyw += w;\n\t\t\t\t}\n\t\n\t\t\t\tms = mty;\n\t\t\t\tss = sty;\n\t\t\t\tfor (x = 0; x < w; x++) {\n\t\t\t\t\tyi = (x << 2) | 0;\n\t\n\t\t\t\t\tr = (ryp1 * (pr = px[yi])) | 0;\n\t\t\t\t\tg = (ryp1 * (pg = px[(yi + 1) | 0])) | 0;\n\t\t\t\t\tb = (ryp1 * (pb = px[(yi + 2) | 0])) | 0;\n\t\t\t\t\ta = (ryp1 * (pa = px[(yi + 3) | 0])) | 0;\n\t\n\t\t\t\t\tsy = ssy;\n\t\t\t\t\tfor( i = 0; i < ryp1; i++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tsy.r = pr;\n\t\t\t\t\t\tsy.g = pg;\n\t\t\t\t\t\tsy.b = pb;\n\t\t\t\t\t\tsy.a = pa;\n\t\t\t\t\t\tsy = sy.n;\n\t\t\t\t\t}\n\t\n\t\t\t\t\typ = w;\n\t\n\t\t\t\t\tfor( i = 1; i <= radiusY; i++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tyi = ( yp + x ) << 2;\n\t\n\t\t\t\t\t\tr += ( sy.r = px[yi]);\n\t\t\t\t\t\tg += ( sy.g = px[yi+1]);\n\t\t\t\t\t\tb += ( sy.b = px[yi+2]);\n\t\t\t\t\t\ta += ( sy.a = px[yi+3]);\n\t\n\t\t\t\t\t\tsy = sy.n;\n\t\n\t\t\t\t\t\tif( i < h1 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\typ += w;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tyi = x;\n\t\t\t\t\tsi = ssy;\n\t\t\t\t\tif ( iterations > 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\tfor ( y = 0; y < h; y++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tp = yi << 2;\n\t\t\t\t\t\t\tpx[p+3] = pa =(a * ms) >>> ss;\n\t\t\t\t\t\t\tif ( pa > 0 )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpx[p]   = ((r * ms) >>> ss );\n\t\t\t\t\t\t\t\tpx[p+1] = ((g * ms) >>> ss );\n\t\t\t\t\t\t\t\tpx[p+2] = ((b * ms) >>> ss );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpx[p] = px[p+1] = px[p+2] = 0\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tp = ( x + (( ( p = y + ryp1) < h1 ? p : h1 ) * w )) << 2;\n\t\n\t\t\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\t\n\t\t\t\t\t\t\tsi = si.n;\n\t\n\t\t\t\t\t\t\tyi += w;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor ( y = 0; y < h; y++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tp = yi << 2;\n\t\t\t\t\t\t\tpx[p+3] = pa =(a * ms) >>> ss;\n\t\t\t\t\t\t\tif ( pa > 0 )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpa = 255 / pa;\n\t\t\t\t\t\t\t\tpx[p]   = ((r * ms) >>> ss ) * pa;\n\t\t\t\t\t\t\t\tpx[p+1] = ((g * ms) >>> ss ) * pa;\n\t\t\t\t\t\t\t\tpx[p+2] = ((b * ms) >>> ss ) * pa;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpx[p] = px[p+1] = px[p+2] = 0\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tp = ( x + (( ( p = y + ryp1) < h1 ? p : h1 ) * w )) << 2;\n\t\n\t\t\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\t\n\t\t\t\t\t\t\tsi = si.n;\n\t\n\t\t\t\t\t\t\tyi += w;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\n\t\tcreatejs.BlurFilter = createjs.promote(BlurFilter, \"Filter\");\n\t}());\n\t\n\t//##############################################################################\n\t// AlphaMapFilter.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\t\n\t\t\n\t// constructor:\n\t\t/**\n\t\t * Applies a greyscale alpha map image (or canvas) to the target, such that the alpha channel of the result will\n\t\t * be copied from the red channel of the map, and the RGB channels will be copied from the target.\n\t\t *\n\t\t * Generally, it is recommended that you use {{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}}, because it has much\n\t\t * better performance.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t * This example draws a red->blue box, caches it, and then uses the cache canvas as an alpha map on a 100x100 image.\n\t\t *\n\t\t *       var box = new createjs.Shape();\n\t\t *       box.graphics.beginLinearGradientFill([\"#ff0000\", \"#0000ff\"], [0, 1], 0, 0, 0, 100)\n\t\t *       box.graphics.drawRect(0, 0, 100, 100);\n\t\t *       box.cache(0, 0, 100, 100);\n\t\t *\n\t\t *       var bmp = new createjs.Bitmap(\"path/to/image.jpg\");\n\t\t *       bmp.filters = [\n\t\t *           new createjs.AlphaMapFilter(box.cacheCanvas)\n\t\t *       ];\n\t\t *       bmp.cache(0, 0, 100, 100);\n\t\t *       stage.addChild(bmp);\n\t\t *\n\t\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for more information on applying filters.\n\t\t * @class AlphaMapFilter\n\t\t * @extends Filter\n\t\t * @constructor\n\t\t * @param {HTMLImageElement|HTMLCanvasElement} alphaMap The greyscale image (or canvas) to use as the alpha value for the\n\t\t * result. This should be exactly the same dimensions as the target.\n\t\t **/\n\t\tfunction AlphaMapFilter(alphaMap) {\n\t\t\n\t\t\n\t\t// public properties:\n\t\t\t/**\n\t\t\t * The greyscale image (or canvas) to use as the alpha value for the result. This should be exactly the same\n\t\t\t * dimensions as the target.\n\t\t\t * @property alphaMap\n\t\t\t * @type HTMLImageElement|HTMLCanvasElement\n\t\t\t **/\n\t\t\tthis.alphaMap = alphaMap;\n\t\t\t\n\t\t\t\n\t\t// private properties:\n\t\t\t/**\n\t\t\t * @property _alphaMap\n\t\t\t * @protected\n\t\t\t * @type HTMLImageElement|HTMLCanvasElement\n\t\t\t **/\n\t\t\tthis._alphaMap = null;\n\t\t\t\n\t\t\t/**\n\t\t\t * @property _mapData\n\t\t\t * @protected\n\t\t\t * @type Uint8ClampedArray\n\t\t\t **/\n\t\t\tthis._mapData = null;\n\t\t}\n\t\tvar p = createjs.extend(AlphaMapFilter, createjs.Filter);\n\t\n\t\t// TODO: deprecated\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\n\t\n\t// public methods:\n\t\t/** docced in super class **/\n\t\tp.clone = function () {\n\t\t\tvar o = new AlphaMapFilter(this.alphaMap);\n\t\t\to._alphaMap = this._alphaMap;\n\t\t\to._mapData = this._mapData;\n\t\t\treturn o;\n\t\t};\n\t\n\t\t/** docced in super class **/\n\t\tp.toString = function () {\n\t\t\treturn \"[AlphaMapFilter]\";\n\t\t};\n\t\n\t\n\t// private methods:\n\t\t/** docced in super class **/\n\t\tp._applyFilter = function (imageData) {\n\t\t\tif (!this.alphaMap) { return true; }\n\t\t\tif (!this._prepAlphaMap()) { return false; }\n\t\t\t\n\t\t\t// TODO: update to support scenarios where the target has different dimensions.\n\t\t\tvar data = imageData.data;\n\t\t\tvar map = this._mapData;\n\t\t\tfor(var i=0, l=data.length; i<l; i += 4) { data[i + 3] = map[i] || 0; }\n\t\t\t\n\t\t\treturn true;\n\t\t};\n\t\n\t\t/**\n\t\t * @method _prepAlphaMap\n\t\t * @protected\n\t\t **/\n\t\tp._prepAlphaMap = function () {\n\t\t\tif (!this.alphaMap) { return false; }\n\t\t\tif (this.alphaMap == this._alphaMap && this._mapData) { return true; }\n\t\n\t\t\tthis._mapData = null;\n\t\t\tvar map = this._alphaMap = this.alphaMap;\n\t\t\tvar canvas = map;\n\t\t\tvar ctx;\n\t\t\tif (map instanceof HTMLCanvasElement) {\n\t\t\t\tctx = canvas.getContext(\"2d\");\n\t\t\t} else {\n\t\t\t\tcanvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n\t\t\t\tcanvas.width = map.width;\n\t\t\t\tcanvas.height = map.height;\n\t\t\t\tctx = canvas.getContext(\"2d\");\n\t\t\t\tctx.drawImage(map, 0, 0);\n\t\t\t}\n\t\n\t\t\ttry {\n\t\t\t\tvar imgData = ctx.getImageData(0, 0, map.width, map.height);\n\t\t\t} catch (e) {\n\t\t\t\t//if (!this.suppressCrossDomainErrors) throw new Error(\"unable to access local image data: \" + e);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\tthis._mapData = imgData.data;\n\t\t\treturn true;\n\t\t};\n\t\n\t\n\t\tcreatejs.AlphaMapFilter = createjs.promote(AlphaMapFilter, \"Filter\");\n\t}());\n\t\n\t//##############################################################################\n\t// AlphaMaskFilter.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t\t * Applies the alpha from the mask image (or canvas) to the target, such that the alpha channel of the result will\n\t\t * be derived from the mask, and the RGB channels will be copied from the target. This can be used, for example, to\n\t\t * apply an alpha mask to a display object. This can also be used to combine a JPG compressed RGB image with a PNG32\n\t\t * alpha mask, which can result in a much smaller file size than a single PNG32 containing ARGB.\n\t\t *\n\t\t * <b>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters correctly.</b>\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t * This example draws a gradient box, then caches it and uses the \"cacheCanvas\" as the alpha mask on a 100x100 image.\n\t\t *\n\t\t *      var box = new createjs.Shape();\n\t\t *      box.graphics.beginLinearGradientFill([\"#000000\", \"rgba(0, 0, 0, 0)\"], [0, 1], 0, 0, 100, 100)\n\t\t *      box.graphics.drawRect(0, 0, 100, 100);\n\t\t *      box.cache(0, 0, 100, 100);\n\t\t *\n\t\t *      var bmp = new createjs.Bitmap(\"path/to/image.jpg\");\n\t\t *      bmp.filters = [\n\t\t *          new createjs.AlphaMaskFilter(box.cacheCanvas)\n\t\t *      ];\n\t\t *      bmp.cache(0, 0, 100, 100);\n\t\t *\n\t\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for more information on applying filters.\n\t\t * @class AlphaMaskFilter\n\t\t * @extends Filter\n\t\t * @constructor\n\t\t * @param {HTMLImageElement|HTMLCanvasElement} mask\n\t\t **/\n\t\tfunction AlphaMaskFilter(mask) {\n\t\t\n\t\t\n\t\t// public properties:\n\t\t\t/**\n\t\t\t * The image (or canvas) to use as the mask.\n\t\t\t * @property mask\n\t\t\t * @type HTMLImageElement|HTMLCanvasElement\n\t\t\t **/\n\t\t\tthis.mask = mask;\n\t\t}\n\t\tvar p = createjs.extend(AlphaMaskFilter, createjs.Filter);\n\t\n\t\t// TODO: deprecated\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\t\n\t\n\t// public methods:\n\t\t/**\n\t\t * Applies the filter to the specified context.\n\t\t *\n\t\t * <strong>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters\n\t\t * correctly.</strong>\n\t\t * @method applyFilter\n\t\t * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n\t\t * @param {Number} x The x position to use for the source rect.\n\t\t * @param {Number} y The y position to use for the source rect.\n\t\t * @param {Number} width The width to use for the source rect.\n\t\t * @param {Number} height The height to use for the source rect.\n\t\t * @param {CanvasRenderingContext2D} [targetCtx] NOT SUPPORTED IN THIS FILTER. The 2D context to draw the result to. Defaults to the context passed to ctx.\n\t\t * @param {Number} [targetX] NOT SUPPORTED IN THIS FILTER. The x position to draw the result to. Defaults to the value passed to x.\n\t\t * @param {Number} [targetY] NOT SUPPORTED IN THIS FILTER. The y position to draw the result to. Defaults to the value passed to y.\n\t\t * @return {Boolean} If the filter was applied successfully.\n\t\t **/\n\t\tp.applyFilter = function (ctx, x, y, width, height, targetCtx, targetX, targetY) {\n\t\t\tif (!this.mask) { return true; }\n\t\t\ttargetCtx = targetCtx || ctx;\n\t\t\tif (targetX == null) { targetX = x; }\n\t\t\tif (targetY == null) { targetY = y; }\n\t\n\t\t\ttargetCtx.save();\n\t\t\tif (ctx != targetCtx) {\n\t\t\t\t// TODO: support targetCtx and targetX/Y\n\t\t\t\t// clearRect, then draw the ctx in?\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\ttargetCtx.globalCompositeOperation = \"destination-in\";\n\t\t\ttargetCtx.drawImage(this.mask, targetX, targetY);\n\t\t\ttargetCtx.restore();\n\t\t\treturn true;\n\t\t};\n\t\n\t\t/** docced in super class **/\n\t\tp.clone = function () {\n\t\t\treturn new AlphaMaskFilter(this.mask);\n\t\t};\n\t\n\t\t/** docced in super class **/\n\t\tp.toString = function () {\n\t\t\treturn \"[AlphaMaskFilter]\";\n\t\t};\n\t\n\t\n\t\tcreatejs.AlphaMaskFilter = createjs.promote(AlphaMaskFilter, \"Filter\");\n\t}());\n\t\n\t//##############################################################################\n\t// ColorFilter.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t\t * Applies a color transform to DisplayObjects.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t * This example draws a red circle, and then transforms it to Blue. This is accomplished by multiplying all the channels\n\t\t * to 0 (except alpha, which is set to 1), and then adding 255 to the blue channel.\n\t\t *\n\t\t *      var shape = new createjs.Shape().set({x:100,y:100});\n\t\t *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n\t\t *\n\t\t *      shape.filters = [\n\t\t *          new createjs.ColorFilter(0,0,0,1, 0,0,255,0)\n\t\t *      ];\n\t\t *      shape.cache(-50, -50, 100, 100);\n\t\t *\n\t\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n\t\t * @class ColorFilter\n\t\t * @param {Number} [redMultiplier=1] The amount to multiply against the red channel. This is a range between 0 and 1.\n\t\t * @param {Number} [greenMultiplier=1] The amount to multiply against the green channel. This is a range between 0 and 1.\n\t\t * @param {Number} [blueMultiplier=1] The amount to multiply against the blue channel. This is a range between 0 and 1.\n\t\t * @param {Number} [alphaMultiplier=1] The amount to multiply against the alpha channel. This is a range between 0 and 1.\n\t\t * @param {Number} [redOffset=0] The amount to add to the red channel after it has been multiplied. This is a range\n\t\t * between -255 and 255.\n\t\t * @param {Number} [greenOffset=0] The amount to add to the green channel after it has been multiplied. This is a range\n\t\t  * between -255 and 255.\n\t\t * @param {Number} [blueOffset=0] The amount to add to the blue channel after it has been multiplied. This is a range\n\t\t  * between -255 and 255.\n\t\t * @param {Number} [alphaOffset=0] The amount to add to the alpha channel after it has been multiplied. This is a range\n\t\t  * between -255 and 255.\n\t\t * @constructor\n\t\t * @extends Filter\n\t\t **/\n\t\tfunction ColorFilter(redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier, redOffset, greenOffset, blueOffset, alphaOffset) {\n\t\t\t\n\t\t\n\t\t// public properties:\n\t\t\t/**\n\t\t\t * Red channel multiplier.\n\t\t\t * @property redMultiplier\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis.redMultiplier = redMultiplier != null ? redMultiplier : 1;\n\t\t\n\t\t\t/**\n\t\t\t * Green channel multiplier.\n\t\t\t * @property greenMultiplier\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis.greenMultiplier = greenMultiplier != null ? greenMultiplier : 1;\n\t\t\n\t\t\t/**\n\t\t\t * Blue channel multiplier.\n\t\t\t * @property blueMultiplier\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis.blueMultiplier = blueMultiplier != null ? blueMultiplier : 1;\n\t\t\n\t\t\t/**\n\t\t\t * Alpha channel multiplier.\n\t\t\t * @property alphaMultiplier\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis.alphaMultiplier = alphaMultiplier != null ? alphaMultiplier : 1;\n\t\t\n\t\t\t/**\n\t\t\t * Red channel offset (added to value).\n\t\t\t * @property redOffset\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis.redOffset = redOffset || 0;\n\t\t\n\t\t\t/**\n\t\t\t * Green channel offset (added to value).\n\t\t\t * @property greenOffset\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis.greenOffset = greenOffset || 0;\n\t\t\n\t\t\t/**\n\t\t\t * Blue channel offset (added to value).\n\t\t\t * @property blueOffset\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis.blueOffset = blueOffset || 0;\n\t\t\n\t\t\t/**\n\t\t\t * Alpha channel offset (added to value).\n\t\t\t * @property alphaOffset\n\t\t\t * @type Number\n\t\t\t **/\n\t\t\tthis.alphaOffset = alphaOffset || 0;\n\t\t}\n\t\tvar p = createjs.extend(ColorFilter, createjs.Filter);\n\t\n\t\t// TODO: deprecated\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\n\t\n\t// public methods:\n\t\t/** docced in super class **/\n\t\tp.toString = function() {\n\t\t\treturn \"[ColorFilter]\";\n\t\t};\n\t\n\t\t/** docced in super class **/\n\t\tp.clone = function() {\n\t\t\treturn new ColorFilter(this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier, this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset);\n\t\t};\n\t\t\n\t\n\t// private methods:\n\t\t/** docced in super class **/\n\t\tp._applyFilter = function(imageData) {\n\t\t\tvar data = imageData.data;\n\t\t\tvar l = data.length;\n\t\t\tfor (var i=0; i<l; i+=4) {\n\t\t\t\tdata[i] = data[i]*this.redMultiplier+this.redOffset;\n\t\t\t\tdata[i+1] = data[i+1]*this.greenMultiplier+this.greenOffset;\n\t\t\t\tdata[i+2] = data[i+2]*this.blueMultiplier+this.blueOffset;\n\t\t\t\tdata[i+3] = data[i+3]*this.alphaMultiplier+this.alphaOffset;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\n\t\n\t\tcreatejs.ColorFilter = createjs.promote(ColorFilter, \"Filter\");\n\t}());\n\t\n\t//##############################################################################\n\t// ColorMatrix.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t\t * Provides helper functions for assembling a matrix for use with the {{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}.\n\t\t * Most methods return the instance to facilitate chained calls.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      myColorMatrix.adjustHue(20).adjustBrightness(50);\n\t\t *\n\t\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for an example of how to apply filters, or {{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}\n\t\t * for an example of how to use ColorMatrix to change a DisplayObject's color.\n\t\t * @class ColorMatrix\n\t\t * @param {Number} brightness\n\t\t * @param {Number} contrast\n\t\t * @param {Number} saturation\n\t\t * @param {Number} hue\n\t\t * @constructor\n\t\t **/\n\t\tfunction ColorMatrix(brightness, contrast, saturation, hue) {\n\t\t\tthis.setColor(brightness, contrast, saturation, hue);\n\t\t}\n\t\tvar p = ColorMatrix.prototype;\n\t\n\t\t/**\n\t\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t\t * for details.\n\t\t *\n\t\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t\t *\n\t\t * @method initialize\n\t\t * @protected\n\t\t * @deprecated\n\t\t */\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\t\n\t\n\t// constants:\n\t\t/**\n\t\t * Array of delta values for contrast calculations.\n\t\t * @property DELTA_INDEX\n\t\t * @type Array\n\t\t * @protected\n\t\t * @static\n\t\t **/\n\t\tColorMatrix.DELTA_INDEX = [\n\t\t\t0,    0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1,  0.11,\n\t\t\t0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.20, 0.21, 0.22, 0.24,\n\t\t\t0.25, 0.27, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38, 0.40, 0.42,\n\t\t\t0.44, 0.46, 0.48, 0.5,  0.53, 0.56, 0.59, 0.62, 0.65, 0.68,\n\t\t\t0.71, 0.74, 0.77, 0.80, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98,\n\t\t\t1.0,  1.06, 1.12, 1.18, 1.24, 1.30, 1.36, 1.42, 1.48, 1.54,\n\t\t\t1.60, 1.66, 1.72, 1.78, 1.84, 1.90, 1.96, 2.0,  2.12, 2.25,\n\t\t\t2.37, 2.50, 2.62, 2.75, 2.87, 3.0,  3.2,  3.4,  3.6,  3.8,\n\t\t\t4.0,  4.3,  4.7,  4.9,  5.0,  5.5,  6.0,  6.5,  6.8,  7.0,\n\t\t\t7.3,  7.5,  7.8,  8.0,  8.4,  8.7,  9.0,  9.4,  9.6,  9.8,\n\t\t\t10.0\n\t\t];\n\t\n\t\t/**\n\t\t * Identity matrix values.\n\t\t * @property IDENTITY_MATRIX\n\t\t * @type Array\n\t\t * @protected\n\t\t * @static\n\t\t **/\n\t\tColorMatrix.IDENTITY_MATRIX = [\n\t\t\t1,0,0,0,0,\n\t\t\t0,1,0,0,0,\n\t\t\t0,0,1,0,0,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t];\n\t\n\t\t/**\n\t\t * The constant length of a color matrix.\n\t\t * @property LENGTH\n\t\t * @type Number\n\t\t * @protected\n\t\t * @static\n\t\t **/\n\t\tColorMatrix.LENGTH = ColorMatrix.IDENTITY_MATRIX.length;\n\t\n\t\n\t// public methods:\n\t\t/**\n\t\t * Resets the instance with the specified values.\n\t\t * @method setColor\n\t\t * @param {Number} brightness\n\t\t * @param {Number} contrast\n\t\t * @param {Number} saturation\n\t\t * @param {Number} hue\n\t\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t */\n\t\tp.setColor = function(brightness,contrast,saturation,hue) {\n\t\t\treturn this.reset().adjustColor(brightness,contrast,saturation,hue);\n\t\t};\n\t\n\t\t/**\n\t\t * Resets the matrix to identity values.\n\t\t * @method reset\n\t\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t */\n\t\tp.reset = function() {\n\t\t\treturn this.copy(ColorMatrix.IDENTITY_MATRIX);\n\t\t};\n\t\n\t\t/**\n\t\t * Shortcut method to adjust brightness, contrast, saturation and hue.\n\t\t * Equivalent to calling adjustHue(hue), adjustContrast(contrast),\n\t\t * adjustBrightness(brightness), adjustSaturation(saturation), in that order.\n\t\t * @method adjustColor\n\t\t * @param {Number} brightness\n\t\t * @param {Number} contrast\n\t\t * @param {Number} saturation\n\t\t * @param {Number} hue\n\t\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.adjustColor = function(brightness,contrast,saturation,hue) {\n\t\t\tthis.adjustHue(hue);\n\t\t\tthis.adjustContrast(contrast);\n\t\t\tthis.adjustBrightness(brightness);\n\t\t\treturn this.adjustSaturation(saturation);\n\t\t};\n\t\n\t\t/**\n\t\t * Adjusts the brightness of pixel color by adding the specified value to the red, green and blue channels.\n\t\t * Positive values will make the image brighter, negative values will make it darker.\n\t\t * @method adjustBrightness\n\t\t * @param {Number} value A value between -255 & 255 that will be added to the RGB channels.\n\t\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.adjustBrightness = function(value) {\n\t\t\tif (value == 0 || isNaN(value)) { return this; }\n\t\t\tvalue = this._cleanValue(value,255);\n\t\t\tthis._multiplyMatrix([\n\t\t\t\t1,0,0,0,value,\n\t\t\t\t0,1,0,0,value,\n\t\t\t\t0,0,1,0,value,\n\t\t\t\t0,0,0,1,0,\n\t\t\t\t0,0,0,0,1\n\t\t\t]);\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * Adjusts the contrast of pixel color.\n\t\t * Positive values will increase contrast, negative values will decrease contrast.\n\t\t * @method adjustContrast\n\t\t * @param {Number} value A value between -100 & 100.\n\t\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.adjustContrast = function(value) {\n\t\t\tif (value == 0 || isNaN(value)) { return this; }\n\t\t\tvalue = this._cleanValue(value,100);\n\t\t\tvar x;\n\t\t\tif (value<0) {\n\t\t\t\tx = 127+value/100*127;\n\t\t\t} else {\n\t\t\t\tx = value%1;\n\t\t\t\tif (x == 0) {\n\t\t\t\t\tx = ColorMatrix.DELTA_INDEX[value];\n\t\t\t\t} else {\n\t\t\t\t\tx = ColorMatrix.DELTA_INDEX[(value<<0)]*(1-x)+ColorMatrix.DELTA_INDEX[(value<<0)+1]*x; // use linear interpolation for more granularity.\n\t\t\t\t}\n\t\t\t\tx = x*127+127;\n\t\t\t}\n\t\t\tthis._multiplyMatrix([\n\t\t\t\tx/127,0,0,0,0.5*(127-x),\n\t\t\t\t0,x/127,0,0,0.5*(127-x),\n\t\t\t\t0,0,x/127,0,0.5*(127-x),\n\t\t\t\t0,0,0,1,0,\n\t\t\t\t0,0,0,0,1\n\t\t\t]);\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * Adjusts the color saturation of the pixel.\n\t\t * Positive values will increase saturation, negative values will decrease saturation (trend towards greyscale).\n\t\t * @method adjustSaturation\n\t\t * @param {Number} value A value between -100 & 100.\n\t\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.adjustSaturation = function(value) {\n\t\t\tif (value == 0 || isNaN(value)) { return this; }\n\t\t\tvalue = this._cleanValue(value,100);\n\t\t\tvar x = 1+((value > 0) ? 3*value/100 : value/100);\n\t\t\tvar lumR = 0.3086;\n\t\t\tvar lumG = 0.6094;\n\t\t\tvar lumB = 0.0820;\n\t\t\tthis._multiplyMatrix([\n\t\t\t\tlumR*(1-x)+x,lumG*(1-x),lumB*(1-x),0,0,\n\t\t\t\tlumR*(1-x),lumG*(1-x)+x,lumB*(1-x),0,0,\n\t\t\t\tlumR*(1-x),lumG*(1-x),lumB*(1-x)+x,0,0,\n\t\t\t\t0,0,0,1,0,\n\t\t\t\t0,0,0,0,1\n\t\t\t]);\n\t\t\treturn this;\n\t\t};\n\t\n\t\n\t\t/**\n\t\t * Adjusts the hue of the pixel color.\n\t\t * @method adjustHue\n\t\t * @param {Number} value A value between -180 & 180.\n\t\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.adjustHue = function(value) {\n\t\t\tif (value == 0 || isNaN(value)) { return this; }\n\t\t\tvalue = this._cleanValue(value,180)/180*Math.PI;\n\t\t\tvar cosVal = Math.cos(value);\n\t\t\tvar sinVal = Math.sin(value);\n\t\t\tvar lumR = 0.213;\n\t\t\tvar lumG = 0.715;\n\t\t\tvar lumB = 0.072;\n\t\t\tthis._multiplyMatrix([\n\t\t\t\tlumR+cosVal*(1-lumR)+sinVal*(-lumR),lumG+cosVal*(-lumG)+sinVal*(-lumG),lumB+cosVal*(-lumB)+sinVal*(1-lumB),0,0,\n\t\t\t\tlumR+cosVal*(-lumR)+sinVal*(0.143),lumG+cosVal*(1-lumG)+sinVal*(0.140),lumB+cosVal*(-lumB)+sinVal*(-0.283),0,0,\n\t\t\t\tlumR+cosVal*(-lumR)+sinVal*(-(1-lumR)),lumG+cosVal*(-lumG)+sinVal*(lumG),lumB+cosVal*(1-lumB)+sinVal*(lumB),0,0,\n\t\t\t\t0,0,0,1,0,\n\t\t\t\t0,0,0,0,1\n\t\t\t]);\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * Concatenates (multiplies) the specified matrix with this one.\n\t\t * @method concat\n\t\t * @param {Array} matrix An array or ColorMatrix instance.\n\t\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.concat = function(matrix) {\n\t\t\tmatrix = this._fixMatrix(matrix);\n\t\t\tif (matrix.length != ColorMatrix.LENGTH) { return this; }\n\t\t\tthis._multiplyMatrix(matrix);\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a clone of this ColorMatrix.\n\t\t * @method clone\n\t\t * @return {ColorMatrix} A clone of this ColorMatrix.\n\t\t **/\n\t\tp.clone = function() {\n\t\t\treturn (new ColorMatrix()).copy(this);\n\t\t};\n\t\n\t\t/**\n\t\t * Return a length 25 (5x5) array instance containing this matrix's values.\n\t\t * @method toArray\n\t\t * @return {Array} An array holding this matrix's values.\n\t\t **/\n\t\tp.toArray = function() {\n\t\t\tvar arr = [];\n\t\t\tfor (var i= 0, l=ColorMatrix.LENGTH; i<l; i++) {\n\t\t\t\tarr[i] = this[i];\n\t\t\t}\n\t\t\treturn arr;\n\t\t};\n\t\n\t\t/**\n\t\t * Copy the specified matrix's values to this matrix.\n\t\t * @method copy\n\t\t * @param {Array} matrix An array or ColorMatrix instance.\n\t\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t\t * @chainable\n\t\t **/\n\t\tp.copy = function(matrix) {\n\t\t\tvar l = ColorMatrix.LENGTH;\n\t\t\tfor (var i=0;i<l;i++) {\n\t\t\t\tthis[i] = matrix[i];\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Returns a string representation of this object.\n\t\t * @method toString\n\t\t * @return {String} a string representation of the instance.\n\t\t **/\n\t\tp.toString = function() {\n\t\t\treturn \"[ColorMatrix]\";\n\t\t};\n\t\n\t\n\t// private methods:\n\t\t/**\n\t\t * @method _multiplyMatrix\n\t\t * @param {Array} matrix\n\t\t * @protected\n\t\t **/\n\t\tp._multiplyMatrix = function(matrix) {\n\t\t\tvar i, j, k, col = [];\n\t\n\t\t\tfor (i=0;i<5;i++) {\n\t\t\t\tfor (j=0;j<5;j++) {\n\t\t\t\t\tcol[j] = this[j+i*5];\n\t\t\t\t}\n\t\t\t\tfor (j=0;j<5;j++) {\n\t\t\t\t\tvar val=0;\n\t\t\t\t\tfor (k=0;k<5;k++) {\n\t\t\t\t\t\tval += matrix[j+k*5]*col[k];\n\t\t\t\t\t}\n\t\t\t\t\tthis[j+i*5] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Make sure values are within the specified range, hue has a limit of 180, brightness is 255, others are 100.\n\t\t * @method _cleanValue\n\t\t * @param {Number} value The raw number\n\t\t * @param {Number} limit The maximum that the number can be. The minimum is the limit * -1.\n\t\t * @protected\n\t\t **/\n\t\tp._cleanValue = function(value, limit) {\n\t\t\treturn Math.min(limit,Math.max(-limit,value));\n\t\t};\n\t\n\t\t/**\n\t\t * Makes sure matrixes are 5x5 (25 long).\n\t\t * @method _fixMatrix\n\t\t * @param {Array} matrix\n\t\t * @protected\n\t\t **/\n\t\tp._fixMatrix = function(matrix) {\n\t\t\tif (matrix instanceof ColorMatrix) { matrix = matrix.toArray(); }\n\t\t\tif (matrix.length < ColorMatrix.LENGTH) {\n\t\t\t\tmatrix = matrix.slice(0,matrix.length).concat(ColorMatrix.IDENTITY_MATRIX.slice(matrix.length,ColorMatrix.LENGTH));\n\t\t\t} else if (matrix.length > ColorMatrix.LENGTH) {\n\t\t\t\tmatrix = matrix.slice(0,ColorMatrix.LENGTH);\n\t\t\t}\n\t\t\treturn matrix;\n\t\t};\n\t\n\t\n\t\tcreatejs.ColorMatrix = ColorMatrix;\n\t}());\n\t\n\t//##############################################################################\n\t// ColorMatrixFilter.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t\t * Allows you to carry out complex color operations such as modifying saturation, brightness, or inverting. See the\n\t\t * {{#crossLink \"ColorMatrix\"}}{{/crossLink}} for more information on changing colors. For an easier color transform,\n\t\t * consider the {{#crossLink \"ColorFilter\"}}{{/crossLink}}.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t * This example creates a red circle, inverts its hue, and then saturates it to brighten it up.\n\t\t *\n\t\t *      var shape = new createjs.Shape().set({x:100,y:100});\n\t\t *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n\t\t *\n\t\t *      var matrix = new createjs.ColorMatrix().adjustHue(180).adjustSaturation(100);\n\t\t *      shape.filters = [\n\t\t *          new createjs.ColorMatrixFilter(matrix)\n\t\t *      ];\n\t\t *\n\t\t *      shape.cache(-50, -50, 100, 100);\n\t\t *\n\t\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n\t\t * @class ColorMatrixFilter\n\t\t * @constructor\n\t\t * @extends Filter\n\t\t * @param {Array | ColorMatrix} matrix A 4x5 matrix describing the color operation to perform. See also the {{#crossLink \"ColorMatrix\"}}{{/crossLink}}\n\t\t * class.\n\t\t **/\n\t\tfunction ColorMatrixFilter(matrix) {\n\t\t\n\t\t\t\n\t\t// public properties:\n\t\t\t/**\n\t\t\t * A 4x5 matrix describing the color operation to perform. See also the {{#crossLink \"ColorMatrix\"}}{{/crossLink}}\n\t\t\t * @property matrix\n\t\t\t * @type Array | ColorMatrix\n\t\t\t **/\n\t\t\tthis.matrix = matrix;\n\t\t}\n\t\tvar p = createjs.extend(ColorMatrixFilter, createjs.Filter);\n\t\n\t\t// TODO: deprecated\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\t\n\t\n\t// public methods:\n\t\t/** docced in super class **/\n\t\tp.toString = function() {\n\t\t\treturn \"[ColorMatrixFilter]\";\n\t\t};\n\t\n\t\t/** docced in super class **/\n\t\tp.clone = function() {\n\t\t\treturn new ColorMatrixFilter(this.matrix);\n\t\t};\n\t\n\t// private methods:\n\t\t/** docced in super class **/\n\t\tp._applyFilter = function(imageData) { \n\t\t\tvar data = imageData.data;\n\t\t\tvar l = data.length;\n\t\t\tvar r,g,b,a;\n\t\t\tvar mtx = this.matrix;\n\t\t\tvar m0 =  mtx[0],  m1 =  mtx[1],  m2 =  mtx[2],  m3 =  mtx[3],  m4 =  mtx[4];\n\t\t\tvar m5 =  mtx[5],  m6 =  mtx[6],  m7 =  mtx[7],  m8 =  mtx[8],  m9 =  mtx[9];\n\t\t\tvar m10 = mtx[10], m11 = mtx[11], m12 = mtx[12], m13 = mtx[13], m14 = mtx[14];\n\t\t\tvar m15 = mtx[15], m16 = mtx[16], m17 = mtx[17], m18 = mtx[18], m19 = mtx[19];\n\t\n\t\t\tfor (var i=0; i<l; i+=4) {\n\t\t\t\tr = data[i];\n\t\t\t\tg = data[i+1];\n\t\t\t\tb = data[i+2];\n\t\t\t\ta = data[i+3];\n\t\t\t\tdata[i] = r*m0+g*m1+b*m2+a*m3+m4; // red\n\t\t\t\tdata[i+1] = r*m5+g*m6+b*m7+a*m8+m9; // green\n\t\t\t\tdata[i+2] = r*m10+g*m11+b*m12+a*m13+m14; // blue\n\t\t\t\tdata[i+3] = r*m15+g*m16+b*m17+a*m18+m19; // alpha\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\n\t\n\t\tcreatejs.ColorMatrixFilter = createjs.promote(ColorMatrixFilter, \"Filter\");\n\t}());\n\t\n\t//##############################################################################\n\t// Touch.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t\t/**\n\t * Global utility for working with multi-touch enabled devices in EaselJS. Currently supports W3C Touch API (iOS and\n\t * modern Android browser) and the Pointer API (IE), including ms-prefixed events in IE10, and unprefixed in IE11.\n\t *\n\t * Ensure that you {{#crossLink \"Touch/disable\"}}{{/crossLink}} touch when cleaning up your application. You do not have\n\t * to check if touch is supported to enable it, as it will fail gracefully if it is not supported.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var stage = new createjs.Stage(\"canvasId\");\n\t *      createjs.Touch.enable(stage);\n\t *\n\t * <strong>Note:</strong> It is important to disable Touch on a stage that you are no longer using:\n\t *\n\t *      createjs.Touch.disable(stage);\n\t *\n\t * @class Touch\n\t * @static\n\t **/\n\t\tfunction Touch() {\n\t\t\tthrow \"Touch cannot be instantiated\";\n\t\t}\n\t\n\t\n\t// public static methods:\n\t\t/**\n\t\t * Returns `true` if touch is supported in the current browser.\n\t\t * @method isSupported\n\t\t * @return {Boolean} Indicates whether touch is supported in the current browser.\n\t\t * @static\n\t\t **/\n\t\tTouch.isSupported = function() {\n\t\t\treturn\t!!(('ontouchstart' in window) // iOS & Android\n\t\t\t\t|| (window.navigator['msPointerEnabled'] && window.navigator['msMaxTouchPoints'] > 0) // IE10\n\t\t\t\t|| (window.navigator['pointerEnabled'] && window.navigator['maxTouchPoints'] > 0)); // IE11+\n\t\t};\n\t\n\t\t/**\n\t\t * Enables touch interaction for the specified EaselJS {{#crossLink \"Stage\"}}{{/crossLink}}. Currently supports iOS\n\t\t * (and compatible browsers, such as modern Android browsers), and IE10/11. Supports both single touch and\n\t\t * multi-touch modes. Extends the EaselJS {{#crossLink \"MouseEvent\"}}{{/crossLink}} model, but without support for\n\t\t * double click or over/out events. See the MouseEvent {{#crossLink \"MouseEvent/pointerId:property\"}}{{/crossLink}}\n\t\t * for more information.\n\t\t * @method enable\n\t\t * @param {Stage} stage The {{#crossLink \"Stage\"}}{{/crossLink}} to enable touch on.\n\t\t * @param {Boolean} [singleTouch=false] If `true`, only a single touch will be active at a time.\n\t\t * @param {Boolean} [allowDefault=false] If `true`, then default gesture actions (ex. scrolling, zooming) will be\n\t\t * allowed when the user is interacting with the target canvas.\n\t\t * @return {Boolean} Returns `true` if touch was successfully enabled on the target stage.\n\t\t * @static\n\t\t **/\n\t\tTouch.enable = function(stage, singleTouch, allowDefault) {\n\t\t\tif (!stage || !stage.canvas || !Touch.isSupported()) { return false; }\n\t\t\tif (stage.__touch) { return true; }\n\t\n\t\t\t// inject required properties on stage:\n\t\t\tstage.__touch = {pointers:{}, multitouch:!singleTouch, preventDefault:!allowDefault, count:0};\n\t\n\t\t\t// note that in the future we may need to disable the standard mouse event model before adding\n\t\t\t// these to prevent duplicate calls. It doesn't seem to be an issue with iOS devices though.\n\t\t\tif ('ontouchstart' in window) { Touch._IOS_enable(stage); }\n\t\t\telse if (window.navigator['msPointerEnabled'] || window.navigator[\"pointerEnabled\"]) { Touch._IE_enable(stage); }\n\t\t\treturn true;\n\t\t};\n\t\n\t\t/**\n\t\t * Removes all listeners that were set up when calling `Touch.enable()` on a stage.\n\t\t * @method disable\n\t\t * @param {Stage} stage The {{#crossLink \"Stage\"}}{{/crossLink}} to disable touch on.\n\t\t * @static\n\t\t **/\n\t\tTouch.disable = function(stage) {\n\t\t\tif (!stage) { return; }\n\t\t\tif ('ontouchstart' in window) { Touch._IOS_disable(stage); }\n\t\t\telse if (window.navigator['msPointerEnabled'] || window.navigator[\"pointerEnabled\"]) { Touch._IE_disable(stage); }\n\t\t\t\n\t\t\tdelete stage.__touch;\n\t\t};\n\t\n\t\n\t// Private static methods:\n\t\t/**\n\t\t * @method _IOS_enable\n\t\t * @protected\n\t\t * @param {Stage} stage\n\t\t * @static\n\t\t **/\n\t\tTouch._IOS_enable = function(stage) {\n\t\t\tvar canvas = stage.canvas;\n\t\t\tvar f = stage.__touch.f = function(e) { Touch._IOS_handleEvent(stage,e); };\n\t\t\tcanvas.addEventListener(\"touchstart\", f, false);\n\t\t\tcanvas.addEventListener(\"touchmove\", f, false);\n\t\t\tcanvas.addEventListener(\"touchend\", f, false);\n\t\t\tcanvas.addEventListener(\"touchcancel\", f, false);\n\t\t};\n\t\n\t\t/**\n\t\t * @method _IOS_disable\n\t\t * @protected\n\t\t * @param {Stage} stage\n\t\t * @static\n\t\t **/\n\t\tTouch._IOS_disable = function(stage) {\n\t\t\tvar canvas = stage.canvas;\n\t\t\tif (!canvas) { return; }\n\t\t\tvar f = stage.__touch.f;\n\t\t\tcanvas.removeEventListener(\"touchstart\", f, false);\n\t\t\tcanvas.removeEventListener(\"touchmove\", f, false);\n\t\t\tcanvas.removeEventListener(\"touchend\", f, false);\n\t\t\tcanvas.removeEventListener(\"touchcancel\", f, false);\n\t\t};\n\t\n\t\t/**\n\t\t * @method _IOS_handleEvent\n\t\t * @param {Stage} stage\n\t\t * @param {Object} e The event to handle\n\t\t * @protected\n\t\t * @static\n\t\t **/\n\t\tTouch._IOS_handleEvent = function(stage, e) {\n\t\t\tif (!stage) { return; }\n\t\t\tif (stage.__touch.preventDefault) { e.preventDefault&&e.preventDefault(); }\n\t\t\tvar touches = e.changedTouches;\n\t\t\tvar type = e.type;\n\t\t\tfor (var i= 0,l=touches.length; i<l; i++) {\n\t\t\t\tvar touch = touches[i];\n\t\t\t\tvar id = touch.identifier;\n\t\t\t\tif (touch.target != stage.canvas) { continue; }\n\t\n\t\t\t\tif (type == \"touchstart\") {\n\t\t\t\t\tthis._handleStart(stage, id, e, touch.pageX, touch.pageY);\n\t\t\t\t} else if (type == \"touchmove\") {\n\t\t\t\t\tthis._handleMove(stage, id, e, touch.pageX, touch.pageY);\n\t\t\t\t} else if (type == \"touchend\" || type == \"touchcancel\") {\n\t\t\t\t\tthis._handleEnd(stage, id, e);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * @method _IE_enable\n\t\t * @protected\n\t\t * @param {Stage} stage\n\t\t * @static\n\t\t **/\n\t\tTouch._IE_enable = function(stage) {\n\t\t\tvar canvas = stage.canvas;\n\t\t\tvar f = stage.__touch.f = function(e) { Touch._IE_handleEvent(stage,e); };\n\t\n\t\t\tif (window.navigator[\"pointerEnabled\"] === undefined) {\n\t\t\t\tcanvas.addEventListener(\"MSPointerDown\", f, false);\n\t\t\t\twindow.addEventListener(\"MSPointerMove\", f, false);\n\t\t\t\twindow.addEventListener(\"MSPointerUp\", f, false);\n\t\t\t\twindow.addEventListener(\"MSPointerCancel\", f, false);\n\t\t\t\tif (stage.__touch.preventDefault) { canvas.style.msTouchAction = \"none\"; }\n\t\t\t} else {\n\t\t\t\tcanvas.addEventListener(\"pointerdown\", f, false);\n\t\t\t\twindow.addEventListener(\"pointermove\", f, false);\n\t\t\t\twindow.addEventListener(\"pointerup\", f, false);\n\t\t\t\twindow.addEventListener(\"pointercancel\", f, false);\n\t\t\t\tif (stage.__touch.preventDefault) { canvas.style.touchAction = \"none\"; }\n\t\n\t\t\t}\n\t\t\tstage.__touch.activeIDs = {};\n\t\t};\n\t\n\t\t/**\n\t\t * @method _IE_disable\n\t\t * @protected\n\t\t * @param {Stage} stage\n\t\t * @static\n\t\t **/\n\t\tTouch._IE_disable = function(stage) {\n\t\t\tvar f = stage.__touch.f;\n\t\n\t\t\tif (window.navigator[\"pointerEnabled\"] === undefined) {\n\t\t\t\twindow.removeEventListener(\"MSPointerMove\", f, false);\n\t\t\t\twindow.removeEventListener(\"MSPointerUp\", f, false);\n\t\t\t\twindow.removeEventListener(\"MSPointerCancel\", f, false);\n\t\t\t\tif (stage.canvas) {\n\t\t\t\t\tstage.canvas.removeEventListener(\"MSPointerDown\", f, false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twindow.removeEventListener(\"pointermove\", f, false);\n\t\t\t\twindow.removeEventListener(\"pointerup\", f, false);\n\t\t\t\twindow.removeEventListener(\"pointercancel\", f, false);\n\t\t\t\tif (stage.canvas) {\n\t\t\t\t\tstage.canvas.removeEventListener(\"pointerdown\", f, false);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * @method _IE_handleEvent\n\t\t * @param {Stage} stage\n\t\t * @param {Object} e The event to handle.\n\t\t * @protected\n\t\t * @static\n\t\t **/\n\t\tTouch._IE_handleEvent = function(stage, e) {\n\t\t\tif (!stage) { return; }\n\t\t\tif (stage.__touch.preventDefault) { e.preventDefault && e.preventDefault(); }\n\t\t\tvar type = e.type;\n\t\t\tvar id = e.pointerId;\n\t\t\tvar ids = stage.__touch.activeIDs;\n\t\n\t\t\tif (type == \"MSPointerDown\" || type == \"pointerdown\") {\n\t\t\t\tif (e.srcElement != stage.canvas) { return; }\n\t\t\t\tids[id] = true;\n\t\t\t\tthis._handleStart(stage, id, e, e.pageX, e.pageY);\n\t\t\t} else if (ids[id]) { // it's an id we're watching\n\t\t\t\tif (type == \"MSPointerMove\" || type == \"pointermove\") {\n\t\t\t\t\tthis._handleMove(stage, id, e, e.pageX, e.pageY);\n\t\t\t\t} else if (type == \"MSPointerUp\" || type == \"MSPointerCancel\"\n\t\t\t\t\t\t|| type == \"pointerup\" || type == \"pointercancel\") {\n\t\t\t\t\tdelete(ids[id]);\n\t\t\t\t\tthis._handleEnd(stage, id, e);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * @method _handleStart\n\t\t * @param {Stage} stage\n\t\t * @param {String|Number} id\n\t\t * @param {Object} e\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @protected\n\t\t **/\n\t\tTouch._handleStart = function(stage, id, e, x, y) {\n\t\t\tvar props = stage.__touch;\n\t\t\tif (!props.multitouch && props.count) { return; }\n\t\t\tvar ids = props.pointers;\n\t\t\tif (ids[id]) { return; }\n\t\t\tids[id] = true;\n\t\t\tprops.count++;\n\t\t\tstage._handlePointerDown(id, e, x, y);\n\t\t};\n\t\n\t\t/**\n\t\t * @method _handleMove\n\t\t * @param {Stage} stage\n\t\t * @param {String|Number} id\n\t\t * @param {Object} e\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @protected\n\t\t **/\n\t\tTouch._handleMove = function(stage, id, e, x, y) {\n\t\t\tif (!stage.__touch.pointers[id]) { return; }\n\t\t\tstage._handlePointerMove(id, e, x, y);\n\t\t};\n\t\n\t\t/**\n\t\t * @method _handleEnd\n\t\t * @param {Stage} stage\n\t\t * @param {String|Number} id\n\t\t * @param {Object} e\n\t\t * @protected\n\t\t **/\n\t\tTouch._handleEnd = function(stage, id, e) {\n\t\t\t// TODO: cancel should be handled differently for proper UI (ex. an up would trigger a click, a cancel would more closely resemble an out).\n\t\t\tvar props = stage.__touch;\n\t\t\tvar ids = props.pointers;\n\t\t\tif (!ids[id]) { return; }\n\t\t\tprops.count--;\n\t\t\tstage._handlePointerUp(id, e, true);\n\t\t\tdelete(ids[id]);\n\t\t};\n\t\n\t\n\t\tcreatejs.Touch = Touch;\n\t}());\n\t\n\t//##############################################################################\n\t// version.js\n\t//##############################################################################\n\t\n\t(function (createjs) {\n\t\t\"use strict\";\n\t\n\t\t/**\n\t\t * Static class holding library specific information such as the version and buildDate of\n\t\t * the library.\n\t\t * @class EaselJS\n\t\t **/\n\t\tvar s = createjs.EaselJS = createjs.EaselJS || {};\n\t\n\t\t/**\n\t\t * The version string for this release.\n\t\t * @property version\n\t\t * @type String\n\t\t * @static\n\t\t **/\n\t\ts.version = /*=version*/\"0.8.2\"; // injected by build process\n\t\n\t\t/**\n\t\t * The build date for this release in UTC format.\n\t\t * @property buildDate\n\t\t * @type String\n\t\t * @static\n\t\t **/\n\t\ts.buildDate = /*=date*/\"Sat, 12 Nov 2016 06:45:03 GMT\"; // injected by build process\n\t\n\t})(scope.createjs);\n\t\n\t//##############################################################################\n\t// version.js\n\t//##############################################################################\n\t\n\t(function (createjs) {\n\t\t\"use strict\";\n\t\n\t\t/**\n\t\t * Static class holding library specific information such as the version and buildDate of the library.\n\t\t * @class PreloadJS\n\t\t **/\n\t\tvar s = createjs.PreloadJS = createjs.PreloadJS || {};\n\t\n\t\t/**\n\t\t * The version string for this release.\n\t\t * @property version\n\t\t * @type {String}\n\t\t * @static\n\t\t **/\n\t\ts.version = /*=version*/\"0.6.2\"; // injected by build process\n\t\n\t\t/**\n\t\t * The build date for this release in UTC format.\n\t\t * @property buildDate\n\t\t * @type {String}\n\t\t * @static\n\t\t **/\n\t\ts.buildDate = /*=date*/\"Sat, 12 Nov 2016 06:45:00 GMT\"; // injected by build process\n\t\n\t})(scope.createjs);\n\t\n\t//##############################################################################\n\t// proxy.js\n\t//##############################################################################\n\t\n\t/**\n\t * Various utilities that the CreateJS Suite uses. Utilities are created as separate files, and will be available on the\n\t * createjs namespace directly.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      myObject.addEventListener(\"change\", createjs.proxy(myMethod, scope));\n\t *\n\t * @class Utility Methods\n\t * @main Utility Methods\n\t */\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\t/**\n\t\t * A function proxy for methods. By default, JavaScript methods do not maintain scope, so passing a method as a\n\t\t * callback will result in the method getting called in the scope of the caller. Using a proxy ensures that the\n\t\t * method gets called in the correct scope.\n\t\t *\n\t\t * Additional arguments can be passed that will be applied to the function when it is called.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      myObject.addEventListener(\"event\", createjs.proxy(myHandler, this, arg1, arg2));\n\t\t *\n\t\t *      function myHandler(arg1, arg2) {\n\t\t *           // This gets called when myObject.myCallback is executed.\n\t\t *      }\n\t\t *\n\t\t * @method proxy\n\t\t * @param {Function} method The function to call\n\t\t * @param {Object} scope The scope to call the method name on\n\t\t * @param {mixed} [arg] * Arguments that are appended to the callback for additional params.\n\t\t * @public\n\t\t * @static\n\t\t */\n\t\tcreatejs.proxy = function (method, scope) {\n\t\t\tvar aArgs = Array.prototype.slice.call(arguments, 2);\n\t\t\treturn function () {\n\t\t\t\treturn method.apply(scope, Array.prototype.slice.call(arguments, 0).concat(aArgs));\n\t\t\t};\n\t\t}\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// ErrorEvent.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\t/**\n\t\t * A general error {{#crossLink \"Event\"}}{{/crossLink}}, that describes an error that occurred, as well as any details.\n\t\t * @class ErrorEvent\n\t\t * @param {String} [title] The error title\n\t\t * @param {String} [message] The error description\n\t\t * @param {Object} [data] Additional error data\n\t\t * @constructor\n\t\t */\n\t\tfunction ErrorEvent(title, message, data) {\n\t\t\tthis.Event_constructor(\"error\");\n\t\n\t\t\t/**\n\t\t\t * The short error title, which indicates the type of error that occurred.\n\t\t\t * @property title\n\t\t\t * @type String\n\t\t\t */\n\t\t\tthis.title = title;\n\t\n\t\t\t/**\n\t\t\t * The verbose error message, containing details about the error.\n\t\t\t * @property message\n\t\t\t * @type String\n\t\t\t */\n\t\t\tthis.message = message;\n\t\n\t\t\t/**\n\t\t\t * Additional data attached to an error.\n\t\t\t * @property data\n\t\t\t * @type {Object}\n\t\t\t */\n\t\t\tthis.data = data;\n\t\t}\n\t\n\t\tvar p = createjs.extend(ErrorEvent, createjs.Event);\n\t\n\t\tp.clone = function() {\n\t\t\treturn new createjs.ErrorEvent(this.title, this.message, this.data);\n\t\t};\n\t\n\t\tcreatejs.ErrorEvent = createjs.promote(ErrorEvent, \"Event\");\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// ProgressEvent.js\n\t//##############################################################################\n\t\n\t(function (scope) {\n\t\t\"use strict\";\n\t\n\t\t// constructor\n\t\t/**\n\t\t * A CreateJS {{#crossLink \"Event\"}}{{/crossLink}} that is dispatched when progress changes.\n\t\t * @class ProgressEvent\n\t\t * @param {Number} loaded The amount that has been loaded. This can be any number relative to the total.\n\t\t * @param {Number} [total=1] The total amount that will load. This will default to 1, so if the `loaded` value is\n\t\t * a percentage (between 0 and 1), it can be omitted.\n\t\t * @todo Consider having this event be a \"fileprogress\" event as well\n\t\t * @constructor\n\t\t */\n\t\tfunction ProgressEvent(loaded, total) {\n\t\t\tthis.Event_constructor(\"progress\");\n\t\n\t\t\t/**\n\t\t\t * The amount that has been loaded (out of a total amount)\n\t\t\t * @property loaded\n\t\t\t * @type {Number}\n\t\t\t */\n\t\t\tthis.loaded = loaded;\n\t\n\t\t\t/**\n\t\t\t * The total \"size\" of the load.\n\t\t\t * @property total\n\t\t\t * @type {Number}\n\t\t\t * @default 1\n\t\t\t */\n\t\t\tthis.total = (total == null) ? 1 : total;\n\t\n\t\t\t/**\n\t\t\t * The percentage (out of 1) that the load has been completed. This is calculated using `loaded/total`.\n\t\t\t * @property progress\n\t\t\t * @type {Number}\n\t\t\t * @default 0\n\t\t\t */\n\t\t\tthis.progress = (total == 0) ? 0 : this.loaded / this.total;\n\t\t};\n\t\n\t\tvar p = createjs.extend(ProgressEvent, createjs.Event);\n\t\n\t\t/**\n\t\t * Returns a clone of the ProgressEvent instance.\n\t\t * @method clone\n\t\t * @return {ProgressEvent} a clone of the Event instance.\n\t\t **/\n\t\tp.clone = function() {\n\t\t\treturn new createjs.ProgressEvent(this.loaded, this.total);\n\t\t};\n\t\n\t\tcreatejs.ProgressEvent = createjs.promote(ProgressEvent, \"Event\");\n\t\n\t}(window));\n\t\n\t//##############################################################################\n\t// json3.js\n\t//##############################################################################\n\t\n\t/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n\t;(function () {\n\t  // Detect the `define` function exposed by asynchronous module loaders. The\n\t  // strict `define` check is necessary for compatibility with `r.js`.\n\t  var isLoader = \"function\" === \"function\" && __webpack_require__(25);\n\t\n\t  // A set of types used to distinguish objects from primitives.\n\t  var objectTypes = {\n\t    \"function\": true,\n\t    \"object\": true\n\t  };\n\t\n\t  // Detect the `exports` object exposed by CommonJS implementations.\n\t  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\t\n\t  // Use the `global` object exposed by Node (including Browserify via\n\t  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n\t  // and the `window` object in browsers. Rhino exports a `global` function\n\t  // instead.\n\t  var root = objectTypes[typeof window] && window || this,\n\t      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\t\n\t  if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n\t    root = freeGlobal;\n\t  }\n\t\n\t  // Public: Initializes JSON 3 using the given `context` object, attaching the\n\t  // `stringify` and `parse` functions to the specified `exports` object.\n\t  function runInContext(context, exports) {\n\t    context || (context = root[\"Object\"]());\n\t    exports || (exports = root[\"Object\"]());\n\t\n\t    // Native constructor aliases.\n\t    var Number = context[\"Number\"] || root[\"Number\"],\n\t        String = context[\"String\"] || root[\"String\"],\n\t        Object = context[\"Object\"] || root[\"Object\"],\n\t        Date = context[\"Date\"] || root[\"Date\"],\n\t        SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n\t        TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n\t        Math = context[\"Math\"] || root[\"Math\"],\n\t        nativeJSON = context[\"JSON\"] || root[\"JSON\"];\n\t\n\t    // Delegate to the native `stringify` and `parse` implementations.\n\t    if (typeof nativeJSON == \"object\" && nativeJSON) {\n\t      exports.stringify = nativeJSON.stringify;\n\t      exports.parse = nativeJSON.parse;\n\t    }\n\t\n\t    // Convenience aliases.\n\t    var objectProto = Object.prototype,\n\t        getClass = objectProto.toString,\n\t        isProperty, forEach, undef;\n\t\n\t    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n\t    var isExtended = new Date(-3509827334573292);\n\t    try {\n\t      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n\t      // results for certain dates in Opera >= 10.53.\n\t      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n\t        // Safari < 2.0.2 stores the internal millisecond time value correctly,\n\t        // but clips the values returned by the date methods to the range of\n\t        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n\t        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n\t    } catch (exception) {}\n\t\n\t    // Internal: Determines whether the native `JSON.stringify` and `parse`\n\t    // implementations are spec-compliant. Based on work by Ken Snyder.\n\t    function has(name) {\n\t      if (has[name] !== undef) {\n\t        // Return cached feature test result.\n\t        return has[name];\n\t      }\n\t      var isSupported;\n\t      if (name == \"bug-string-char-index\") {\n\t        // IE <= 7 doesn't support accessing string characters using square\n\t        // bracket notation. IE 8 only supports this for primitives.\n\t        isSupported = \"a\"[0] != \"a\";\n\t      } else if (name == \"json\") {\n\t        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n\t        // supported.\n\t        isSupported = has(\"json-stringify\") && has(\"json-parse\");\n\t      } else {\n\t        var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n\t        // Test `JSON.stringify`.\n\t        if (name == \"json-stringify\") {\n\t          var stringify = exports.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n\t          if (stringifySupported) {\n\t            // A test function object with a custom `toJSON` method.\n\t            (value = function () {\n\t              return 1;\n\t            }).toJSON = value;\n\t            try {\n\t              stringifySupported =\n\t                // Firefox 3.1b1 and b2 serialize string, number, and boolean\n\t                // primitives as object literals.\n\t                stringify(0) === \"0\" &&\n\t                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n\t                // literals.\n\t                stringify(new Number()) === \"0\" &&\n\t                stringify(new String()) == '\"\"' &&\n\t                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n\t                // does not define a canonical JSON representation (this applies to\n\t                // objects with `toJSON` properties as well, *unless* they are nested\n\t                // within an object or array).\n\t                stringify(getClass) === undef &&\n\t                // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n\t                // FF 3.1b3 pass this test.\n\t                stringify(undef) === undef &&\n\t                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n\t                // respectively, if the value is omitted entirely.\n\t                stringify() === undef &&\n\t                // FF 3.1b1, 2 throw an error if the given value is not a number,\n\t                // string, array, object, Boolean, or `null` literal. This applies to\n\t                // objects with custom `toJSON` methods as well, unless they are nested\n\t                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n\t                // methods entirely.\n\t                stringify(value) === \"1\" &&\n\t                stringify([value]) == \"[1]\" &&\n\t                // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n\t                // `\"[null]\"`.\n\t                stringify([undef]) == \"[null]\" &&\n\t                // YUI 3.0.0b1 fails to serialize `null` literals.\n\t                stringify(null) == \"null\" &&\n\t                // FF 3.1b1, 2 halts serialization if an array contains a function:\n\t                // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n\t                // elides non-JSON values from objects and arrays, unless they\n\t                // define custom `toJSON` methods.\n\t                stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n\t                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n\t                // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n\t                stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n\t                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n\t                stringify(null, value) === \"1\" &&\n\t                stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n\t                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n\t                // serialize extended years.\n\t                stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n\t                // The milliseconds are optional in ES 5, but required in 5.1.\n\t                stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n\t                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n\t                // four-digit years instead of six-digit years. Credits: @Yaffle.\n\t                stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n\t                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n\t                // values less than 1000. Credits: @Yaffle.\n\t                stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n\t            } catch (exception) {\n\t              stringifySupported = false;\n\t            }\n\t          }\n\t          isSupported = stringifySupported;\n\t        }\n\t        // Test `JSON.parse`.\n\t        if (name == \"json-parse\") {\n\t          var parse = exports.parse;\n\t          if (typeof parse == \"function\") {\n\t            try {\n\t              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n\t              // Conforming implementations should also coerce the initial argument to\n\t              // a string prior to parsing.\n\t              if (parse(\"0\") === 0 && !parse(false)) {\n\t                // Simple parsing test.\n\t                value = parse(serialized);\n\t                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n\t                if (parseSupported) {\n\t                  try {\n\t                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n\t                    parseSupported = !parse('\"\\t\"');\n\t                  } catch (exception) {}\n\t                  if (parseSupported) {\n\t                    try {\n\t                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n\t                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n\t                      // certain octal literals.\n\t                      parseSupported = parse(\"01\") !== 1;\n\t                    } catch (exception) {}\n\t                  }\n\t                  if (parseSupported) {\n\t                    try {\n\t                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n\t                      // points. These environments, along with FF 3.1b1 and 2,\n\t                      // also allow trailing commas in JSON objects and arrays.\n\t                      parseSupported = parse(\"1.\") !== 1;\n\t                    } catch (exception) {}\n\t                  }\n\t                }\n\t              }\n\t            } catch (exception) {\n\t              parseSupported = false;\n\t            }\n\t          }\n\t          isSupported = parseSupported;\n\t        }\n\t      }\n\t      return has[name] = !!isSupported;\n\t    }\n\t\n\t    if (!has(\"json\")) {\n\t      // Common `[[Class]]` name aliases.\n\t      var functionClass = \"[object Function]\",\n\t          dateClass = \"[object Date]\",\n\t          numberClass = \"[object Number]\",\n\t          stringClass = \"[object String]\",\n\t          arrayClass = \"[object Array]\",\n\t          booleanClass = \"[object Boolean]\";\n\t\n\t      // Detect incomplete support for accessing string characters by index.\n\t      var charIndexBuggy = has(\"bug-string-char-index\");\n\t\n\t      // Define additional utility methods if the `Date` methods are buggy.\n\t      if (!isExtended) {\n\t        var floor = Math.floor;\n\t        // A mapping between the months of the year and the number of days between\n\t        // January 1st and the first of the respective month.\n\t        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n\t        // Internal: Calculates the number of days between the Unix epoch and the\n\t        // first day of the given month.\n\t        var getDay = function (year, month) {\n\t          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n\t        };\n\t      }\n\t\n\t      // Internal: Determines if a property is a direct property of the given\n\t      // object. Delegates to the native `Object#hasOwnProperty` method.\n\t      if (!(isProperty = objectProto.hasOwnProperty)) {\n\t        isProperty = function (property) {\n\t          var members = {}, constructor;\n\t          if ((members.__proto__ = null, members.__proto__ = {\n\t            // The *proto* property cannot be set multiple times in recent\n\t            // versions of Firefox and SeaMonkey.\n\t            \"toString\": 1\n\t          }, members).toString != getClass) {\n\t            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n\t            // supports the mutable *proto* property.\n\t            isProperty = function (property) {\n\t              // Capture and break the object's prototype chain (see section 8.6.2\n\t              // of the ES 5.1 spec). The parenthesized expression prevents an\n\t              // unsafe transformation by the Closure Compiler.\n\t              var original = this.__proto__, result = property in (this.__proto__ = null, this);\n\t              // Restore the original prototype chain.\n\t              this.__proto__ = original;\n\t              return result;\n\t            };\n\t          } else {\n\t            // Capture a reference to the top-level `Object` constructor.\n\t            constructor = members.constructor;\n\t            // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n\t            // other environments.\n\t            isProperty = function (property) {\n\t              var parent = (this.constructor || constructor).prototype;\n\t              return property in this && !(property in parent && this[property] === parent[property]);\n\t            };\n\t          }\n\t          members = null;\n\t          return isProperty.call(this, property);\n\t        };\n\t      }\n\t\n\t      // Internal: Normalizes the `for...in` iteration algorithm across\n\t      // environments. Each enumerated key is yielded to a `callback` function.\n\t      forEach = function (object, callback) {\n\t        var size = 0, Properties, members, property;\n\t\n\t        // Tests for bugs in the current environment's `for...in` algorithm. The\n\t        // `valueOf` property inherits the non-enumerable flag from\n\t        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n\t        (Properties = function () {\n\t          this.valueOf = 0;\n\t        }).prototype.valueOf = 0;\n\t\n\t        // Iterate over a new instance of the `Properties` class.\n\t        members = new Properties();\n\t        for (property in members) {\n\t          // Ignore all properties inherited from `Object.prototype`.\n\t          if (isProperty.call(members, property)) {\n\t            size++;\n\t          }\n\t        }\n\t        Properties = members = null;\n\t\n\t        // Normalize the iteration algorithm.\n\t        if (!size) {\n\t          // A list of non-enumerable properties inherited from `Object.prototype`.\n\t          members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n\t          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n\t          // properties.\n\t          forEach = function (object, callback) {\n\t            var isFunction = getClass.call(object) == functionClass, property, length;\n\t            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n\t            for (property in object) {\n\t              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n\t              // certain conditions; IE does not.\n\t              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n\t                callback(property);\n\t              }\n\t            }\n\t            // Manually invoke the callback for each non-enumerable property.\n\t            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n\t          };\n\t        } else if (size == 2) {\n\t          // Safari <= 2.0.4 enumerates shadowed properties twice.\n\t          forEach = function (object, callback) {\n\t            // Create a set of iterated properties.\n\t            var members = {}, isFunction = getClass.call(object) == functionClass, property;\n\t            for (property in object) {\n\t              // Store each property name to prevent double enumeration. The\n\t              // `prototype` property of functions is not enumerated due to cross-\n\t              // environment inconsistencies.\n\t              if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n\t                callback(property);\n\t              }\n\t            }\n\t          };\n\t        } else {\n\t          // No bugs detected; use the standard `for...in` algorithm.\n\t          forEach = function (object, callback) {\n\t            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n\t            for (property in object) {\n\t              if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n\t                callback(property);\n\t              }\n\t            }\n\t            // Manually invoke the callback for the `constructor` property due to\n\t            // cross-environment inconsistencies.\n\t            if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n\t              callback(property);\n\t            }\n\t          };\n\t        }\n\t        return forEach(object, callback);\n\t      };\n\t\n\t      // Public: Serializes a JavaScript `value` as a JSON string. The optional\n\t      // `filter` argument may specify either a function that alters how object and\n\t      // array members are serialized, or an array of strings and numbers that\n\t      // indicates which properties should be serialized. The optional `width`\n\t      // argument may be either a string or number that specifies the indentation\n\t      // level of the output.\n\t      if (!has(\"json-stringify\")) {\n\t        // Internal: A map of control characters and their escaped equivalents.\n\t        var Escapes = {\n\t          92: \"\\\\\\\\\",\n\t          34: '\\\\\"',\n\t          8: \"\\\\b\",\n\t          12: \"\\\\f\",\n\t          10: \"\\\\n\",\n\t          13: \"\\\\r\",\n\t          9: \"\\\\t\"\n\t        };\n\t\n\t        // Internal: Converts `value` into a zero-padded string such that its\n\t        // length is at least equal to `width`. The `width` must be <= 6.\n\t        var leadingZeroes = \"000000\";\n\t        var toPaddedString = function (width, value) {\n\t          // The `|| 0` expression is necessary to work around a bug in\n\t          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n\t          return (leadingZeroes + (value || 0)).slice(-width);\n\t        };\n\t\n\t        // Internal: Double-quotes a string `value`, replacing all ASCII control\n\t        // characters (characters with code unit values between 0 and 31) with\n\t        // their escaped equivalents. This is an implementation of the\n\t        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n\t        var unicodePrefix = \"\\\\u00\";\n\t        var quote = function (value) {\n\t          var result = '\"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;\n\t          var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n\t          for (; index < length; index++) {\n\t            var charCode = value.charCodeAt(index);\n\t            // If the character is a control character, append its Unicode or\n\t            // shorthand escape sequence; otherwise, append the character as-is.\n\t            switch (charCode) {\n\t              case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n\t                result += Escapes[charCode];\n\t                break;\n\t              default:\n\t                if (charCode < 32) {\n\t                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n\t                  break;\n\t                }\n\t                result += useCharIndex ? symbols[index] : value.charAt(index);\n\t            }\n\t          }\n\t          return result + '\"';\n\t        };\n\t\n\t        // Internal: Recursively serializes an object. Implements the\n\t        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n\t        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n\t          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n\t          try {\n\t            // Necessary for host object support.\n\t            value = object[property];\n\t          } catch (exception) {}\n\t          if (typeof value == \"object\" && value) {\n\t            className = getClass.call(value);\n\t            if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n\t              if (value > -1 / 0 && value < 1 / 0) {\n\t                // Dates are serialized according to the `Date#toJSON` method\n\t                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n\t                // for the ISO 8601 date time string format.\n\t                if (getDay) {\n\t                  // Manually compute the year, month, date, hours, minutes,\n\t                  // seconds, and milliseconds if the `getUTC*` methods are\n\t                  // buggy. Adapted from @Yaffle's `date-shim` project.\n\t                  date = floor(value / 864e5);\n\t                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n\t                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n\t                  date = 1 + date - getDay(year, month);\n\t                  // The `time` value specifies the time within the day (see ES\n\t                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n\t                  // to compute `A modulo B`, as the `%` operator does not\n\t                  // correspond to the `modulo` operation for negative numbers.\n\t                  time = (value % 864e5 + 864e5) % 864e5;\n\t                  // The hours, minutes, seconds, and milliseconds are obtained by\n\t                  // decomposing the time within the day. See section 15.9.1.10.\n\t                  hours = floor(time / 36e5) % 24;\n\t                  minutes = floor(time / 6e4) % 60;\n\t                  seconds = floor(time / 1e3) % 60;\n\t                  milliseconds = time % 1e3;\n\t                } else {\n\t                  year = value.getUTCFullYear();\n\t                  month = value.getUTCMonth();\n\t                  date = value.getUTCDate();\n\t                  hours = value.getUTCHours();\n\t                  minutes = value.getUTCMinutes();\n\t                  seconds = value.getUTCSeconds();\n\t                  milliseconds = value.getUTCMilliseconds();\n\t                }\n\t                // Serialize extended years correctly.\n\t                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n\t                  \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n\t                  // Months, dates, hours, minutes, and seconds should have two\n\t                  // digits; milliseconds should have three.\n\t                  \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n\t                  // Milliseconds are optional in ES 5.0, but required in 5.1.\n\t                  \".\" + toPaddedString(3, milliseconds) + \"Z\";\n\t              } else {\n\t                value = null;\n\t              }\n\t            } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n\t              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n\t              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n\t              // ignores all `toJSON` methods on these objects unless they are\n\t              // defined directly on an instance.\n\t              value = value.toJSON(property);\n\t            }\n\t          }\n\t          if (callback) {\n\t            // If a replacement function was provided, call it to obtain the value\n\t            // for serialization.\n\t            value = callback.call(object, property, value);\n\t          }\n\t          if (value === null) {\n\t            return \"null\";\n\t          }\n\t          className = getClass.call(value);\n\t          if (className == booleanClass) {\n\t            // Booleans are represented literally.\n\t            return \"\" + value;\n\t          } else if (className == numberClass) {\n\t            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n\t            // `\"null\"`.\n\t            return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n\t          } else if (className == stringClass) {\n\t            // Strings are double-quoted and escaped.\n\t            return quote(\"\" + value);\n\t          }\n\t          // Recursively serialize objects and arrays.\n\t          if (typeof value == \"object\") {\n\t            // Check for cyclic structures. This is a linear search; performance\n\t            // is inversely proportional to the number of unique nested objects.\n\t            for (length = stack.length; length--;) {\n\t              if (stack[length] === value) {\n\t                // Cyclic structures cannot be serialized by `JSON.stringify`.\n\t                throw TypeError();\n\t              }\n\t            }\n\t            // Add the object to the stack of traversed objects.\n\t            stack.push(value);\n\t            results = [];\n\t            // Save the current indentation level and indent one additional level.\n\t            prefix = indentation;\n\t            indentation += whitespace;\n\t            if (className == arrayClass) {\n\t              // Recursively serialize array elements.\n\t              for (index = 0, length = value.length; index < length; index++) {\n\t                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n\t                results.push(element === undef ? \"null\" : element);\n\t              }\n\t              result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n\t            } else {\n\t              // Recursively serialize object members. Members are selected from\n\t              // either a user-specified list of property names, or the object\n\t              // itself.\n\t              forEach(properties || value, function (property) {\n\t                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n\t                if (element !== undef) {\n\t                  // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n\t                  // is not the empty string, let `member` {quote(property) + \":\"}\n\t                  // be the concatenation of `member` and the `space` character.\"\n\t                  // The \"`space` character\" refers to the literal space\n\t                  // character, not the `space` {width} argument provided to\n\t                  // `JSON.stringify`.\n\t                  results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n\t                }\n\t              });\n\t              result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n\t            }\n\t            // Remove the object from the traversed object stack.\n\t            stack.pop();\n\t            return result;\n\t          }\n\t        };\n\t\n\t        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n\t        exports.stringify = function (source, filter, width) {\n\t          var whitespace, callback, properties, className;\n\t          if (objectTypes[typeof filter] && filter) {\n\t            if ((className = getClass.call(filter)) == functionClass) {\n\t              callback = filter;\n\t            } else if (className == arrayClass) {\n\t              // Convert the property names array into a makeshift set.\n\t              properties = {};\n\t              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n\t            }\n\t          }\n\t          if (width) {\n\t            if ((className = getClass.call(width)) == numberClass) {\n\t              // Convert the `width` to an integer and create a string containing\n\t              // `width` number of space characters.\n\t              if ((width -= width % 1) > 0) {\n\t                for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n\t              }\n\t            } else if (className == stringClass) {\n\t              whitespace = width.length <= 10 ? width : width.slice(0, 10);\n\t            }\n\t          }\n\t          // Opera <= 7.54u2 discards the values associated with empty string keys\n\t          // (`\"\"`) only if they are used directly within an object member list\n\t          // (e.g., `!(\"\" in { \"\": 1})`).\n\t          return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n\t        };\n\t      }\n\t\n\t      // Public: Parses a JSON source string.\n\t      if (!has(\"json-parse\")) {\n\t        var fromCharCode = String.fromCharCode;\n\t\n\t        // Internal: A map of escaped control characters and their unescaped\n\t        // equivalents.\n\t        var Unescapes = {\n\t          92: \"\\\\\",\n\t          34: '\"',\n\t          47: \"/\",\n\t          98: \"\\b\",\n\t          116: \"\\t\",\n\t          110: \"\\n\",\n\t          102: \"\\f\",\n\t          114: \"\\r\"\n\t        };\n\t\n\t        // Internal: Stores the parser state.\n\t        var Index, Source;\n\t\n\t        // Internal: Resets the parser state and throws a `SyntaxError`.\n\t        var abort = function () {\n\t          Index = Source = null;\n\t          throw SyntaxError();\n\t        };\n\t\n\t        // Internal: Returns the next token, or `\"$\"` if the parser has reached\n\t        // the end of the source string. A token may be a string, number, `null`\n\t        // literal, or Boolean literal.\n\t        var lex = function () {\n\t          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n\t          while (Index < length) {\n\t            charCode = source.charCodeAt(Index);\n\t            switch (charCode) {\n\t              case 9: case 10: case 13: case 32:\n\t                // Skip whitespace tokens, including tabs, carriage returns, line\n\t                // feeds, and space characters.\n\t                Index++;\n\t                break;\n\t              case 123: case 125: case 91: case 93: case 58: case 44:\n\t                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n\t                // the current position.\n\t                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n\t                Index++;\n\t                return value;\n\t              case 34:\n\t                // `\"` delimits a JSON string; advance to the next character and\n\t                // begin parsing the string. String tokens are prefixed with the\n\t                // sentinel `@` character to distinguish them from punctuators and\n\t                // end-of-string tokens.\n\t                for (value = \"@\", Index++; Index < length;) {\n\t                  charCode = source.charCodeAt(Index);\n\t                  if (charCode < 32) {\n\t                    // Unescaped ASCII control characters (those with a code unit\n\t                    // less than the space character) are not permitted.\n\t                    abort();\n\t                  } else if (charCode == 92) {\n\t                    // A reverse solidus (`\\`) marks the beginning of an escaped\n\t                    // control character (including `\"`, `\\`, and `/`) or Unicode\n\t                    // escape sequence.\n\t                    charCode = source.charCodeAt(++Index);\n\t                    switch (charCode) {\n\t                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n\t                        // Revive escaped control characters.\n\t                        value += Unescapes[charCode];\n\t                        Index++;\n\t                        break;\n\t                      case 117:\n\t                        // `\\u` marks the beginning of a Unicode escape sequence.\n\t                        // Advance to the first character and validate the\n\t                        // four-digit code point.\n\t                        begin = ++Index;\n\t                        for (position = Index + 4; Index < position; Index++) {\n\t                          charCode = source.charCodeAt(Index);\n\t                          // A valid sequence comprises four hexdigits (case-\n\t                          // insensitive) that form a single hexadecimal value.\n\t                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n\t                            // Invalid Unicode escape sequence.\n\t                            abort();\n\t                          }\n\t                        }\n\t                        // Revive the escaped character.\n\t                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\n\t                        break;\n\t                      default:\n\t                        // Invalid escape sequence.\n\t                        abort();\n\t                    }\n\t                  } else {\n\t                    if (charCode == 34) {\n\t                      // An unescaped double-quote character marks the end of the\n\t                      // string.\n\t                      break;\n\t                    }\n\t                    charCode = source.charCodeAt(Index);\n\t                    begin = Index;\n\t                    // Optimize for the common case where a string is valid.\n\t                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n\t                      charCode = source.charCodeAt(++Index);\n\t                    }\n\t                    // Append the string as-is.\n\t                    value += source.slice(begin, Index);\n\t                  }\n\t                }\n\t                if (source.charCodeAt(Index) == 34) {\n\t                  // Advance to the next character and return the revived string.\n\t                  Index++;\n\t                  return value;\n\t                }\n\t                // Unterminated string.\n\t                abort();\n\t              default:\n\t                // Parse numbers and literals.\n\t                begin = Index;\n\t                // Advance past the negative sign, if one is specified.\n\t                if (charCode == 45) {\n\t                  isSigned = true;\n\t                  charCode = source.charCodeAt(++Index);\n\t                }\n\t                // Parse an integer or floating-point value.\n\t                if (charCode >= 48 && charCode <= 57) {\n\t                  // Leading zeroes are interpreted as octal literals.\n\t                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n\t                    // Illegal octal literal.\n\t                    abort();\n\t                  }\n\t                  isSigned = false;\n\t                  // Parse the integer component.\n\t                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n\t                  // Floats cannot contain a leading decimal point; however, this\n\t                  // case is already accounted for by the parser.\n\t                  if (source.charCodeAt(Index) == 46) {\n\t                    position = ++Index;\n\t                    // Parse the decimal component.\n\t                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n\t                    if (position == Index) {\n\t                      // Illegal trailing decimal.\n\t                      abort();\n\t                    }\n\t                    Index = position;\n\t                  }\n\t                  // Parse exponents. The `e` denoting the exponent is\n\t                  // case-insensitive.\n\t                  charCode = source.charCodeAt(Index);\n\t                  if (charCode == 101 || charCode == 69) {\n\t                    charCode = source.charCodeAt(++Index);\n\t                    // Skip past the sign following the exponent, if one is\n\t                    // specified.\n\t                    if (charCode == 43 || charCode == 45) {\n\t                      Index++;\n\t                    }\n\t                    // Parse the exponential component.\n\t                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n\t                    if (position == Index) {\n\t                      // Illegal empty exponent.\n\t                      abort();\n\t                    }\n\t                    Index = position;\n\t                  }\n\t                  // Coerce the parsed value to a JavaScript number.\n\t                  return +source.slice(begin, Index);\n\t                }\n\t                // A negative sign may only precede numbers.\n\t                if (isSigned) {\n\t                  abort();\n\t                }\n\t                // `true`, `false`, and `null` literals.\n\t                if (source.slice(Index, Index + 4) == \"true\") {\n\t                  Index += 4;\n\t                  return true;\n\t                } else if (source.slice(Index, Index + 5) == \"false\") {\n\t                  Index += 5;\n\t                  return false;\n\t                } else if (source.slice(Index, Index + 4) == \"null\") {\n\t                  Index += 4;\n\t                  return null;\n\t                }\n\t                // Unrecognized token.\n\t                abort();\n\t            }\n\t          }\n\t          // Return the sentinel `$` character if the parser has reached the end\n\t          // of the source string.\n\t          return \"$\";\n\t        };\n\t\n\t        // Internal: Parses a JSON `value` token.\n\t        var get = function (value) {\n\t          var results, hasMembers;\n\t          if (value == \"$\") {\n\t            // Unexpected end of input.\n\t            abort();\n\t          }\n\t          if (typeof value == \"string\") {\n\t            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n\t              // Remove the sentinel `@` character.\n\t              return value.slice(1);\n\t            }\n\t            // Parse object and array literals.\n\t            if (value == \"[\") {\n\t              // Parses a JSON array, returning a new JavaScript array.\n\t              results = [];\n\t              for (;; hasMembers || (hasMembers = true)) {\n\t                value = lex();\n\t                // A closing square bracket marks the end of the array literal.\n\t                if (value == \"]\") {\n\t                  break;\n\t                }\n\t                // If the array literal contains elements, the current token\n\t                // should be a comma separating the previous element from the\n\t                // next.\n\t                if (hasMembers) {\n\t                  if (value == \",\") {\n\t                    value = lex();\n\t                    if (value == \"]\") {\n\t                      // Unexpected trailing `,` in array literal.\n\t                      abort();\n\t                    }\n\t                  } else {\n\t                    // A `,` must separate each array element.\n\t                    abort();\n\t                  }\n\t                }\n\t                // Elisions and leading commas are not permitted.\n\t                if (value == \",\") {\n\t                  abort();\n\t                }\n\t                results.push(get(value));\n\t              }\n\t              return results;\n\t            } else if (value == \"{\") {\n\t              // Parses a JSON object, returning a new JavaScript object.\n\t              results = {};\n\t              for (;; hasMembers || (hasMembers = true)) {\n\t                value = lex();\n\t                // A closing curly brace marks the end of the object literal.\n\t                if (value == \"}\") {\n\t                  break;\n\t                }\n\t                // If the object literal contains members, the current token\n\t                // should be a comma separator.\n\t                if (hasMembers) {\n\t                  if (value == \",\") {\n\t                    value = lex();\n\t                    if (value == \"}\") {\n\t                      // Unexpected trailing `,` in object literal.\n\t                      abort();\n\t                    }\n\t                  } else {\n\t                    // A `,` must separate each object member.\n\t                    abort();\n\t                  }\n\t                }\n\t                // Leading commas are not permitted, object property names must be\n\t                // double-quoted strings, and a `:` must separate each property\n\t                // name and value.\n\t                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n\t                  abort();\n\t                }\n\t                results[value.slice(1)] = get(lex());\n\t              }\n\t              return results;\n\t            }\n\t            // Unexpected token encountered.\n\t            abort();\n\t          }\n\t          return value;\n\t        };\n\t\n\t        // Internal: Updates a traversed object member.\n\t        var update = function (source, property, callback) {\n\t          var element = walk(source, property, callback);\n\t          if (element === undef) {\n\t            delete source[property];\n\t          } else {\n\t            source[property] = element;\n\t          }\n\t        };\n\t\n\t        // Internal: Recursively traverses a parsed JSON object, invoking the\n\t        // `callback` function for each value. This is an implementation of the\n\t        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n\t        var walk = function (source, property, callback) {\n\t          var value = source[property], length;\n\t          if (typeof value == \"object\" && value) {\n\t            // `forEach` can't be used to traverse an array in Opera <= 8.54\n\t            // because its `Object#hasOwnProperty` implementation returns `false`\n\t            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n\t            if (getClass.call(value) == arrayClass) {\n\t              for (length = value.length; length--;) {\n\t                update(value, length, callback);\n\t              }\n\t            } else {\n\t              forEach(value, function (property) {\n\t                update(value, property, callback);\n\t              });\n\t            }\n\t          }\n\t          return callback.call(source, property, value);\n\t        };\n\t\n\t        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n\t        exports.parse = function (source, callback) {\n\t          var result, value;\n\t          Index = 0;\n\t          Source = \"\" + source;\n\t          result = get(lex());\n\t          // If a JSON string contains multiple tokens, it is invalid.\n\t          if (lex() != \"$\") {\n\t            abort();\n\t          }\n\t          // Reset the parser state.\n\t          Index = Source = null;\n\t          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n\t        };\n\t      }\n\t    }\n\t\n\t    exports[\"runInContext\"] = runInContext;\n\t    return exports;\n\t  }\n\t\n\t  if (freeExports && !isLoader) {\n\t    // Export for CommonJS environments.\n\t    runInContext(root, freeExports);\n\t  } else {\n\t    // Export for web browsers and JavaScript engines.\n\t    var nativeJSON = root.JSON,\n\t        previousJSON = root[\"JSON3\"],\n\t        isRestored = false;\n\t\n\t    var JSON3 = runInContext(root, (root[\"JSON3\"] = {\n\t      // Public: Restores the original value of the global `JSON` object and\n\t      // returns a reference to the `JSON3` object.\n\t      \"noConflict\": function () {\n\t        if (!isRestored) {\n\t          isRestored = true;\n\t          root.JSON = nativeJSON;\n\t          root[\"JSON3\"] = previousJSON;\n\t          nativeJSON = previousJSON = null;\n\t        }\n\t        return JSON3;\n\t      }\n\t    }));\n\t\n\t    root.JSON = {\n\t      \"parse\": JSON3.parse,\n\t      \"stringify\": JSON3.stringify\n\t    };\n\t  }\n\t\n\t  // Export for asynchronous module loaders.\n\t  if (isLoader) {\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t      return JSON3;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t}).call(this);\n\t\n\t//##############################################################################\n\t// Elements.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\n\t\t/**\n\t\t * Convenience methods for creating various elements used by PrelaodJS.\n\t\t *\n\t\t * @class DomUtils\n\t\t */\n\t\tvar s = {};\n\t\n\t\ts.a = function() {\n\t\t\treturn s.el(\"a\");\n\t\t}\n\t\n\t\ts.svg = function() {\n\t\t\treturn s.el(\"svg\");\n\t\t}\n\t\n\t\ts.object = function() {\n\t\t\treturn s.el(\"object\");\n\t\t}\n\t\n\t\ts.image = function() {\n\t\t\treturn s.el(\"image\");\n\t\t}\n\t\n\t\ts.img = function() {\n\t\t\treturn s.el(\"img\");\n\t\t}\n\t\n\t\ts.style = function() {\n\t\t\treturn s.el(\"style\");\n\t\t}\n\t\n\t\ts.link = function() {\n\t\t\treturn s.el(\"link\");\n\t\t}\n\t\n\t\ts.script = function() {\n\t\t\treturn s.el(\"script\");\n\t\t}\n\t\n\t\ts.audio = function() {\n\t\t\treturn s.el(\"audio\");\n\t\t}\n\t\n\t\ts.video = function() {\n\t\t\treturn s.el(\"video\");\n\t\t}\n\t\n\t\ts.text = function(value) {\n\t\t\treturn document.createTextNode(value);\n\t\t}\n\t\n\t\ts.el = function(name) {\n\t\t\treturn document.createElement(name);\n\t\t}\n\t\n\t\tcreatejs.Elements = s;\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// URLUtils.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\n\t\t/**\n\t\t * Utilities that assist with parsing load items, and determining file types, etc.\n\t\t * @class URLUtils\n\t\t */\n\t\tvar s = {};\n\t\n\t\t/**\n\t\t * The Regular Expression used to test file URLS for an absolute path.\n\t\t * @property ABSOLUTE_PATH\n\t\t * @type {RegExp}\n\t\t * @static\n\t\t */\n\t\ts.ABSOLUTE_PATT = /^(?:\\w+:)?\\/{2}/i;\n\t\n\t\t/**\n\t\t * The Regular Expression used to test file URLS for a relative path.\n\t\t * @property RELATIVE_PATH\n\t\t * @type {RegExp}\n\t\t * @static\n\t\t */\n\t\ts.RELATIVE_PATT = (/^[./]*?\\//i);\n\t\n\t\t/**\n\t\t * The Regular Expression used to test file URLS for an extension. Note that URIs must already have the query string\n\t\t * removed.\n\t\t * @property EXTENSION_PATT\n\t\t * @type {RegExp}\n\t\t * @static\n\t\t */\n\t\ts.EXTENSION_PATT = /\\/?[^/]+\\.(\\w{1,5})$/i;\n\t\n\t\t/**\n\t\t * Parse a file path to determine the information we need to work with it. Currently, PreloadJS needs to know:\n\t\t * <ul>\n\t\t *     <li>If the path is absolute. Absolute paths start with a protocol (such as `http://`, `file://`, or\n\t\t *     `//networkPath`)</li>\n\t\t *     <li>If the path is relative. Relative paths start with `../` or `/path` (or similar)</li>\n\t\t *     <li>The file extension. This is determined by the filename with an extension. Query strings are dropped, and\n\t\t *     the file path is expected to follow the format `name.ext`.</li>\n\t\t * </ul>\n\t\t *\n\t\t * @method parseURI\n\t\t * @param {String} path\n\t\t * @returns {Object} An Object with an `absolute` and `relative` Boolean values,\n\t\t * \tthe pieces of the path (protocol, hostname, port, pathname, search, hash, host)\n\t\t * \tas well as an optional 'extension` property, which is the lowercase extension.\n\t\t *\n\t\t * @static\n\t\t */\n\t\ts.parseURI = function (path) {\n\t\t\tvar info = {\n\t\t\t\tabsolute: false,\n\t\t\t\trelative: false,\n\t\t\t\tprotocol: null,\n\t\t\t\thostname: null,\n\t\t\t\tport: null,\n\t\t\t\tpathname: null,\n\t\t\t\tsearch: null,\n\t\t\t\thash: null,\n\t\t\t\thost: null\n\t\t\t};\n\t\n\t\t\tif (path == null) { return info; }\n\t\n\t\t\t// Inject the path parts.\n\t\t\tvar parser = createjs.Elements.a();\n\t\t\tparser.href = path;\n\t\n\t\t\tfor (var n in info) {\n\t\t\t\tif (n in parser) {\n\t\t\t\t\tinfo[n] = parser[n];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Drop the query string\n\t\t\tvar queryIndex = path.indexOf(\"?\");\n\t\t\tif (queryIndex > -1) {\n\t\t\t\tpath = path.substr(0, queryIndex);\n\t\t\t}\n\t\n\t\t\t// Absolute\n\t\t\tvar match;\n\t\t\tif (s.ABSOLUTE_PATT.test(path)) {\n\t\t\t\tinfo.absolute = true;\n\t\n\t\t\t\t// Relative\n\t\t\t} else if (s.RELATIVE_PATT.test(path)) {\n\t\t\t\tinfo.relative = true;\n\t\t\t}\n\t\n\t\t\t// Extension\n\t\t\tif (match = path.match(s.EXTENSION_PATT)) {\n\t\t\t\tinfo.extension = match[1].toLowerCase();\n\t\t\t}\n\t\n\t\t\treturn info;\n\t\t};\n\t\n\t\t/**\n\t\t * Formats an object into a query string for either a POST or GET request.\n\t\t * @method formatQueryString\n\t\t * @param {Object} data The data to convert to a query string.\n\t\t * @param {Array} [query] Existing name/value pairs to append on to this query.\n\t\t * @static\n\t\t */\n\t\ts.formatQueryString = function (data, query) {\n\t\t\tif (data == null) {\n\t\t\t\tthrow new Error(\"You must specify data.\");\n\t\t\t}\n\t\t\tvar params = [];\n\t\t\tfor (var n in data) {\n\t\t\t\tparams.push(n + \"=\" + escape(data[n]));\n\t\t\t}\n\t\t\tif (query) {\n\t\t\t\tparams = params.concat(query);\n\t\t\t}\n\t\t\treturn params.join(\"&\");\n\t\t};\n\t\n\t\t/**\n\t\t * A utility method that builds a file path using a source and a data object, and formats it into a new path.\n\t\t * @method buildURI\n\t\t * @param {String} src The source path to add values to.\n\t\t * @param {Object} [data] Object used to append values to this request as a query string. Existing parameters on the\n\t\t * path will be preserved.\n\t\t * @returns {string} A formatted string that contains the path and the supplied parameters.\n\t\t * @static\n\t\t */\n\t\ts.buildURI = function (src, data) {\n\t\t\tif (data == null) {\n\t\t\t\treturn src;\n\t\t\t}\n\t\n\t\t\tvar query = [];\n\t\t\tvar idx = src.indexOf(\"?\");\n\t\n\t\t\tif (idx != -1) {\n\t\t\t\tvar q = src.slice(idx + 1);\n\t\t\t\tquery = query.concat(q.split(\"&\"));\n\t\t\t}\n\t\n\t\t\tif (idx != -1) {\n\t\t\t\treturn src.slice(0, idx) + \"?\" + this.formatQueryString(data, query);\n\t\t\t} else {\n\t\t\t\treturn src + \"?\" + this.formatQueryString(data, query);\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * @method isCrossDomain\n\t\t * @param {LoadItem|Object} item A load item with a `src` property.\n\t\t * @return {Boolean} If the load item is loading from a different domain than the current location.\n\t\t * @static\n\t\t */\n\t\ts.isCrossDomain = function (item) {\n\t\t\tvar target = createjs.Elements.a();\n\t\t\ttarget.href = item.src;\n\t\n\t\t\tvar host = createjs.Elements.a();\n\t\t\thost.href = location.href;\n\t\n\t\t\tvar crossdomain = (target.hostname != \"\") &&\n\t\t\t\t(target.port != host.port ||\n\t\t\t\ttarget.protocol != host.protocol ||\n\t\t\t\ttarget.hostname != host.hostname);\n\t\t\treturn crossdomain;\n\t\t};\n\t\n\t\t/**\n\t\t * @method isLocal\n\t\t * @param {LoadItem|Object} item A load item with a `src` property\n\t\t * @return {Boolean} If the load item is loading from the \"file:\" protocol. Assume that the host must be local as\n\t\t * well.\n\t\t * @static\n\t\t */\n\t\ts.isLocal = function (item) {\n\t\t\tvar target = createjs.Elements.a();\n\t\t\ttarget.href = item.src;\n\t\t\treturn target.hostname == \"\" && target.protocol == \"file:\";\n\t\t};\n\t\n\t\tcreatejs.URLUtils = s;\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// DomUtils.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\n\t\t/**\n\t\t * A few utilities for interacting with the dom.\n\t\t * @class DomUtils\n\t\t */\n\t\tvar s = {};\n\t\n\t\ts.appendToHead = function (el) {\n\t\t\ts.getHead().appendChild(el)\n\t\t}\n\t\n\t\ts.appendToBody = function (el) {\n\t\t\ts.getBody().appendChild(el)\n\t\t}\n\t\n\t\ts.getHead = function () {\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t\t}\n\t\n\t\ts.getBody = function () {\n\t\t\treturn document.body || document.getElementsByTagName(\"body\")[0];\n\t\t}\n\t\n\t\ts.removeChild = function(el) {\n\t\t\tif (el.parent) {\n\t\t\t\tel.parent.removeChild(el);\n\t\t\t}\n\t\t}\n\t\n\t\t/**\n\t\t * Check if item is a valid HTMLImageElement\n\t\t * @method isImageTag\n\t\t * @param {Object} item\n\t\t * @returns {Boolean}\n\t\t * @static\n\t\t */\n\t\ts.isImageTag = function(item) {\n\t\t\treturn item instanceof HTMLImageElement;\n\t\t};\n\t\n\t\t/**\n\t\t * Check if item is a valid HTMLAudioElement\n\t\t * @method isAudioTag\n\t\t * @param {Object} item\n\t\t * @returns {Boolean}\n\t\t * @static\n\t\t */\n\t\ts.isAudioTag = function(item) {\n\t\t\tif (window.HTMLAudioElement) {\n\t\t\t\treturn item instanceof HTMLAudioElement;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Check if item is a valid HTMLVideoElement\n\t\t * @method isVideoTag\n\t\t * @param {Object} item\n\t\t * @returns {Boolean}\n\t\t * @static\n\t\t */\n\t\ts.isVideoTag = function(item) {\n\t\t\tif (window.HTMLVideoElement) {\n\t\t\t\treturn item instanceof HTMLVideoElement;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\t\n\t\tcreatejs.DomUtils = s;\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// DataUtils.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\n\t\t/**\n\t\t * A few data utilities for formatting different data types.\n\t\t * @class DataUtils\n\t\t */\n\t\tvar s = {};\n\t\n\t\t// static methods\n\t\t/**\n\t\t * Parse XML using the DOM. This is required when preloading XML or SVG.\n\t\t * @method parseXML\n\t\t * @param {String} text The raw text or XML that is loaded by XHR.\n\t\t * @return {XML} An XML document\n\t\t * @static\n\t\t */\n\t\ts.parseXML = function (text) {\n\t\t\tvar xml = null;\n\t\t\t// CocoonJS does not support XML parsing with either method.\n\t\n\t\t\t// Most browsers will use DOMParser\n\t\t\t// IE fails on certain SVG files, so we have a fallback below.\n\t\t\ttry {\n\t\t\t\tif (window.DOMParser) {\n\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\txml = parser.parseFromString(text, \"text/xml\");\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t}\n\t\n\t\t\t// Fallback for IE support.\n\t\t\tif (!xml) {\n\t\t\t\ttry {\n\t\t\t\t\txml = new ActiveXObject(\"Microsoft.XMLDOM\");\n\t\t\t\t\txml.async = false;\n\t\t\t\t\txml.loadXML(text);\n\t\t\t\t} catch (e) {\n\t\t\t\t\txml = null;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn xml;\n\t\t};\n\t\n\t\t/**\n\t\t * Parse a string into an Object.\n\t\t * @method parseJSON\n\t\t * @param {String} value The loaded JSON string\n\t\t * @returns {Object} A JavaScript object.\n\t\t */\n\t\ts.parseJSON = function (value) {\n\t\t\tif (value == null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(value);\n\t\t\t} catch (e) {\n\t\t\t\t// TODO; Handle this with a custom error?\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t};\n\t\n\t\tcreatejs.DataUtils = s;\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// Types.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\tvar s = {};\n\t\n\t\t/**\n\t\t * The preload type for generic binary types. Note that images are loaded as binary files when using XHR.\n\t\t * @property BINARY\n\t\t * @type {String}\n\t\t * @default binary\n\t\t * @static\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.BINARY = \"binary\";\n\t\n\t\t/**\n\t\t * The preload type for css files. CSS files are loaded using a &lt;link&gt; when loaded with XHR, or a\n\t\t * &lt;style&gt; tag when loaded with tags.\n\t\t * @property CSS\n\t\t * @type {String}\n\t\t * @default css\n\t\t * @static\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.CSS = \"css\";\n\t\n\t\t/**\n\t\t * The preload type for image files, usually png, gif, or jpg/jpeg. Images are loaded into an &lt;image&gt; tag.\n\t\t * @property IMAGE\n\t\t * @type {String}\n\t\t * @default image\n\t\t * @static\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.IMAGE = \"image\";\n\t\n\t\t/**\n\t\t * The preload type for javascript files, usually with the \"js\" file extension. JavaScript files are loaded into a\n\t\t * &lt;script&gt; tag.\n\t\t *\n\t\t * Since version 0.4.1+, due to how tag-loaded scripts work, all JavaScript files are automatically injected into\n\t\t * the body of the document to maintain parity between XHR and tag-loaded scripts. In version 0.4.0 and earlier,\n\t\t * only tag-loaded scripts are injected.\n\t\t * @property JAVASCRIPT\n\t\t * @type {String}\n\t\t * @default javascript\n\t\t * @static\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.JAVASCRIPT = \"javascript\";\n\t\n\t\t/**\n\t\t * The preload type for json files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\n\t\t * JavaScript object. Note that if a `callback` is present on the load item, the file will be loaded with JSONP,\n\t\t * no matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to, and the JSON\n\t\t * must contain a matching wrapper function.\n\t\t * @property JSON\n\t\t * @type {String}\n\t\t * @default json\n\t\t * @static\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.JSON = \"json\";\n\t\n\t\t/**\n\t\t * The preload type for jsonp files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\n\t\t * JavaScript object. You are required to pass a callback parameter that matches the function wrapper in the JSON.\n\t\t * Note that JSONP will always be used if there is a callback present, no matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}}\n\t\t * property is set to.\n\t\t * @property JSONP\n\t\t * @type {String}\n\t\t * @default jsonp\n\t\t * @static\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.JSONP = \"jsonp\";\n\t\n\t\t/**\n\t\t * The preload type for json-based manifest files, usually with the \"json\" file extension. The JSON data is loaded\n\t\t * and parsed into a JavaScript object. PreloadJS will then look for a \"manifest\" property in the JSON, which is an\n\t\t * Array of files to load, following the same format as the {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\n\t\t * method. If a \"callback\" is specified on the manifest object, then it will be loaded using JSONP instead,\n\t\t * regardless of what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to.\n\t\t * @property MANIFEST\n\t\t * @type {String}\n\t\t * @default manifest\n\t\t * @static\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.MANIFEST = \"manifest\";\n\t\n\t\t/**\n\t\t * The preload type for sound files, usually mp3, ogg, or wav. When loading via tags, audio is loaded into an\n\t\t * &lt;audio&gt; tag.\n\t\t * @property SOUND\n\t\t * @type {String}\n\t\t * @default sound\n\t\t * @static\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.SOUND = \"sound\";\n\t\n\t\t/**\n\t\t * The preload type for video files, usually mp4, ts, or ogg. When loading via tags, video is loaded into an\n\t\t * &lt;video&gt; tag.\n\t\t * @property VIDEO\n\t\t * @type {String}\n\t\t * @default video\n\t\t * @static\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.VIDEO = \"video\";\n\t\n\t\t/**\n\t\t * The preload type for SpriteSheet files. SpriteSheet files are JSON files that contain string image paths.\n\t\t * @property SPRITESHEET\n\t\t * @type {String}\n\t\t * @default spritesheet\n\t\t * @static\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.SPRITESHEET = \"spritesheet\";\n\t\n\t\t/**\n\t\t * The preload type for SVG files.\n\t\t * @property SVG\n\t\t * @type {String}\n\t\t * @default svg\n\t\t * @static\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.SVG = \"svg\";\n\t\n\t\t/**\n\t\t * The preload type for text files, which is also the default file type if the type can not be determined. Text is\n\t\t * loaded as raw text.\n\t\t * @property TEXT\n\t\t * @type {String}\n\t\t * @default text\n\t\t * @static\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.TEXT = \"text\";\n\t\n\t\t/**\n\t\t * The preload type for xml files. XML is loaded into an XML document.\n\t\t * @property XML\n\t\t * @type {String}\n\t\t * @default xml\n\t\t * @static\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.XML = \"xml\";\n\t\n\t\tcreatejs.Types = s;\n\t}());\n\t\n\t//##############################################################################\n\t// Methods.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\tvar s = {};\n\t\n\t\t/**\n\t\t * Defines a POST request, use for a method value when loading data.\n\t\t * @property POST\n\t\t * @type {string}\n\t\t * @default post\n\t\t * @static\n\t\t */\n\t\ts.POST = \"POST\";\n\t\n\t\t/**\n\t\t * Defines a GET request, use for a method value when loading data.\n\t\t * @property GET\n\t\t * @type {string}\n\t\t * @default get\n\t\t * @static\n\t\t */\n\t\ts.GET = \"GET\";\n\t\n\t\tcreatejs.Methods = s;\n\t}());\n\t\n\t//##############################################################################\n\t// LoadItem.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\t/**\n\t\t * All loaders accept an item containing the properties defined in this class. If a raw object is passed instead,\n\t\t * it will not be affected, but it must contain at least a {{#crossLink \"src:property\"}}{{/crossLink}} property. A\n\t\t * string path or HTML tag is also acceptable, but it will be automatically converted to a LoadItem using the\n\t\t * {{#crossLink \"create\"}}{{/crossLink}} method by {{#crossLink \"AbstractLoader\"}}{{/crossLink}}\n\t\t * @class LoadItem\n\t\t * @constructor\n\t\t * @since 0.6.0\n\t\t */\n\t\tfunction LoadItem() {\n\t\t\t/**\n\t\t\t * The source of the file that is being loaded. This property is <b>required</b>. The source can either be a\n\t\t\t * string (recommended), or an HTML tag.\n\t\t\t * This can also be an object, but in that case it has to include a type and be handled by a plugin.\n\t\t\t * @property src\n\t\t\t * @type {String}\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis.src = null;\n\t\n\t\t\t/**\n\t\t\t * The type file that is being loaded. The type of the file is usually inferred by the extension, but can also\n\t\t\t * be set manually. This is helpful in cases where a file does not have an extension.\n\t\t\t * @property type\n\t\t\t * @type {String}\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis.type = null;\n\t\n\t\t\t/**\n\t\t\t * A string identifier which can be used to reference the loaded object. If none is provided, this will be\n\t\t\t * automatically set to the {{#crossLink \"src:property\"}}{{/crossLink}}.\n\t\t\t * @property id\n\t\t\t * @type {String}\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis.id = null;\n\t\n\t\t\t/**\n\t\t\t * Determines if a manifest will maintain the order of this item, in relation to other items in the manifest\n\t\t\t * that have also set the `maintainOrder` property to `true`. This only applies when the max connections has\n\t\t\t * been set above 1 (using {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}}). Everything with this\n\t\t\t * property set to `false` will finish as it is loaded. Ordered items are combined with script tags loading in\n\t\t\t * order when {{#crossLink \"LoadQueue/maintainScriptOrder:property\"}}{{/crossLink}} is set to `true`.\n\t\t\t * @property maintainOrder\n\t\t\t * @type {Boolean}\n\t\t\t * @default false\n\t\t\t */\n\t\t\tthis.maintainOrder = false;\n\t\n\t\t\t/**\n\t\t\t * A callback used by JSONP requests that defines what global method to call when the JSONP content is loaded.\n\t\t\t * @property callback\n\t\t\t * @type {String}\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis.callback = null;\n\t\n\t\t\t/**\n\t\t\t * An arbitrary data object, which is included with the loaded object.\n\t\t\t * @property data\n\t\t\t * @type {Object}\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis.data = null;\n\t\n\t\t\t/**\n\t\t\t * The request method used for HTTP calls. Both {{#crossLink \"AbstractLoader/GET:property\"}}{{/crossLink}} or\n\t\t\t * {{#crossLink \"AbstractLoader/POST:property\"}}{{/crossLink}} request types are supported, and are defined as\n\t\t\t * constants on {{#crossLink \"AbstractLoader\"}}{{/crossLink}}.\n\t\t\t * @property method\n\t\t\t * @type {String}\n\t\t\t * @default GET\n\t\t\t */\n\t\t\tthis.method = createjs.LoadItem.GET;\n\t\n\t\t\t/**\n\t\t\t * An object hash of name/value pairs to send to the server.\n\t\t\t * @property values\n\t\t\t * @type {Object}\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis.values = null;\n\t\n\t\t\t/**\n\t\t\t * An object hash of headers to attach to an XHR request. PreloadJS will automatically attach some default\n\t\t\t * headers when required, including \"Origin\", \"Content-Type\", and \"X-Requested-With\". You may override the\n\t\t\t * default headers by including them in your headers object.\n\t\t\t * @property headers\n\t\t\t * @type {Object}\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis.headers = null;\n\t\n\t\t\t/**\n\t\t\t * Enable credentials for XHR requests.\n\t\t\t * @property withCredentials\n\t\t\t * @type {Boolean}\n\t\t\t * @default false\n\t\t\t */\n\t\t\tthis.withCredentials = false;\n\t\n\t\t\t/**\n\t\t\t * Set the mime type of XHR-based requests. This is automatically set to \"text/plain; charset=utf-8\" for text\n\t\t\t * based files (json, xml, text, css, js).\n\t\t\t * @property mimeType\n\t\t\t * @type {String}\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis.mimeType = null;\n\t\n\t\t\t/**\n\t\t\t * Sets the crossOrigin attribute for CORS-enabled images loading cross-domain.\n\t\t\t * @property crossOrigin\n\t\t\t * @type {boolean}\n\t\t\t * @default Anonymous\n\t\t\t */\n\t\t\tthis.crossOrigin = null;\n\t\n\t\t\t/**\n\t\t\t * The duration in milliseconds to wait before a request times out. This only applies to tag-based and and XHR\n\t\t\t * (level one) loading, as XHR (level 2) provides its own timeout event.\n\t\t\t * @property loadTimeout\n\t\t\t * @type {Number}\n\t\t\t * @default 8000 (8 seconds)\n\t\t\t */\n\t\t\tthis.loadTimeout = s.LOAD_TIMEOUT_DEFAULT;\n\t\t};\n\t\n\t\tvar p = LoadItem.prototype = {};\n\t\tvar s = LoadItem;\n\t\n\t\t/**\n\t\t * Default duration in milliseconds to wait before a request times out. This only applies to tag-based and and XHR\n\t\t * (level one) loading, as XHR (level 2) provides its own timeout event.\n\t\t * @property LOAD_TIMEOUT_DEFAULT\n\t\t * @type {number}\n\t\t * @static\n\t\t */\n\t\ts.LOAD_TIMEOUT_DEFAULT = 8000;\n\t\n\t\t/**\n\t\t * Create a LoadItem.\n\t\t * <ul>\n\t\t *     <li>String-based items are converted to a LoadItem with a populated {{#crossLink \"src:property\"}}{{/crossLink}}.</li>\n\t\t *     <li>LoadItem instances are returned as-is</li>\n\t\t *     <li>Objects are returned with any needed properties added</li>\n\t\t * </ul>\n\t\t * @method create\n\t\t * @param {LoadItem|String|Object} value The load item value\n\t\t * @returns {LoadItem|Object}\n\t\t * @static\n\t\t */\n\t\ts.create = function (value) {\n\t\t\tif (typeof value == \"string\") {\n\t\t\t\tvar item = new LoadItem();\n\t\t\t\titem.src = value;\n\t\t\t\treturn item;\n\t\t\t} else if (value instanceof s) {\n\t\t\t\treturn value;\n\t\t\t} else if (value instanceof Object && value.src) {\n\t\t\t\tif (value.loadTimeout == null) {\n\t\t\t\t\tvalue.loadTimeout = s.LOAD_TIMEOUT_DEFAULT;\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Type not recognized.\");\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var loadItem = new createjs.LoadItem().set({src:\"image.png\", maintainOrder:true});\n\t\t *\n\t\t * @method set\n\t\t * @param {Object} props A generic object containing properties to copy to the LoadItem instance.\n\t\t * @return {LoadItem} Returns the instance the method is called on (useful for chaining calls.)\n\t\t*/\n\t\tp.set = function(props) {\n\t\t\tfor (var n in props) { this[n] = props[n]; }\n\t\t\treturn this;\n\t\t};\n\t\n\t\tcreatejs.LoadItem = s;\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// RequestUtils.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\n\t\t/**\n\t\t * Utilities that assist with parsing load items, and determining file types, etc.\n\t\t * @class RequestUtils\n\t\t */\n\t\tvar s = {};\n\t\n\t\t/**\n\t\t * Determine if a specific type should be loaded as a binary file. Currently, only images and items marked\n\t\t * specifically as \"binary\" are loaded as binary. Note that audio is <b>not</b> a binary type, as we can not play\n\t\t * back using an audio tag if it is loaded as binary. Plugins can change the item type to binary to ensure they get\n\t\t * a binary result to work with. Binary files are loaded using XHR2. Types are defined as static constants on\n\t\t * {{#crossLink \"AbstractLoader\"}}{{/crossLink}}.\n\t\t * @method isBinary\n\t\t * @param {String} type The item type.\n\t\t * @return {Boolean} If the specified type is binary.\n\t\t * @static\n\t\t */\n\t\ts.isBinary = function (type) {\n\t\t\tswitch (type) {\n\t\t\t\tcase createjs.AbstractLoader.IMAGE:\n\t\t\t\tcase createjs.AbstractLoader.BINARY:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Determine if a specific type is a text-based asset, and should be loaded as UTF-8.\n\t\t * @method isText\n\t\t * @param {String} type The item type.\n\t\t * @return {Boolean} If the specified type is text.\n\t\t * @static\n\t\t */\n\t\ts.isText = function (type) {\n\t\t\tswitch (type) {\n\t\t\t\tcase createjs.AbstractLoader.TEXT:\n\t\t\t\tcase createjs.AbstractLoader.JSON:\n\t\t\t\tcase createjs.AbstractLoader.MANIFEST:\n\t\t\t\tcase createjs.AbstractLoader.XML:\n\t\t\t\tcase createjs.AbstractLoader.CSS:\n\t\t\t\tcase createjs.AbstractLoader.SVG:\n\t\t\t\tcase createjs.AbstractLoader.JAVASCRIPT:\n\t\t\t\tcase createjs.AbstractLoader.SPRITESHEET:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Determine the type of the object using common extensions. Note that the type can be passed in with the load item\n\t\t * if it is an unusual extension.\n\t\t * @method getTypeByExtension\n\t\t * @param {String} extension The file extension to use to determine the load type.\n\t\t * @return {String} The determined load type (for example, <code>AbstractLoader.IMAGE</code>). Will return `null` if\n\t\t * the type can not be determined by the extension.\n\t\t * @static\n\t\t */\n\t\ts.getTypeByExtension = function (extension) {\n\t\t\tif (extension == null) {\n\t\t\t\treturn createjs.AbstractLoader.TEXT;\n\t\t\t}\n\t\n\t\t\tswitch (extension.toLowerCase()) {\n\t\t\t\tcase \"jpeg\":\n\t\t\t\tcase \"jpg\":\n\t\t\t\tcase \"gif\":\n\t\t\t\tcase \"png\":\n\t\t\t\tcase \"webp\":\n\t\t\t\tcase \"bmp\":\n\t\t\t\t\treturn createjs.AbstractLoader.IMAGE;\n\t\t\t\tcase \"ogg\":\n\t\t\t\tcase \"mp3\":\n\t\t\t\tcase \"webm\":\n\t\t\t\t\treturn createjs.AbstractLoader.SOUND;\n\t\t\t\tcase \"mp4\":\n\t\t\t\tcase \"webm\":\n\t\t\t\tcase \"ts\":\n\t\t\t\t\treturn createjs.AbstractLoader.VIDEO;\n\t\t\t\tcase \"json\":\n\t\t\t\t\treturn createjs.AbstractLoader.JSON;\n\t\t\t\tcase \"xml\":\n\t\t\t\t\treturn createjs.AbstractLoader.XML;\n\t\t\t\tcase \"css\":\n\t\t\t\t\treturn createjs.AbstractLoader.CSS;\n\t\t\t\tcase \"js\":\n\t\t\t\t\treturn createjs.AbstractLoader.JAVASCRIPT;\n\t\t\t\tcase 'svg':\n\t\t\t\t\treturn createjs.AbstractLoader.SVG;\n\t\t\t\tdefault:\n\t\t\t\t\treturn createjs.AbstractLoader.TEXT;\n\t\t\t}\n\t\t};\n\t\n\t\tcreatejs.RequestUtils = s;\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// AbstractLoader.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t// constructor\n\t\t/**\n\t\t * The base loader, which defines all the generic methods, properties, and events. All loaders extend this class,\n\t\t * including the {{#crossLink \"LoadQueue\"}}{{/crossLink}}.\n\t\t * @class AbstractLoader\n\t\t * @param {LoadItem|object|string} loadItem The item to be loaded.\n\t\t * @param {Boolean} [preferXHR] Determines if the LoadItem should <em>try</em> and load using XHR, or take a\n\t\t * tag-based approach, which can be better in cross-domain situations. Not all loaders can load using one or the\n\t\t * other, so this is a suggested directive.\n\t\t * @param {String} [type] The type of loader. Loader types are defined as constants on the AbstractLoader class,\n\t\t * such as {{#crossLink \"IMAGE:property\"}}{{/crossLink}}, {{#crossLink \"CSS:property\"}}{{/crossLink}}, etc.\n\t\t * @extends EventDispatcher\n\t\t */\n\t\tfunction AbstractLoader(loadItem, preferXHR, type) {\n\t\t\tthis.EventDispatcher_constructor();\n\t\n\t\t\t// public properties\n\t\t\t/**\n\t\t\t * If the loader has completed loading. This provides a quick check, but also ensures that the different approaches\n\t\t\t * used for loading do not pile up resulting in more than one `complete` {{#crossLink \"Event\"}}{{/crossLink}}.\n\t\t\t * @property loaded\n\t\t\t * @type {Boolean}\n\t\t\t * @default false\n\t\t\t */\n\t\t\tthis.loaded = false;\n\t\n\t\t\t/**\n\t\t\t * Determine if the loader was canceled. Canceled loads will not fire complete events. Note that this property\n\t\t\t * is readonly, so {{#crossLink \"LoadQueue\"}}{{/crossLink}} queues should be closed using {{#crossLink \"LoadQueue/close\"}}{{/crossLink}}\n\t\t\t * instead.\n\t\t\t * @property canceled\n\t\t\t * @type {Boolean}\n\t\t\t * @default false\n\t\t\t * @readonly\n\t\t\t */\n\t\t\tthis.canceled = false;\n\t\n\t\t\t/**\n\t\t\t * The current load progress (percentage) for this item. This will be a number between 0 and 1.\n\t\t\t *\n\t\t\t * <h4>Example</h4>\n\t\t\t *\n\t\t\t *     var queue = new createjs.LoadQueue();\n\t\t\t *     queue.loadFile(\"largeImage.png\");\n\t\t\t *     queue.on(\"progress\", function() {\n\t\t\t *         console.log(\"Progress:\", queue.progress, event.progress);\n\t\t\t *     });\n\t\t\t *\n\t\t\t * @property progress\n\t\t\t * @type {Number}\n\t\t\t * @default 0\n\t\t\t */\n\t\t\tthis.progress = 0;\n\t\n\t\t\t/**\n\t\t\t * The type of item this loader will load. See {{#crossLink \"AbstractLoader\"}}{{/crossLink}} for a full list of\n\t\t\t * supported types.\n\t\t\t * @property type\n\t\t\t * @type {String}\n\t\t\t */\n\t\t\tthis.type = type;\n\t\n\t\t\t/**\n\t\t\t * A formatter function that converts the loaded raw result into the final result. For example, the JSONLoader\n\t\t\t * converts a string of text into a JavaScript object. Not all loaders have a resultFormatter, and this property\n\t\t\t * can be overridden to provide custom formatting.\n\t\t\t *\n\t\t\t * Optionally, a resultFormatter can return a callback function in cases where the formatting needs to be\n\t\t\t * asynchronous, such as creating a new image. The callback function is passed 2 parameters, which are callbacks\n\t\t\t * to handle success and error conditions in the resultFormatter. Note that the resultFormatter method is\n\t\t\t * called in the current scope, as well as the success and error callbacks.\n\t\t\t *\n\t\t\t * <h4>Example asynchronous resultFormatter</h4>\n\t\t\t *\n\t\t\t * \tfunction _formatResult(loader) {\n\t\t\t * \t\treturn function(success, error) {\n\t\t\t * \t\t\tif (errorCondition) { error(errorDetailEvent); }\n\t\t\t * \t\t\tsuccess(result);\n\t\t\t * \t\t}\n\t\t\t * \t}\n\t\t\t * @property resultFormatter\n\t\t\t * @type {Function}\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis.resultFormatter = null;\n\t\n\t\t\t// protected properties\n\t\t\t/**\n\t\t\t * The {{#crossLink \"LoadItem\"}}{{/crossLink}} this loader represents. Note that this is null in a {{#crossLink \"LoadQueue\"}}{{/crossLink}},\n\t\t\t * but will be available on loaders such as {{#crossLink \"XMLLoader\"}}{{/crossLink}} and {{#crossLink \"ImageLoader\"}}{{/crossLink}}.\n\t\t\t * @property _item\n\t\t\t * @type {LoadItem|Object}\n\t\t\t * @private\n\t\t\t */\n\t\t\tif (loadItem) {\n\t\t\t\tthis._item = createjs.LoadItem.create(loadItem);\n\t\t\t} else {\n\t\t\t\tthis._item = null;\n\t\t\t}\n\t\n\t\t\t/**\n\t\t\t * Whether the loader will try and load content using XHR (true) or HTML tags (false).\n\t\t\t * @property _preferXHR\n\t\t\t * @type {Boolean}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._preferXHR = preferXHR;\n\t\n\t\t\t/**\n\t\t\t * The loaded result after it is formatted by an optional {{#crossLink \"resultFormatter\"}}{{/crossLink}}. For\n\t\t\t * items that are not formatted, this will be the same as the {{#crossLink \"_rawResult:property\"}}{{/crossLink}}.\n\t\t\t * The result is accessed using the {{#crossLink \"getResult\"}}{{/crossLink}} method.\n\t\t\t * @property _result\n\t\t\t * @type {Object|String}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._result = null;\n\t\n\t\t\t/**\n\t\t\t * The loaded result before it is formatted. The rawResult is accessed using the {{#crossLink \"getResult\"}}{{/crossLink}}\n\t\t\t * method, and passing `true`.\n\t\t\t * @property _rawResult\n\t\t\t * @type {Object|String}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._rawResult = null;\n\t\n\t\t\t/**\n\t\t\t * A list of items that loaders load behind the scenes. This does not include the main item the loader is\n\t\t\t * responsible for loading. Examples of loaders that have sub-items include the {{#crossLink \"SpriteSheetLoader\"}}{{/crossLink}} and\n\t\t\t * {{#crossLink \"ManifestLoader\"}}{{/crossLink}}.\n\t\t\t * @property _loadItems\n\t\t\t * @type {null}\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis._loadedItems = null;\n\t\n\t\t\t/**\n\t\t\t * The attribute the items loaded using tags use for the source.\n\t\t\t * @type {string}\n\t\t\t * @default null\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._tagSrcAttribute = null;\n\t\n\t\t\t/**\n\t\t\t * An HTML tag (or similar) that a loader may use to load HTML content, such as images, scripts, etc.\n\t\t\t * @property _tag\n\t\t\t * @type {Object}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._tag = null;\n\t\t};\n\t\n\t\tvar p = createjs.extend(AbstractLoader, createjs.EventDispatcher);\n\t\tvar s = AbstractLoader;\n\t\n\t\t// TODO: deprecated\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\n\t\n\t\t/**\n\t\t * Defines a POST request, use for a method value when loading data.\n\t\t * @property POST\n\t\t * @type {string}\n\t\t * @default post\n\t\t * @deprecated Use Methods.POST instead\n\t\t * @static\n\t\t */\n\t\ts.POST = createjs.Methods.POST;\n\t\n\t\t/**\n\t\t * Defines a GET request, use for a method value when loading data.\n\t\t * @property GET\n\t\t * @type {string}\n\t\t * @default get\n\t\t * @deprecated Use Methods.GET instead\n\t\t * @static\n\t\t */\n\t\ts.GET = createjs.Methods.GET;\n\t\n\t\t/**\n\t\t * The preload type for generic binary types. Note that images are loaded as binary files when using XHR.\n\t\t * @property BINARY\n\t\t * @type {String}\n\t\t * @default binary\n\t\t * @static\n\t\t * @deprecated Use createjs.Types.BINARY instead\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.BINARY = createjs.Types.BINARY;\n\t\n\t\t/**\n\t\t * The preload type for css files. CSS files are loaded using a &lt;link&gt; when loaded with XHR, or a\n\t\t * &lt;style&gt; tag when loaded with tags.\n\t\t * @property CSS\n\t\t * @type {String}\n\t\t * @default css\n\t\t * @static\n\t\t * @deprecated Use createjs.Types.CSS instead\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.CSS = createjs.Types.CSS;\n\t\n\t\t/**\n\t\t * The preload type for image files, usually png, gif, or jpg/jpeg. Images are loaded into an &lt;image&gt; tag.\n\t\t * @property IMAGE\n\t\t * @type {String}\n\t\t * @default image\n\t\t * @static\n\t\t * @deprecated Use createjs.Types.IMAGE instead\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.IMAGE = createjs.Types.IMAGE;\n\t\n\t\t/**\n\t\t * The preload type for javascript files, usually with the \"js\" file extension. JavaScript files are loaded into a\n\t\t * &lt;script&gt; tag.\n\t\t *\n\t\t * Since version 0.4.1+, due to how tag-loaded scripts work, all JavaScript files are automatically injected into\n\t\t * the body of the document to maintain parity between XHR and tag-loaded scripts. In version 0.4.0 and earlier,\n\t\t * only tag-loaded scripts are injected.\n\t\t * @property JAVASCRIPT\n\t\t * @type {String}\n\t\t * @default javascript\n\t\t * @static\n\t\t * @deprecated Use createjs.Types.JAVASCRIPT instead\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.JAVASCRIPT = createjs.Types.JAVASCRIPT;\n\t\n\t\t/**\n\t\t * The preload type for json files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\n\t\t * JavaScript object. Note that if a `callback` is present on the load item, the file will be loaded with JSONP,\n\t\t * no matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to, and the JSON\n\t\t * must contain a matching wrapper function.\n\t\t * @property JSON\n\t\t * @type {String}\n\t\t * @default json\n\t\t * @static\n\t\t * @deprecated Use createjs.Types.JSON instead\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.JSON = createjs.Types.JSON;\n\t\n\t\t/**\n\t\t * The preload type for jsonp files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\n\t\t * JavaScript object. You are required to pass a callback parameter that matches the function wrapper in the JSON.\n\t\t * Note that JSONP will always be used if there is a callback present, no matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}}\n\t\t * property is set to.\n\t\t * @property JSONP\n\t\t * @type {String}\n\t\t * @default jsonp\n\t\t * @static\n\t\t * @deprecated Use createjs.Types.JSONP instead\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.JSONP = createjs.Types.JSONP;\n\t\n\t\t/**\n\t\t * The preload type for json-based manifest files, usually with the \"json\" file extension. The JSON data is loaded\n\t\t * and parsed into a JavaScript object. PreloadJS will then look for a \"manifest\" property in the JSON, which is an\n\t\t * Array of files to load, following the same format as the {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\n\t\t * method. If a \"callback\" is specified on the manifest object, then it will be loaded using JSONP instead,\n\t\t * regardless of what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to.\n\t\t * @property MANIFEST\n\t\t * @type {String}\n\t\t * @default manifest\n\t\t * @static\n\t\t * @deprecated Use createjs.Types.MANIFEST instead\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.MANIFEST = \"manifest\";\n\t\n\t\t/**\n\t\t * The preload type for sound files, usually mp3, ogg, or wav. When loading via tags, audio is loaded into an\n\t\t * &lt;audio&gt; tag.\n\t\t * @property SOUND\n\t\t * @type {String}\n\t\t * @default sound\n\t\t * @static\n\t\t * @deprecated Use createjs.Types.SOUND instead\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.SOUND = createjs.Types.SOUND;\n\t\n\t\t/**\n\t\t * The preload type for video files, usually mp4, ts, or ogg. When loading via tags, video is loaded into an\n\t\t * &lt;video&gt; tag.\n\t\t * @property VIDEO\n\t\t * @type {String}\n\t\t * @default video\n\t\t * @static\n\t\t * @deprecated Use createjs.Types.VIDEO instead\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.VIDEO = createjs.Types.VIDEO;\n\t\n\t\t/**\n\t\t * The preload type for SpriteSheet files. SpriteSheet files are JSON files that contain string image paths.\n\t\t * @property SPRITESHEET\n\t\t * @type {String}\n\t\t * @default spritesheet\n\t\t * @static\n\t\t * @deprecated Use createjs.Types.SPRITESHEET instead\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.SPRITESHEET = createjs.Types.SPRITESHEET;\n\t\n\t\t/**\n\t\t * The preload type for SVG files.\n\t\t * @property SVG\n\t\t * @type {String}\n\t\t * @default svg\n\t\t * @static\n\t\t * @deprecated Use createjs.Types.SVG instead\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.SVG = createjs.Types.SVG;\n\t\n\t\t/**\n\t\t * The preload type for text files, which is also the default file type if the type can not be determined. Text is\n\t\t * loaded as raw text.\n\t\t * @property TEXT\n\t\t * @type {String}\n\t\t * @default text\n\t\t * @static\n\t\t * @deprecated Use createjs.Types.TEXT instead\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.TEXT = createjs.Types.TEXT;\n\t\n\t\t/**\n\t\t * The preload type for xml files. XML is loaded into an XML document.\n\t\t * @property XML\n\t\t * @type {String}\n\t\t * @default xml\n\t\t * @static\n\t\t * @deprecated Use createjs.Types.XML instead\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.XML = createjs.Types.XML;\n\t\n\t// Events\n\t\t/**\n\t\t * The {{#crossLink \"ProgressEvent\"}}{{/crossLink}} that is fired when the overall progress changes. Prior to\n\t\t * version 0.6.0, this was just a regular {{#crossLink \"Event\"}}{{/crossLink}}.\n\t\t * @event progress\n\t\t * @since 0.3.0\n\t\t */\n\t\n\t\t/**\n\t\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when a load starts.\n\t\t * @event loadstart\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @since 0.3.1\n\t\t */\n\t\n\t\t/**\n\t\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when the entire queue has been loaded.\n\t\t * @event complete\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @since 0.3.0\n\t\t */\n\t\n\t\t/**\n\t\t * The {{#crossLink \"ErrorEvent\"}}{{/crossLink}} that is fired when the loader encounters an error. If the error was\n\t\t * encountered by a file, the event will contain the item that caused the error. Prior to version 0.6.0, this was\n\t\t * just a regular {{#crossLink \"Event\"}}{{/crossLink}}.\n\t\t * @event error\n\t\t * @since 0.3.0\n\t\t */\n\t\n\t\t/**\n\t\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when the loader encounters an internal file load error.\n\t\t * This enables loaders to maintain internal queues, and surface file load errors.\n\t\t * @event fileerror\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The even type (\"fileerror\")\n\t\t * @param {LoadItem|object} The item that encountered the error\n\t\t * @since 0.6.0\n\t\t */\n\t\n\t\t/**\n\t\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when a loader internally loads a file. This enables\n\t\t * loaders such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}} to maintain internal {{#crossLink \"LoadQueue\"}}{{/crossLink}}s\n\t\t * and notify when they have loaded a file. The {{#crossLink \"LoadQueue\"}}{{/crossLink}} class dispatches a\n\t\t * slightly different {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event.\n\t\t * @event fileload\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type (\"fileload\")\n\t\t * @param {Object} item The file item which was specified in the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n\t\t * or {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}} call. If only a string path or tag was specified, the\n\t\t * object will contain that value as a `src` property.\n\t\t * @param {Object} result The HTML tag or parsed result of the loaded item.\n\t\t * @param {Object} rawResult The unprocessed result, usually the raw text or binary data before it is converted\n\t\t * to a usable object.\n\t\t * @since 0.6.0\n\t\t */\n\t\n\t\t/**\n\t\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired after the internal request is created, but before a load.\n\t\t * This allows updates to the loader for specific loading needs, such as binary or XHR image loading.\n\t\t * @event initialize\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type (\"initialize\")\n\t\t * @param {AbstractLoader} loader The loader that has been initialized.\n\t\t */\n\t\n\t\n\t\t/**\n\t\t * Get a reference to the manifest item that is loaded by this loader. In some cases this will be the value that was\n\t\t * passed into {{#crossLink \"LoadQueue\"}}{{/crossLink}} using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} or\n\t\t * {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}. However if only a String path was passed in, then it will\n\t\t * be a {{#crossLink \"LoadItem\"}}{{/crossLink}}.\n\t\t * @method getItem\n\t\t * @return {Object} The manifest item that this loader is responsible for loading.\n\t\t * @since 0.6.0\n\t\t */\n\t\tp.getItem = function () {\n\t\t\treturn this._item;\n\t\t};\n\t\n\t\t/**\n\t\t * Get a reference to the content that was loaded by the loader (only available after the {{#crossLink \"complete:event\"}}{{/crossLink}}\n\t\t * event is dispatched.\n\t\t * @method getResult\n\t\t * @param {Boolean} [raw=false] Determines if the returned result will be the formatted content, or the raw loaded\n\t\t * data (if it exists).\n\t\t * @return {Object}\n\t\t * @since 0.6.0\n\t\t */\n\t\tp.getResult = function (raw) {\n\t\t\treturn raw ? this._rawResult : this._result;\n\t\t};\n\t\n\t\t/**\n\t\t * Return the `tag` this object creates or uses for loading.\n\t\t * @method getTag\n\t\t * @return {Object} The tag instance\n\t\t * @since 0.6.0\n\t\t */\n\t\tp.getTag = function () {\n\t\t\treturn this._tag;\n\t\t};\n\t\n\t\t/**\n\t\t * Set the `tag` this item uses for loading.\n\t\t * @method setTag\n\t\t * @param {Object} tag The tag instance\n\t\t * @since 0.6.0\n\t\t */\n\t\tp.setTag = function(tag) {\n\t\t  this._tag = tag;\n\t\t};\n\t\n\t\t/**\n\t\t * Begin loading the item. This method is required when using a loader by itself.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var queue = new createjs.LoadQueue();\n\t\t *      queue.on(\"complete\", handleComplete);\n\t\t *      queue.loadManifest(fileArray, false); // Note the 2nd argument that tells the queue not to start loading yet\n\t\t *      queue.load();\n\t\t *\n\t\t * @method load\n\t\t */\n\t\tp.load = function () {\n\t\t\tthis._createRequest();\n\t\n\t\t\tthis._request.on(\"complete\", this, this);\n\t\t\tthis._request.on(\"progress\", this, this);\n\t\t\tthis._request.on(\"loadStart\", this, this);\n\t\t\tthis._request.on(\"abort\", this, this);\n\t\t\tthis._request.on(\"timeout\", this, this);\n\t\t\tthis._request.on(\"error\", this, this);\n\t\n\t\t\tvar evt = new createjs.Event(\"initialize\");\n\t\t\tevt.loader = this._request;\n\t\t\tthis.dispatchEvent(evt);\n\t\n\t\t\tthis._request.load();\n\t\t};\n\t\n\t\t/**\n\t\t * Close the the item. This will stop any open requests (although downloads using HTML tags may still continue in\n\t\t * the background), but events will not longer be dispatched.\n\t\t * @method cancel\n\t\t */\n\t\tp.cancel = function () {\n\t\t\tthis.canceled = true;\n\t\t\tthis.destroy();\n\t\t};\n\t\n\t\t/**\n\t\t * Clean up the loader.\n\t\t * @method destroy\n\t\t */\n\t\tp.destroy = function() {\n\t\t\tif (this._request) {\n\t\t\t\tthis._request.removeAllEventListeners();\n\t\t\t\tthis._request.destroy();\n\t\t\t}\n\t\n\t\t\tthis._request = null;\n\t\n\t\t\tthis._item = null;\n\t\t\tthis._rawResult = null;\n\t\t\tthis._result = null;\n\t\n\t\t\tthis._loadItems = null;\n\t\n\t\t\tthis.removeAllEventListeners();\n\t\t};\n\t\n\t\t/**\n\t\t * Get any items loaded internally by the loader. The enables loaders such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}}\n\t\t * to expose items it loads internally.\n\t\t * @method getLoadedItems\n\t\t * @return {Array} A list of the items loaded by the loader.\n\t\t * @since 0.6.0\n\t\t */\n\t\tp.getLoadedItems = function () {\n\t\t\treturn this._loadedItems;\n\t\t};\n\t\n\t\n\t\t// Private methods\n\t\t/**\n\t\t * Create an internal request used for loading. By default, an {{#crossLink \"XHRRequest\"}}{{/crossLink}} or\n\t\t * {{#crossLink \"TagRequest\"}}{{/crossLink}} is created, depending on the value of {{#crossLink \"preferXHR:property\"}}{{/crossLink}}.\n\t\t * Other loaders may override this to use different request types, such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}},\n\t\t * which uses {{#crossLink \"JSONLoader\"}}{{/crossLink}} or {{#crossLink \"JSONPLoader\"}}{{/crossLink}} under the hood.\n\t\t * @method _createRequest\n\t\t * @protected\n\t\t */\n\t\tp._createRequest = function() {\n\t\t\tif (!this._preferXHR) {\n\t\t\t\tthis._request = new createjs.TagRequest(this._item, this._tag || this._createTag(), this._tagSrcAttribute);\n\t\t\t} else {\n\t\t\t\tthis._request = new createjs.XHRRequest(this._item);\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Create the HTML tag used for loading. This method does nothing by default, and needs to be implemented\n\t\t * by loaders that require tag loading.\n\t\t * @method _createTag\n\t\t * @param {String} src The tag source\n\t\t * @return {HTMLElement} The tag that was created\n\t\t * @protected\n\t\t */\n\t\tp._createTag = function(src) { return null; };\n\t\n\t\t/**\n\t\t * Dispatch a loadstart {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/loadstart:event\"}}{{/crossLink}}\n\t\t * event for details on the event payload.\n\t\t * @method _sendLoadStart\n\t\t * @protected\n\t\t */\n\t\tp._sendLoadStart = function () {\n\t\t\tif (this._isCanceled()) { return; }\n\t\t\tthis.dispatchEvent(\"loadstart\");\n\t\t};\n\t\n\t\t/**\n\t\t * Dispatch a {{#crossLink \"ProgressEvent\"}}{{/crossLink}}.\n\t\t * @method _sendProgress\n\t\t * @param {Number | Object} value The progress of the loaded item, or an object containing <code>loaded</code>\n\t\t * and <code>total</code> properties.\n\t\t * @protected\n\t\t */\n\t\tp._sendProgress = function (value) {\n\t\t\tif (this._isCanceled()) { return; }\n\t\t\tvar event = null;\n\t\t\tif (typeof(value) == \"number\") {\n\t\t\t\tthis.progress = value;\n\t\t\t\tevent = new createjs.ProgressEvent(this.progress);\n\t\t\t} else {\n\t\t\t\tevent = value;\n\t\t\t\tthis.progress = value.loaded / value.total;\n\t\t\t\tevent.progress = this.progress;\n\t\t\t\tif (isNaN(this.progress) || this.progress == Infinity) { this.progress = 0; }\n\t\t\t}\n\t\t\tthis.hasEventListener(\"progress\") && this.dispatchEvent(event);\n\t\t};\n\t\n\t\t/**\n\t\t * Dispatch a complete {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}} event\n\t\t * @method _sendComplete\n\t\t * @protected\n\t\t */\n\t\tp._sendComplete = function () {\n\t\t\tif (this._isCanceled()) { return; }\n\t\n\t\t\tthis.loaded = true;\n\t\n\t\t\tvar event = new createjs.Event(\"complete\");\n\t\t\tevent.rawResult = this._rawResult;\n\t\n\t\t\tif (this._result != null) {\n\t\t\t\tevent.result = this._result;\n\t\t\t}\n\t\n\t\t\tthis.dispatchEvent(event);\n\t\t};\n\t\n\t\t/**\n\t\t * Dispatch an error {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/error:event\"}}{{/crossLink}}\n\t\t * event for details on the event payload.\n\t\t * @method _sendError\n\t\t * @param {ErrorEvent} event The event object containing specific error properties.\n\t\t * @protected\n\t\t */\n\t\tp._sendError = function (event) {\n\t\t\tif (this._isCanceled() || !this.hasEventListener(\"error\")) { return; }\n\t\t\tif (event == null) {\n\t\t\t\tevent = new createjs.ErrorEvent(\"PRELOAD_ERROR_EMPTY\"); // TODO: Populate error\n\t\t\t}\n\t\t\tthis.dispatchEvent(event);\n\t\t};\n\t\n\t\t/**\n\t\t * Determine if the load has been canceled. This is important to ensure that method calls or asynchronous events\n\t\t * do not cause issues after the queue has been cleaned up.\n\t\t * @method _isCanceled\n\t\t * @return {Boolean} If the loader has been canceled.\n\t\t * @protected\n\t\t */\n\t\tp._isCanceled = function () {\n\t\t\tif (window.createjs == null || this.canceled) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\n\t\t/**\n\t\t * A custom result formatter function, which is called just before a request dispatches its complete event. Most\n\t\t * loader types already have an internal formatter, but this can be user-overridden for custom formatting. The\n\t\t * formatted result will be available on Loaders using {{#crossLink \"getResult\"}}{{/crossLink}}, and passing `true`.\n\t\t * @property resultFormatter\n\t\t * @type Function\n\t\t * @return {Object} The formatted result\n\t\t * @since 0.6.0\n\t\t */\n\t\tp.resultFormatter = null;\n\t\n\t\t/**\n\t\t * Handle events from internal requests. By default, loaders will handle, and redispatch the necessary events, but\n\t\t * this method can be overridden for custom behaviours.\n\t\t * @method handleEvent\n\t\t * @param {Event} event The event that the internal request dispatches.\n\t\t * @protected\n\t\t * @since 0.6.0\n\t\t */\n\t\tp.handleEvent = function (event) {\n\t\t\tswitch (event.type) {\n\t\t\t\tcase \"complete\":\n\t\t\t\t\tthis._rawResult = event.target._response;\n\t\t\t\t\tvar result = this.resultFormatter && this.resultFormatter(this);\n\t\t\t\t\tif (result instanceof Function) {\n\t\t\t\t\t\tresult.call(this,\n\t\t\t\t\t\t\t\tcreatejs.proxy(this._resultFormatSuccess, this),\n\t\t\t\t\t\t\t\tcreatejs.proxy(this._resultFormatFailed, this)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._result =  result || this._rawResult;\n\t\t\t\t\t\tthis._sendComplete();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"progress\":\n\t\t\t\t\tthis._sendProgress(event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"error\":\n\t\t\t\t\tthis._sendError(event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"loadstart\":\n\t\t\t\t\tthis._sendLoadStart();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"abort\":\n\t\t\t\tcase \"timeout\":\n\t\t\t\t\tif (!this._isCanceled()) {\n\t\t\t\t\t\tthis.dispatchEvent(new createjs.ErrorEvent(\"PRELOAD_\" + event.type.toUpperCase() + \"_ERROR\"));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * The \"success\" callback passed to {{#crossLink \"AbstractLoader/resultFormatter\"}}{{/crossLink}} asynchronous\n\t\t * functions.\n\t\t * @method _resultFormatSuccess\n\t\t * @param {Object} result The formatted result\n\t\t * @private\n\t\t */\n\t\tp._resultFormatSuccess = function (result) {\n\t\t\tthis._result = result;\n\t\t\tthis._sendComplete();\n\t\t};\n\t\n\t\t/**\n\t\t * The \"error\" callback passed to {{#crossLink \"AbstractLoader/resultFormatter\"}}{{/crossLink}} asynchronous\n\t\t * functions.\n\t\t * @method _resultFormatSuccess\n\t\t * @param {Object} error The error event\n\t\t * @private\n\t\t */\n\t\tp._resultFormatFailed = function (event) {\n\t\t\tthis._sendError(event);\n\t\t};\n\t\n\t\t/**\n\t\t * @method buildPath\n\t\t * @protected\n\t\t * @deprecated Use the {{#crossLink \"URLUtils\"}}{{/crossLink}} method {{#crossLink \"URLUtils/buildURI\"}}{{/crossLink}}\n\t\t * instead.\n\t\t */\n\t\tp.buildPath = function (src, data) {\n\t\t\treturn createjs.URLUtils.buildURI(src, data);\n\t\t};\n\t\n\t\t/**\n\t\t * @method toString\n\t\t * @return {String} a string representation of the instance.\n\t\t */\n\t\tp.toString = function () {\n\t\t\treturn \"[PreloadJS AbstractLoader]\";\n\t\t};\n\t\n\t\tcreatejs.AbstractLoader = createjs.promote(AbstractLoader, \"EventDispatcher\");\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// AbstractMediaLoader.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\t// constructor\n\t\t/**\n\t\t * The AbstractMediaLoader is a base class that handles some of the shared methods and properties of loaders that\n\t\t * handle HTML media elements, such as Video and Audio.\n\t\t * @class AbstractMediaLoader\n\t\t * @param {LoadItem|Object} loadItem\n\t\t * @param {Boolean} preferXHR\n\t\t * @param {String} type The type of media to load. Usually \"video\" or \"audio\".\n\t\t * @extends AbstractLoader\n\t\t * @constructor\n\t\t */\n\t\tfunction AbstractMediaLoader(loadItem, preferXHR, type) {\n\t\t\tthis.AbstractLoader_constructor(loadItem, preferXHR, type);\n\t\n\t\t\t// public properties\n\t\t\tthis.resultFormatter = this._formatResult;\n\t\n\t\t\t// protected properties\n\t\t\tthis._tagSrcAttribute = \"src\";\n\t\n\t        this.on(\"initialize\", this._updateXHR, this);\n\t\t};\n\t\n\t\tvar p = createjs.extend(AbstractMediaLoader, createjs.AbstractLoader);\n\t\n\t\t// static properties\n\t\t// public methods\n\t\tp.load = function () {\n\t\t\t// TagRequest will handle most of this, but Sound / Video need a few custom properties, so just handle them here.\n\t\t\tif (!this._tag) {\n\t\t\t\tthis._tag = this._createTag(this._item.src);\n\t\t\t}\n\t\n\t\t\tthis._tag.preload = \"auto\";\n\t\t\tthis._tag.load();\n\t\n\t\t\tthis.AbstractLoader_load();\n\t\t};\n\t\n\t\t// protected methods\n\t\t/**\n\t\t * Creates a new tag for loading if it doesn't exist yet.\n\t\t * @method _createTag\n\t\t * @private\n\t\t */\n\t\tp._createTag = function () {};\n\t\n\t\n\t\tp._createRequest = function() {\n\t\t\tif (!this._preferXHR) {\n\t\t\t\tthis._request = new createjs.MediaTagRequest(this._item, this._tag || this._createTag(), this._tagSrcAttribute);\n\t\t\t} else {\n\t\t\t\tthis._request = new createjs.XHRRequest(this._item);\n\t\t\t}\n\t\t};\n\t\n\t    // protected methods\n\t    /**\n\t     * Before the item loads, set its mimeType and responseType.\n\t     * @property _updateXHR\n\t     * @param {Event} event\n\t     * @private\n\t     */\n\t    p._updateXHR = function (event) {\n\t        // Only exists for XHR\n\t        if (event.loader.setResponseType) {\n\t            event.loader.setResponseType(\"blob\");\n\t        }\n\t    };\n\t\n\t\t/**\n\t\t * The result formatter for media files.\n\t\t * @method _formatResult\n\t\t * @param {AbstractLoader} loader\n\t\t * @returns {HTMLVideoElement|HTMLAudioElement}\n\t\t * @private\n\t\t */\n\t\tp._formatResult = function (loader) {\n\t\t\tthis._tag.removeEventListener && this._tag.removeEventListener(\"canplaythrough\", this._loadedHandler);\n\t\t\tthis._tag.onstalled = null;\n\t\t\tif (this._preferXHR) {\n\t            var URL = window.URL || window.webkitURL;\n\t            var result = loader.getResult(true);\n\t\n\t\t\t\tloader.getTag().src = URL.createObjectURL(result);\n\t\t\t}\n\t\t\treturn loader.getTag();\n\t\t};\n\t\n\t\tcreatejs.AbstractMediaLoader = createjs.promote(AbstractMediaLoader, \"AbstractLoader\");\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// AbstractRequest.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\t/**\n\t\t * A base class for actual data requests, such as {{#crossLink \"XHRRequest\"}}{{/crossLink}}, {{#crossLink \"TagRequest\"}}{{/crossLink}},\n\t\t * and {{#crossLink \"MediaRequest\"}}{{/crossLink}}. PreloadJS loaders will typically use a data loader under the\n\t\t * hood to get data.\n\t\t * @class AbstractRequest\n\t\t * @param {LoadItem} item\n\t\t * @constructor\n\t\t */\n\t\tvar AbstractRequest = function (item) {\n\t\t\tthis._item = item;\n\t\t};\n\t\n\t\tvar p = createjs.extend(AbstractRequest, createjs.EventDispatcher);\n\t\n\t\t// public methods\n\t\t/**\n\t\t * Begin a load.\n\t\t * @method load\n\t\t */\n\t\tp.load =  function() {};\n\t\n\t\t/**\n\t\t * Clean up a request.\n\t\t * @method destroy\n\t\t */\n\t\tp.destroy = function() {};\n\t\n\t\t/**\n\t\t * Cancel an in-progress request.\n\t\t * @method cancel\n\t\t */\n\t\tp.cancel = function() {};\n\t\n\t\tcreatejs.AbstractRequest = createjs.promote(AbstractRequest, \"EventDispatcher\");\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// TagRequest.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\t// constructor\n\t\t/**\n\t\t * An {{#crossLink \"AbstractRequest\"}}{{/crossLink}} that loads HTML tags, such as images and scripts.\n\t\t * @class TagRequest\n\t\t * @param {LoadItem} loadItem\n\t\t * @param {HTMLElement} tag\n\t\t * @param {String} srcAttribute The tag attribute that specifies the source, such as \"src\", \"href\", etc.\n\t\t */\n\t\tfunction TagRequest(loadItem, tag, srcAttribute) {\n\t\t\tthis.AbstractRequest_constructor(loadItem);\n\t\n\t\t\t// protected properties\n\t\t\t/**\n\t\t\t * The HTML tag instance that is used to load.\n\t\t\t * @property _tag\n\t\t\t * @type {HTMLElement}\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis._tag = tag;\n\t\n\t\t\t/**\n\t\t\t * The tag attribute that specifies the source, such as \"src\", \"href\", etc.\n\t\t\t * @property _tagSrcAttribute\n\t\t\t * @type {String}\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis._tagSrcAttribute = srcAttribute;\n\t\n\t\t\t/**\n\t\t\t * A method closure used for handling the tag load event.\n\t\t\t * @property _loadedHandler\n\t\t\t * @type {Function}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._loadedHandler = createjs.proxy(this._handleTagComplete, this);\n\t\n\t\t\t/**\n\t\t\t * Determines if the element was added to the DOM automatically by PreloadJS, so it can be cleaned up after.\n\t\t\t * @property _addedToDOM\n\t\t\t * @type {Boolean}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._addedToDOM = false;\n\t\n\t\t\t/**\n\t\t\t * Determines what the tags initial style.visibility was, so we can set it correctly after a load.\n\t\t\t *\n\t\t\t * @type {null}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._startTagVisibility = null;\n\t\t};\n\t\n\t\tvar p = createjs.extend(TagRequest, createjs.AbstractRequest);\n\t\n\t\t// public methods\n\t\tp.load = function () {\n\t\t\tthis._tag.onload = createjs.proxy(this._handleTagComplete, this);\n\t\t\tthis._tag.onreadystatechange = createjs.proxy(this._handleReadyStateChange, this);\n\t\t\tthis._tag.onerror = createjs.proxy(this._handleError, this);\n\t\n\t\t\tvar evt = new createjs.Event(\"initialize\");\n\t\t\tevt.loader = this._tag;\n\t\n\t\t\tthis.dispatchEvent(evt);\n\t\n\t\t\tthis._hideTag();\n\t\n\t\t\tthis._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout);\n\t\n\t\t\tthis._tag[this._tagSrcAttribute] = this._item.src;\n\t\n\t\t\t// wdg:: Append the tag AFTER setting the src, or SVG loading on iOS will fail.\n\t\t\tif (this._tag.parentNode == null) {\n\t\t\t\tcreatejs.DomUtils.appendToBody(this._tag);\n\t\t\t\tthis._addedToDOM = true;\n\t\t\t}\n\t\t};\n\t\n\t\tp.destroy = function() {\n\t\t\tthis._clean();\n\t\t\tthis._tag = null;\n\t\n\t\t\tthis.AbstractRequest_destroy();\n\t\t};\n\t\n\t\t// private methods\n\t\t/**\n\t\t * Handle the readyStateChange event from a tag. We need this in place of the `onload` callback (mainly SCRIPT\n\t\t * and LINK tags), but other cases may exist.\n\t\t * @method _handleReadyStateChange\n\t\t * @private\n\t\t */\n\t\tp._handleReadyStateChange = function () {\n\t\t\tclearTimeout(this._loadTimeout);\n\t\t\t// This is strictly for tags in browsers that do not support onload.\n\t\t\tvar tag = this._tag;\n\t\n\t\t\t// Complete is for old IE support.\n\t\t\tif (tag.readyState == \"loaded\" || tag.readyState == \"complete\") {\n\t\t\t\tthis._handleTagComplete();\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Handle any error events from the tag.\n\t\t * @method _handleError\n\t\t * @protected\n\t\t */\n\t\tp._handleError = function() {\n\t\t\tthis._clean();\n\t\t\tthis.dispatchEvent(\"error\");\n\t\t};\n\t\n\t\t/**\n\t\t * Handle the tag's onload callback.\n\t\t * @method _handleTagComplete\n\t\t * @private\n\t\t */\n\t\tp._handleTagComplete = function () {\n\t\t\tthis._rawResult = this._tag;\n\t\t\tthis._result = this.resultFormatter && this.resultFormatter(this) || this._rawResult;\n\t\n\t\t\tthis._clean();\n\t\t\tthis._showTag();\n\t\n\t\t\tthis.dispatchEvent(\"complete\");\n\t\t};\n\t\n\t\t/**\n\t\t * The tag request has not loaded within the time specified in loadTimeout.\n\t\t * @method _handleError\n\t\t * @param {Object} event The XHR error event.\n\t\t * @private\n\t\t */\n\t\tp._handleTimeout = function () {\n\t\t\tthis._clean();\n\t\t\tthis.dispatchEvent(new createjs.Event(\"timeout\"));\n\t\t};\n\t\n\t\t/**\n\t\t * Remove event listeners, but don't destroy the request object\n\t\t * @method _clean\n\t\t * @private\n\t\t */\n\t\tp._clean = function() {\n\t\t\tthis._tag.onload = null;\n\t\t\tthis._tag.onreadystatechange = null;\n\t\t\tthis._tag.onerror = null;\n\t\t\tif (this._addedToDOM && this._tag.parentNode != null) {\n\t\t\t\tthis._tag.parentNode.removeChild(this._tag);\n\t\t\t}\n\t\t\tclearTimeout(this._loadTimeout);\n\t\t};\n\t\n\t\tp._hideTag = function() {\n\t\t\tthis._startTagVisibility = this._tag.style.visibility;\n\t\t\tthis._tag.style.visibility = \"hidden\";\n\t\t};\n\t\n\t\tp._showTag = function() {\n\t\t\tthis._tag.style.visibility = this._startTagVisibility;\n\t\t};\n\t\n\t\t/**\n\t\t * Handle a stalled audio event. The main place this happens is with HTMLAudio in Chrome when playing back audio\n\t\t * that is already in a load, but not complete.\n\t\t * @method _handleStalled\n\t\t * @private\n\t\t */\n\t\tp._handleStalled = function () {\n\t\t\t//Ignore, let the timeout take care of it. Sometimes its not really stopped.\n\t\t};\n\t\n\t\tcreatejs.TagRequest = createjs.promote(TagRequest, \"AbstractRequest\");\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// MediaTagRequest.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\t// constructor\n\t\t/**\n\t\t * An {{#crossLink \"TagRequest\"}}{{/crossLink}} that loads HTML tags for video and audio.\n\t\t * @class MediaTagRequest\n\t\t * @param {LoadItem} loadItem\n\t\t * @param {HTMLAudioElement|HTMLVideoElement} tag\n\t\t * @param {String} srcAttribute The tag attribute that specifies the source, such as \"src\", \"href\", etc.\n\t\t * @constructor\n\t\t */\n\t\tfunction MediaTagRequest(loadItem, tag, srcAttribute) {\n\t\t\tthis.AbstractRequest_constructor(loadItem);\n\t\n\t\t\t// protected properties\n\t\t\tthis._tag = tag;\n\t\t\tthis._tagSrcAttribute = srcAttribute;\n\t\t\tthis._loadedHandler = createjs.proxy(this._handleTagComplete, this);\n\t\t};\n\t\n\t\tvar p = createjs.extend(MediaTagRequest, createjs.TagRequest);\n\t\tvar s = MediaTagRequest;\n\t\n\t\t// public methods\n\t\tp.load = function () {\n\t\t\tvar sc = createjs.proxy(this._handleStalled, this);\n\t\t\tthis._stalledCallback = sc;\n\t\n\t\t\tvar pc = createjs.proxy(this._handleProgress, this);\n\t\t\tthis._handleProgress = pc;\n\t\n\t\t\tthis._tag.addEventListener(\"stalled\", sc);\n\t\t\tthis._tag.addEventListener(\"progress\", pc);\n\t\n\t\t\t// This will tell us when audio is buffered enough to play through, but not when its loaded.\n\t\t\t// The tag doesn't keep loading in Chrome once enough has buffered, and we have decided that behaviour is sufficient.\n\t\t\tthis._tag.addEventListener && this._tag.addEventListener(\"canplaythrough\", this._loadedHandler, false); // canplaythrough callback doesn't work in Chrome, so we use an event.\n\t\n\t\t\tthis.TagRequest_load();\n\t\t};\n\t\n\t\t// private methods\n\t\tp._handleReadyStateChange = function () {\n\t\t\tclearTimeout(this._loadTimeout);\n\t\t\t// This is strictly for tags in browsers that do not support onload.\n\t\t\tvar tag = this._tag;\n\t\n\t\t\t// Complete is for old IE support.\n\t\t\tif (tag.readyState == \"loaded\" || tag.readyState == \"complete\") {\n\t\t\t\tthis._handleTagComplete();\n\t\t\t}\n\t\t};\n\t\n\t\tp._handleStalled = function () {\n\t\t\t//Ignore, let the timeout take care of it. Sometimes its not really stopped.\n\t\t};\n\t\n\t\t/**\n\t\t * An XHR request has reported progress.\n\t\t * @method _handleProgress\n\t\t * @param {Object} event The XHR progress event.\n\t\t * @private\n\t\t */\n\t\tp._handleProgress = function (event) {\n\t\t\tif (!event || event.loaded > 0 && event.total == 0) {\n\t\t\t\treturn; // Sometimes we get no \"total\", so just ignore the progress event.\n\t\t\t}\n\t\n\t\t\tvar newEvent = new createjs.ProgressEvent(event.loaded, event.total);\n\t\t\tthis.dispatchEvent(newEvent);\n\t\t};\n\t\n\t\t// protected methods\n\t\tp._clean = function () {\n\t\t\tthis._tag.removeEventListener && this._tag.removeEventListener(\"canplaythrough\", this._loadedHandler);\n\t\t\tthis._tag.removeEventListener(\"stalled\", this._stalledCallback);\n\t\t\tthis._tag.removeEventListener(\"progress\", this._progressCallback);\n\t\n\t\t\tthis.TagRequest__clean();\n\t\t};\n\t\n\t\tcreatejs.MediaTagRequest = createjs.promote(MediaTagRequest, \"TagRequest\");\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// XHRRequest.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t// constructor\n\t\t/**\n\t\t * A preloader that loads items using XHR requests, usually XMLHttpRequest. However XDomainRequests will be used\n\t\t * for cross-domain requests if possible, and older versions of IE fall back on to ActiveX objects when necessary.\n\t\t * XHR requests load the content as text or binary data, provide progress and consistent completion events, and\n\t\t * can be canceled during load. Note that XHR is not supported in IE 6 or earlier, and is not recommended for\n\t\t * cross-domain loading.\n\t\t * @class XHRRequest\n\t\t * @constructor\n\t\t * @param {Object} item The object that defines the file to load. Please see the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n\t\t * for an overview of supported file properties.\n\t\t * @extends AbstractLoader\n\t\t */\n\t\tfunction XHRRequest (item) {\n\t\t\tthis.AbstractRequest_constructor(item);\n\t\n\t\t\t// protected properties\n\t\t\t/**\n\t\t\t * A reference to the XHR request used to load the content.\n\t\t\t * @property _request\n\t\t\t * @type {XMLHttpRequest | XDomainRequest | ActiveX.XMLHTTP}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._request = null;\n\t\n\t\t\t/**\n\t\t\t * A manual load timeout that is used for browsers that do not support the onTimeout event on XHR (XHR level 1,\n\t\t\t * typically IE9).\n\t\t\t * @property _loadTimeout\n\t\t\t * @type {Number}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._loadTimeout = null;\n\t\n\t\t\t/**\n\t\t\t * The browser's XHR (XMLHTTPRequest) version. Supported versions are 1 and 2. There is no official way to detect\n\t\t\t * the version, so we use capabilities to make a best guess.\n\t\t\t * @property _xhrLevel\n\t\t\t * @type {Number}\n\t\t\t * @default 1\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._xhrLevel = 1;\n\t\n\t\t\t/**\n\t\t\t * The response of a loaded file. This is set because it is expensive to look up constantly. This property will be\n\t\t\t * null until the file is loaded.\n\t\t\t * @property _response\n\t\t\t * @type {mixed}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._response = null;\n\t\n\t\t\t/**\n\t\t\t * The response of the loaded file before it is modified. In most cases, content is converted from raw text to\n\t\t\t * an HTML tag or a formatted object which is set to the <code>result</code> property, but the developer may still\n\t\t\t * want to access the raw content as it was loaded.\n\t\t\t * @property _rawResponse\n\t\t\t * @type {String|Object}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._rawResponse = null;\n\t\n\t\t\tthis._canceled = false;\n\t\n\t\t\t// Setup our event handlers now.\n\t\t\tthis._handleLoadStartProxy = createjs.proxy(this._handleLoadStart, this);\n\t\t\tthis._handleProgressProxy = createjs.proxy(this._handleProgress, this);\n\t\t\tthis._handleAbortProxy = createjs.proxy(this._handleAbort, this);\n\t\t\tthis._handleErrorProxy = createjs.proxy(this._handleError, this);\n\t\t\tthis._handleTimeoutProxy = createjs.proxy(this._handleTimeout, this);\n\t\t\tthis._handleLoadProxy = createjs.proxy(this._handleLoad, this);\n\t\t\tthis._handleReadyStateChangeProxy = createjs.proxy(this._handleReadyStateChange, this);\n\t\n\t\t\tif (!this._createXHR(item)) {\n\t\t\t\t//TODO: Throw error?\n\t\t\t}\n\t\t};\n\t\n\t\tvar p = createjs.extend(XHRRequest, createjs.AbstractRequest);\n\t\n\t// static properties\n\t\t/**\n\t\t * A list of XMLHTTP object IDs to try when building an ActiveX object for XHR requests in earlier versions of IE.\n\t\t * @property ACTIVEX_VERSIONS\n\t\t * @type {Array}\n\t\t * @since 0.4.2\n\t\t * @private\n\t\t */\n\t\tXHRRequest.ACTIVEX_VERSIONS = [\n\t\t\t\"Msxml2.XMLHTTP.6.0\",\n\t\t\t\"Msxml2.XMLHTTP.5.0\",\n\t\t\t\"Msxml2.XMLHTTP.4.0\",\n\t\t\t\"MSXML2.XMLHTTP.3.0\",\n\t\t\t\"MSXML2.XMLHTTP\",\n\t\t\t\"Microsoft.XMLHTTP\"\n\t\t];\n\t\n\t// Public methods\n\t\t/**\n\t\t * Look up the loaded result.\n\t\t * @method getResult\n\t\t * @param {Boolean} [raw=false] Return a raw result instead of a formatted result. This applies to content\n\t\t * loaded via XHR such as scripts, XML, CSS, and Images. If there is no raw result, the formatted result will be\n\t\t * returned instead.\n\t\t * @return {Object} A result object containing the content that was loaded, such as:\n\t\t * <ul>\n\t\t *      <li>An image tag (&lt;image /&gt;) for images</li>\n\t\t *      <li>A script tag for JavaScript (&lt;script /&gt;). Note that scripts loaded with tags may be added to the\n\t\t *      HTML head.</li>\n\t\t *      <li>A style tag for CSS (&lt;style /&gt;)</li>\n\t\t *      <li>Raw text for TEXT</li>\n\t\t *      <li>A formatted JavaScript object defined by JSON</li>\n\t\t *      <li>An XML document</li>\n\t\t *      <li>An binary arraybuffer loaded by XHR</li>\n\t\t * </ul>\n\t\t * Note that if a raw result is requested, but not found, the result will be returned instead.\n\t\t */\n\t\tp.getResult = function (raw) {\n\t\t\tif (raw && this._rawResponse) {\n\t\t\t\treturn this._rawResponse;\n\t\t\t}\n\t\t\treturn this._response;\n\t\t};\n\t\n\t\t// Overrides abstract method in AbstractRequest\n\t\tp.cancel = function () {\n\t\t\tthis.canceled = true;\n\t\t\tthis._clean();\n\t\t\tthis._request.abort();\n\t\t};\n\t\n\t\t// Overrides abstract method in AbstractLoader\n\t\tp.load = function () {\n\t\t\tif (this._request == null) {\n\t\t\t\tthis._handleError();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t//Events\n\t\t\tif (this._request.addEventListener != null) {\n\t\t\t\tthis._request.addEventListener(\"loadstart\", this._handleLoadStartProxy, false);\n\t\t\t\tthis._request.addEventListener(\"progress\", this._handleProgressProxy, false);\n\t\t\t\tthis._request.addEventListener(\"abort\", this._handleAbortProxy, false);\n\t\t\t\tthis._request.addEventListener(\"error\", this._handleErrorProxy, false);\n\t\t\t\tthis._request.addEventListener(\"timeout\", this._handleTimeoutProxy, false);\n\t\n\t\t\t\t// Note: We don't get onload in all browsers (earlier FF and IE). onReadyStateChange handles these.\n\t\t\t\tthis._request.addEventListener(\"load\", this._handleLoadProxy, false);\n\t\t\t\tthis._request.addEventListener(\"readystatechange\", this._handleReadyStateChangeProxy, false);\n\t\t\t} else {\n\t\t\t\t// IE9 support\n\t\t\t\tthis._request.onloadstart = this._handleLoadStartProxy;\n\t\t\t\tthis._request.onprogress = this._handleProgressProxy;\n\t\t\t\tthis._request.onabort = this._handleAbortProxy;\n\t\t\t\tthis._request.onerror = this._handleErrorProxy;\n\t\t\t\tthis._request.ontimeout = this._handleTimeoutProxy;\n\t\n\t\t\t\t// Note: We don't get onload in all browsers (earlier FF and IE). onReadyStateChange handles these.\n\t\t\t\tthis._request.onload = this._handleLoadProxy;\n\t\t\t\tthis._request.onreadystatechange = this._handleReadyStateChangeProxy;\n\t\t\t}\n\t\n\t\t\t// Set up a timeout if we don't have XHR2\n\t\t\tif (this._xhrLevel == 1) {\n\t\t\t\tthis._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout);\n\t\t\t}\n\t\n\t\t\t// Sometimes we get back 404s immediately, particularly when there is a cross origin request.  // note this does not catch in Chrome\n\t\t\ttry {\n\t\t\t\tif (!this._item.values) {\n\t\t\t\t\tthis._request.send();\n\t\t\t\t} else {\n\t\t\t\t\tthis._request.send(createjs.URLUtils.formatQueryString(this._item.values));\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.dispatchEvent(new createjs.ErrorEvent(\"XHR_SEND\", null, error));\n\t\t\t}\n\t\t};\n\t\n\t\tp.setResponseType = function (type) {\n\t\t\t// Some old browsers doesn't support blob, so we convert arraybuffer to blob after response is downloaded\n\t\t\tif (type === 'blob') {\n\t\t\t\ttype = window.URL ? 'blob' : 'arraybuffer';\n\t\t\t\tthis._responseType = type;\n\t\t\t}\n\t\t\tthis._request.responseType = type;\n\t\t};\n\t\n\t\t/**\n\t\t * Get all the response headers from the XmlHttpRequest.\n\t\t *\n\t\t * <strong>From the docs:</strong> Return all the HTTP headers, excluding headers that are a case-insensitive match\n\t\t * for Set-Cookie or Set-Cookie2, as a single string, with each header line separated by a U+000D CR U+000A LF pair,\n\t\t * excluding the status line, and with each header name and header value separated by a U+003A COLON U+0020 SPACE\n\t\t * pair.\n\t\t * @method getAllResponseHeaders\n\t\t * @return {String}\n\t\t * @since 0.4.1\n\t\t */\n\t\tp.getAllResponseHeaders = function () {\n\t\t\tif (this._request.getAllResponseHeaders instanceof Function) {\n\t\t\t\treturn this._request.getAllResponseHeaders();\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Get a specific response header from the XmlHttpRequest.\n\t\t *\n\t\t * <strong>From the docs:</strong> Returns the header field value from the response of which the field name matches\n\t\t * header, unless the field name is Set-Cookie or Set-Cookie2.\n\t\t * @method getResponseHeader\n\t\t * @param {String} header The header name to retrieve.\n\t\t * @return {String}\n\t\t * @since 0.4.1\n\t\t */\n\t\tp.getResponseHeader = function (header) {\n\t\t\tif (this._request.getResponseHeader instanceof Function) {\n\t\t\t\treturn this._request.getResponseHeader(header);\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t};\n\t\n\t// protected methods\n\t\t/**\n\t\t * The XHR request has reported progress.\n\t\t * @method _handleProgress\n\t\t * @param {Object} event The XHR progress event.\n\t\t * @private\n\t\t */\n\t\tp._handleProgress = function (event) {\n\t\t\tif (!event || event.loaded > 0 && event.total == 0) {\n\t\t\t\treturn; // Sometimes we get no \"total\", so just ignore the progress event.\n\t\t\t}\n\t\n\t\t\tvar newEvent = new createjs.ProgressEvent(event.loaded, event.total);\n\t\t\tthis.dispatchEvent(newEvent);\n\t\t};\n\t\n\t\t/**\n\t\t * The XHR request has reported a load start.\n\t\t * @method _handleLoadStart\n\t\t * @param {Object} event The XHR loadStart event.\n\t\t * @private\n\t\t */\n\t\tp._handleLoadStart = function (event) {\n\t\t\tclearTimeout(this._loadTimeout);\n\t\t\tthis.dispatchEvent(\"loadstart\");\n\t\t};\n\t\n\t\t/**\n\t\t * The XHR request has reported an abort event.\n\t\t * @method handleAbort\n\t\t * @param {Object} event The XHR abort event.\n\t\t * @private\n\t\t */\n\t\tp._handleAbort = function (event) {\n\t\t\tthis._clean();\n\t\t\tthis.dispatchEvent(new createjs.ErrorEvent(\"XHR_ABORTED\", null, event));\n\t\t};\n\t\n\t\t/**\n\t\t * The XHR request has reported an error event.\n\t\t * @method _handleError\n\t\t * @param {Object} event The XHR error event.\n\t\t * @private\n\t\t */\n\t\tp._handleError = function (event) {\n\t\t\tthis._clean();\n\t\t\tthis.dispatchEvent(new createjs.ErrorEvent(event.message));\n\t\t};\n\t\n\t\t/**\n\t\t * The XHR request has reported a readyState change. Note that older browsers (IE 7 & 8) do not provide an onload\n\t\t * event, so we must monitor the readyStateChange to determine if the file is loaded.\n\t\t * @method _handleReadyStateChange\n\t\t * @param {Object} event The XHR readyStateChange event.\n\t\t * @private\n\t\t */\n\t\tp._handleReadyStateChange = function (event) {\n\t\t\tif (this._request.readyState == 4) {\n\t\t\t\tthis._handleLoad();\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * The XHR request has completed. This is called by the XHR request directly, or by a readyStateChange that has\n\t\t * <code>request.readyState == 4</code>. Only the first call to this method will be processed.\n\t\t * @method _handleLoad\n\t\t * @param {Object} event The XHR load event.\n\t\t * @private\n\t\t */\n\t\tp._handleLoad = function (event) {\n\t\t\tif (this.loaded) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.loaded = true;\n\t\n\t\t\tvar error = this._checkError();\n\t\t\tif (error) {\n\t\t\t\tthis._handleError(error);\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tthis._response = this._getResponse();\n\t\t\t// Convert arraybuffer back to blob\n\t\t\tif (this._responseType === 'arraybuffer') {\n\t\t\t\ttry {\n\t\t\t\t\tthis._response = new Blob([this._response]);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Fallback to use BlobBuilder if Blob constructor is not supported\n\t\t\t\t\t// Tested on Android 2.3 ~ 4.2 and iOS5 safari\n\t\t\t\t\twindow.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n\t\t\t\t\tif (e.name === 'TypeError' && window.BlobBuilder) {\n\t\t\t\t\t\tvar builder = new BlobBuilder();\n\t\t\t\t\t\tbuilder.append(this._response);\n\t\t\t\t\t\tthis._response = builder.getBlob();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clean();\n\t\n\t\t\tthis.dispatchEvent(new createjs.Event(\"complete\"));\n\t\t};\n\t\n\t\t/**\n\t\t * The XHR request has timed out. This is called by the XHR request directly, or via a <code>setTimeout</code>\n\t\t * callback.\n\t\t * @method _handleTimeout\n\t\t * @param {Object} [event] The XHR timeout event. This is occasionally null when called by the backup setTimeout.\n\t\t * @private\n\t\t */\n\t\tp._handleTimeout = function (event) {\n\t\t\tthis._clean();\n\t\t\tthis.dispatchEvent(new createjs.ErrorEvent(\"PRELOAD_TIMEOUT\", null, event));\n\t\t};\n\t\n\t// Protected\n\t\t/**\n\t\t * Determine if there is an error in the current load. This checks the status of the request for problem codes. Note\n\t\t * that this does not check for an actual response. Currently, it only checks for error codes between 400 and 599\n\t\t * @method _checkError\n\t\t * @return {int} If the request status returns an error code.\n\t\t * @private\n\t\t */\n\t\tp._checkError = function () {\n\t\t\tvar status = parseInt(this._request.status);\n\t\t\tif (status >= 400 && status <= 599) {\n\t\t\t\treturn new Error(status);\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t};\n\t\n\t\n\t\t/**\n\t\t * Validate the response. Different browsers have different approaches, some of which throw errors when accessed\n\t\t * in other browsers. If there is no response, the <code>_response</code> property will remain null.\n\t\t * @method _getResponse\n\t\t * @private\n\t\t */\n\t\tp._getResponse = function () {\n\t\t\tif (this._response != null) {\n\t\t\t\treturn this._response;\n\t\t\t}\n\t\n\t\t\tif (this._request.response != null) {\n\t\t\t\treturn this._request.response;\n\t\t\t}\n\t\n\t\t\t// Android 2.2 uses .responseText\n\t\t\ttry {\n\t\t\t\tif (this._request.responseText != null) {\n\t\t\t\t\treturn this._request.responseText;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t}\n\t\n\t\t\t// When loading XML, IE9 does not return .response, instead it returns responseXML.xml\n\t\t\ttry {\n\t\t\t\tif (this._request.responseXML != null) {\n\t\t\t\t\treturn this._request.responseXML;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t}\n\t\n\t\t\treturn null;\n\t\t};\n\t\n\t\t/**\n\t\t * Create an XHR request. Depending on a number of factors, we get totally different results.\n\t\t * <ol><li>Some browsers get an <code>XDomainRequest</code> when loading cross-domain.</li>\n\t\t *      <li>XMLHttpRequest are created when available.</li>\n\t\t *      <li>ActiveX.XMLHTTP objects are used in older IE browsers.</li>\n\t\t *      <li>Text requests override the mime type if possible</li>\n\t\t *      <li>Origin headers are sent for crossdomain requests in some browsers.</li>\n\t\t *      <li>Binary loads set the response type to \"arraybuffer\"</li></ol>\n\t\t * @method _createXHR\n\t\t * @param {Object} item The requested item that is being loaded.\n\t\t * @return {Boolean} If an XHR request or equivalent was successfully created.\n\t\t * @private\n\t\t */\n\t\tp._createXHR = function (item) {\n\t\t\t// Check for cross-domain loads. We can't fully support them, but we can try.\n\t\t\tvar crossdomain = createjs.URLUtils.isCrossDomain(item);\n\t\t\tvar headers = {};\n\t\n\t\t\t// Create the request. Fallback to whatever support we have.\n\t\t\tvar req = null;\n\t\t\tif (window.XMLHttpRequest) {\n\t\t\t\treq = new XMLHttpRequest();\n\t\t\t\t// This is 8 or 9, so use XDomainRequest instead.\n\t\t\t\tif (crossdomain && req.withCredentials === undefined && window.XDomainRequest) {\n\t\t\t\t\treq = new XDomainRequest();\n\t\t\t\t}\n\t\t\t} else { // Old IE versions use a different approach\n\t\t\t\tfor (var i = 0, l = s.ACTIVEX_VERSIONS.length; i < l; i++) {\n\t\t\t\t\tvar axVersion = s.ACTIVEX_VERSIONS[i];\n\t\t\t\t\ttry {\n\t\t\t\t\t\treq = new ActiveXObject(axVersion);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (req == null) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Default to utf-8 for Text requests.\n\t\t\tif (item.mimeType == null && createjs.RequestUtils.isText(item.type)) {\n\t\t\t\titem.mimeType = \"text/plain; charset=utf-8\";\n\t\t\t}\n\t\n\t\t\t// IE9 doesn't support overrideMimeType(), so we need to check for it.\n\t\t\tif (item.mimeType && req.overrideMimeType) {\n\t\t\t\treq.overrideMimeType(item.mimeType);\n\t\t\t}\n\t\n\t\t\t// Determine the XHR level\n\t\t\tthis._xhrLevel = (typeof req.responseType === \"string\") ? 2 : 1;\n\t\n\t\t\tvar src = null;\n\t\t\tif (item.method == createjs.AbstractLoader.GET) {\n\t\t\t\tsrc = createjs.URLUtils.buildURI(item.src, item.values);\n\t\t\t} else {\n\t\t\t\tsrc = item.src;\n\t\t\t}\n\t\n\t\t\t// Open the request.  Set cross-domain flags if it is supported (XHR level 1 only)\n\t\t\treq.open(item.method || createjs.AbstractLoader.GET, src, true);\n\t\n\t\t\tif (crossdomain && req instanceof XMLHttpRequest && this._xhrLevel == 1) {\n\t\t\t\theaders[\"Origin\"] = location.origin;\n\t\t\t}\n\t\n\t\t\t// To send data we need to set the Content-type header)\n\t\t\tif (item.values && item.method == createjs.AbstractLoader.POST) {\n\t\t\t\theaders[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n\t\t\t}\n\t\n\t\t\tif (!crossdomain && !headers[\"X-Requested-With\"]) {\n\t\t\t\theaders[\"X-Requested-With\"] = \"XMLHttpRequest\";\n\t\t\t}\n\t\n\t\t\tif (item.headers) {\n\t\t\t\tfor (var n in item.headers) {\n\t\t\t\t\theaders[n] = item.headers[n];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor (n in headers) {\n\t\t\t\treq.setRequestHeader(n, headers[n])\n\t\t\t}\n\t\n\t\t\tif (req instanceof XMLHttpRequest && item.withCredentials !== undefined) {\n\t\t\t\treq.withCredentials = item.withCredentials;\n\t\t\t}\n\t\n\t\t\tthis._request = req;\n\t\n\t\t\treturn true;\n\t\t};\n\t\n\t\t/**\n\t\t * A request has completed (or failed or canceled), and needs to be disposed.\n\t\t * @method _clean\n\t\t * @private\n\t\t */\n\t\tp._clean = function () {\n\t\t\tclearTimeout(this._loadTimeout);\n\t\n\t\t\tif (this._request.removeEventListener != null) {\n\t\t\t\tthis._request.removeEventListener(\"loadstart\", this._handleLoadStartProxy);\n\t\t\t\tthis._request.removeEventListener(\"progress\", this._handleProgressProxy);\n\t\t\t\tthis._request.removeEventListener(\"abort\", this._handleAbortProxy);\n\t\t\t\tthis._request.removeEventListener(\"error\", this._handleErrorProxy);\n\t\t\t\tthis._request.removeEventListener(\"timeout\", this._handleTimeoutProxy);\n\t\t\t\tthis._request.removeEventListener(\"load\", this._handleLoadProxy);\n\t\t\t\tthis._request.removeEventListener(\"readystatechange\", this._handleReadyStateChangeProxy);\n\t\t\t} else {\n\t\t\t\tthis._request.onloadstart = null;\n\t\t\t\tthis._request.onprogress = null;\n\t\t\t\tthis._request.onabort = null;\n\t\t\t\tthis._request.onerror = null;\n\t\t\t\tthis._request.ontimeout = null;\n\t\t\t\tthis._request.onload = null;\n\t\t\t\tthis._request.onreadystatechange = null;\n\t\t\t}\n\t\t};\n\t\n\t\tp.toString = function () {\n\t\t\treturn \"[PreloadJS XHRRequest]\";\n\t\t};\n\t\n\t\tcreatejs.XHRRequest = createjs.promote(XHRRequest, \"AbstractRequest\");\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// LoadQueue.js\n\t//##############################################################################\n\t\n\t/*\n\t TODO: WINDOWS ISSUES\n\t * No error for HTML audio in IE 678\n\t * SVG no failure error in IE 67 (maybe 8) TAGS AND XHR\n\t * No script complete handler in IE 67 TAGS (XHR is fine)\n\t * No XML/JSON in IE6 TAGS\n\t * Need to hide loading SVG in Opera TAGS\n\t * No CSS onload/readystatechange in Safari or Android TAGS (requires rule checking)\n\t * SVG no load or failure in Opera XHR\n\t * Reported issues with IE7/8\n\t */\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t// constructor\n\t\t/**\n\t\t * The LoadQueue class is the main API for preloading content. LoadQueue is a load manager, which can preload either\n\t\t * a single file, or queue of files.\n\t\t *\n\t\t * <b>Creating a Queue</b><br />\n\t\t * To use LoadQueue, create a LoadQueue instance. If you want to force tag loading where possible, set the preferXHR\n\t\t * argument to false.\n\t\t *\n\t\t *      var queue = new createjs.LoadQueue(true);\n\t\t *\n\t\t * <b>Listening for Events</b><br />\n\t\t * Add any listeners you want to the queue. Since PreloadJS 0.3.0, the {{#crossLink \"EventDispatcher\"}}{{/crossLink}}\n\t\t * lets you add as many listeners as you want for events. You can subscribe to the following events:<ul>\n\t\t *     <li>{{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}}: fired when a queue completes loading all\n\t\t *     files</li>\n\t\t *     <li>{{#crossLink \"AbstractLoader/error:event\"}}{{/crossLink}}: fired when the queue encounters an error with\n\t\t *     any file.</li>\n\t\t *     <li>{{#crossLink \"AbstractLoader/progress:event\"}}{{/crossLink}}: Progress for the entire queue has\n\t\t *     changed.</li>\n\t\t *     <li>{{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}}: A single file has completed loading.</li>\n\t\t *     <li>{{#crossLink \"LoadQueue/fileprogress:event\"}}{{/crossLink}}: Progress for a single file has changes. Note\n\t\t *     that only files loaded with XHR (or possibly by plugins) will fire progress events other than 0 or 100%.</li>\n\t\t * </ul>\n\t\t *\n\t\t *      queue.on(\"fileload\", handleFileLoad, this);\n\t\t *      queue.on(\"complete\", handleComplete, this);\n\t\t *\n\t\t * <b>Adding files and manifests</b><br />\n\t\t * Add files you want to load using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} or add multiple files at a\n\t\t * time using a list or a manifest definition using {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}. Files are\n\t\t * appended to the end of the active queue, so you can use these methods as many times as you like, whenever you\n\t\t * like.\n\t\t *\n\t\t *      queue.loadFile(\"filePath/file.jpg\");\n\t\t *      queue.loadFile({id:\"image\", src:\"filePath/file.jpg\"});\n\t\t *      queue.loadManifest([\"filePath/file.jpg\", {id:\"image\", src:\"filePath/file.jpg\"}]);\n\t\t *\n\t\t *      // Use an external manifest\n\t\t *      queue.loadManifest(\"path/to/manifest.json\");\n\t\t *      queue.loadManifest({src:\"manifest.json\", type:\"manifest\"});\n\t\t *\n\t\t * If you pass `false` as the `loadNow` parameter, the queue will not kick of the load of the files, but it will not\n\t\t * stop if it has already been started. Call the {{#crossLink \"AbstractLoader/load\"}}{{/crossLink}} method to begin\n\t\t * a paused queue. Note that a paused queue will automatically resume when new files are added to it with a\n\t\t * `loadNow` argument of `true`.\n\t\t *\n\t\t *      queue.load();\n\t\t *\n\t\t * <b>File Types</b><br />\n\t\t * The file type of a manifest item is auto-determined by the file extension. The pattern matching in PreloadJS\n\t\t * should handle the majority of standard file and url formats, and works with common file extensions. If you have\n\t\t * either a non-standard file extension, or are serving the file using a proxy script, then you can pass in a\n\t\t * <code>type</code> property with any manifest item.\n\t\t *\n\t\t *      queue.loadFile({src:\"path/to/myFile.mp3x\", type:createjs.AbstractLoader.SOUND});\n\t\t *\n\t\t *      // Note that PreloadJS will not read a file extension from the query string\n\t\t *      queue.loadFile({src:\"http://server.com/proxy?file=image.jpg\", type:createjs.AbstractLoader.IMAGE});\n\t\t *\n\t\t * Supported types are defined on the {{#crossLink \"AbstractLoader\"}}{{/crossLink}} class, and include:\n\t\t * <ul>\n\t\t *     <li>{{#crossLink \"AbstractLoader/BINARY:property\"}}{{/crossLink}}: Raw binary data via XHR</li>\n\t\t *     <li>{{#crossLink \"AbstractLoader/CSS:property\"}}{{/crossLink}}: CSS files</li>\n\t\t *     <li>{{#crossLink \"AbstractLoader/IMAGE:property\"}}{{/crossLink}}: Common image formats</li>\n\t\t *     <li>{{#crossLink \"AbstractLoader/JAVASCRIPT:property\"}}{{/crossLink}}: JavaScript files</li>\n\t\t *     <li>{{#crossLink \"AbstractLoader/JSON:property\"}}{{/crossLink}}: JSON data</li>\n\t\t *     <li>{{#crossLink \"AbstractLoader/JSONP:property\"}}{{/crossLink}}: JSON files cross-domain</li>\n\t\t *     <li>{{#crossLink \"AbstractLoader/MANIFEST:property\"}}{{/crossLink}}: A list of files to load in JSON format, see\n\t\t *     {{#crossLink \"AbstractLoader/loadManifest\"}}{{/crossLink}}</li>\n\t\t *     <li>{{#crossLink \"AbstractLoader/SOUND:property\"}}{{/crossLink}}: Audio file formats</li>\n\t\t *     <li>{{#crossLink \"AbstractLoader/SPRITESHEET:property\"}}{{/crossLink}}: JSON SpriteSheet definitions. This\n\t\t *     will also load sub-images, and provide a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance.</li>\n\t\t *     <li>{{#crossLink \"AbstractLoader/SVG:property\"}}{{/crossLink}}: SVG files</li>\n\t\t *     <li>{{#crossLink \"AbstractLoader/TEXT:property\"}}{{/crossLink}}: Text files - XHR only</li>\n\t     *     <li>{{#crossLink \"AbstractLoader/VIDEO:property\"}}{{/crossLink}}: Video objects</li>\n\t\t *     <li>{{#crossLink \"AbstractLoader/XML:property\"}}{{/crossLink}}: XML data</li>\n\t\t * </ul>\n\t\t *\n\t\t * <em>Note: Loader types used to be defined on LoadQueue, but have been moved to AbstractLoader for better\n\t\t * portability of loader classes, which can be used individually now. The properties on LoadQueue still exist, but\n\t\t * are deprecated.</em>\n\t\t *\n\t\t * <b>Handling Results</b><br />\n\t\t * When a file is finished downloading, a {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event is\n\t\t * dispatched. In an example above, there is an event listener snippet for fileload. Loaded files are usually a\n\t\t * formatted object that can be used immediately, including:\n\t\t * <ul>\n\t\t *     <li>Binary: The binary loaded result</li>\n\t\t *     <li>CSS: A &lt;link /&gt; tag</li>\n\t\t *     <li>Image: An &lt;img /&gt; tag</li>\n\t\t *     <li>JavaScript: A &lt;script /&gt; tag</li>\n\t\t *     <li>JSON/JSONP: A formatted JavaScript Object</li>\n\t\t *     <li>Manifest: A JavaScript object.\n\t\t *     <li>Sound: An &lt;audio /&gt; tag</a>\n\t\t *     <li>SpriteSheet: A {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance, containing loaded images.\n\t\t *     <li>SVG: An &lt;object /&gt; tag</li>\n\t\t *     <li>Text: Raw text</li>\n\t     *     <li>Video: A Video DOM node</li>\n\t\t *     <li>XML: An XML DOM node</li>\n\t\t * </ul>\n\t\t *\n\t\t *      function handleFileLoad(event) {\n\t\t *          var item = event.item; // A reference to the item that was passed in to the LoadQueue\n\t\t *          var type = item.type;\n\t\t *\n\t\t *          // Add any images to the page body.\n\t\t *          if (type == createjs.LoadQueue.IMAGE) {\n\t\t *              document.body.appendChild(event.result);\n\t\t *          }\n\t\t *      }\n\t\t *\n\t\t * At any time after the file has been loaded (usually after the queue has completed), any result can be looked up\n\t\t * via its \"id\" using {{#crossLink \"LoadQueue/getResult\"}}{{/crossLink}}. If no id was provided, then the\n\t\t * \"src\" or file path can be used instead, including the `path` defined by a manifest, but <strong>not including</strong>\n\t\t * a base path defined on the LoadQueue. It is recommended to always pass an id if you want to look up content.\n\t\t *\n\t\t *      var image = queue.getResult(\"image\");\n\t\t *      document.body.appendChild(image);\n\t\t *\n\t\t * Raw loaded content can be accessed using the <code>rawResult</code> property of the {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}}\n\t\t * event, or can be looked up using {{#crossLink \"LoadQueue/getResult\"}}{{/crossLink}}, passing `true` as the 2nd\n\t\t * argument. This is only applicable for content that has been parsed for the browser, specifically: JavaScript,\n\t\t * CSS, XML, SVG, and JSON objects, or anything loaded with XHR.\n\t\t *\n\t\t *      var image = queue.getResult(\"image\", true); // load the binary image data loaded with XHR.\n\t\t *\n\t\t * <b>Plugins</b><br />\n\t\t * LoadQueue has a simple plugin architecture to help process and preload content. For example, to preload audio,\n\t\t * make sure to install the <a href=\"http://soundjs.com\">SoundJS</a> Sound class, which will help load HTML audio,\n\t\t * Flash audio, and WebAudio files. This should be installed <strong>before</strong> loading any audio files.\n\t\t *\n\t\t *      queue.installPlugin(createjs.Sound);\n\t\t *\n\t\t * <h4>Known Browser Issues</h4>\n\t\t * <ul>\n\t\t *     <li>Browsers without audio support can not load audio files.</li>\n\t\t *     <li>Safari on Mac OS X can only play HTML audio if QuickTime is installed</li>\n\t\t *     <li>HTML Audio tags will only download until their <code>canPlayThrough</code> event is fired. Browsers other\n\t\t *     than Chrome will continue to download in the background.</li>\n\t\t *     <li>When loading scripts using tags, they are automatically added to the document.</li>\n\t\t *     <li>Scripts loaded via XHR may not be properly inspectable with browser tools.</li>\n\t\t *     <li>IE6 and IE7 (and some other browsers) may not be able to load XML, Text, or JSON, since they require\n\t\t *     XHR to work.</li>\n\t\t *     <li>Content loaded via tags will not show progress, and will continue to download in the background when\n\t\t *     canceled, although no events will be dispatched.</li>\n\t\t * </ul>\n\t\t *\n\t\t * @class LoadQueue\n\t\t * @param {Boolean} [preferXHR=true] Determines whether the preload instance will favor loading with XHR (XML HTTP\n\t\t * Requests), or HTML tags. When this is `false`, the queue will use tag loading when possible, and fall back on XHR\n\t\t * when necessary.\n\t\t * @param {String} [basePath=\"\"] A path that will be prepended on to the source parameter of all items in the queue\n\t\t * before they are loaded.  Sources beginning with a protocol such as `http://` or a relative path such as `../`\n\t\t * will not receive a base path.\n\t\t * @param {String|Boolean} [crossOrigin=\"\"] An optional flag to support images loaded from a CORS-enabled server. To\n\t\t * use it, set this value to `true`, which will default the crossOrigin property on images to \"Anonymous\". Any\n\t\t * string value will be passed through, but only \"\" and \"Anonymous\" are recommended. <strong>Note: The crossOrigin\n\t\t * parameter is deprecated. Use LoadItem.crossOrigin instead</strong>\n\t\t *\n\t\t * @constructor\n\t\t * @extends AbstractLoader\n\t\t */\n\t\tfunction LoadQueue (preferXHR, basePath, crossOrigin) {\n\t\t\tthis.AbstractLoader_constructor();\n\t\n\t\t\t/**\n\t\t\t * An array of the plugins registered using {{#crossLink \"LoadQueue/installPlugin\"}}{{/crossLink}}.\n\t\t\t * @property _plugins\n\t\t\t * @type {Array}\n\t\t\t * @private\n\t\t\t * @since 0.6.1\n\t\t\t */\n\t\t\tthis._plugins = [];\n\t\n\t\t\t/**\n\t\t\t * An object hash of callbacks that are fired for each file type before the file is loaded, giving plugins the\n\t\t\t * ability to override properties of the load. Please see the {{#crossLink \"LoadQueue/installPlugin\"}}{{/crossLink}}\n\t\t\t * method for more information.\n\t\t\t * @property _typeCallbacks\n\t\t\t * @type {Object}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._typeCallbacks = {};\n\t\n\t\t\t/**\n\t\t\t * An object hash of callbacks that are fired for each file extension before the file is loaded, giving plugins the\n\t\t\t * ability to override properties of the load. Please see the {{#crossLink \"LoadQueue/installPlugin\"}}{{/crossLink}}\n\t\t\t * method for more information.\n\t\t\t * @property _extensionCallbacks\n\t\t\t * @type {null}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._extensionCallbacks = {};\n\t\n\t\t\t/**\n\t\t\t * The next preload queue to process when this one is complete. If an error is thrown in the current queue, and\n\t\t\t * {{#crossLink \"LoadQueue/stopOnError:property\"}}{{/crossLink}} is `true`, the next queue will not be processed.\n\t\t\t * @property next\n\t\t\t * @type {LoadQueue}\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis.next = null;\n\t\n\t\t\t/**\n\t\t\t * Ensure loaded scripts \"complete\" in the order they are specified. Loaded scripts are added to the document head\n\t\t\t * once they are loaded. Scripts loaded via tags will load one-at-a-time when this property is `true`, whereas\n\t\t\t * scripts loaded using XHR can load in any order, but will \"finish\" and be added to the document in the order\n\t\t\t * specified.\n\t\t\t *\n\t\t\t * Any items can be set to load in order by setting the {{#crossLink \"maintainOrder:property\"}}{{/crossLink}}\n\t\t\t * property on the load item, or by ensuring that only one connection can be open at a time using\n\t\t\t * {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}}. Note that when the `maintainScriptOrder` property\n\t\t\t * is set to `true`, scripts items are automatically set to `maintainOrder=true`, and changing the\n\t\t\t * `maintainScriptOrder` to `false` during a load will not change items already in a queue.\n\t\t\t *\n\t\t\t * <h4>Example</h4>\n\t\t\t *\n\t\t\t *      var queue = new createjs.LoadQueue();\n\t\t\t *      queue.setMaxConnections(3); // Set a higher number to load multiple items at once\n\t\t\t *      queue.maintainScriptOrder = true; // Ensure scripts are loaded in order\n\t\t\t *      queue.loadManifest([\n\t\t\t *          \"script1.js\",\n\t\t\t *          \"script2.js\",\n\t\t\t *          \"image.png\", // Load any time\n\t\t\t *          {src: \"image2.png\", maintainOrder: true} // Will wait for script2.js\n\t\t\t *          \"image3.png\",\n\t\t\t *          \"script3.js\" // Will wait for image2.png before loading (or completing when loading with XHR)\n\t\t\t *      ]);\n\t\t\t *\n\t\t\t * @property maintainScriptOrder\n\t\t\t * @type {Boolean}\n\t\t\t * @default true\n\t\t\t */\n\t\t\tthis.maintainScriptOrder = true;\n\t\n\t\t\t/**\n\t\t\t * Determines if the LoadQueue will stop processing the current queue when an error is encountered.\n\t\t\t * @property stopOnError\n\t\t\t * @type {Boolean}\n\t\t\t * @default false\n\t\t\t */\n\t\t\tthis.stopOnError = false;\n\t\n\t\t\t/**\n\t\t\t * The number of maximum open connections that a loadQueue tries to maintain. Please see\n\t\t\t * {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}} for more information.\n\t\t\t * @property _maxConnections\n\t\t\t * @type {Number}\n\t\t\t * @default 1\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._maxConnections = 1;\n\t\n\t\t\t/**\n\t\t\t * An internal list of all the default Loaders that are included with PreloadJS. Before an item is loaded, the\n\t\t\t * available loader list is iterated, in the order they are included, and as soon as a loader indicates it can\n\t\t\t * handle the content, it will be selected. The default loader, ({{#crossLink \"TextLoader\"}}{{/crossLink}} is\n\t\t\t * last in the list, so it will be used if no other match is found. Typically, loaders will match based on the\n\t\t\t * {{#crossLink \"LoadItem/type\"}}{{/crossLink}}, which is automatically determined using the file extension of\n\t\t\t * the {{#crossLink \"LoadItem/src:property\"}}{{/crossLink}}.\n\t\t\t *\n\t\t\t * Loaders can be removed from PreloadJS by simply not including them.\n\t\t\t *\n\t\t\t * Custom loaders installed using {{#crossLink \"registerLoader\"}}{{/crossLink}} will be prepended to this list\n\t\t\t * so that they are checked first.\n\t\t\t * @property _availableLoaders\n\t\t\t * @type {Array}\n\t\t\t * @private\n\t\t\t * @since 0.6.0\n\t\t\t */\n\t\t\tthis._availableLoaders = [\n\t\t\t\tcreatejs.ImageLoader,\n\t\t\t\tcreatejs.JavaScriptLoader,\n\t\t\t\tcreatejs.CSSLoader,\n\t\t\t\tcreatejs.JSONLoader,\n\t\t\t\tcreatejs.JSONPLoader,\n\t\t\t\tcreatejs.SoundLoader,\n\t\t\t\tcreatejs.ManifestLoader,\n\t\t\t\tcreatejs.SpriteSheetLoader,\n\t\t\t\tcreatejs.XMLLoader,\n\t\t\t\tcreatejs.SVGLoader,\n\t\t\t\tcreatejs.BinaryLoader,\n\t\t\t\tcreatejs.VideoLoader,\n\t\t\t\tcreatejs.TextLoader\n\t\t\t];\n\t\n\t\t\t/**\n\t\t\t * The number of built in loaders, so they can't be removed by {{#crossLink \"unregisterLoader\"}}{{/crossLink}.\n\t\t\t\t\t * @property _defaultLoaderLength\n\t\t\t * @type {Number}\n\t\t\t * @private\n\t\t\t * @since 0.6.0\n\t\t\t */\n\t\t\tthis._defaultLoaderLength = this._availableLoaders.length;\n\t\n\t\t\tthis.init(preferXHR, basePath, crossOrigin);\n\t\t}\n\t\n\t\tvar p = createjs.extend(LoadQueue, createjs.AbstractLoader);\n\t\tvar s = LoadQueue;\n\t\n\t\t/**\n\t\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t\t * for details.\n\t\t *\n\t\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t\t *\n\t\t * @method initialize\n\t\t * @protected\n\t\t * @deprecated\n\t\t */\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\t\n\t\t/**\n\t\t * An internal initialization method, which is used for initial set up, but also to reset the LoadQueue.\n\t\t * @method init\n\t\t * @param preferXHR\n\t\t * @param basePath\n\t\t * @param crossOrigin\n\t\t * @private\n\t\t */\n\t\tp.init = function (preferXHR, basePath, crossOrigin) {\n\t\n\t\t\t// public properties\n\t\t\t/**\n\t\t\t * @property useXHR\n\t\t\t * @type {Boolean}\n\t\t\t * @readonly\n\t\t\t * @default true\n\t\t\t * @deprecated Use preferXHR instead.\n\t\t\t */\n\t\t\tthis.useXHR = true;\n\t\n\t\t\t/**\n\t\t\t * Try and use XMLHttpRequest (XHR) when possible. Note that LoadQueue will default to tag loading or XHR\n\t\t\t * loading depending on the requirements for a media type. For example, HTML audio can not be loaded with XHR,\n\t\t\t * and plain text can not be loaded with tags, so it will default the the correct type instead of using the\n\t\t\t * user-defined type.\n\t\t\t * @type {Boolean}\n\t\t\t * @default true\n\t\t\t * @since 0.6.0\n\t\t\t */\n\t\t\tthis.preferXHR = true; //TODO: Get/Set\n\t\t\tthis._preferXHR = true;\n\t\t\tthis.setPreferXHR(preferXHR);\n\t\n\t\t\t// protected properties\n\t\t\t/**\n\t\t\t * Whether the queue is currently paused or not.\n\t\t\t * @property _paused\n\t\t\t * @type {boolean}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._paused = false;\n\t\n\t\t\t/**\n\t\t\t * A path that will be prepended on to the item's {{#crossLink \"LoadItem/src:property\"}}{{/crossLink}}. The\n\t\t\t * `_basePath` property will only be used if an item's source is relative, and does not include a protocol such\n\t\t\t * as `http://`, or a relative path such as `../`.\n\t\t\t * @property _basePath\n\t\t\t * @type {String}\n\t\t\t * @private\n\t\t\t * @since 0.3.1\n\t\t\t */\n\t\t\tthis._basePath = basePath;\n\t\n\t\t\t/**\n\t\t\t * An optional flag to set on images that are loaded using PreloadJS, which enables CORS support. Images loaded\n\t\t\t * cross-domain by servers that support CORS require the crossOrigin flag to be loaded and interacted with by\n\t\t\t * a canvas. When loading locally, or with a server with no CORS support, this flag can cause other security issues,\n\t\t\t * so it is recommended to only set it if you are sure the server supports it. Currently, supported values are \"\"\n\t\t\t * and \"Anonymous\".\n\t\t\t * @property _crossOrigin\n\t\t\t * @type {String}\n\t\t\t * @default \"\"\n\t\t\t * @private\n\t\t\t * @since 0.4.1\n\t\t\t */\n\t\t\tthis._crossOrigin = crossOrigin;\n\t\n\t\t\t/**\n\t\t\t * Determines if the loadStart event was dispatched already. This event is only fired one time, when the first\n\t\t\t * file is requested.\n\t\t\t * @property _loadStartWasDispatched\n\t\t\t * @type {Boolean}\n\t\t\t * @default false\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._loadStartWasDispatched = false;\n\t\n\t\t\t/**\n\t\t\t * Determines if there is currently a script loading. This helps ensure that only a single script loads at once when\n\t\t\t * using a script tag to do preloading.\n\t\t\t * @property _currentlyLoadingScript\n\t\t\t * @type {Boolean}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._currentlyLoadingScript = null;\n\t\n\t\t\t/**\n\t\t\t * An array containing the currently downloading files.\n\t\t\t * @property _currentLoads\n\t\t\t * @type {Array}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._currentLoads = [];\n\t\n\t\t\t/**\n\t\t\t * An array containing the queued items that have not yet started downloading.\n\t\t\t * @property _loadQueue\n\t\t\t * @type {Array}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._loadQueue = [];\n\t\n\t\t\t/**\n\t\t\t * An array containing downloads that have not completed, so that the LoadQueue can be properly reset.\n\t\t\t * @property _loadQueueBackup\n\t\t\t * @type {Array}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._loadQueueBackup = [];\n\t\n\t\t\t/**\n\t\t\t * An object hash of items that have finished downloading, indexed by the {{#crossLink \"LoadItem\"}}{{/crossLink}}\n\t\t\t * id.\n\t\t\t * @property _loadItemsById\n\t\t\t * @type {Object}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._loadItemsById = {};\n\t\n\t\t\t/**\n\t\t\t * An object hash of items that have finished downloading, indexed by {{#crossLink \"LoadItem\"}}{{/crossLink}}\n\t\t\t * source.\n\t\t\t * @property _loadItemsBySrc\n\t\t\t * @type {Object}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._loadItemsBySrc = {};\n\t\n\t\t\t/**\n\t\t\t * An object hash of loaded items, indexed by the ID of the {{#crossLink \"LoadItem\"}}{{/crossLink}}.\n\t\t\t * @property _loadedResults\n\t\t\t * @type {Object}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._loadedResults = {};\n\t\n\t\t\t/**\n\t\t\t * An object hash of un-parsed loaded items, indexed by the ID of the {{#crossLink \"LoadItem\"}}{{/crossLink}}.\n\t\t\t * @property _loadedRawResults\n\t\t\t * @type {Object}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._loadedRawResults = {};\n\t\n\t\t\t/**\n\t\t\t * The number of items that have been requested. This helps manage an overall progress without knowing how large\n\t\t\t * the files are before they are downloaded. This does not include items inside of loaders such as the\n\t\t\t * {{#crossLink \"ManifestLoader\"}}{{/crossLink}}.\n\t\t\t * @property _numItems\n\t\t\t * @type {Number}\n\t\t\t * @default 0\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._numItems = 0;\n\t\n\t\t\t/**\n\t\t\t * The number of items that have completed loaded. This helps manage an overall progress without knowing how large\n\t\t\t * the files are before they are downloaded.\n\t\t\t * @property _numItemsLoaded\n\t\t\t * @type {Number}\n\t\t\t * @default 0\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._numItemsLoaded = 0;\n\t\n\t\t\t/**\n\t\t\t * A list of scripts in the order they were requested. This helps ensure that scripts are \"completed\" in the right\n\t\t\t * order.\n\t\t\t * @property _scriptOrder\n\t\t\t * @type {Array}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._scriptOrder = [];\n\t\n\t\t\t/**\n\t\t\t * A list of scripts that have been loaded. Items are added to this list as <code>null</code> when they are\n\t\t\t * requested, contain the loaded item if it has completed, but not been dispatched to the user, and <code>true</true>\n\t\t\t * once they are complete and have been dispatched.\n\t\t\t * @property _loadedScripts\n\t\t\t * @type {Array}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._loadedScripts = [];\n\t\n\t\t\t/**\n\t\t\t * The last progress amount. This is used to suppress duplicate progress events.\n\t\t\t * @property _lastProgress\n\t\t\t * @type {Number}\n\t\t\t * @private\n\t\t\t * @since 0.6.0\n\t\t\t */\n\t\t\tthis._lastProgress = NaN;\n\t\n\t\t};\n\t\n\t// static properties\n\t\t/**\n\t\t * The time in milliseconds to assume a load has failed. An {{#crossLink \"AbstractLoader/error:event\"}}{{/crossLink}}\n\t\t * event is dispatched if the timeout is reached before any data is received.\n\t\t * @property loadTimeout\n\t\t * @type {Number}\n\t\t * @default 8000\n\t\t * @static\n\t\t * @since 0.4.1\n\t\t * @deprecated In favour of the LoadItem.LOAD_TIMEOUT_DEFAULT property.\n\t\t */\n\t\ts.loadTimeout = 8000;\n\t\n\t\t/**\n\t\t * The time in milliseconds to assume a load has failed.\n\t\t * @property LOAD_TIMEOUT\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @deprecated in favor of the LoadQueue.loadTimeout property.\n\t\t */\n\t\ts.LOAD_TIMEOUT = 0;\n\t\n\t// Preload Types\n\t\t/**\n\t\t * @property BINARY\n\t\t * @type {String}\n\t\t * @default binary\n\t\t * @static\n\t\t * @deprecated Use the AbstractLoader.BINARY property instead.\n\t\t */\n\t\ts.BINARY = createjs.AbstractLoader.BINARY;\n\t\n\t\t/**\n\t\t * @property CSS\n\t\t * @type {String}\n\t\t * @default css\n\t\t * @static\n\t\t * @deprecated Use the AbstractLoader.CSS property instead.\n\t\t */\n\t\ts.CSS = createjs.AbstractLoader.CSS;\n\t\n\t\t/**\n\t\t * @property IMAGE\n\t\t * @type {String}\n\t\t * @default image\n\t\t * @static\n\t\t * @deprecated Use the AbstractLoader.IMAGE property instead.\n\t\t */\n\t\ts.IMAGE = createjs.AbstractLoader.IMAGE;\n\t\n\t\t/**\n\t\t * @property JAVASCRIPT\n\t\t * @type {String}\n\t\t * @default javascript\n\t\t * @static\n\t\t * @deprecated Use the AbstractLoader.JAVASCRIPT property instead.\n\t\t */\n\t\ts.JAVASCRIPT = createjs.AbstractLoader.JAVASCRIPT;\n\t\n\t\t/**\n\t\t * @property JSON\n\t\t * @type {String}\n\t\t * @default json\n\t\t * @static\n\t\t * @deprecated Use the AbstractLoader.JSON property instead.\n\t\t */\n\t\ts.JSON = createjs.AbstractLoader.JSON;\n\t\n\t\t/**\n\t\t * @property JSONP\n\t\t * @type {String}\n\t\t * @default jsonp\n\t\t * @static\n\t\t * @deprecated Use the AbstractLoader.JSONP property instead.\n\t\t */\n\t\ts.JSONP = createjs.AbstractLoader.JSONP;\n\t\n\t\t/**\n\t\t * @property MANIFEST\n\t\t * @type {String}\n\t\t * @default manifest\n\t\t * @static\n\t\t * @since 0.4.1\n\t\t * @deprecated Use the AbstractLoader.MANIFEST property instead.\n\t\t */\n\t\ts.MANIFEST = createjs.AbstractLoader.MANIFEST;\n\t\n\t\t/**\n\t\t * @property SOUND\n\t\t * @type {String}\n\t\t * @default sound\n\t\t * @static\n\t\t * @deprecated Use the AbstractLoader.SOUND property instead.\n\t\t */\n\t\ts.SOUND = createjs.AbstractLoader.SOUND;\n\t\n\t\t/**\n\t\t * @property VIDEO\n\t\t * @type {String}\n\t\t * @default video\n\t\t * @static\n\t\t * @deprecated Use the AbstractLoader.VIDEO instead.\n\t\t */\n\t\ts.VIDEO = createjs.AbstractLoader.VIDEO;\n\t\n\t\t/**\n\t\t * @property SVG\n\t\t * @type {String}\n\t\t * @default svg\n\t\t * @static\n\t\t * @deprecated Use the AbstractLoader.SVG property instead.\n\t\t */\n\t\ts.SVG = createjs.AbstractLoader.SVG;\n\t\n\t\t/**\n\t\t * @property TEXT\n\t\t * @type {String}\n\t\t * @default text\n\t\t * @static\n\t\t * @deprecated Use the AbstractLoader.TEXT instead.\n\t\t */\n\t\ts.TEXT = createjs.AbstractLoader.TEXT;\n\t\n\t\t/**\n\t\t * @property XML\n\t\t * @type {String}\n\t\t * @default xml\n\t\t * @static\n\t\t * @deprecated Use the AbstractLoader.XML instead.\n\t\t */\n\t\ts.XML = createjs.AbstractLoader.XML;\n\t\n\t\t/**\n\t\t * @property POST\n\t\t * @type {string}\n\t\t * @deprecated Use the AbstractLoader.POST property instead.\n\t\t */\n\t\ts.POST = createjs.AbstractLoader.POST;\n\t\n\t\t/**\n\t\t * @property GET\n\t\t * @type {string}\n\t\t * @deprecated Use the AbstractLoader.GET property instead.\n\t\t */\n\t\ts.GET = createjs.AbstractLoader.GET;\n\t\n\t// events\n\t\t/**\n\t\t * This event is fired when an individual file has loaded, and been processed.\n\t\t * @event fileload\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @param {Object} item The file item which was specified in the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n\t\t * or {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}} call. If only a string path or tag was specified, the\n\t\t * object will contain that value as a `src` property.\n\t\t * @param {Object} result The HTML tag or parsed result of the loaded item.\n\t\t * @param {Object} rawResult The unprocessed result, usually the raw text or binary data before it is converted\n\t\t * to a usable object.\n\t\t * @since 0.3.0\n\t\t */\n\t\n\t\t/**\n\t\t * This {{#crossLink \"ProgressEvent\"}}{{/crossLink}} that is fired when an an individual file's progress changes.\n\t\t * @event fileprogress\n\t\t * @since 0.3.0\n\t\t */\n\t\n\t\t/**\n\t\t * This event is fired when an individual file starts to load.\n\t\t * @event filestart\n\t\t * @param {Object} The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @param {Object} item The file item which was specified in the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n\t\t * or {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}} call. If only a string path or tag was specified, the\n\t\t * object will contain that value as a property.\n\t\t */\n\t\n\t\t/**\n\t\t * Although it extends {{#crossLink \"AbstractLoader\"}}{{/crossLink}}, the `initialize` event is never fired from\n\t\t * a LoadQueue instance.\n\t\t * @event initialize\n\t\t * @private\n\t\t */\n\t\n\t// public methods\n\t\t/**\n\t\t * Register a custom loaders class. New loaders are given precedence over loaders added earlier and default loaders.\n\t\t * It is recommended that loaders extend {{#crossLink \"AbstractLoader\"}}{{/crossLink}}. Loaders can only be added\n\t\t * once, and will be prepended to the list of available loaders.\n\t\t * @method registerLoader\n\t\t * @param {Function|AbstractLoader} loader The AbstractLoader class to add.\n\t\t * @since 0.6.0\n\t\t */\n\t\tp.registerLoader = function (loader) {\n\t\t\tif (!loader || !loader.canLoadItem) {\n\t\t\t\tthrow new Error(\"loader is of an incorrect type.\");\n\t\t\t} else if (this._availableLoaders.indexOf(loader) != -1) {\n\t\t\t\tthrow new Error(\"loader already exists.\"); //LM: Maybe just silently fail here\n\t\t\t}\n\t\n\t\t\tthis._availableLoaders.unshift(loader);\n\t\t};\n\t\n\t\t/**\n\t\t * Remove a custom loader added using {{#crossLink \"registerLoader\"}}{{/crossLink}}. Only custom loaders can be\n\t\t * unregistered, the default loaders will always be available.\n\t\t * @method unregisterLoader\n\t\t * @param {Function|AbstractLoader} loader The AbstractLoader class to remove\n\t\t */\n\t\tp.unregisterLoader = function (loader) {\n\t\t\tvar idx = this._availableLoaders.indexOf(loader);\n\t\t\tif (idx != -1 && idx < this._defaultLoaderLength - 1) {\n\t\t\t\tthis._availableLoaders.splice(idx, 1);\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * @method setUseXHR\n\t\t * @param {Boolean} value The new useXHR value to set.\n\t\t * @return {Boolean} The new useXHR value. If XHR is not supported by the browser, this will return false, even if\n\t\t * the provided value argument was true.\n\t\t * @since 0.3.0\n\t\t * @deprecated use the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property, or the\n\t\t * {{#crossLink \"LoadQueue/setUseXHR\"}}{{/crossLink}} method instead.\n\t\t */\n\t\tp.setUseXHR = function (value) {\n\t\t\treturn this.setPreferXHR(value);\n\t\t};\n\t\n\t\t/**\n\t\t * Change the {{#crossLink \"preferXHR:property\"}}{{/crossLink}} value. Note that if this is set to `true`, it may\n\t\t * fail, or be ignored depending on the browser's capabilities and the load type.\n\t\t * @method setPreferXHR\n\t\t * @param {Boolean} value\n\t\t * @returns {Boolean} The value of {{#crossLink \"preferXHR\"}}{{/crossLink}} that was successfully set.\n\t\t * @since 0.6.0\n\t\t */\n\t\tp.setPreferXHR = function (value) {\n\t\t\t// Determine if we can use XHR. XHR defaults to TRUE, but the browser may not support it.\n\t\t\t//TODO: Should we be checking for the other XHR types? Might have to do a try/catch on the different types similar to createXHR.\n\t\t\tthis.preferXHR = (value != false && window.XMLHttpRequest != null);\n\t\t\treturn this.preferXHR;\n\t\t};\n\t\n\t\t/**\n\t\t * Stops all queued and loading items, and clears the queue. This also removes all internal references to loaded\n\t\t * content, and allows the queue to be used again.\n\t\t * @method removeAll\n\t\t * @since 0.3.0\n\t\t */\n\t\tp.removeAll = function () {\n\t\t\tthis.remove();\n\t\t};\n\t\n\t\t/**\n\t\t * Stops an item from being loaded, and removes it from the queue. If nothing is passed, all items are removed.\n\t\t * This also removes internal references to loaded item(s).\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      queue.loadManifest([\n\t\t *          {src:\"test.png\", id:\"png\"},\n\t\t *          {src:\"test.jpg\", id:\"jpg\"},\n\t\t *          {src:\"test.mp3\", id:\"mp3\"}\n\t\t *      ]);\n\t\t *      queue.remove(\"png\"); // Single item by ID\n\t\t *      queue.remove(\"png\", \"test.jpg\"); // Items as arguments. Mixed id and src.\n\t\t *      queue.remove([\"test.png\", \"jpg\"]); // Items in an Array. Mixed id and src.\n\t\t *\n\t\t * @method remove\n\t\t * @param {String | Array} idsOrUrls* The id or ids to remove from this queue. You can pass an item, an array of\n\t\t * items, or multiple items as arguments.\n\t\t * @since 0.3.0\n\t\t */\n\t\tp.remove = function (idsOrUrls) {\n\t\t\tvar args = null;\n\t\n\t\t\tif (idsOrUrls && !Array.isArray(idsOrUrls)) {\n\t\t\t\targs = [idsOrUrls];\n\t\t\t} else if (idsOrUrls) {\n\t\t\t\targs = idsOrUrls;\n\t\t\t} else if (arguments.length > 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar itemsWereRemoved = false;\n\t\n\t\t\t// Destroy everything\n\t\t\tif (!args) {\n\t\t\t\tthis.close();\n\t\t\t\tfor (var n in this._loadItemsById) {\n\t\t\t\t\tthis._disposeItem(this._loadItemsById[n]);\n\t\t\t\t}\n\t\t\t\tthis.init(this.preferXHR, this._basePath);\n\t\n\t\t\t\t// Remove specific items\n\t\t\t} else {\n\t\t\t\twhile (args.length) {\n\t\t\t\t\tvar item = args.pop();\n\t\t\t\t\tvar r = this.getResult(item);\n\t\n\t\t\t\t\t//Remove from the main load Queue\n\t\t\t\t\tfor (i = this._loadQueue.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tloadItem = this._loadQueue[i].getItem();\n\t\t\t\t\t\tif (loadItem.id == item || loadItem.src == item) {\n\t\t\t\t\t\t\tthis._loadQueue.splice(i, 1)[0].cancel();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t//Remove from the backup queue\n\t\t\t\t\tfor (i = this._loadQueueBackup.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tloadItem = this._loadQueueBackup[i].getItem();\n\t\t\t\t\t\tif (loadItem.id == item || loadItem.src == item) {\n\t\t\t\t\t\t\tthis._loadQueueBackup.splice(i, 1)[0].cancel();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (r) {\n\t\t\t\t\t\tthis._disposeItem(this.getItem(item));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (var i = this._currentLoads.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tvar loadItem = this._currentLoads[i].getItem();\n\t\t\t\t\t\t\tif (loadItem.id == item || loadItem.src == item) {\n\t\t\t\t\t\t\t\tthis._currentLoads.splice(i, 1)[0].cancel();\n\t\t\t\t\t\t\t\titemsWereRemoved = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// If this was called during a load, try to load the next item.\n\t\t\t\tif (itemsWereRemoved) {\n\t\t\t\t\tthis._loadNext();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Stops all open loads, destroys any loaded items, and resets the queue, so all items can\n\t\t * be reloaded again by calling {{#crossLink \"AbstractLoader/load\"}}{{/crossLink}}. Items are not removed from the\n\t\t * queue. To remove items use the {{#crossLink \"LoadQueue/remove\"}}{{/crossLink}} or\n\t\t * {{#crossLink \"LoadQueue/removeAll\"}}{{/crossLink}} method.\n\t\t * @method reset\n\t\t * @since 0.3.0\n\t\t */\n\t\tp.reset = function () {\n\t\t\tthis.close();\n\t\t\tfor (var n in this._loadItemsById) {\n\t\t\t\tthis._disposeItem(this._loadItemsById[n]);\n\t\t\t}\n\t\n\t\t\t//Reset the queue to its start state\n\t\t\tvar a = [];\n\t\t\tfor (var i = 0, l = this._loadQueueBackup.length; i < l; i++) {\n\t\t\t\ta.push(this._loadQueueBackup[i].getItem());\n\t\t\t}\n\t\n\t\t\tthis.loadManifest(a, false);\n\t\t};\n\t\n\t\t/**\n\t\t * Register a plugin. Plugins can map to load types (sound, image, etc), or specific extensions (png, mp3, etc).\n\t\t * Currently, only one plugin can exist per type/extension.\n\t\t *\n\t\t * When a plugin is installed, a <code>getPreloadHandlers()</code> method will be called on it. For more information\n\t\t * on this method, check out the {{#crossLink \"SamplePlugin/getPreloadHandlers\"}}{{/crossLink}} method in the\n\t\t * {{#crossLink \"SamplePlugin\"}}{{/crossLink}} class.\n\t\t *\n\t\t * Before a file is loaded, a matching plugin has an opportunity to modify the load. If a `callback` is returned\n\t\t * from the {{#crossLink \"SamplePlugin/getPreloadHandlers\"}}{{/crossLink}} method, it will be invoked first, and its\n\t\t * result may cancel or modify the item. The callback method can also return a `completeHandler` to be fired when\n\t\t * the file is loaded, or a `tag` object, which will manage the actual download. For more information on these\n\t\t * methods, check out the {{#crossLink \"SamplePlugin/preloadHandler\"}}{{/crossLink}} and {{#crossLink \"SamplePlugin/fileLoadHandler\"}}{{/crossLink}}\n\t\t * methods on the {{#crossLink \"SamplePlugin\"}}{{/crossLink}}.\n\t\t *\n\t\t * @method installPlugin\n\t\t * @param {Function} plugin The plugin class to install.\n\t\t */\n\t\tp.installPlugin = function (plugin) {\n\t\t\tif (plugin == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif (plugin.getPreloadHandlers != null) {\n\t\t\t\tthis._plugins.push(plugin);\n\t\t\t\tvar map = plugin.getPreloadHandlers();\n\t\t\t\tmap.scope = plugin;\n\t\n\t\t\t\tif (map.types != null) {\n\t\t\t\t\tfor (var i = 0, l = map.types.length; i < l; i++) {\n\t\t\t\t\t\tthis._typeCallbacks[map.types[i]] = map;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif (map.extensions != null) {\n\t\t\t\t\tfor (i = 0, l = map.extensions.length; i < l; i++) {\n\t\t\t\t\t\tthis._extensionCallbacks[map.extensions[i]] = map;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Set the maximum number of concurrent connections. Note that browsers and servers may have a built-in maximum\n\t\t * number of open connections, so any additional connections may remain in a pending state until the browser\n\t\t * opens the connection. When loading scripts using tags, and when {{#crossLink \"LoadQueue/maintainScriptOrder:property\"}}{{/crossLink}}\n\t\t * is `true`, only one script is loaded at a time due to browser limitations.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var queue = new createjs.LoadQueue();\n\t\t *      queue.setMaxConnections(10); // Allow 10 concurrent loads\n\t\t *\n\t\t * @method setMaxConnections\n\t\t * @param {Number} value The number of concurrent loads to allow. By default, only a single connection per LoadQueue\n\t\t * is open at any time.\n\t\t */\n\t\tp.setMaxConnections = function (value) {\n\t\t\tthis._maxConnections = value;\n\t\t\tif (!this._paused && this._loadQueue.length > 0) {\n\t\t\t\tthis._loadNext();\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Load a single file. To add multiple files at once, use the {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\n\t\t * method.\n\t\t *\n\t\t * Files are always appended to the current queue, so this method can be used multiple times to add files.\n\t\t * To clear the queue first, use the {{#crossLink \"AbstractLoader/close\"}}{{/crossLink}} method.\n\t\t * @method loadFile\n\t\t * @param {LoadItem|Object|String} file The file object or path to load. A file can be either\n\t\t * <ul>\n\t\t *     <li>A {{#crossLink \"LoadItem\"}}{{/crossLink}} instance</li>\n\t\t *     <li>An object containing properties defined by {{#crossLink \"LoadItem\"}}{{/crossLink}}</li>\n\t\t *     <li>OR A string path to a resource. Note that this kind of load item will be converted to a {{#crossLink \"LoadItem\"}}{{/crossLink}}\n\t\t *     in the background.</li>\n\t\t * </ul>\n\t\t * @param {Boolean} [loadNow=true] Kick off an immediate load (true) or wait for a load call (false). The default\n\t\t * value is true. If the queue is paused using {{#crossLink \"LoadQueue/setPaused\"}}{{/crossLink}}, and the value is\n\t\t * `true`, the queue will resume automatically.\n\t\t * @param {String} [basePath] A base path that will be prepended to each file. The basePath argument overrides the\n\t\t * path specified in the constructor. Note that if you load a manifest using a file of type {{#crossLink \"AbstractLoader/MANIFEST:property\"}}{{/crossLink}},\n\t\t * its files will <strong>NOT</strong> use the basePath parameter. <strong>The basePath parameter is deprecated.</strong>\n\t\t * This parameter will be removed in a future version. Please either use the `basePath` parameter in the LoadQueue\n\t\t * constructor, or a `path` property in a manifest definition.\n\t\t */\n\t\tp.loadFile = function (file, loadNow, basePath) {\n\t\t\tif (file == null) {\n\t\t\t\tvar event = new createjs.ErrorEvent(\"PRELOAD_NO_FILE\");\n\t\t\t\tthis._sendError(event);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._addItem(file, null, basePath);\n\t\n\t\t\tif (loadNow !== false) {\n\t\t\t\tthis.setPaused(false);\n\t\t\t} else {\n\t\t\t\tthis.setPaused(true);\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Load an array of files. To load a single file, use the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} method.\n\t\t * The files in the manifest are requested in the same order, but may complete in a different order if the max\n\t\t * connections are set above 1 using {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}}. Scripts will load\n\t\t * in the right order as long as {{#crossLink \"LoadQueue/maintainScriptOrder\"}}{{/crossLink}} is true (which is\n\t\t * default).\n\t\t *\n\t\t * Files are always appended to the current queue, so this method can be used multiple times to add files.\n\t\t * To clear the queue first, use the {{#crossLink \"AbstractLoader/close\"}}{{/crossLink}} method.\n\t\t * @method loadManifest\n\t\t * @param {Array|String|Object} manifest An list of files to load. The loadManifest call supports four types of\n\t\t * manifests:\n\t\t * <ol>\n\t\t *     <li>A string path, which points to a manifest file, which is a JSON file that contains a \"manifest\" property,\n\t\t *     which defines the list of files to load, and can optionally contain a \"path\" property, which will be\n\t\t *     prepended to each file in the list.</li>\n\t\t *     <li>An object which defines a \"src\", which is a JSON or JSONP file. A \"callback\" can be defined for JSONP\n\t\t *     file. The JSON/JSONP file should contain a \"manifest\" property, which defines the list of files to load,\n\t\t *     and can optionally contain a \"path\" property, which will be prepended to each file in the list.</li>\n\t\t *     <li>An object which contains a \"manifest\" property, which defines the list of files to load, and can\n\t\t *     optionally contain a \"path\" property, which will be prepended to each file in the list.</li>\n\t\t *     <li>An Array of files to load.</li>\n\t\t * </ol>\n\t\t *\n\t\t * Each \"file\" in a manifest can be either:\n\t\t * <ul>\n\t\t *     <li>A {{#crossLink \"LoadItem\"}}{{/crossLink}} instance</li>\n\t\t *     <li>An object containing properties defined by {{#crossLink \"LoadItem\"}}{{/crossLink}}</li>\n\t\t *     <li>OR A string path to a resource. Note that this kind of load item will be converted to a {{#crossLink \"LoadItem\"}}{{/crossLink}}\n\t\t *     in the background.</li>\n\t\t * </ul>\n\t\t *\n\t\t * @param {Boolean} [loadNow=true] Kick off an immediate load (true) or wait for a load call (false). The default\n\t\t * value is true. If the queue is paused using {{#crossLink \"LoadQueue/setPaused\"}}{{/crossLink}} and this value is\n\t\t * `true`, the queue will resume automatically.\n\t\t * @param {String} [basePath] A base path that will be prepended to each file. The basePath argument overrides the\n\t\t * path specified in the constructor. Note that if you load a manifest using a file of type {{#crossLink \"LoadQueue/MANIFEST:property\"}}{{/crossLink}},\n\t\t * its files will <strong>NOT</strong> use the basePath parameter. <strong>The basePath parameter is deprecated.</strong>\n\t\t * This parameter will be removed in a future version. Please either use the `basePath` parameter in the LoadQueue\n\t\t * constructor, or a `path` property in a manifest definition.\n\t\t */\n\t\tp.loadManifest = function (manifest, loadNow, basePath) {\n\t\t\tvar fileList = null;\n\t\t\tvar path = null;\n\t\n\t\t\t// Array-based list of items\n\t\t\tif (Array.isArray(manifest)) {\n\t\t\t\tif (manifest.length == 0) {\n\t\t\t\t\tvar event = new createjs.ErrorEvent(\"PRELOAD_MANIFEST_EMPTY\");\n\t\t\t\t\tthis._sendError(event);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfileList = manifest;\n\t\n\t\t\t\t// String-based. Only file manifests can be specified this way. Any other types will cause an error when loaded.\n\t\t\t} else if (typeof(manifest) === \"string\") {\n\t\t\t\tfileList = [\n\t\t\t\t\t{\n\t\t\t\t\t\tsrc: manifest,\n\t\t\t\t\t\ttype: s.MANIFEST\n\t\t\t\t\t}\n\t\t\t\t];\n\t\n\t\t\t} else if (typeof(manifest) == \"object\") {\n\t\n\t\t\t\t// An object that defines a manifest path\n\t\t\t\tif (manifest.src !== undefined) {\n\t\t\t\t\tif (manifest.type == null) {\n\t\t\t\t\t\tmanifest.type = s.MANIFEST;\n\t\t\t\t\t} else if (manifest.type != s.MANIFEST) {\n\t\t\t\t\t\tvar event = new createjs.ErrorEvent(\"PRELOAD_MANIFEST_TYPE\");\n\t\t\t\t\t\tthis._sendError(event);\n\t\t\t\t\t}\n\t\t\t\t\tfileList = [manifest];\n\t\n\t\t\t\t\t// An object that defines a manifest\n\t\t\t\t} else if (manifest.manifest !== undefined) {\n\t\t\t\t\tfileList = manifest.manifest;\n\t\t\t\t\tpath = manifest.path;\n\t\t\t\t}\n\t\n\t\t\t\t// Unsupported. This will throw an error.\n\t\t\t} else {\n\t\t\t\tvar event = new createjs.ErrorEvent(\"PRELOAD_MANIFEST_NULL\");\n\t\t\t\tthis._sendError(event);\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tfor (var i = 0, l = fileList.length; i < l; i++) {\n\t\t\t\tthis._addItem(fileList[i], path, basePath);\n\t\t\t}\n\t\n\t\t\tif (loadNow !== false) {\n\t\t\t\tthis.setPaused(false);\n\t\t\t} else {\n\t\t\t\tthis.setPaused(true);\n\t\t\t}\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * Start a LoadQueue that was created, but not automatically started.\n\t\t * @method load\n\t\t */\n\t\tp.load = function () {\n\t\t\tthis.setPaused(false);\n\t\t};\n\t\n\t\t/**\n\t\t * Look up a {{#crossLink \"LoadItem\"}}{{/crossLink}} using either the \"id\" or \"src\" that was specified when loading it. Note that if no \"id\" was\n\t\t * supplied with the load item, the ID will be the \"src\", including a `path` property defined by a manifest. The\n\t\t * `basePath` will not be part of the ID.\n\t\t * @method getItem\n\t\t * @param {String} value The <code>id</code> or <code>src</code> of the load item.\n\t\t * @return {Object} The load item that was initially requested using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n\t\t * or {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}. This object is also returned via the {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}}\n\t\t * event as the `item` parameter.\n\t\t */\n\t\tp.getItem = function (value) {\n\t\t\treturn this._loadItemsById[value] || this._loadItemsBySrc[value];\n\t\t};\n\t\n\t\t/**\n\t\t * Look up a loaded result using either the \"id\" or \"src\" that was specified when loading it. Note that if no \"id\"\n\t\t * was supplied with the load item, the ID will be the \"src\", including a `path` property defined by a manifest. The\n\t\t * `basePath` will not be part of the ID.\n\t\t * @method getResult\n\t\t * @param {String} value The <code>id</code> or <code>src</code> of the load item.\n\t\t * @param {Boolean} [rawResult=false] Return a raw result instead of a formatted result. This applies to content\n\t\t * loaded via XHR such as scripts, XML, CSS, and Images. If there is no raw result, the formatted result will be\n\t\t * returned instead.\n\t\t * @return {Object} A result object containing the content that was loaded, such as:\n\t\t * <ul>\n\t\t *      <li>An image tag (&lt;image /&gt;) for images</li>\n\t\t *      <li>A script tag for JavaScript (&lt;script /&gt;). Note that scripts are automatically added to the HTML\n\t\t *      DOM.</li>\n\t\t *      <li>A style tag for CSS (&lt;style /&gt; or &lt;link &gt;)</li>\n\t\t *      <li>Raw text for TEXT</li>\n\t\t *      <li>A formatted JavaScript object defined by JSON</li>\n\t\t *      <li>An XML document</li>\n\t\t *      <li>A binary arraybuffer loaded by XHR</li>\n\t\t *      <li>An audio tag (&lt;audio &gt;) for HTML audio. Note that it is recommended to use SoundJS APIs to play\n\t\t *      loaded audio. Specifically, audio loaded by Flash and WebAudio will return a loader object using this method\n\t\t *      which can not be used to play audio back.</li>\n\t\t * </ul>\n\t\t * This object is also returned via the {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event as the 'item`\n\t\t * parameter. Note that if a raw result is requested, but not found, the result will be returned instead.\n\t\t */\n\t\tp.getResult = function (value, rawResult) {\n\t\t\tvar item = this._loadItemsById[value] || this._loadItemsBySrc[value];\n\t\t\tif (item == null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar id = item.id;\n\t\t\tif (rawResult && this._loadedRawResults[id]) {\n\t\t\t\treturn this._loadedRawResults[id];\n\t\t\t}\n\t\t\treturn this._loadedResults[id];\n\t\t};\n\t\n\t\t/**\n\t\t * Generate an list of items loaded by this queue.\n\t\t * @method getItems\n\t\t * @param {Boolean} loaded Determines if only items that have been loaded should be returned. If false, in-progress\n\t\t * and failed load items will also be included.\n\t\t * @returns {Array} A list of objects that have been loaded. Each item includes the {{#crossLink \"LoadItem\"}}{{/crossLink}},\n\t\t * result, and rawResult.\n\t\t * @since 0.6.0\n\t\t */\n\t\tp.getItems = function (loaded) {\n\t\t\tvar arr = [];\n\t\t\tfor (var n in this._loadItemsById) {\n\t\t\t\tvar item = this._loadItemsById[n];\n\t\t\t\tvar result = this.getResult(n);\n\t\t\t\tif (loaded === true && result == null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tarr.push({\n\t\t\t\t\titem: item,\n\t\t\t\t\tresult: result,\n\t\t\t\t\trawResult: this.getResult(n, true)\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn arr;\n\t\t};\n\t\n\t\t/**\n\t\t * Pause or resume the current load. Active loads will not be cancelled, but the next items in the queue will not\n\t\t * be processed when active loads complete. LoadQueues are not paused by default.\n\t\t *\n\t\t * Note that if new items are added to the queue using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} or\n\t\t * {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}, a paused queue will be resumed, unless the `loadNow`\n\t\t * argument is `false`.\n\t\t * @method setPaused\n\t\t * @param {Boolean} value Whether the queue should be paused or not.\n\t\t */\n\t\tp.setPaused = function (value) {\n\t\t\tthis._paused = value;\n\t\t\tif (!this._paused) {\n\t\t\t\tthis._loadNext();\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Close the active queue. Closing a queue completely empties the queue, and prevents any remaining items from\n\t\t * starting to download. Note that currently any active loads will remain open, and events may be processed.\n\t\t *\n\t\t * To stop and restart a queue, use the {{#crossLink \"LoadQueue/setPaused\"}}{{/crossLink}} method instead.\n\t\t * @method close\n\t\t */\n\t\tp.close = function () {\n\t\t\twhile (this._currentLoads.length) {\n\t\t\t\tthis._currentLoads.pop().cancel();\n\t\t\t}\n\t\t\tthis._scriptOrder.length = 0;\n\t\t\tthis._loadedScripts.length = 0;\n\t\t\tthis.loadStartWasDispatched = false;\n\t\t\tthis._itemCount = 0;\n\t\t\tthis._lastProgress = NaN;\n\t\t};\n\t\n\t// protected methods\n\t\t/**\n\t\t * Add an item to the queue. Items are formatted into a usable object containing all the properties necessary to\n\t\t * load the content. The load queue is populated with the loader instance that handles preloading, and not the load\n\t\t * item that was passed in by the user. To look up the load item by id or src, use the {{#crossLink \"LoadQueue.getItem\"}}{{/crossLink}}\n\t\t * method.\n\t\t * @method _addItem\n\t\t * @param {String|Object} value The item to add to the queue.\n\t\t * @param {String} [path] An optional path prepended to the `src`. The path will only be prepended if the src is\n\t\t * relative, and does not start with a protocol such as `http://`, or a path like `../`. If the LoadQueue was\n\t\t * provided a {{#crossLink \"_basePath\"}}{{/crossLink}}, then it will optionally be prepended after.\n\t\t * @param {String} [basePath] <strong>Deprecated</strong>An optional basePath passed into a {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\n\t\t * or {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} call. This parameter will be removed in a future tagged\n\t\t * version.\n\t\t * @private\n\t\t */\n\t\tp._addItem = function (value, path, basePath) {\n\t\t\tvar item = this._createLoadItem(value, path, basePath); // basePath and manifest path are added to the src.\n\t\t\tif (item == null) {\n\t\t\t\treturn;\n\t\t\t} // Sometimes plugins or types should be skipped.\n\t\t\tvar loader = this._createLoader(item);\n\t\t\tif (loader != null) {\n\t\t\t\tif (\"plugins\" in loader) {\n\t\t\t\t\tloader.plugins = this._plugins;\n\t\t\t\t}\n\t\t\t\titem._loader = loader;\n\t\t\t\tthis._loadQueue.push(loader);\n\t\t\t\tthis._loadQueueBackup.push(loader);\n\t\n\t\t\t\tthis._numItems++;\n\t\t\t\tthis._updateProgress();\n\t\n\t\t\t\t// Only worry about script order when using XHR to load scripts. Tags are only loading one at a time.\n\t\t\t\tif ((this.maintainScriptOrder\n\t\t\t\t\t\t&& item.type == createjs.LoadQueue.JAVASCRIPT\n\t\t\t\t\t\t\t//&& loader instanceof createjs.XHRLoader //NOTE: Have to track all JS files this way\n\t\t\t\t\t\t)\n\t\t\t\t\t\t|| item.maintainOrder === true) {\n\t\t\t\t\tthis._scriptOrder.push(item);\n\t\t\t\t\tthis._loadedScripts.push(null);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Create a refined {{#crossLink \"LoadItem\"}}{{/crossLink}}, which contains all the required properties. The type of\n\t\t * item is determined by browser support, requirements based on the file type, and developer settings. For example,\n\t\t * XHR is only used for file types that support it in new browsers.\n\t\t *\n\t\t * Before the item is returned, any plugins registered to handle the type or extension will be fired, which may\n\t\t * alter the load item.\n\t\t * @method _createLoadItem\n\t\t * @param {String | Object | HTMLAudioElement | HTMLImageElement} value The item that needs to be preloaded.\n\t\t * @param {String} [path] A path to prepend to the item's source. Sources beginning with http:// or similar will\n\t\t * not receive a path. Since PreloadJS 0.4.1, the src will be modified to include the `path` and {{#crossLink \"LoadQueue/_basePath:property\"}}{{/crossLink}}\n\t\t * when it is added.\n\t\t * @param {String} [basePath] <strong>Deprectated</strong> A base path to prepend to the items source in addition to\n\t\t * the path argument.\n\t\t * @return {Object} The loader instance that will be used.\n\t\t * @private\n\t\t */\n\t\tp._createLoadItem = function (value, path, basePath) {\n\t\t\tvar item = createjs.LoadItem.create(value);\n\t\t\tif (item == null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\n\t\t\tvar bp = \"\"; // Store the generated basePath\n\t\t\tvar useBasePath = basePath || this._basePath;\n\t\n\t\t\tif (item.src instanceof Object) {\n\t\t\t\tif (!item.type) {\n\t\t\t\t\treturn null;\n\t\t\t\t} // the the src is an object, type is required to pass off to plugin\n\t\t\t\tif (path) {\n\t\t\t\t\tbp = path;\n\t\t\t\t\tvar pathMatch = createjs.URLUtils.parseURI(path);\n\t\t\t\t\t// Also append basePath\n\t\t\t\t\tif (useBasePath != null && !pathMatch.absolute && !pathMatch.relative) {\n\t\t\t\t\t\tbp = useBasePath + bp;\n\t\t\t\t\t}\n\t\t\t\t} else if (useBasePath != null) {\n\t\t\t\t\tbp = useBasePath;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Determine Extension, etc.\n\t\t\t\tvar match = createjs.URLUtils.parseURI(item.src);\n\t\t\t\tif (match.extension) {\n\t\t\t\t\titem.ext = match.extension;\n\t\t\t\t}\n\t\t\t\tif (item.type == null) {\n\t\t\t\t\titem.type = createjs.RequestUtils.getTypeByExtension(item.ext);\n\t\t\t\t}\n\t\n\t\t\t\t// Inject path & basePath\n\t\t\t\tvar autoId = item.src;\n\t\t\t\tif (!match.absolute && !match.relative) {\n\t\t\t\t\tif (path) {\n\t\t\t\t\t\tbp = path;\n\t\t\t\t\t\tvar pathMatch = createjs.URLUtils.parseURI(path);\n\t\t\t\t\t\tautoId = path + autoId;\n\t\t\t\t\t\t// Also append basePath\n\t\t\t\t\t\tif (useBasePath != null && !pathMatch.absolute && !pathMatch.relative) {\n\t\t\t\t\t\t\tbp = useBasePath + bp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (useBasePath != null) {\n\t\t\t\t\t\tbp = useBasePath;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\titem.src = bp + item.src;\n\t\t\t}\n\t\t\titem.path = bp;\n\t\n\t\t\t// If there's no id, set one now.\n\t\t\tif (item.id === undefined || item.id === null || item.id === \"\") {\n\t\t\t\titem.id = autoId;\n\t\t\t}\n\t\n\t\t\t// Give plugins a chance to modify the loadItem:\n\t\t\tvar customHandler = this._typeCallbacks[item.type] || this._extensionCallbacks[item.ext];\n\t\t\tif (customHandler) {\n\t\t\t\t// Plugins are now passed both the full source, as well as a combined path+basePath (appropriately)\n\t\t\t\tvar result = customHandler.callback.call(customHandler.scope, item, this);\n\t\n\t\t\t\t// The plugin will handle the load, or has canceled it. Ignore it.\n\t\t\t\tif (result === false) {\n\t\t\t\t\treturn null;\n\t\n\t\t\t\t\t// Load as normal:\n\t\t\t\t} else if (result === true) {\n\t\t\t\t\t// Do Nothing\n\t\n\t\t\t\t\t// Result is a loader class:\n\t\t\t\t} else if (result != null) {\n\t\t\t\t\titem._loader = result;\n\t\t\t\t}\n\t\n\t\t\t\t// Update the extension in case the type changed:\n\t\t\t\tmatch = createjs.URLUtils.parseURI(item.src);\n\t\t\t\tif (match.extension != null) {\n\t\t\t\t\titem.ext = match.extension;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Store the item for lookup. This also helps clean-up later.\n\t\t\tthis._loadItemsById[item.id] = item;\n\t\t\tthis._loadItemsBySrc[item.src] = item;\n\t\n\t\t\tif (item.crossOrigin == null) {\n\t\t\t\titem.crossOrigin = this._crossOrigin;\n\t\t\t}\n\t\n\t\t\treturn item;\n\t\t};\n\t\n\t\t/**\n\t\t * Create a loader for a load item.\n\t\t * @method _createLoader\n\t\t * @param {Object} item A formatted load item that can be used to generate a loader.\n\t\t * @return {AbstractLoader} A loader that can be used to load content.\n\t\t * @private\n\t\t */\n\t\tp._createLoader = function (item) {\n\t\t\tif (item._loader != null) { // A plugin already specified a loader\n\t\t\t\treturn item._loader;\n\t\t\t}\n\t\n\t\t\t// Initially, try and use the provided/supported XHR mode:\n\t\t\tvar preferXHR = this.preferXHR;\n\t\n\t\t\tfor (var i = 0; i < this._availableLoaders.length; i++) {\n\t\t\t\tvar loader = this._availableLoaders[i];\n\t\t\t\tif (loader && loader.canLoadItem(item)) {\n\t\t\t\t\treturn new loader(item, preferXHR);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// TODO: Log error (requires createjs.log)\n\t\t\treturn null;\n\t\t};\n\t\n\t\t/**\n\t\t * Load the next item in the queue. If the queue is empty (all items have been loaded), then the complete event\n\t\t * is processed. The queue will \"fill up\" any empty slots, up to the max connection specified using\n\t\t * {{#crossLink \"LoadQueue.setMaxConnections\"}}{{/crossLink}} method. The only exception is scripts that are loaded\n\t\t * using tags, which have to be loaded one at a time to maintain load order.\n\t\t * @method _loadNext\n\t\t * @private\n\t\t */\n\t\tp._loadNext = function () {\n\t\t\tif (this._paused) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Only dispatch loadstart event when the first file is loaded.\n\t\t\tif (!this._loadStartWasDispatched) {\n\t\t\t\tthis._sendLoadStart();\n\t\t\t\tthis._loadStartWasDispatched = true;\n\t\t\t}\n\t\n\t\t\t// The queue has completed.\n\t\t\tif (this._numItems == this._numItemsLoaded) {\n\t\t\t\tthis.loaded = true;\n\t\t\t\tthis._sendComplete();\n\t\n\t\t\t\t// Load the next queue, if it has been defined.\n\t\t\t\tif (this.next && this.next.load) {\n\t\t\t\t\tthis.next.load();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.loaded = false;\n\t\t\t}\n\t\n\t\t\t// Must iterate forwards to load in the right order.\n\t\t\tfor (var i = 0; i < this._loadQueue.length; i++) {\n\t\t\t\tif (this._currentLoads.length >= this._maxConnections) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tvar loader = this._loadQueue[i];\n\t\n\t\t\t\t// Determine if we should be only loading one tag-script at a time:\n\t\t\t\t// Note: maintainOrder items don't do anything here because we can hold onto their loaded value\n\t\t\t\tif (!this._canStartLoad(loader)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis._loadQueue.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t\tthis._loadItem(loader);\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Begin loading an item. Event listeners are not added to the loaders until the load starts.\n\t\t * @method _loadItem\n\t\t * @param {AbstractLoader} loader The loader instance to start. Currently, this will be an XHRLoader or TagLoader.\n\t\t * @private\n\t\t */\n\t\tp._loadItem = function (loader) {\n\t\t\tloader.on(\"fileload\", this._handleFileLoad, this);\n\t\t\tloader.on(\"progress\", this._handleProgress, this);\n\t\t\tloader.on(\"complete\", this._handleFileComplete, this);\n\t\t\tloader.on(\"error\", this._handleError, this);\n\t\t\tloader.on(\"fileerror\", this._handleFileError, this);\n\t\t\tthis._currentLoads.push(loader);\n\t\t\tthis._sendFileStart(loader.getItem());\n\t\t\tloader.load();\n\t\t};\n\t\n\t\t/**\n\t\t * The callback that is fired when a loader loads a file. This enables loaders like {{#crossLink \"ManifestLoader\"}}{{/crossLink}}\n\t\t * to maintain internal queues, but for this queue to dispatch the {{#crossLink \"fileload:event\"}}{{/crossLink}}\n\t\t * events.\n\t\t * @param {Event} event The {{#crossLink \"AbstractLoader/fileload:event\"}}{{/crossLink}} event from the loader.\n\t\t * @private\n\t\t * @since 0.6.0\n\t\t */\n\t\tp._handleFileLoad = function (event) {\n\t\t\tevent.target = null;\n\t\t\tthis.dispatchEvent(event);\n\t\t};\n\t\n\t\t/**\n\t\t * The callback that is fired when a loader encounters an error from an internal file load operation. This enables\n\t\t * loaders like M\n\t\t * @param event\n\t\t * @private\n\t\t */\n\t\tp._handleFileError = function (event) {\n\t\t\tvar newEvent = new createjs.ErrorEvent(\"FILE_LOAD_ERROR\", null, event.item);\n\t\t\tthis._sendError(newEvent);\n\t\t};\n\t\n\t\t/**\n\t\t * The callback that is fired when a loader encounters an error. The queue will continue loading unless {{#crossLink \"LoadQueue/stopOnError:property\"}}{{/crossLink}}\n\t\t * is set to `true`.\n\t\t * @method _handleError\n\t\t * @param {ErrorEvent} event The error event, containing relevant error information.\n\t\t * @private\n\t\t */\n\t\tp._handleError = function (event) {\n\t\t\tvar loader = event.target;\n\t\t\tthis._numItemsLoaded++;\n\t\n\t\t\tthis._finishOrderedItem(loader, true);\n\t\t\tthis._updateProgress();\n\t\n\t\t\tvar newEvent = new createjs.ErrorEvent(\"FILE_LOAD_ERROR\", null, loader.getItem());\n\t\t\t// TODO: Propagate actual error message.\n\t\n\t\t\tthis._sendError(newEvent);\n\t\n\t\t\tif (!this.stopOnError) {\n\t\t\t\tthis._removeLoadItem(loader);\n\t\t\t\tthis._cleanLoadItem(loader);\n\t\t\t\tthis._loadNext();\n\t\t\t} else {\n\t\t\t\tthis.setPaused(true);\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * An item has finished loading. We can assume that it is totally loaded, has been parsed for immediate use, and\n\t\t * is available as the \"result\" property on the load item. The raw text result for a parsed item (such as JSON, XML,\n\t\t * CSS, JavaScript, etc) is available as the \"rawResult\" property, and can also be looked up using {{#crossLink \"LoadQueue/getResult\"}}{{/crossLink}}.\n\t\t * @method _handleFileComplete\n\t\t * @param {Event} event The event object from the loader.\n\t\t * @private\n\t\t */\n\t\tp._handleFileComplete = function (event) {\n\t\t\tvar loader = event.target;\n\t\t\tvar item = loader.getItem();\n\t\n\t\t\tvar result = loader.getResult();\n\t\t\tthis._loadedResults[item.id] = result;\n\t\t\tvar rawResult = loader.getResult(true);\n\t\t\tif (rawResult != null && rawResult !== result) {\n\t\t\t\tthis._loadedRawResults[item.id] = rawResult;\n\t\t\t}\n\t\n\t\t\tthis._saveLoadedItems(loader);\n\t\n\t\t\t// Remove the load item\n\t\t\tthis._removeLoadItem(loader);\n\t\n\t\t\tif (!this._finishOrderedItem(loader)) {\n\t\t\t\t// The item was NOT managed, so process it now\n\t\t\t\tthis._processFinishedLoad(item, loader);\n\t\t\t}\n\t\n\t\t\t// Clean up the load item\n\t\t\tthis._cleanLoadItem(loader);\n\t\t};\n\t\n\t\t/**\n\t\t * Some loaders might load additional content, other than the item they were passed (such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}}).\n\t\t * Any items exposed by the loader using {{#crossLink \"AbstractLoader/getLoadItems\"}}{{/crossLink}} are added to the\n\t\t * LoadQueue's look-ups, including {{#crossLink \"getItem\"}}{{/crossLink}} and {{#crossLink \"getResult\"}}{{/crossLink}}\n\t\t * methods.\n\t\t * @method _saveLoadedItems\n\t\t * @param {AbstractLoader} loader\n\t\t * @protected\n\t\t * @since 0.6.0\n\t\t */\n\t\tp._saveLoadedItems = function (loader) {\n\t\t\t// TODO: Not sure how to handle this. Would be nice to expose the items.\n\t\t\t// Loaders may load sub-items. This adds them to this queue\n\t\t\tvar list = loader.getLoadedItems();\n\t\t\tif (list === null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\t\tvar item = list[i].item;\n\t\n\t\t\t\t// Store item lookups\n\t\t\t\tthis._loadItemsBySrc[item.src] = item;\n\t\t\t\tthis._loadItemsById[item.id] = item;\n\t\n\t\t\t\t// Store loaded content\n\t\t\t\tthis._loadedResults[item.id] = list[i].result;\n\t\t\t\tthis._loadedRawResults[item.id] = list[i].rawResult;\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Flag an item as finished. If the item's order is being managed, then ensure that it is allowed to finish, and if\n\t\t * so, trigger prior items to trigger as well.\n\t\t * @method _finishOrderedItem\n\t\t * @param {AbstractLoader} loader\n\t\t * @param {Boolean} loadFailed\n\t\t * @return {Boolean} If the item's order is being managed. This allows the caller to take an alternate\n\t\t * behaviour if it is.\n\t\t * @private\n\t\t */\n\t\tp._finishOrderedItem = function (loader, loadFailed) {\n\t\t\tvar item = loader.getItem();\n\t\n\t\t\tif ((this.maintainScriptOrder && item.type == createjs.LoadQueue.JAVASCRIPT)\n\t\t\t\t\t|| item.maintainOrder) {\n\t\n\t\t\t\t//TODO: Evaluate removal of the _currentlyLoadingScript\n\t\t\t\tif (loader instanceof createjs.JavaScriptLoader) {\n\t\t\t\t\tthis._currentlyLoadingScript = false;\n\t\t\t\t}\n\t\n\t\t\t\tvar index = createjs.indexOf(this._scriptOrder, item);\n\t\t\t\tif (index == -1) {\n\t\t\t\t\treturn false;\n\t\t\t\t} // This loader no longer exists\n\t\t\t\tthis._loadedScripts[index] = (loadFailed === true) ? true : item;\n\t\n\t\t\t\tthis._checkScriptLoadOrder();\n\t\t\t\treturn true;\n\t\t\t}\n\t\n\t\t\treturn false;\n\t\t};\n\t\n\t\t/**\n\t\t * Ensure the scripts load and dispatch in the correct order. When using XHR, scripts are stored in an array in the\n\t\t * order they were added, but with a \"null\" value. When they are completed, the value is set to the load item,\n\t\t * and then when they are processed and dispatched, the value is set to `true`. This method simply\n\t\t * iterates the array, and ensures that any loaded items that are not preceded by a `null` value are\n\t\t * dispatched.\n\t\t * @method _checkScriptLoadOrder\n\t\t * @private\n\t\t */\n\t\tp._checkScriptLoadOrder = function () {\n\t\t\tvar l = this._loadedScripts.length;\n\t\n\t\t\tfor (var i = 0; i < l; i++) {\n\t\t\t\tvar item = this._loadedScripts[i];\n\t\t\t\tif (item === null) {\n\t\t\t\t\tbreak;\n\t\t\t\t} // This is still loading. Do not process further.\n\t\t\t\tif (item === true) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} // This has completed, and been processed. Move on.\n\t\n\t\t\t\tvar loadItem = this._loadedResults[item.id];\n\t\t\t\tif (item.type == createjs.LoadQueue.JAVASCRIPT) {\n\t\t\t\t\t// Append script tags to the head automatically.\n\t\t\t\t\tcreatejs.DomUtils.appendToHead(loadItem);\n\t\t\t\t}\n\t\n\t\t\t\tvar loader = item._loader;\n\t\t\t\tthis._processFinishedLoad(item, loader);\n\t\t\t\tthis._loadedScripts[i] = true;\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * A file has completed loading, and the LoadQueue can move on. This triggers the complete event, and kick-starts\n\t\t * the next item.\n\t\t * @method _processFinishedLoad\n\t\t * @param {LoadItem|Object} item\n\t\t * @param {AbstractLoader} loader\n\t\t * @protected\n\t\t */\n\t\tp._processFinishedLoad = function (item, loader) {\n\t\t\tthis._numItemsLoaded++;\n\t\n\t\t\t// Since LoadQueue needs maintain order, we can't append scripts in the loader.\n\t\t\t// So we do it here instead. Or in _checkScriptLoadOrder();\n\t\t\tif (!this.maintainScriptOrder && item.type == createjs.LoadQueue.JAVASCRIPT) {\n\t\t\t\tvar tag = loader.getTag();\n\t\t\t\tcreatejs.DomUtils.appendToHead(tag);\n\t\t\t}\n\t\n\t\t\tthis._updateProgress();\n\t\t\tthis._sendFileComplete(item, loader);\n\t\t\tthis._loadNext();\n\t\t};\n\t\n\t\t/**\n\t\t * Ensure items with `maintainOrder=true` that are before the specified item have loaded. This only applies to\n\t\t * JavaScript items that are being loaded with a TagLoader, since they have to be loaded and completed <strong>before</strong>\n\t\t * the script can even be started, since it exist in the DOM while loading.\n\t\t * @method _canStartLoad\n\t\t * @param {AbstractLoader} loader The loader for the item\n\t\t * @return {Boolean} Whether the item can start a load or not.\n\t\t * @private\n\t\t */\n\t\tp._canStartLoad = function (loader) {\n\t\t\tif (!this.maintainScriptOrder || loader.preferXHR) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar item = loader.getItem();\n\t\t\tif (item.type != createjs.LoadQueue.JAVASCRIPT) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (this._currentlyLoadingScript) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tvar index = this._scriptOrder.indexOf(item);\n\t\t\tvar i = 0;\n\t\t\twhile (i < index) {\n\t\t\t\tvar checkItem = this._loadedScripts[i];\n\t\t\t\tif (checkItem == null) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tthis._currentlyLoadingScript = true;\n\t\t\treturn true;\n\t\t};\n\t\n\t\t/**\n\t\t * A load item is completed or was canceled, and needs to be removed from the LoadQueue.\n\t\t * @method _removeLoadItem\n\t\t * @param {AbstractLoader} loader A loader instance to remove.\n\t\t * @private\n\t\t */\n\t\tp._removeLoadItem = function (loader) {\n\t\t\tvar l = this._currentLoads.length;\n\t\t\tfor (var i = 0; i < l; i++) {\n\t\t\t\tif (this._currentLoads[i] == loader) {\n\t\t\t\t\tthis._currentLoads.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Remove unneeded references from a loader.\n\t\t *\n\t\t * @param loader\n\t\t * @private\n\t\t */\n\t\tp._cleanLoadItem = function(loader) {\n\t\t\tvar item = loader.getItem();\n\t\t\tif (item) {\n\t\t\t\tdelete item._loader;\n\t\t\t}\n\t\t}\n\t\n\t\t/**\n\t\t * An item has dispatched progress. Propagate that progress, and update the LoadQueue's overall progress.\n\t\t * @method _handleProgress\n\t\t * @param {ProgressEvent} event The progress event from the item.\n\t\t * @private\n\t\t */\n\t\tp._handleProgress = function (event) {\n\t\t\tvar loader = event.target;\n\t\t\tthis._sendFileProgress(loader.getItem(), loader.progress);\n\t\t\tthis._updateProgress();\n\t\t};\n\t\n\t\t/**\n\t\t * Overall progress has changed, so determine the new progress amount and dispatch it. This changes any time an\n\t\t * item dispatches progress or completes. Note that since we don't always know the actual filesize of items before\n\t\t * they are loaded. In this case, we define a \"slot\" for each item (1 item in 10 would get 10%), and then append\n\t\t * loaded progress on top of the already-loaded items.\n\t\t *\n\t\t * For example, if 5/10 items have loaded, and item 6 is 20% loaded, the total progress would be:\n\t\t * <ul>\n\t\t *      <li>5/10 of the items in the queue (50%)</li>\n\t\t *      <li>plus 20% of item 6's slot (2%)</li>\n\t\t *      <li>equals 52%</li>\n\t\t * </ul>\n\t\t * @method _updateProgress\n\t\t * @private\n\t\t */\n\t\tp._updateProgress = function () {\n\t\t\tvar loaded = this._numItemsLoaded / this._numItems; // Fully Loaded Progress\n\t\t\tvar remaining = this._numItems - this._numItemsLoaded;\n\t\t\tif (remaining > 0) {\n\t\t\t\tvar chunk = 0;\n\t\t\t\tfor (var i = 0, l = this._currentLoads.length; i < l; i++) {\n\t\t\t\t\tchunk += this._currentLoads[i].progress;\n\t\t\t\t}\n\t\t\t\tloaded += (chunk / remaining) * (remaining / this._numItems);\n\t\t\t}\n\t\n\t\t\tif (this._lastProgress != loaded) {\n\t\t\t\tthis._sendProgress(loaded);\n\t\t\t\tthis._lastProgress = loaded;\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Clean out item results, to free them from memory. Mainly, the loaded item and results are cleared from internal\n\t\t * hashes.\n\t\t * @method _disposeItem\n\t\t * @param {LoadItem|Object} item The item that was passed in for preloading.\n\t\t * @private\n\t\t */\n\t\tp._disposeItem = function (item) {\n\t\t\tdelete this._loadedResults[item.id];\n\t\t\tdelete this._loadedRawResults[item.id];\n\t\t\tdelete this._loadItemsById[item.id];\n\t\t\tdelete this._loadItemsBySrc[item.src];\n\t\t};\n\t\n\t\t/**\n\t\t * Dispatch a \"fileprogress\" {{#crossLink \"Event\"}}{{/crossLink}}. Please see the LoadQueue {{#crossLink \"LoadQueue/fileprogress:event\"}}{{/crossLink}}\n\t\t * event for details on the event payload.\n\t\t * @method _sendFileProgress\n\t\t * @param {LoadItem|Object} item The item that is being loaded.\n\t\t * @param {Number} progress The amount the item has been loaded (between 0 and 1).\n\t\t * @protected\n\t\t */\n\t\tp._sendFileProgress = function (item, progress) {\n\t\t\tif (this._isCanceled() || this._paused) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this.hasEventListener(\"fileprogress\")) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t//LM: Rework ProgressEvent to support this?\n\t\t\tvar event = new createjs.Event(\"fileprogress\");\n\t\t\tevent.progress = progress;\n\t\t\tevent.loaded = progress;\n\t\t\tevent.total = 1;\n\t\t\tevent.item = item;\n\t\n\t\t\tthis.dispatchEvent(event);\n\t\t};\n\t\n\t\t/**\n\t\t * Dispatch a fileload {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event for\n\t\t * details on the event payload.\n\t\t * @method _sendFileComplete\n\t\t * @param {LoadItemObject} item The item that is being loaded.\n\t\t * @param {AbstractLoader} loader\n\t\t * @protected\n\t\t */\n\t\tp._sendFileComplete = function (item, loader) {\n\t\t\tif (this._isCanceled() || this._paused) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar event = new createjs.Event(\"fileload\");\n\t\t\tevent.loader = loader;\n\t\t\tevent.item = item;\n\t\t\tevent.result = this._loadedResults[item.id];\n\t\t\tevent.rawResult = this._loadedRawResults[item.id];\n\t\n\t\t\t// This calls a handler specified on the actual load item. Currently, the SoundJS plugin uses this.\n\t\t\tif (item.completeHandler) {\n\t\t\t\titem.completeHandler(event);\n\t\t\t}\n\t\n\t\t\tthis.hasEventListener(\"fileload\") && this.dispatchEvent(event);\n\t\t};\n\t\n\t\t/**\n\t\t * Dispatch a filestart {{#crossLink \"Event\"}}{{/crossLink}} immediately before a file starts to load. Please see\n\t\t * the {{#crossLink \"LoadQueue/filestart:event\"}}{{/crossLink}} event for details on the event payload.\n\t\t * @method _sendFileStart\n\t\t * @param {LoadItem|Object} item The item that is being loaded.\n\t\t * @protected\n\t\t */\n\t\tp._sendFileStart = function (item) {\n\t\t\tvar event = new createjs.Event(\"filestart\");\n\t\t\tevent.item = item;\n\t\t\tthis.hasEventListener(\"filestart\") && this.dispatchEvent(event);\n\t\t};\n\t\n\t\tp.toString = function () {\n\t\t\treturn \"[PreloadJS LoadQueue]\";\n\t\t};\n\t\n\t\tcreatejs.LoadQueue = createjs.promote(LoadQueue, \"AbstractLoader\");\n\t}());\n\t\n\t//##############################################################################\n\t// TextLoader.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\t// constructor\n\t\t/**\n\t\t * A loader for Text files.\n\t\t * @class TextLoader\n\t\t * @param {LoadItem|Object} loadItem\n\t\t * @extends AbstractLoader\n\t\t * @constructor\n\t\t */\n\t\tfunction TextLoader(loadItem) {\n\t\t\tthis.AbstractLoader_constructor(loadItem, true, createjs.AbstractLoader.TEXT);\n\t\t};\n\t\n\t\tvar p = createjs.extend(TextLoader, createjs.AbstractLoader);\n\t\tvar s = TextLoader;\n\t\n\t\t// static methods\n\t\t/**\n\t\t * Determines if the loader can load a specific item. This loader loads items that are of type {{#crossLink \"AbstractLoader/TEXT:property\"}}{{/crossLink}},\n\t\t * but is also the default loader if a file type can not be determined.\n\t\t * @method canLoadItem\n\t\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t\t * @returns {Boolean} Whether the loader can load the item.\n\t\t * @static\n\t\t */\n\t\ts.canLoadItem = function (item) {\n\t\t\treturn item.type == createjs.AbstractLoader.TEXT;\n\t\t};\n\t\n\t\tcreatejs.TextLoader = createjs.promote(TextLoader, \"AbstractLoader\");\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// BinaryLoader.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\t// constructor\n\t\t/**\n\t\t * A loader for binary files. This is useful for loading web audio, or content that requires an ArrayBuffer.\n\t\t * @class BinaryLoader\n\t\t * @param {LoadItem|Object} loadItem\n\t\t * @extends AbstractLoader\n\t\t * @constructor\n\t\t */\n\t\tfunction BinaryLoader(loadItem) {\n\t\t\tthis.AbstractLoader_constructor(loadItem, true, createjs.AbstractLoader.BINARY);\n\t\t\tthis.on(\"initialize\", this._updateXHR, this);\n\t\t};\n\t\n\t\tvar p = createjs.extend(BinaryLoader, createjs.AbstractLoader);\n\t\tvar s = BinaryLoader;\n\t\n\t\t// static methods\n\t\t/**\n\t\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t\t * {{#crossLink \"AbstractLoader/BINARY:property\"}}{{/crossLink}}\n\t\t * @method canLoadItem\n\t\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t\t * @returns {Boolean} Whether the loader can load the item.\n\t\t * @static\n\t\t */\n\t\ts.canLoadItem = function (item) {\n\t\t\treturn item.type == createjs.AbstractLoader.BINARY;\n\t\t};\n\t\n\t\t// private methods\n\t\t/**\n\t\t * Before the item loads, set the response type to \"arraybuffer\"\n\t\t * @property _updateXHR\n\t\t * @param {Event} event\n\t\t * @private\n\t\t */\n\t\tp._updateXHR = function (event) {\n\t\t\tevent.loader.setResponseType(\"arraybuffer\");\n\t\t};\n\t\n\t\tcreatejs.BinaryLoader = createjs.promote(BinaryLoader, \"AbstractLoader\");\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// CSSLoader.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\t// constructor\n\t\t/**\n\t\t * A loader for CSS files.\n\t\t * @class CSSLoader\n\t\t * @param {LoadItem|Object} loadItem\n\t\t * @param {Boolean} preferXHR\n\t\t * @extends AbstractLoader\n\t\t * @constructor\n\t\t */\n\t\tfunction CSSLoader(loadItem, preferXHR) {\n\t\t\tthis.AbstractLoader_constructor(loadItem, preferXHR, createjs.AbstractLoader.CSS);\n\t\n\t\t\t// public properties\n\t\t\tthis.resultFormatter = this._formatResult;\n\t\n\t\t\t// protected properties\n\t\t\tthis._tagSrcAttribute = \"href\";\n\t\n\t\t\tif (preferXHR) {\n\t\t\t\tthis._tag = createjs.Elements.style();\n\t\t\t} else {\n\t\t\t\tthis._tag = createjs.Elements.link();\n\t\t\t}\n\t\n\t\t\tthis._tag.rel = \"stylesheet\";\n\t\t\tthis._tag.type = \"text/css\";\n\t\t};\n\t\n\t\tvar p = createjs.extend(CSSLoader, createjs.AbstractLoader);\n\t\tvar s = CSSLoader;\n\t\n\t\t// static methods\n\t\t/**\n\t\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t\t * {{#crossLink \"AbstractLoader/CSS:property\"}}{{/crossLink}}.\n\t\t * @method canLoadItem\n\t\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t\t * @returns {Boolean} Whether the loader can load the item.\n\t\t * @static\n\t\t */\n\t\ts.canLoadItem = function (item) {\n\t\t\treturn item.type == createjs.AbstractLoader.CSS;\n\t\t};\n\t\n\t\t// protected methods\n\t\t/**\n\t\t * The result formatter for CSS files.\n\t\t * @method _formatResult\n\t\t * @param {AbstractLoader} loader\n\t\t * @returns {HTMLLinkElement|HTMLStyleElement}\n\t\t * @private\n\t\t */\n\t\tp._formatResult = function (loader) {\n\t\t\tif (this._preferXHR) {\n\t\t\t\tvar tag = loader.getTag();\n\t\n\t\t\t\tif (tag.styleSheet) { // IE\n\t\t\t\t\ttag.styleSheet.cssText = loader.getResult(true);\n\t\t\t\t} else {\n\t\t\t\t\tvar textNode = createjs.Elements.text(loader.getResult(true));\n\t\t\t\t\ttag.appendChild(textNode);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttag = this._tag;\n\t\t\t}\n\t\n\t\t\tcreatejs.DomUtils.appendToHead(tag);\n\t\n\t\t\treturn tag;\n\t\t};\n\t\n\t\tcreatejs.CSSLoader = createjs.promote(CSSLoader, \"AbstractLoader\");\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// ImageLoader.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\t// constructor\n\t\t/**\n\t\t * A loader for image files.\n\t\t * @class ImageLoader\n\t\t * @param {LoadItem|Object} loadItem\n\t\t * @param {Boolean} preferXHR\n\t\t * @extends AbstractLoader\n\t\t * @constructor\n\t\t */\n\t\tfunction ImageLoader (loadItem, preferXHR) {\n\t\t\tthis.AbstractLoader_constructor(loadItem, preferXHR, createjs.AbstractLoader.IMAGE);\n\t\n\t\t\t// public properties\n\t\t\tthis.resultFormatter = this._formatResult;\n\t\n\t\t\t// protected properties\n\t\t\tthis._tagSrcAttribute = \"src\";\n\t\n\t\t\t// Check if the preload item is already a tag.\n\t\t\tif (createjs.DomUtils.isImageTag(loadItem)) {\n\t\t\t\tthis._tag = loadItem;\n\t\t\t} else if (createjs.DomUtils.isImageTag(loadItem.src)) {\n\t\t\t\tthis._tag = loadItem.src;\n\t\t\t} else if (createjs.DomUtils.isImageTag(loadItem.tag)) {\n\t\t\t\tthis._tag = loadItem.tag;\n\t\t\t}\n\t\n\t\t\tif (this._tag != null) {\n\t\t\t\tthis._preferXHR = false;\n\t\t\t} else {\n\t\t\t\tthis._tag = createjs.Elements.img();\n\t\t\t}\n\t\n\t\t\tthis.on(\"initialize\", this._updateXHR, this);\n\t\t};\n\t\n\t\tvar p = createjs.extend(ImageLoader, createjs.AbstractLoader);\n\t\tvar s = ImageLoader;\n\t\n\t\t// static methods\n\t\t/**\n\t\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t\t * {{#crossLink \"AbstractLoader/IMAGE:property\"}}{{/crossLink}}.\n\t\t * @method canLoadItem\n\t\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t\t * @returns {Boolean} Whether the loader can load the item.\n\t\t * @static\n\t\t */\n\t\ts.canLoadItem = function (item) {\n\t\t\treturn item.type == createjs.AbstractLoader.IMAGE;\n\t\t};\n\t\n\t\t// public methods\n\t\tp.load = function () {\n\t\t\tif (this._tag.src != \"\" && this._tag.complete) {\n\t\t\t\tthis._sendComplete();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar crossOrigin = this._item.crossOrigin;\n\t\t\tif (crossOrigin == true) { crossOrigin = \"Anonymous\"; }\n\t\t\tif (crossOrigin != null && !createjs.URLUtils.isLocal(this._item)) {\n\t\t\t\tthis._tag.crossOrigin = crossOrigin;\n\t\t\t}\n\t\n\t\t\tthis.AbstractLoader_load();\n\t\t};\n\t\n\t\t// protected methods\n\t\t/**\n\t\t * Before the item loads, set its mimeType and responseType.\n\t\t * @property _updateXHR\n\t\t * @param {Event} event\n\t\t * @private\n\t\t */\n\t\tp._updateXHR = function (event) {\n\t\t\tevent.loader.mimeType = 'text/plain; charset=x-user-defined-binary';\n\t\n\t\t\t// Only exists for XHR\n\t\t\tif (event.loader.setResponseType) {\n\t\t\t\tevent.loader.setResponseType(\"blob\");\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * The result formatter for Image files.\n\t\t * @method _formatResult\n\t\t * @param {AbstractLoader} loader\n\t\t * @returns {HTMLImageElement}\n\t\t * @private\n\t\t */\n\t\tp._formatResult = function (loader) {\n\t\t\treturn this._formatImage;\n\t\t};\n\t\n\t\t/**\n\t\t * The asynchronous image formatter function. This is required because images have\n\t\t * a short delay before they are ready.\n\t\t * @method _formatImage\n\t\t * @param {Function} successCallback The method to call when the result has finished formatting\n\t\t * @param {Function} errorCallback The method to call if an error occurs during formatting\n\t\t * @private\n\t\t */\n\t\tp._formatImage = function (successCallback, errorCallback) {\n\t\t\tvar tag = this._tag;\n\t\t\tvar URL = window.URL || window.webkitURL;\n\t\n\t\t\tif (!this._preferXHR) {\n\t\n\t\t\t\t//document.body.removeChild(tag);\n\t\t\t} else if (URL) {\n\t\t\t\tvar objURL = URL.createObjectURL(this.getResult(true));\n\t\t\t\ttag.src = objURL;\n\t\n\t\t\t\ttag.addEventListener(\"load\", this._cleanUpURL, false);\n\t\t\t\ttag.addEventListener(\"error\", this._cleanUpURL, false);\n\t\t\t} else {\n\t\t\t\ttag.src = this._item.src;\n\t\t\t}\n\t\n\t\t\tif (tag.complete) {\n\t\t\t\tsuccessCallback(tag);\n\t\t\t} else {\n\t            tag.onload = createjs.proxy(function() {\n\t                successCallback(this._tag);\n\t            }, this);\n\t\n\t            tag.onerror = createjs.proxy(function() {\n\t                errorCallback(this._tag);\n\t            }, this);\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Clean up the ObjectURL, the tag is done with it. Note that this function is run\n\t\t * as an event listener without a proxy/closure, as it doesn't require it - so do not\n\t\t * include any functionality that requires scope without changing it.\n\t\t * @method _cleanUpURL\n\t\t * @param event\n\t\t * @private\n\t\t */\n\t\tp._cleanUpURL = function (event) {\n\t\t\tvar URL = window.URL || window.webkitURL;\n\t\t\tURL.revokeObjectURL(event.target.src);\n\t\t};\n\t\n\t\tcreatejs.ImageLoader = createjs.promote(ImageLoader, \"AbstractLoader\");\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// JavaScriptLoader.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\t// constructor\n\t\t/**\n\t\t * A loader for JavaScript files.\n\t\t * @class JavaScriptLoader\n\t\t * @param {LoadItem|Object} loadItem\n\t\t * @param {Boolean} preferXHR\n\t\t * @extends AbstractLoader\n\t\t * @constructor\n\t\t */\n\t\tfunction JavaScriptLoader(loadItem, preferXHR) {\n\t\t\tthis.AbstractLoader_constructor(loadItem, preferXHR, createjs.AbstractLoader.JAVASCRIPT);\n\t\n\t\t\t// public properties\n\t\t\tthis.resultFormatter = this._formatResult;\n\t\n\t\t\t// protected properties\n\t\t\tthis._tagSrcAttribute = \"src\";\n\t\t\tthis.setTag(createjs.Elements.script());\n\t\t};\n\t\n\t\tvar p = createjs.extend(JavaScriptLoader, createjs.AbstractLoader);\n\t\tvar s = JavaScriptLoader;\n\t\n\t\t// static methods\n\t\t/**\n\t\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t\t * {{#crossLink \"AbstractLoader/JAVASCRIPT:property\"}}{{/crossLink}}\n\t\t * @method canLoadItem\n\t\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t\t * @returns {Boolean} Whether the loader can load the item.\n\t\t * @static\n\t\t */\n\t\ts.canLoadItem = function (item) {\n\t\t\treturn item.type == createjs.AbstractLoader.JAVASCRIPT;\n\t\t};\n\t\n\t\t// protected methods\n\t\t/**\n\t\t * The result formatter for JavaScript files.\n\t\t * @method _formatResult\n\t\t * @param {AbstractLoader} loader\n\t\t * @returns {HTMLLinkElement|HTMLStyleElement}\n\t\t * @private\n\t\t */\n\t\tp._formatResult = function (loader) {\n\t\t\tvar tag = loader.getTag();\n\t\t\tif (this._preferXHR) {\n\t\t\t\ttag.text = loader.getResult(true);\n\t\t\t}\n\t\t\treturn tag;\n\t\t};\n\t\n\t\tcreatejs.JavaScriptLoader = createjs.promote(JavaScriptLoader, \"AbstractLoader\");\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// JSONLoader.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\t// constructor\n\t\t/**\n\t\t * A loader for JSON files. To load JSON cross-domain, use JSONP and the {{#crossLink \"JSONPLoader\"}}{{/crossLink}}\n\t\t * instead. To load JSON-formatted manifests, use {{#crossLink \"ManifestLoader\"}}{{/crossLink}}, and to\n\t\t * load EaselJS SpriteSheets, use {{#crossLink \"SpriteSheetLoader\"}}{{/crossLink}}.\n\t\t * @class JSONLoader\n\t\t * @param {LoadItem|Object} loadItem\n\t\t * @extends AbstractLoader\n\t\t * @constructor\n\t\t */\n\t\tfunction JSONLoader(loadItem) {\n\t\t\tthis.AbstractLoader_constructor(loadItem, true, createjs.AbstractLoader.JSON);\n\t\n\t\t\t// public properties\n\t\t\tthis.resultFormatter = this._formatResult;\n\t\t};\n\t\n\t\tvar p = createjs.extend(JSONLoader, createjs.AbstractLoader);\n\t\tvar s = JSONLoader;\n\t\n\t\t// static methods\n\t\t/**\n\t\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t\t * {{#crossLink \"AbstractLoader/JSON:property\"}}{{/crossLink}}.\n\t\t * @method canLoadItem\n\t\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t\t * @returns {Boolean} Whether the loader can load the item.\n\t\t * @static\n\t\t */\n\t\ts.canLoadItem = function (item) {\n\t\t\treturn item.type == createjs.AbstractLoader.JSON;\n\t\t};\n\t\n\t\t// protected methods\n\t\t/**\n\t\t * The result formatter for JSON files.\n\t\t * @method _formatResult\n\t\t * @param {AbstractLoader} loader\n\t\t * @returns {HTMLLinkElement|HTMLStyleElement}\n\t\t * @private\n\t\t */\n\t\tp._formatResult = function (loader) {\n\t\t\tvar json = null;\n\t\t\ttry {\n\t\t\t\tjson = createjs.DataUtils.parseJSON(loader.getResult(true));\n\t\t\t} catch (e) {\n\t\t\t\tvar event = new createjs.ErrorEvent(\"JSON_FORMAT\", null, e);\n\t\t\t\tthis._sendError(event);\n\t\t\t\treturn e;\n\t\t\t}\n\t\n\t\t\treturn json;\n\t\t};\n\t\n\t\tcreatejs.JSONLoader = createjs.promote(JSONLoader, \"AbstractLoader\");\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// JSONPLoader.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\t// constructor\n\t\t/**\n\t\t * A loader for JSONP files, which are JSON-formatted text files, wrapped in a callback. To load regular JSON\n\t\t * without a callback use the {{#crossLink \"JSONLoader\"}}{{/crossLink}} instead. To load JSON-formatted manifests,\n\t\t * use {{#crossLink \"ManifestLoader\"}}{{/crossLink}}, and to load EaselJS SpriteSheets, use\n\t\t * {{#crossLink \"SpriteSheetLoader\"}}{{/crossLink}}.\n\t\t *\n\t\t * JSONP is a format that provides a solution for loading JSON files cross-domain <em>without</em> requiring CORS.\n\t\t * JSONP files are loaded as JavaScript, and the \"callback\" is executed once they are loaded. The callback in the\n\t\t * JSONP must match the callback passed to the loadItem.\n\t\t *\n\t\t * <h4>Example JSONP</h4>\n\t\t *\n\t\t * \t\tcallbackName({\n\t\t * \t\t\t\"name\": \"value\",\n\t\t *\t \t\t\"num\": 3,\n\t\t *\t\t\t\"obj\": { \"bool\":true }\n\t\t * \t\t});\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t * \t\tvar loadItem = {id:\"json\", type:\"jsonp\", src:\"http://server.com/text.json\", callback:\"callbackName\"}\n\t\t * \t\tvar queue = new createjs.LoadQueue();\n\t\t * \t\tqueue.on(\"complete\", handleComplete);\n\t\t * \t\tqueue.loadItem(loadItem);\n\t\t *\n\t\t * \t\tfunction handleComplete(event) }\n\t\t * \t\t\tvar json = queue.getResult(\"json\");\n\t\t * \t\t\tconsole.log(json.obj.bool); // true\n\t\t * \t\t}\n\t\t *\n\t\t * Note that JSONP files loaded concurrently require a <em>unique</em> callback. To ensure JSONP files are loaded\n\t\t * in order, either use the {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}} method (set to 1),\n\t\t * or set {{#crossLink \"LoadItem/maintainOrder:property\"}}{{/crossLink}} on items with the same callback.\n\t\t *\n\t\t * @class JSONPLoader\n\t\t * @param {LoadItem|Object} loadItem\n\t\t * @extends AbstractLoader\n\t\t * @constructor\n\t\t */\n\t\tfunction JSONPLoader(loadItem) {\n\t\t\tthis.AbstractLoader_constructor(loadItem, false, createjs.AbstractLoader.JSONP);\n\t\t\tthis.setTag(createjs.Elements.script());\n\t\t\tthis.getTag().type = \"text/javascript\";\n\t\t};\n\t\n\t\tvar p = createjs.extend(JSONPLoader, createjs.AbstractLoader);\n\t\tvar s = JSONPLoader;\n\t\n\t\n\t\t// static methods\n\t\t/**\n\t\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t\t * {{#crossLink \"AbstractLoader/JSONP:property\"}}{{/crossLink}}.\n\t\t * @method canLoadItem\n\t\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t\t * @returns {Boolean} Whether the loader can load the item.\n\t\t * @static\n\t\t */\n\t\ts.canLoadItem = function (item) {\n\t\t\treturn item.type == createjs.AbstractLoader.JSONP;\n\t\t};\n\t\n\t\t// public methods\n\t\tp.cancel = function () {\n\t\t\tthis.AbstractLoader_cancel();\n\t\t\tthis._dispose();\n\t\t};\n\t\n\t\t/**\n\t\t * Loads the JSONp file.  Because of the unique loading needs of JSONp\n\t\t * we don't use the AbstractLoader.load() method.\n\t\t *\n\t\t * @method load\n\t\t *\n\t\t */\n\t\tp.load = function () {\n\t\t\tif (this._item.callback == null) {\n\t\t\t\tthrow new Error('callback is required for loading JSONP requests.');\n\t\t\t}\n\t\n\t\t\t// TODO: Look into creating our own iFrame to handle the load\n\t\t\t// In the first attempt, FF did not get the result\n\t\t\t//   result instanceof Object did not work either\n\t\t\t//   so we would need to clone the result.\n\t\t\tif (window[this._item.callback] != null) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"JSONP callback '\" +\n\t\t\t\t\tthis._item.callback +\n\t\t\t\t\t\"' already exists on window. You need to specify a different callback or re-name the current one.\");\n\t\t\t}\n\t\n\t\t\twindow[this._item.callback] = createjs.proxy(this._handleLoad, this);\n\t\t\tcreatejs.DomUtils.appendToBody(this._tag);\n\t\n\t\t\tthis._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout);\n\t\n\t\t\t// Load the tag\n\t\t\tthis._tag.src = this._item.src;\n\t\t};\n\t\n\t\t// private methods\n\t\t/**\n\t\t * Handle the JSONP callback, which is a public method defined on `window`.\n\t\t * @method _handleLoad\n\t\t * @param {Object} data The formatted JSON data.\n\t\t * @private\n\t\t */\n\t\tp._handleLoad = function (data) {\n\t\t\tthis._result = this._rawResult = data;\n\t\t\tthis._sendComplete();\n\t\n\t\t\tthis._dispose();\n\t\t};\n\t\n\t\t/**\n\t\t * The tag request has not loaded within the time specfied in loadTimeout.\n\t\t * @method _handleError\n\t\t * @param {Object} event The XHR error event.\n\t\t * @private\n\t\t */\n\t\tp._handleTimeout = function () {\n\t\t\tthis._dispose();\n\t\t\tthis.dispatchEvent(new createjs.ErrorEvent(\"timeout\"));\n\t\t};\n\t\n\t\t/**\n\t\t * Clean up the JSONP load. This clears out the callback and script tag that this loader creates.\n\t\t * @method _dispose\n\t\t * @private\n\t\t */\n\t\tp._dispose = function () {\n\t\t\tcreatejs.DomUtils.removeChild(this._tag);\n\t\t\tdelete window[this._item.callback];\n\t\n\t\t\tclearTimeout(this._loadTimeout);\n\t\t};\n\t\n\t\tcreatejs.JSONPLoader = createjs.promote(JSONPLoader, \"AbstractLoader\");\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// ManifestLoader.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\t// constructor\n\t\t/**\n\t\t * A loader for JSON manifests. Items inside the manifest are loaded before the loader completes. To load manifests\n\t\t * using JSONP, specify a {{#crossLink \"LoadItem/callback:property\"}}{{/crossLink}} as part of the\n\t\t * {{#crossLink \"LoadItem\"}}{{/crossLink}}.\n\t\t *\n\t\t * The list of files in the manifest must be defined on the top-level JSON object in a `manifest` property. This\n\t\t * example shows a sample manifest definition, as well as how to to include a sub-manifest.\n\t\t *\n\t\t * \t\t{\n\t\t * \t\t\t\"path\": \"assets/\",\n\t\t *\t \t    \"manifest\": [\n\t\t *\t\t\t\t\"image.png\",\n\t\t *\t\t\t\t{\"src\": \"image2.png\", \"id\":\"image2\"},\n\t\t *\t\t\t\t{\"src\": \"sub-manifest.json\", \"type\":\"manifest\", \"callback\":\"jsonCallback\"}\n\t\t *\t \t    ]\n\t\t *\t \t}\n\t\t *\n\t\t * When a ManifestLoader has completed loading, the parent loader (usually a {{#crossLink \"LoadQueue\"}}{{/crossLink}},\n\t\t * but could also be another ManifestLoader) will inherit all the loaded items, so you can access them directly.\n\t\t *\n\t\t * Note that the {{#crossLink \"JSONLoader\"}}{{/crossLink}} and {{#crossLink \"JSONPLoader\"}}{{/crossLink}} are\n\t\t * higher priority loaders, so manifests <strong>must</strong> set the {{#crossLink \"LoadItem\"}}{{/crossLink}}\n\t\t * {{#crossLink \"LoadItem/type:property\"}}{{/crossLink}} property to {{#crossLink \"AbstractLoader/MANIFEST:property\"}}{{/crossLink}}.\n\t\t * @class ManifestLoader\n\t\t * @param {LoadItem|Object} loadItem\n\t\t * @extends AbstractLoader\n\t\t * @constructor\n\t\t */\n\t\tfunction ManifestLoader(loadItem) {\n\t\t\tthis.AbstractLoader_constructor(loadItem, null, createjs.AbstractLoader.MANIFEST);\n\t\n\t\t// Public Properties\n\t\t\t/**\n\t\t\t * An array of the plugins registered using {{#crossLink \"LoadQueue/installPlugin\"}}{{/crossLink}},\n\t\t\t * used to pass plugins to new LoadQueues that may be created.\n\t\t\t * @property _plugins\n\t\t\t * @type {Array}\n\t\t\t * @private\n\t\t\t * @since 0.6.1\n\t\t\t */\n\t\t\tthis.plugins = null;\n\t\n\t\n\t\t// Protected Properties\n\t\t\t/**\n\t\t\t * An internal {{#crossLink \"LoadQueue\"}}{{/crossLink}} that loads the contents of the manifest.\n\t\t\t * @property _manifestQueue\n\t\t\t * @type {LoadQueue}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._manifestQueue = null;\n\t\t};\n\t\n\t\tvar p = createjs.extend(ManifestLoader, createjs.AbstractLoader);\n\t\tvar s = ManifestLoader;\n\t\n\t\t// static properties\n\t\t/**\n\t\t * The amount of progress that the manifest itself takes up.\n\t\t * @property MANIFEST_PROGRESS\n\t\t * @type {number}\n\t\t * @default 0.25 (25%)\n\t\t * @private\n\t\t * @static\n\t\t */\n\t\ts.MANIFEST_PROGRESS = 0.25;\n\t\n\t\t// static methods\n\t\t/**\n\t\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t\t * {{#crossLink \"AbstractLoader/MANIFEST:property\"}}{{/crossLink}}\n\t\t * @method canLoadItem\n\t\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t\t * @returns {Boolean} Whether the loader can load the item.\n\t\t * @static\n\t\t */\n\t\ts.canLoadItem = function (item) {\n\t\t\treturn item.type == createjs.AbstractLoader.MANIFEST;\n\t\t};\n\t\n\t\t// public methods\n\t\tp.load = function () {\n\t\t\tthis.AbstractLoader_load();\n\t\t};\n\t\n\t\t// protected methods\n\t\tp._createRequest = function() {\n\t\t\tvar callback = this._item.callback;\n\t\t\tif (callback != null) {\n\t\t\t\tthis._request = new createjs.JSONPLoader(this._item);\n\t\t\t} else {\n\t\t\t\tthis._request = new createjs.JSONLoader(this._item);\n\t\t\t}\n\t\t};\n\t\n\t\tp.handleEvent = function (event) {\n\t\t\tswitch (event.type) {\n\t\t\t\tcase \"complete\":\n\t\t\t\t\tthis._rawResult = event.target.getResult(true);\n\t\t\t\t\tthis._result = event.target.getResult();\n\t\t\t\t\tthis._sendProgress(s.MANIFEST_PROGRESS);\n\t\t\t\t\tthis._loadManifest(this._result);\n\t\t\t\t\treturn;\n\t\t\t\tcase \"progress\":\n\t\t\t\t\tevent.loaded *= s.MANIFEST_PROGRESS;\n\t\t\t\t\tthis.progress = event.loaded / event.total;\n\t\t\t\t\tif (isNaN(this.progress) || this.progress == Infinity) { this.progress = 0; }\n\t\t\t\t\tthis._sendProgress(event);\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.AbstractLoader_handleEvent(event);\n\t\t};\n\t\n\t\tp.destroy = function() {\n\t\t\tthis.AbstractLoader_destroy();\n\t\t\tthis._manifestQueue.close();\n\t\t};\n\t\n\t\t/**\n\t\t * Create and load the manifest items once the actual manifest has been loaded.\n\t\t * @method _loadManifest\n\t\t * @param {Object} json\n\t\t * @private\n\t\t */\n\t\tp._loadManifest = function (json) {\n\t\t\tif (json && json.manifest) {\n\t\t\t\tvar queue = this._manifestQueue = new createjs.LoadQueue();\n\t\t\t\tqueue.on(\"fileload\", this._handleManifestFileLoad, this);\n\t\t\t\tqueue.on(\"progress\", this._handleManifestProgress, this);\n\t\t\t\tqueue.on(\"complete\", this._handleManifestComplete, this, true);\n\t\t\t\tqueue.on(\"error\", this._handleManifestError, this, true);\n\t\t\t\tfor(var i = 0, l = this.plugins.length; i < l; i++) {\t// conserve order of plugins\n\t\t\t\t\tqueue.installPlugin(this.plugins[i]);\n\t\t\t\t}\n\t\t\t\tqueue.loadManifest(json);\n\t\t\t} else {\n\t\t\t\tthis._sendComplete();\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * An item from the {{#crossLink \"_manifestQueue:property\"}}{{/crossLink}} has completed.\n\t\t * @method _handleManifestFileLoad\n\t\t * @param {Event} event\n\t\t * @private\n\t\t */\n\t\tp._handleManifestFileLoad = function (event) {\n\t\t\tevent.target = null;\n\t\t\tthis.dispatchEvent(event);\n\t\t};\n\t\n\t\t/**\n\t\t * The manifest has completed loading. This triggers the {{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}}\n\t\t * {{#crossLink \"Event\"}}{{/crossLink}} from the ManifestLoader.\n\t\t * @method _handleManifestComplete\n\t\t * @param {Event} event\n\t\t * @private\n\t\t */\n\t\tp._handleManifestComplete = function (event) {\n\t\t\tthis._loadedItems = this._manifestQueue.getItems(true);\n\t\t\tthis._sendComplete();\n\t\t};\n\t\n\t\t/**\n\t\t * The manifest has reported progress.\n\t\t * @method _handleManifestProgress\n\t\t * @param {ProgressEvent} event\n\t\t * @private\n\t\t */\n\t\tp._handleManifestProgress = function (event) {\n\t\t\tthis.progress = event.progress * (1 - s.MANIFEST_PROGRESS) + s.MANIFEST_PROGRESS;\n\t\t\tthis._sendProgress(this.progress);\n\t\t};\n\t\n\t\t/**\n\t\t * The manifest has reported an error with one of the files.\n\t\t * @method _handleManifestError\n\t\t * @param {ErrorEvent} event\n\t\t * @private\n\t\t */\n\t\tp._handleManifestError = function (event) {\n\t\t\tvar newEvent = new createjs.Event(\"fileerror\");\n\t\t\tnewEvent.item = event.data;\n\t\t\tthis.dispatchEvent(newEvent);\n\t\t};\n\t\n\t\tcreatejs.ManifestLoader = createjs.promote(ManifestLoader, \"AbstractLoader\");\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// SoundLoader.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\t// constructor\n\t\t/**\n\t\t * A loader for HTML audio files. PreloadJS can not load WebAudio files, as a WebAudio context is required, which\n\t\t * should be created by either a library playing the sound (such as <a href=\"http://soundjs.com\">SoundJS</a>, or an\n\t\t * external framework that handles audio playback. To load content that can be played by WebAudio, use the\n\t\t * {{#crossLink \"BinaryLoader\"}}{{/crossLink}}, and handle the audio context decoding manually.\n\t\t * @class SoundLoader\n\t\t * @param {LoadItem|Object} loadItem\n\t\t * @param {Boolean} preferXHR\n\t\t * @extends AbstractMediaLoader\n\t\t * @constructor\n\t\t */\n\t\tfunction SoundLoader(loadItem, preferXHR) {\n\t\t\tthis.AbstractMediaLoader_constructor(loadItem, preferXHR, createjs.AbstractLoader.SOUND);\n\t\n\t\t\t// protected properties\n\t\t\tif (createjs.DomUtils.isAudioTag(loadItem)) {\n\t\t\t\tthis._tag = loadItem;\n\t\t\t} else if (createjs.DomUtils.isAudioTag(loadItem.src)) {\n\t\t\t\tthis._tag = loadItem;\n\t\t\t} else if (createjs.DomUtils.isAudioTag(loadItem.tag)) {\n\t\t\t\tthis._tag = createjs.DomUtils.isAudioTag(loadItem) ? loadItem : loadItem.src;\n\t\t\t}\n\t\n\t\t\tif (this._tag != null) {\n\t\t\t\tthis._preferXHR = false;\n\t\t\t}\n\t\t};\n\t\n\t\tvar p = createjs.extend(SoundLoader, createjs.AbstractMediaLoader);\n\t\tvar s = SoundLoader;\n\t\n\t\t// static methods\n\t\t/**\n\t\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t\t * {{#crossLink \"AbstractLoader/SOUND:property\"}}{{/crossLink}}.\n\t\t * @method canLoadItem\n\t\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t\t * @returns {Boolean} Whether the loader can load the item.\n\t\t * @static\n\t\t */\n\t\ts.canLoadItem = function (item) {\n\t\t\treturn item.type == createjs.AbstractLoader.SOUND;\n\t\t};\n\t\n\t\t// protected methods\n\t\tp._createTag = function (src) {\n\t\t\tvar tag = createjs.Elements.audio();\n\t\t\ttag.autoplay = false;\n\t\t\ttag.preload = \"none\";\n\t\n\t\t\t//LM: Firefox fails when this the preload=\"none\" for other tags, but it needs to be \"none\" to ensure PreloadJS works.\n\t\t\ttag.src = src;\n\t\t\treturn tag;\n\t\t};\n\t\n\t\tcreatejs.SoundLoader = createjs.promote(SoundLoader, \"AbstractMediaLoader\");\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// VideoLoader.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\t// constructor\n\t\t/**\n\t\t * A loader for video files.\n\t\t * @class VideoLoader\n\t\t * @param {LoadItem|Object} loadItem\n\t\t * @param {Boolean} preferXHR\n\t\t * @extends AbstractMediaLoader\n\t\t * @constructor\n\t\t */\n\t\tfunction VideoLoader(loadItem, preferXHR) {\n\t\t\tthis.AbstractMediaLoader_constructor(loadItem, preferXHR, createjs.AbstractLoader.VIDEO);\n\t\n\t\t\tif (createjs.DomUtils.isVideoTag(loadItem) || createjs.DomUtils.isVideoTag(loadItem.src)) {\n\t\t\t\tthis.setTag(createjs.DomUtils.isVideoTag(loadItem)?loadItem:loadItem.src);\n\t\n\t\t\t\t// We can't use XHR for a tag that's passed in.\n\t\t\t\tthis._preferXHR = false;\n\t\t\t} else {\n\t\t\t\tthis.setTag(this._createTag());\n\t\t\t}\n\t\t};\n\t\n\t\tvar p = createjs.extend(VideoLoader, createjs.AbstractMediaLoader);\n\t\tvar s = VideoLoader;\n\t\n\t\t/**\n\t\t * Create a new video tag\n\t\t *\n\t\t * @returns {HTMLElement}\n\t\t * @private\n\t\t */\n\t\tp._createTag = function () {\n\t\t\treturn createjs.Elements.video();\n\t\t};\n\t\n\t\t// static methods\n\t\t/**\n\t\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t\t * {{#crossLink \"AbstractLoader/VIDEO:property\"}}{{/crossLink}}.\n\t\t * @method canLoadItem\n\t\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t\t * @returns {Boolean} Whether the loader can load the item.\n\t\t * @static\n\t\t */\n\t\ts.canLoadItem = function (item) {\n\t\t\treturn item.type == createjs.AbstractLoader.VIDEO;\n\t\t};\n\t\n\t\tcreatejs.VideoLoader = createjs.promote(VideoLoader, \"AbstractMediaLoader\");\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// SpriteSheetLoader.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\t// constructor\n\t\t/**\n\t\t * A loader for EaselJS SpriteSheets. Images inside the spritesheet definition are loaded before the loader\n\t\t * completes. To load SpriteSheets using JSONP, specify a {{#crossLink \"LoadItem/callback:property\"}}{{/crossLink}}\n\t\t * as part of the {{#crossLink \"LoadItem\"}}{{/crossLink}}. Note that the {{#crossLink \"JSONLoader\"}}{{/crossLink}}\n\t\t * and {{#crossLink \"JSONPLoader\"}}{{/crossLink}} are higher priority loaders, so SpriteSheets <strong>must</strong>\n\t\t * set the {{#crossLink \"LoadItem\"}}{{/crossLink}} {{#crossLink \"LoadItem/type:property\"}}{{/crossLink}} property\n\t\t * to {{#crossLink \"AbstractLoader/SPRITESHEET:property\"}}{{/crossLink}}.\n\t\t *\n\t\t * The {{#crossLink \"LoadItem\"}}{{/crossLink}} {{#crossLink \"LoadItem/crossOrigin:property\"}}{{/crossLink}} as well\n\t\t * as the {{#crossLink \"LoadQueue's\"}}{{/crossLink}} `basePath` argument and {{#crossLink \"LoadQueue/_preferXHR\"}}{{/crossLink}}\n\t\t * property supplied to the {{#crossLink \"LoadQueue\"}}{{/crossLink}} are passed on to the sub-manifest that loads\n\t\t * the SpriteSheet images.\n\t\t *\n\t\t * Note that the SpriteSheet JSON does not respect the {{#crossLink \"LoadQueue/_preferXHR:property\"}}{{/crossLink}}\n\t\t * property, which should instead be determined by the presence of a {{#crossLink \"LoadItem/callback:property\"}}{{/crossLink}}\n\t\t * property on the SpriteSheet load item. This is because the JSON loaded will have a different format depending on\n\t\t * if it is loaded as JSON, so just changing `preferXHR` is not enough to change how it is loaded.\n\t\t * @class SpriteSheetLoader\n\t\t * @param {LoadItem|Object} loadItem\n\t\t * @extends AbstractLoader\n\t\t * @constructor\n\t\t */\n\t\tfunction SpriteSheetLoader(loadItem, preferXHR) {\n\t\t\tthis.AbstractLoader_constructor(loadItem, preferXHR, createjs.AbstractLoader.SPRITESHEET);\n\t\n\t\t\t// protected properties\n\t\t\t/**\n\t\t\t * An internal queue which loads the SpriteSheet's images.\n\t\t\t * @method _manifestQueue\n\t\t\t * @type {LoadQueue}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._manifestQueue = null;\n\t\t}\n\t\n\t\tvar p = createjs.extend(SpriteSheetLoader, createjs.AbstractLoader);\n\t\tvar s = SpriteSheetLoader;\n\t\n\t\t// static properties\n\t\t/**\n\t\t * The amount of progress that the manifest itself takes up.\n\t\t * @property SPRITESHEET_PROGRESS\n\t\t * @type {number}\n\t\t * @default 0.25 (25%)\n\t\t * @private\n\t\t * @static\n\t\t */\n\t\ts.SPRITESHEET_PROGRESS = 0.25;\n\t\n\t\t// static methods\n\t\t/**\n\t\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t\t * {{#crossLink \"AbstractLoader/SPRITESHEET:property\"}}{{/crossLink}}\n\t\t * @method canLoadItem\n\t\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t\t * @returns {Boolean} Whether the loader can load the item.\n\t\t * @static\n\t\t */\n\t\ts.canLoadItem = function (item) {\n\t\t\treturn item.type == createjs.AbstractLoader.SPRITESHEET;\n\t\t};\n\t\n\t\t// public methods\n\t\tp.destroy = function() {\n\t\t\tthis.AbstractLoader_destroy();\n\t\t\tthis._manifestQueue.close();\n\t\t};\n\t\n\t\t// protected methods\n\t\tp._createRequest = function() {\n\t\t\tvar callback = this._item.callback;\n\t\t\tif (callback != null) {\n\t\t\t\tthis._request = new createjs.JSONPLoader(this._item);\n\t\t\t} else {\n\t\t\t\tthis._request = new createjs.JSONLoader(this._item);\n\t\t\t}\n\t\t};\n\t\n\t\tp.handleEvent = function (event) {\n\t\t\tswitch (event.type) {\n\t\t\t\tcase \"complete\":\n\t\t\t\t\tthis._rawResult = event.target.getResult(true);\n\t\t\t\t\tthis._result = event.target.getResult();\n\t\t\t\t\tthis._sendProgress(s.SPRITESHEET_PROGRESS);\n\t\t\t\t\tthis._loadManifest(this._result);\n\t\t\t\t\treturn;\n\t\t\t\tcase \"progress\":\n\t\t\t\t\tevent.loaded *= s.SPRITESHEET_PROGRESS;\n\t\t\t\t\tthis.progress = event.loaded / event.total;\n\t\t\t\t\tif (isNaN(this.progress) || this.progress == Infinity) { this.progress = 0; }\n\t\t\t\t\tthis._sendProgress(event);\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.AbstractLoader_handleEvent(event);\n\t\t};\n\t\n\t\t/**\n\t\t * Create and load the images once the SpriteSheet JSON has been loaded.\n\t\t * @method _loadManifest\n\t\t * @param {Object} json\n\t\t * @private\n\t\t */\n\t\tp._loadManifest = function (json) {\n\t\t\tif (json && json.images) {\n\t\t\t\tvar queue = this._manifestQueue = new createjs.LoadQueue(this._preferXHR, this._item.path, this._item.crossOrigin);\n\t\t\t\tqueue.on(\"complete\", this._handleManifestComplete, this, true);\n\t\t\t\tqueue.on(\"fileload\", this._handleManifestFileLoad, this);\n\t\t\t\tqueue.on(\"progress\", this._handleManifestProgress, this);\n\t\t\t\tqueue.on(\"error\", this._handleManifestError, this, true);\n\t\t\t\tqueue.loadManifest(json.images);\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * An item from the {{#crossLink \"_manifestQueue:property\"}}{{/crossLink}} has completed.\n\t\t * @method _handleManifestFileLoad\n\t\t * @param {Event} event\n\t\t * @private\n\t\t */\n\t\tp._handleManifestFileLoad = function (event) {\n\t\t\tvar image = event.result;\n\t\t\tif (image != null) {\n\t\t\t\tvar images = this.getResult().images;\n\t\t\t\tvar pos = images.indexOf(event.item.src);\n\t\t\t\timages[pos] = image;\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * The images have completed loading. This triggers the {{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}}\n\t\t * {{#crossLink \"Event\"}}{{/crossLink}} from the SpriteSheetLoader.\n\t\t * @method _handleManifestComplete\n\t\t * @param {Event} event\n\t\t * @private\n\t\t */\n\t\tp._handleManifestComplete = function (event) {\n\t\t\tthis._result = new createjs.SpriteSheet(this._result);\n\t\t\tthis._loadedItems = this._manifestQueue.getItems(true);\n\t\t\tthis._sendComplete();\n\t\t};\n\t\n\t\t/**\n\t\t * The images {{#crossLink \"LoadQueue\"}}{{/crossLink}} has reported progress.\n\t\t * @method _handleManifestProgress\n\t\t * @param {ProgressEvent} event\n\t\t * @private\n\t\t */\n\t\tp._handleManifestProgress = function (event) {\n\t\t\tthis.progress = event.progress * (1 - s.SPRITESHEET_PROGRESS) + s.SPRITESHEET_PROGRESS;\n\t\t\tthis._sendProgress(this.progress);\n\t\t};\n\t\n\t\t/**\n\t\t * An image has reported an error.\n\t\t * @method _handleManifestError\n\t\t * @param {ErrorEvent} event\n\t\t * @private\n\t\t */\n\t\tp._handleManifestError = function (event) {\n\t\t\tvar newEvent = new createjs.Event(\"fileerror\");\n\t\t\tnewEvent.item = event.data;\n\t\t\tthis.dispatchEvent(newEvent);\n\t\t};\n\t\n\t\tcreatejs.SpriteSheetLoader = createjs.promote(SpriteSheetLoader, \"AbstractLoader\");\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// SVGLoader.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\t// constructor\n\t\t/**\n\t\t * A loader for SVG files.\n\t\t * @class SVGLoader\n\t\t * @param {LoadItem|Object} loadItem\n\t\t * @param {Boolean} preferXHR\n\t\t * @extends AbstractLoader\n\t\t * @constructor\n\t\t */\n\t\tfunction SVGLoader(loadItem, preferXHR) {\n\t\t\tthis.AbstractLoader_constructor(loadItem, preferXHR, createjs.AbstractLoader.SVG);\n\t\n\t\t\t// public properties\n\t\t\tthis.resultFormatter = this._formatResult;\n\t\n\t\t\t// protected properties\n\t\t\tthis._tagSrcAttribute = \"data\";\n\t\n\t\t\tif (preferXHR) {\n\t\t\t\tthis.setTag(createjs.Elements.svg());\n\t\t\t} else {\n\t\t\t\tthis.setTag(createjs.Elements.object());\n\t\t\t\tthis.getTag().type = \"image/svg+xml\";\n\t\t\t}\n\t\t};\n\t\n\t\tvar p = createjs.extend(SVGLoader, createjs.AbstractLoader);\n\t\tvar s = SVGLoader;\n\t\n\t\t// static methods\n\t\t/**\n\t\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t\t * {{#crossLink \"AbstractLoader/SVG:property\"}}{{/crossLink}}\n\t\t * @method canLoadItem\n\t\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t\t * @returns {Boolean} Whether the loader can load the item.\n\t\t * @static\n\t\t */\n\t\ts.canLoadItem = function (item) {\n\t\t\treturn item.type == createjs.AbstractLoader.SVG;\n\t\t};\n\t\n\t\t// protected methods\n\t\t/**\n\t\t * The result formatter for SVG files.\n\t\t * @method _formatResult\n\t\t * @param {AbstractLoader} loader\n\t\t * @returns {Object}\n\t\t * @private\n\t\t */\n\t\tp._formatResult = function (loader) {\n\t\t\t// mime should be image/svg+xml, but Opera requires text/xml\n\t\t\tvar xml = createjs.DataUtils.parseXML(loader.getResult(true));\n\t\t\tvar tag = loader.getTag();\n\t\n\t\t\tif (!this._preferXHR && document.body.contains(tag)) {\n\t\t\t\tdocument.body.removeChild(tag);\n\t\t\t}\n\t\n\t\t\tif (xml.documentElement != null) {\n\t\t\t\ttag.appendChild(xml.documentElement);\n\t\t\t\ttag.style.visibility = \"visible\";\n\t\t\t\treturn tag;\n\t\t\t} else { // For browsers that don't support SVG, just give them the XML. (IE 9-8)\n\t\t\t\treturn xml;\n\t\t\t}\n\t\t};\n\t\n\t\tcreatejs.SVGLoader = createjs.promote(SVGLoader, \"AbstractLoader\");\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// XMLLoader.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\t// constructor\n\t\t/**\n\t\t * A loader for CSS files.\n\t\t * @class XMLLoader\n\t\t * @param {LoadItem|Object} loadItem\n\t\t * @extends AbstractLoader\n\t\t * @constructor\n\t\t */\n\t\tfunction XMLLoader(loadItem) {\n\t\t\tthis.AbstractLoader_constructor(loadItem, true, createjs.AbstractLoader.XML);\n\t\n\t\t\t// public properties\n\t\t\tthis.resultFormatter = this._formatResult;\n\t\t};\n\t\n\t\tvar p = createjs.extend(XMLLoader, createjs.AbstractLoader);\n\t\tvar s = XMLLoader;\n\t\n\t\t// static methods\n\t\t/**\n\t\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t\t * {{#crossLink \"AbstractLoader/XML:property\"}}{{/crossLink}}.\n\t\t * @method canLoadItem\n\t\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t\t * @returns {Boolean} Whether the loader can load the item.\n\t\t * @static\n\t\t */\n\t\ts.canLoadItem = function (item) {\n\t\t\treturn item.type == createjs.AbstractLoader.XML;\n\t\t};\n\t\n\t\t// protected methods\n\t\t/**\n\t\t * The result formatter for XML files.\n\t\t * @method _formatResult\n\t\t * @param {AbstractLoader} loader\n\t\t * @returns {XMLDocument}\n\t\t * @private\n\t\t */\n\t\tp._formatResult = function (loader) {\n\t\t\treturn createjs.DataUtils.parseXML(loader.getResult(true));\n\t\t};\n\t\n\t\tcreatejs.XMLLoader = createjs.promote(XMLLoader, \"AbstractLoader\");\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// version.js\n\t//##############################################################################\n\t\n\t(function (createjs) {\n\t\n\t\t/**\n\t\t * Static class holding library specific information such as the version and buildDate of the library.\n\t\t * The SoundJS class has been renamed {{#crossLink \"Sound\"}}{{/crossLink}}.  Please see {{#crossLink \"Sound\"}}{{/crossLink}}\n\t\t * for information on using sound.\n\t\t * @class SoundJS\n\t\t **/\n\t\tvar s = createjs.SoundJS = createjs.SoundJS || {};\n\t\n\t\t/**\n\t\t * The version string for this release.\n\t\t * @property version\n\t\t * @type String\n\t\t * @static\n\t\t **/\n\t\ts.version = /*=version*/\"0.6.2\"; // injected by build process\n\t\n\t\t/**\n\t\t * The build date for this release in UTC format.\n\t\t * @property buildDate\n\t\t * @type String\n\t\t * @static\n\t\t **/\n\t\ts.buildDate = /*=date*/\"Sat, 12 Nov 2016 06:45:00 GMT\"; // injected by build process\n\t\n\t})(scope.createjs);\n\t\n\t//##############################################################################\n\t// IndexOf.js\n\t//##############################################################################\n\t\n\t/**\n\t * @class Utility Methods\n\t */\n\t\n\t/**\n\t * Finds the first occurrence of a specified value searchElement in the passed in array, and returns the index of\n\t * that value.  Returns -1 if value is not found.\n\t *\n\t *      var i = createjs.indexOf(myArray, myElementToFind);\n\t *\n\t * @method indexOf\n\t * @param {Array} array Array to search for searchElement\n\t * @param searchElement Element to find in array.\n\t * @return {Number} The first index of searchElement in array.\n\t */\n\tcreatejs.indexOf = function (array, searchElement){\n\t\t\"use strict\";\n\t\n\t\tfor (var i = 0,l=array.length; i < l; i++) {\n\t\t\tif (searchElement === array[i]) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t};\n\t\n\t//##############################################################################\n\t// Proxy.js\n\t//##############################################################################\n\t\n\t/**\n\t * Various utilities that the CreateJS Suite uses. Utilities are created as separate files, and will be available on the\n\t * createjs namespace directly.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      myObject.addEventListener(\"change\", createjs.proxy(myMethod, scope));\n\t *\n\t * @class Utility Methods\n\t * @main Utility Methods\n\t */\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\t/**\n\t\t * A function proxy for methods. By default, JavaScript methods do not maintain scope, so passing a method as a\n\t\t * callback will result in the method getting called in the scope of the caller. Using a proxy ensures that the\n\t\t * method gets called in the correct scope.\n\t\t *\n\t\t * Additional arguments can be passed that will be applied to the function when it is called.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      myObject.addEventListener(\"event\", createjs.proxy(myHandler, this, arg1, arg2));\n\t\t *\n\t\t *      function myHandler(arg1, arg2) {\n\t\t *           // This gets called when myObject.myCallback is executed.\n\t\t *      }\n\t\t *\n\t\t * @method proxy\n\t\t * @param {Function} method The function to call\n\t\t * @param {Object} scope The scope to call the method name on\n\t\t * @param {mixed} [arg] * Arguments that are appended to the callback for additional params.\n\t\t * @public\n\t\t * @static\n\t\t */\n\t\tcreatejs.proxy = function (method, scope) {\n\t\t\tvar aArgs = Array.prototype.slice.call(arguments, 2);\n\t\t\treturn function () {\n\t\t\t\treturn method.apply(scope, Array.prototype.slice.call(arguments, 0).concat(aArgs));\n\t\t\t};\n\t\t}\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// BrowserDetect.js\n\t//##############################################################################\n\t\n\t/**\n\t * @class Utility Methods\n\t */\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\t/**\n\t\t * An object that determines the current browser, version, operating system, and other environment\n\t\t * variables via user agent string.\n\t\t *\n\t\t * Used for audio because feature detection is unable to detect the many limitations of mobile devices.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      if (createjs.BrowserDetect.isIOS) { // do stuff }\n\t\t *\n\t\t * @property BrowserDetect\n\t\t * @type {Object}\n\t\t * @param {Boolean} isFirefox True if our browser is Firefox.\n\t\t * @param {Boolean} isOpera True if our browser is opera.\n\t\t * @param {Boolean} isChrome True if our browser is Chrome.  Note that Chrome for Android returns true, but is a\n\t\t * completely different browser with different abilities.\n\t\t * @param {Boolean} isIOS True if our browser is safari for iOS devices (iPad, iPhone, and iPod).\n\t\t * @param {Boolean} isAndroid True if our browser is Android.\n\t\t * @param {Boolean} isBlackberry True if our browser is Blackberry.\n\t\t * @constructor\n\t\t * @static\n\t\t */\n\t\tfunction BrowserDetect() {\n\t\t\tthrow \"BrowserDetect cannot be instantiated\";\n\t\t};\n\t\n\t\tvar agent = BrowserDetect.agent = window.navigator.userAgent;\n\t\tBrowserDetect.isWindowPhone = (agent.indexOf(\"IEMobile\") > -1) || (agent.indexOf(\"Windows Phone\") > -1);\n\t\tBrowserDetect.isFirefox = (agent.indexOf(\"Firefox\") > -1);\n\t\tBrowserDetect.isOpera = (window.opera != null);\n\t\tBrowserDetect.isChrome = (agent.indexOf(\"Chrome\") > -1);  // NOTE that Chrome on Android returns true but is a completely different browser with different abilities\n\t\tBrowserDetect.isIOS = (agent.indexOf(\"iPod\") > -1 || agent.indexOf(\"iPhone\") > -1 || agent.indexOf(\"iPad\") > -1) && !BrowserDetect.isWindowPhone;\n\t\tBrowserDetect.isAndroid = (agent.indexOf(\"Android\") > -1) && !BrowserDetect.isWindowPhone;\n\t\tBrowserDetect.isBlackberry = (agent.indexOf(\"Blackberry\") > -1);\n\t\n\t\tcreatejs.BrowserDetect = BrowserDetect;\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// AudioSprite.js\n\t//##############################################################################\n\t\n\t//  NOTE this is \"Class\" is purely to document audioSprite Setup and usage.\n\t\n\t\n\t/**\n\t * <strong>Note: AudioSprite is not a class, but its usage is easily lost in the documentation, so it has been called\n\t * out here for quick reference.</strong>\n\t *\n\t * Audio sprites are much like CSS sprites or image sprite sheets: multiple audio assets grouped into a single file.\n\t * Audio sprites work around limitations in certain browsers, where only a single sound can be loaded and played at a\n\t * time. We recommend at least 300ms of silence between audio clips to deal with HTML audio tag inaccuracy, and to prevent\n\t * accidentally playing bits of the neighbouring clips.\n\t *\n\t * <strong>Benefits of Audio Sprites:</strong>\n\t * <ul>\n\t *     <li>More robust support for older browsers and devices that only allow a single audio instance, such as iOS 5.</li>\n\t *     <li>They provide a work around for the Internet Explorer 9 audio tag limit, which restricts how many different\n\t *     sounds that could be loaded at once.</li>\n\t *     <li>Faster loading by only requiring a single network request for several sounds, especially on mobile devices\n\t * where the network round trip for each file can add significant latency.</li>\n\t * </ul>\n\t *\n\t * <strong>Drawbacks of Audio Sprites</strong>\n\t * <ul>\n\t *     <li>No guarantee of smooth looping when using HTML or Flash audio. If you have a track that needs to loop\n\t * \t\tsmoothly and you are supporting non-web audio browsers, do not use audio sprites for that sound if you can avoid\n\t * \t\tit.</li>\n\t *     <li>No guarantee that HTML audio will play back immediately, especially the first time. In some browsers\n\t *     (Chrome!), HTML audio will only load enough to play through at the current download speed – so we rely on the\n\t *     `canplaythrough` event to determine if the audio is loaded. Since audio sprites must jump ahead to play specific\n\t *     sounds, the audio may not yet have downloaded fully.</li>\n\t *     <li>Audio sprites share the same core source, so if you have a sprite with 5 sounds and are limited to 2\n\t * \t\tconcurrently playing instances, you can only play 2 of the sounds at the same time.</li>\n\t * </ul>\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *\t\tcreatejs.Sound.initializeDefaultPlugins();\n\t *\t\tvar assetsPath = \"./assets/\";\n\t *\t\tvar sounds = [{\n\t *\t\t\tsrc:\"MyAudioSprite.ogg\", data: {\n\t *\t\t\t\taudioSprite: [\n\t *\t\t\t\t\t{id:\"sound1\", startTime:0, duration:500},\n\t *\t\t\t\t\t{id:\"sound2\", startTime:1000, duration:400},\n\t *\t\t\t\t\t{id:\"sound3\", startTime:1700, duration: 1000}\n\t *\t\t\t\t]}\n\t *\t\t\t}\n\t *\t\t];\n\t *\t\tcreatejs.Sound.alternateExtensions = [\"mp3\"];\n\t *\t\tcreatejs.Sound.on(\"fileload\", loadSound);\n\t *\t\tcreatejs.Sound.registerSounds(sounds, assetsPath);\n\t *\t\t// after load is complete\n\t *\t\tcreatejs.Sound.play(\"sound2\");\n\t *\n\t * You can also create audio sprites on the fly by setting the startTime and duration when creating an new AbstractSoundInstance.\n\t *\n\t * \t\tcreatejs.Sound.play(\"MyAudioSprite\", {startTime: 1000, duration: 400});\n\t *\n\t * The excellent CreateJS community has created a tool to create audio sprites, available at\n\t * <a href=\"https://github.com/tonistiigi/audiosprite\" target=\"_blank\">https://github.com/tonistiigi/audiosprite</a>,\n\t * as well as a <a href=\"http://jsfiddle.net/bharat_battu/g8fFP/12/\" target=\"_blank\">jsfiddle</a> to convert the output\n\t * to SoundJS format.\n\t *\n\t * @class AudioSprite\n\t * @since 0.6.0\n\t */\n\t\n\t//##############################################################################\n\t// PlayPropsConfig.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\t/**\n\t\t * A class to store the optional play properties passed in {{#crossLink \"Sound/play\"}}{{/crossLink}} and\n\t\t * {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}} calls.\n\t\t *\n\t\t * Optional Play Properties Include:\n\t\t * <ul>\n\t\t * <li>interrupt - How to interrupt any currently playing instances of audio with the same source,\n\t\t * if the maximum number of instances of the sound are already playing. Values are defined as <code>INTERRUPT_TYPE</code>\n\t\t * constants on the Sound class, with the default defined by {{#crossLink \"Sound/defaultInterruptBehavior:property\"}}{{/crossLink}}.</li>\n\t\t * <li>delay - The amount of time to delay the start of audio playback, in milliseconds.</li>\n\t\t * <li>offset - The offset from the start of the audio to begin playback, in milliseconds.</li>\n\t\t * <li>loop - How many times the audio loops when it reaches the end of playback. The default is 0 (no\n\t\t * loops), and -1 can be used for infinite playback.</li>\n\t\t * <li>volume - The volume of the sound, between 0 and 1. Note that the master volume is applied\n\t\t * against the individual volume.</li>\n\t\t * <li>pan - The left-right pan of the sound (if supported), between -1 (left) and 1 (right).</li>\n\t\t * <li>startTime - To create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.</li>\n\t\t * <li>duration - To create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.</li>\n\t\t * </ul>\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t * \tvar ppc = new createjs.PlayPropsConfig().set({interrupt: createjs.Sound.INTERRUPT_ANY, loop: -1, volume: 0.5})\n\t\t * \tcreatejs.Sound.play(\"mySound\", ppc);\n\t\t * \tmySoundInstance.play(ppc);\n\t\t *\n\t\t * @class PlayPropsConfig\n\t\t * @constructor\n\t\t * @since 0.6.1\n\t\t */\n\t\t// TODO think of a better name for this class\n\t\tvar PlayPropsConfig = function () {\n\t// Public Properties\n\t\t\t/**\n\t\t\t * How to interrupt any currently playing instances of audio with the same source,\n\t\t\t * if the maximum number of instances of the sound are already playing. Values are defined as\n\t\t\t * <code>INTERRUPT_TYPE</code> constants on the Sound class, with the default defined by\n\t\t\t * {{#crossLink \"Sound/defaultInterruptBehavior:property\"}}{{/crossLink}}.\n\t\t\t * @property interrupt\n\t\t\t * @type {string}\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis.interrupt = null;\n\t\n\t\t\t/**\n\t\t\t * The amount of time to delay the start of audio playback, in milliseconds.\n\t\t\t * @property delay\n\t\t\t * @type {Number}\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis.delay = null;\n\t\n\t\t\t/**\n\t\t\t * The offset from the start of the audio to begin playback, in milliseconds.\n\t\t\t * @property offset\n\t\t\t * @type {number}\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis.offset = null;\n\t\n\t\t\t/**\n\t\t\t * How many times the audio loops when it reaches the end of playback. The default is 0 (no\n\t\t\t * loops), and -1 can be used for infinite playback.\n\t\t\t * @property loop\n\t\t\t * @type {number}\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis.loop = null;\n\t\n\t\t\t/**\n\t\t\t * The volume of the sound, between 0 and 1. Note that the master volume is applied\n\t\t\t * against the individual volume.\n\t\t\t * @property volume\n\t\t\t * @type {number}\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis.volume = null;\n\t\n\t\t\t/**\n\t\t\t * The left-right pan of the sound (if supported), between -1 (left) and 1 (right).\n\t\t\t * @property pan\n\t\t\t * @type {number}\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis.pan = null;\n\t\n\t\t\t/**\n\t\t\t * Used to create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.\n\t\t\t * @property startTime\n\t\t\t * @type {number}\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis.startTime = null;\n\t\n\t\t\t/**\n\t\t\t * Used to create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.\n\t\t\t * @property duration\n\t\t\t * @type {number}\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis.duration = null;\n\t\t};\n\t\tvar p = PlayPropsConfig.prototype = {};\n\t\tvar s = PlayPropsConfig;\n\t\n\t\n\t// Static Methods\n\t\t/**\n\t\t * Creates a PlayPropsConfig from another PlayPropsConfig or an Object.\n\t\t *\n\t\t * @method create\n\t\t * @param {PlayPropsConfig|Object} value The play properties\n\t\t * @returns {PlayPropsConfig}\n\t\t * @static\n\t\t */\n\t\ts.create = function (value) {\n\t\t\tif (value instanceof s || value instanceof Object) {\n\t\t\t\tvar ppc = new createjs.PlayPropsConfig();\n\t\t\t\tppc.set(value);\n\t\t\t\treturn ppc;\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Type not recognized.\");\n\t\t\t}\n\t\t};\n\t\n\t// Public Methods\n\t\t/**\n\t\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var PlayPropsConfig = new createjs.PlayPropsConfig().set({loop:-1, volume:0.7});\n\t\t *\n\t\t * @method set\n\t\t * @param {Object} props A generic object containing properties to copy to the PlayPropsConfig instance.\n\t\t * @return {PlayPropsConfig} Returns the instance the method is called on (useful for chaining calls.)\n\t\t*/\n\t\tp.set = function(props) {\n\t\t\tfor (var n in props) { this[n] = props[n]; }\n\t\t\treturn this;\n\t\t};\n\t\n\t\tp.toString = function() {\n\t\t\treturn \"[PlayPropsConfig]\";\n\t\t};\n\t\n\t\tcreatejs.PlayPropsConfig = s;\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// Sound.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\t/**\n\t\t * The Sound class is the public API for creating sounds, controlling the overall sound levels, and managing plugins.\n\t\t * All Sound APIs on this class are static.\n\t\t *\n\t\t * <b>Registering and Preloading</b><br />\n\t\t * Before you can play a sound, it <b>must</b> be registered. You can do this with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}},\n\t\t * or register multiple sounds using {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}. If you don't register a\n\t\t * sound prior to attempting to play it using {{#crossLink \"Sound/play\"}}{{/crossLink}} or create it using {{#crossLink \"Sound/createInstance\"}}{{/crossLink}},\n\t\t * the sound source will be automatically registered but playback will fail as the source will not be ready. If you use\n\t\t * <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>, registration is handled for you when the sound is\n\t\t * preloaded. It is recommended to preload sounds either internally using the register functions or externally using\n\t\t * PreloadJS so they are ready when you want to use them.\n\t\t *\n\t\t * <b>Playback</b><br />\n\t\t * To play a sound once it's been registered and preloaded, use the {{#crossLink \"Sound/play\"}}{{/crossLink}} method.\n\t\t * This method returns a {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} which can be paused, resumed, muted, etc.\n\t\t * Please see the {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} documentation for more on the instance control APIs.\n\t\t *\n\t\t * <b>Plugins</b><br />\n\t\t * By default, the {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} or the {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}\n\t\t * are used (when available), although developers can change plugin priority or add new plugins (such as the\n\t\t * provided {{#crossLink \"FlashAudioPlugin\"}}{{/crossLink}}). Please see the {{#crossLink \"Sound\"}}{{/crossLink}} API\n\t\t * methods for more on the playback and plugin APIs. To install plugins, or specify a different plugin order, see\n\t\t * {{#crossLink \"Sound/installPlugins\"}}{{/crossLink}}.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      createjs.FlashAudioPlugin.swfPath = \"../src/soundjs/flashaudio\";\n\t\t *      createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.FlashAudioPlugin]);\n\t\t *      createjs.Sound.alternateExtensions = [\"mp3\"];\n\t\t *      createjs.Sound.on(\"fileload\", this.loadHandler, this);\n\t\t *      createjs.Sound.registerSound(\"path/to/mySound.ogg\", \"sound\");\n\t\t *      function loadHandler(event) {\n\t     *          // This is fired for each sound that is registered.\n\t     *          var instance = createjs.Sound.play(\"sound\");  // play using id.  Could also use full source path or event.src.\n\t     *          instance.on(\"complete\", this.handleComplete, this);\n\t     *          instance.volume = 0.5;\n\t\t *      }\n\t\t *\n\t\t * The maximum number of concurrently playing instances of the same sound can be specified in the \"data\" argument\n\t\t * of {{#crossLink \"Sound/registerSound\"}}{{/crossLink}}.  Note that if not specified, the active plugin will apply\n\t\t * a default limit.  Currently HTMLAudioPlugin sets a default limit of 2, while WebAudioPlugin and FlashAudioPlugin set a\n\t\t * default limit of 100.\n\t\t *\n\t\t *      createjs.Sound.registerSound(\"sound.mp3\", \"soundId\", 4);\n\t\t *\n\t\t * Sound can be used as a plugin with PreloadJS to help preload audio properly. Audio preloaded with PreloadJS is\n\t\t * automatically registered with the Sound class. When audio is not preloaded, Sound will do an automatic internal\n\t\t * load. As a result, it may fail to play the first time play is called if the audio is not finished loading. Use\n\t\t * the {{#crossLink \"Sound/fileload:event\"}}{{/crossLink}} event to determine when a sound has finished internally\n\t\t * preloading. It is recommended that all audio is preloaded before it is played.\n\t\t *\n\t\t *      var queue = new createjs.LoadQueue();\n\t\t *\t\tqueue.installPlugin(createjs.Sound);\n\t\t *\n\t\t * <b>Audio Sprites</b><br />\n\t\t * SoundJS has added support for {{#crossLink \"AudioSprite\"}}{{/crossLink}}, available as of version 0.6.0.\n\t\t * For those unfamiliar with audio sprites, they are much like CSS sprites or sprite sheets: multiple audio assets\n\t\t * grouped into a single file.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *\t\tvar assetsPath = \"./assets/\";\n\t\t *\t\tvar sounds = [{\n\t\t *\t\t\tsrc:\"MyAudioSprite.ogg\", data: {\n\t\t *\t\t\t\taudioSprite: [\n\t\t *\t\t\t\t\t{id:\"sound1\", startTime:0, duration:500},\n\t\t *\t\t\t\t\t{id:\"sound2\", startTime:1000, duration:400},\n\t\t *\t\t\t\t\t{id:\"sound3\", startTime:1700, duration: 1000}\n\t\t *\t\t\t\t]}\n\t \t *\t\t\t}\n\t\t *\t\t];\n\t\t *\t\tcreatejs.Sound.alternateExtensions = [\"mp3\"];\n\t\t *\t\tcreatejs.Sound.on(\"fileload\", loadSound);\n\t\t *\t\tcreatejs.Sound.registerSounds(sounds, assetsPath);\n\t\t *\t\t// after load is complete\n\t\t *\t\tcreatejs.Sound.play(\"sound2\");\n\t\t *\n\t\t * <b>Mobile Playback</b><br />\n\t\t * Devices running iOS require the WebAudio context to be \"unlocked\" by playing at least one sound inside of a user-\n\t\t * initiated event (such as touch/click). Earlier versions of SoundJS included a \"MobileSafe\" sample, but this is no\n\t\t * longer necessary as of SoundJS 0.6.2.\n\t\t * <ul>\n\t\t *     <li>\n\t\t *         In SoundJS 0.4.1 and above, you can either initialize plugins or use the {{#crossLink \"WebAudioPlugin/playEmptySound\"}}{{/crossLink}}\n\t\t *         method in the call stack of a user input event to manually unlock the audio context.\n\t\t *     </li>\n\t\t *     <li>\n\t\t *         In SoundJS 0.6.2 and above, SoundJS will automatically listen for the first document-level \"mousedown\"\n\t\t *         and \"touchend\" event, and unlock WebAudio. This will continue to check these events until the WebAudio\n\t\t *         context becomes \"unlocked\" (changes from \"suspended\" to \"running\")\n\t\t *     </li>\n\t\t *     <li>\n\t\t *         Both the \"mousedown\" and \"touchend\" events can be used to unlock audio in iOS9+, the \"touchstart\" event\n\t\t *         will work in iOS8 and below. The \"touchend\" event will only work in iOS9 when the gesture is interpreted\n\t\t *         as a \"click\", so if the user long-presses the button, it will no longer work.\n\t\t *     </li>\n\t\t *     <li>\n\t\t *         When using the <a href=\"http://www.createjs.com/docs/easeljs/classes/Touch.html\">EaselJS Touch class</a>,\n\t\t *         the \"mousedown\" event will not fire when a canvas is clicked, since MouseEvents are prevented, to ensure\n\t\t *         only touch events fire. To get around this, you can either rely on \"touchend\", or:\n\t\t *         <ol>\n\t\t *             <li>Set the `allowDefault` property on the Touch class constructor to `true` (defaults to `false`).</li>\n\t\t *             <li>Set the `preventSelection` property on the EaselJS `Stage` to `false`.</li>\n\t\t *         </ol>\n\t\t *         These settings may change how your application behaves, and are not recommended.\n\t\t *     </li>\n\t\t * </ul>\n\t\t *\n\t\t * <b>Loading Alternate Paths and Extension-less Files</b><br />\n\t\t * SoundJS supports loading alternate paths and extension-less files by passing an object instead of a string for\n\t\t * the `src` property, which is a hash using the format `{extension:\"path\", extension2:\"path2\"}`. These labels are\n\t\t * how SoundJS determines if the browser will support the sound. This also enables multiple formats to live in\n\t\t * different folders, or on CDNs, which often has completely different filenames for each file.\n\t\t *\n\t\t * Priority is determined by the property order (first property is tried first).  This is supported by both internal loading\n\t\t * and loading with PreloadJS.\n\t\t *\n\t\t * <em>Note: an id is required for playback.</em>\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *\t\tvar sounds = {path:\"./audioPath/\",\n\t\t * \t\t\t\tmanifest: [\n\t\t *\t\t\t\t{id: \"cool\", src: {mp3:\"mp3/awesome.mp3\", ogg:\"noExtensionOggFile\"}}\n\t\t *\t\t]};\n\t\t *\n\t\t *\t\tcreatejs.Sound.alternateExtensions = [\"mp3\"];\n\t\t *\t\tcreatejs.Sound.addEventListener(\"fileload\", handleLoad);\n\t\t *\t\tcreatejs.Sound.registerSounds(sounds);\n\t\t *\n\t\t * <h3>Known Browser and OS issues</h3>\n\t\t * <b>IE 9 HTML Audio limitations</b><br />\n\t\t * <ul><li>There is a delay in applying volume changes to tags that occurs once playback is started. So if you have\n\t\t * muted all sounds, they will all play during this delay until the mute applies internally. This happens regardless of\n\t\t * when or how you apply the volume change, as the tag seems to need to play to apply it.</li>\n\t     * <li>MP3 encoding will not always work for audio tags, particularly in Internet Explorer. We've found default\n\t\t * encoding with 64kbps works.</li>\n\t\t * <li>Occasionally very short samples will get cut off.</li>\n\t\t * <li>There is a limit to how many audio tags you can load and play at once, which appears to be determined by\n\t\t * hardware and browser settings.  See {{#crossLink \"HTMLAudioPlugin.MAX_INSTANCES\"}}{{/crossLink}} for a safe\n\t\t * estimate.</li></ul>\n\t\t *\n\t\t * <b>Firefox 25 Web Audio limitations</b>\n\t\t * <ul><li>mp3 audio files do not load properly on all windows machines, reported\n\t\t * <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=929969\" target=\"_blank\">here</a>. </br>\n\t\t * For this reason it is recommended to pass another FF supported type (ie ogg) first until this bug is resolved, if\n\t\t * possible.</li></ul>\n\t\n\t\t * <b>Safari limitations</b><br />\n\t\t * <ul><li>Safari requires Quicktime to be installed for audio playback.</li></ul>\n\t\t *\n\t\t * <b>iOS 6 Web Audio limitations</b><br />\n\t\t * <ul><li>Sound is initially locked, and must be unlocked via a user-initiated event. Please see the section on\n\t\t * Mobile Playback above.</li>\n\t\t * <li>A bug exists that will distort un-cached web audio when a video element is present in the DOM that has audio\n\t\t * at a different sampleRate.</li>\n\t\t * </ul>\n\t\t *\n\t\t * <b>Android HTML Audio limitations</b><br />\n\t\t * <ul><li>We have no control over audio volume. Only the user can set volume on their device.</li>\n\t\t * <li>We can only play audio inside a user event (touch/click).  This currently means you cannot loop sound or use\n\t\t * a delay.</li></ul>\n\t\t *\n\t\t * <b>Web Audio and PreloadJS</b><br />\n\t\t * <ul><li>Web Audio must be loaded through XHR, therefore when used with PreloadJS, tag loading is not possible.\n\t\t * This means that tag loading can not be used to avoid cross domain issues.</li><ul>\n\t\t *\n\t\t * @class Sound\n\t\t * @static\n\t\t * @uses EventDispatcher\n\t\t */\n\t\tfunction Sound() {\n\t\t\tthrow \"Sound cannot be instantiated\";\n\t\t}\n\t\n\t\tvar s = Sound;\n\t\n\t\n\t// Static Properties\n\t\t/**\n\t\t * The interrupt value to interrupt any currently playing instance with the same source, if the maximum number of\n\t\t * instances of the sound are already playing.\n\t\t * @property INTERRUPT_ANY\n\t\t * @type {String}\n\t\t * @default any\n\t\t * @static\n\t\t */\n\t\ts.INTERRUPT_ANY = \"any\";\n\t\n\t\t/**\n\t\t * The interrupt value to interrupt the earliest currently playing instance with the same source that progressed the\n\t\t * least distance in the audio track, if the maximum number of instances of the sound are already playing.\n\t\t * @property INTERRUPT_EARLY\n\t\t * @type {String}\n\t\t * @default early\n\t\t * @static\n\t\t */\n\t\ts.INTERRUPT_EARLY = \"early\";\n\t\n\t\t/**\n\t\t * The interrupt value to interrupt the currently playing instance with the same source that progressed the most\n\t\t * distance in the audio track, if the maximum number of instances of the sound are already playing.\n\t\t * @property INTERRUPT_LATE\n\t\t * @type {String}\n\t\t * @default late\n\t\t * @static\n\t\t */\n\t\ts.INTERRUPT_LATE = \"late\";\n\t\n\t\t/**\n\t\t * The interrupt value to not interrupt any currently playing instances with the same source, if the maximum number of\n\t\t * instances of the sound are already playing.\n\t\t * @property INTERRUPT_NONE\n\t\t * @type {String}\n\t\t * @default none\n\t\t * @static\n\t\t */\n\t\ts.INTERRUPT_NONE = \"none\";\n\t\n\t\t/**\n\t\t * Defines the playState of an instance that is still initializing.\n\t\t * @property PLAY_INITED\n\t\t * @type {String}\n\t\t * @default playInited\n\t\t * @static\n\t\t */\n\t\ts.PLAY_INITED = \"playInited\";\n\t\n\t\t/**\n\t\t * Defines the playState of an instance that is currently playing or paused.\n\t\t * @property PLAY_SUCCEEDED\n\t\t * @type {String}\n\t\t * @default playSucceeded\n\t\t * @static\n\t\t */\n\t\ts.PLAY_SUCCEEDED = \"playSucceeded\";\n\t\n\t\t/**\n\t\t * Defines the playState of an instance that was interrupted by another instance.\n\t\t * @property PLAY_INTERRUPTED\n\t\t * @type {String}\n\t\t * @default playInterrupted\n\t\t * @static\n\t\t */\n\t\ts.PLAY_INTERRUPTED = \"playInterrupted\";\n\t\n\t\t/**\n\t\t * Defines the playState of an instance that completed playback.\n\t\t * @property PLAY_FINISHED\n\t\t * @type {String}\n\t\t * @default playFinished\n\t\t * @static\n\t\t */\n\t\ts.PLAY_FINISHED = \"playFinished\";\n\t\n\t\t/**\n\t\t * Defines the playState of an instance that failed to play. This is usually caused by a lack of available channels\n\t\t * when the interrupt mode was \"INTERRUPT_NONE\", the playback stalled, or the sound could not be found.\n\t\t * @property PLAY_FAILED\n\t\t * @type {String}\n\t\t * @default playFailed\n\t\t * @static\n\t\t */\n\t\ts.PLAY_FAILED = \"playFailed\";\n\t\n\t\t/**\n\t\t * A list of the default supported extensions that Sound will <i>try</i> to play. Plugins will check if the browser\n\t\t * can play these types, so modifying this list before a plugin is initialized will allow the plugins to try to\n\t\t * support additional media types.\n\t\t *\n\t\t * NOTE this does not currently work for {{#crossLink \"FlashAudioPlugin\"}}{{/crossLink}}.\n\t\t *\n\t\t * More details on file formats can be found at <a href=\"http://en.wikipedia.org/wiki/Audio_file_format\" target=\"_blank\">http://en.wikipedia.org/wiki/Audio_file_format</a>.<br />\n\t\t * A very detailed list of file formats can be found at <a href=\"http://www.fileinfo.com/filetypes/audio\" target=\"_blank\">http://www.fileinfo.com/filetypes/audio</a>.\n\t\t * @property SUPPORTED_EXTENSIONS\n\t\t * @type {Array[String]}\n\t\t * @default [\"mp3\", \"ogg\", \"opus\", \"mpeg\", \"wav\", \"m4a\", \"mp4\", \"aiff\", \"wma\", \"mid\"]\n\t\t * @since 0.4.0\n\t\t * @static\n\t\t */\n\t\ts.SUPPORTED_EXTENSIONS = [\"mp3\", \"ogg\", \"opus\", \"mpeg\", \"wav\", \"m4a\", \"mp4\", \"aiff\", \"wma\", \"mid\"];\n\t\n\t\t/**\n\t\t * Some extensions use another type of extension support to play (one of them is a codex).  This allows you to map\n\t\t * that support so plugins can accurately determine if an extension is supported.  Adding to this list can help\n\t\t * plugins determine more accurately if an extension is supported.\n\t\t *\n\t \t * A useful list of extensions for each format can be found at <a href=\"http://html5doctor.com/html5-audio-the-state-of-play/\" target=\"_blank\">http://html5doctor.com/html5-audio-the-state-of-play/</a>.\n\t\t * @property EXTENSION_MAP\n\t\t * @type {Object}\n\t\t * @since 0.4.0\n\t\t * @default {m4a:\"mp4\"}\n\t\t * @static\n\t\t */\n\t\ts.EXTENSION_MAP = {\n\t\t\tm4a:\"mp4\"\n\t\t};\n\t\n\t\t/**\n\t\t * The RegExp pattern used to parse file URIs. This supports simple file names, as well as full domain URIs with\n\t\t * query strings. The resulting match is: protocol:$1 domain:$2 path:$3 file:$4 extension:$5 query:$6.\n\t\t * @property FILE_PATTERN\n\t\t * @type {RegExp}\n\t\t * @static\n\t\t * @protected\n\t\t */\n\t\ts.FILE_PATTERN = /^(?:(\\w+:)\\/{2}(\\w+(?:\\.\\w+)*\\/?))?([/.]*?(?:[^?]+)?\\/)?((?:[^/?]+)\\.(\\w+))(?:\\?(\\S+)?)?$/;\n\t\n\t\n\t// Class Public properties\n\t\t/**\n\t\t * Determines the default behavior for interrupting other currently playing instances with the same source, if the\n\t\t * maximum number of instances of the sound are already playing.  Currently the default is {{#crossLink \"Sound/INTERRUPT_NONE:property\"}}{{/crossLink}}\n\t\t * but this can be set and will change playback behavior accordingly.  This is only used when {{#crossLink \"Sound/play\"}}{{/crossLink}}\n\t\t * is called without passing a value for interrupt.\n\t\t * @property defaultInterruptBehavior\n\t\t * @type {String}\n\t\t * @default Sound.INTERRUPT_NONE, or \"none\"\n\t\t * @static\n\t\t * @since 0.4.0\n\t\t */\n\t\ts.defaultInterruptBehavior = s.INTERRUPT_NONE;  // OJR does s.INTERRUPT_ANY make more sense as default?  Needs game dev testing to see which case makes more sense.\n\t\n\t\t/**\n\t\t * An array of extensions to attempt to use when loading sound, if the default is unsupported by the active plugin.\n\t\t * These are applied in order, so if you try to Load Thunder.ogg in a browser that does not support ogg, and your\n\t\t * extensions array is [\"mp3\", \"m4a\", \"wav\"] it will check mp3 support, then m4a, then wav. The audio files need\n\t\t * to exist in the same location, as only the extension is altered.\n\t\t *\n\t\t * Note that regardless of which file is loaded, you can call {{#crossLink \"Sound/createInstance\"}}{{/crossLink}}\n\t\t * and {{#crossLink \"Sound/play\"}}{{/crossLink}} using the same id or full source path passed for loading.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *\tvar sounds = [\n\t\t *\t\t{src:\"myPath/mySound.ogg\", id:\"example\"},\n\t\t *\t];\n\t\t *\tcreatejs.Sound.alternateExtensions = [\"mp3\"]; // now if ogg is not supported, SoundJS will try asset0.mp3\n\t\t *\tcreatejs.Sound.on(\"fileload\", handleLoad); // call handleLoad when each sound loads\n\t\t *\tcreatejs.Sound.registerSounds(sounds, assetPath);\n\t\t *\t// ...\n\t\t *\tcreatejs.Sound.play(\"myPath/mySound.ogg\"); // works regardless of what extension is supported.  Note calling with ID is a better approach\n\t\t *\n\t\t * @property alternateExtensions\n\t\t * @type {Array}\n\t\t * @since 0.5.2\n\t\t * @static\n\t\t */\n\t\ts.alternateExtensions = [];\n\t\n\t\t/**\n\t\t * The currently active plugin. If this is null, then no plugin could be initialized. If no plugin was specified,\n\t\t * Sound attempts to apply the default plugins: {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}, followed by\n\t\t * {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.\n\t\t * @property activePlugin\n\t\t * @type {Object}\n\t\t * @static\n\t\t */\n\t    s.activePlugin = null;\n\t\n\t\n\t// class getter / setter properties\n\t\t/**\n\t\t * Set the master volume of Sound. The master volume is multiplied against each sound's individual volume.  For\n\t\t * example, if master volume is 0.5 and a sound's volume is 0.5, the resulting volume is 0.25. To set individual\n\t\t * sound volume, use AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/volume:property\"}}{{/crossLink}} instead.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *     createjs.Sound.volume = 0.5;\n\t\t *\n\t\t *\n\t\t * @property volume\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t * @since 0.6.1\n\t\t */\n\t\ts._masterVolume = 1;\n\t\tObject.defineProperty(s, \"volume\", {\n\t\t\tget: function () {return this._masterVolume;},\n\t\t\tset: function (value) {\n\t\t\t\t\tif (Number(value) == null) {return false;}\n\t\t\t\t\tvalue = Math.max(0, Math.min(1, value));\n\t\t\t\t\ts._masterVolume = value;\n\t\t\t\t\tif (!this.activePlugin || !this.activePlugin.setVolume || !this.activePlugin.setVolume(value)) {\n\t\t\t\t\t\tvar instances = this._instances;\n\t\t\t\t\t\tfor (var i = 0, l = instances.length; i < l; i++) {\n\t\t\t\t\t\t\tinstances[i].setMasterVolume(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t});\n\t\n\t\t/**\n\t\t * Mute/Unmute all audio. Note that muted audio still plays at 0 volume. This global mute value is maintained\n\t\t * separately and when set will override, but not change the mute property of individual instances. To mute an individual\n\t\t * instance, use AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/muted:property\"}}{{/crossLink}} instead.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *     createjs.Sound.muted = true;\n\t\t *\n\t\t *\n\t\t * @property muted\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @since 0.6.1\n\t\t */\n\t\ts._masterMute = false;\n\t\t// OJR references to the methods were not working, so the code had to be duplicated here\n\t\tObject.defineProperty(s, \"muted\", {\n\t\t\tget: function () {return this._masterMute;},\n\t\t\tset: function (value) {\n\t\t\t\t\tif (value == null) {return false;}\n\t\n\t\t\t\t\tthis._masterMute = value;\n\t\t\t\t\tif (!this.activePlugin || !this.activePlugin.setMute || !this.activePlugin.setMute(value)) {\n\t\t\t\t\t\tvar instances = this._instances;\n\t\t\t\t\t\tfor (var i = 0, l = instances.length; i < l; i++) {\n\t\t\t\t\t\t\tinstances[i].setMasterMute(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t});\n\t\n\t\t/**\n\t\t * Get the active plugins capabilities, which help determine if a plugin can be used in the current environment,\n\t\t * or if the plugin supports a specific feature. Capabilities include:\n\t\t * <ul>\n\t\t *     <li><b>panning:</b> If the plugin can pan audio from left to right</li>\n\t\t *     <li><b>volume;</b> If the plugin can control audio volume.</li>\n\t\t *     <li><b>tracks:</b> The maximum number of audio tracks that can be played back at a time. This will be -1\n\t\t *     if there is no known limit.</li>\n\t\t * <br />An entry for each file type in {{#crossLink \"Sound/SUPPORTED_EXTENSIONS:property\"}}{{/crossLink}}:\n\t\t *     <li><b>mp3:</b> If MP3 audio is supported.</li>\n\t\t *     <li><b>ogg:</b> If OGG audio is supported.</li>\n\t\t *     <li><b>wav:</b> If WAV audio is supported.</li>\n\t\t *     <li><b>mpeg:</b> If MPEG audio is supported.</li>\n\t\t *     <li><b>m4a:</b> If M4A audio is supported.</li>\n\t\t *     <li><b>mp4:</b> If MP4 audio is supported.</li>\n\t\t *     <li><b>aiff:</b> If aiff audio is supported.</li>\n\t\t *     <li><b>wma:</b> If wma audio is supported.</li>\n\t\t *     <li><b>mid:</b> If mid audio is supported.</li>\n\t\t * </ul>\n\t\t *\n\t\t * You can get a specific capability of the active plugin using standard object notation\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var mp3 = createjs.Sound.capabilities.mp3;\n\t\t *\n\t\t * Note this property is read only.\n\t\t *\n\t\t * @property capabilities\n\t\t * @type {Object}\n\t\t * @static\n\t\t * @readOnly\n\t\t * @since 0.6.1\n\t\t */\n\t\tObject.defineProperty(s, \"capabilities\", {\n\t\t\tget: function () {\n\t\t\t\t\t\tif (s.activePlugin == null) {return null;}\n\t\t\t\t\t\treturn s.activePlugin._capabilities;\n\t\t\t\t\t},\n\t\t\tset: function (value) { return false;}\n\t\t});\n\t\n\t\n\t// Class Private properties\n\t\t/**\n\t\t * Determines if the plugins have been registered. If false, the first call to play() will instantiate the default\n\t\t * plugins ({{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}, followed by {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}).\n\t\t * If plugins have been registered, but none are applicable, then sound playback will fail.\n\t\t * @property _pluginsRegistered\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @static\n\t\t * @protected\n\t\t */\n\t\ts._pluginsRegistered = false;\n\t\n\t\t/**\n\t\t * Used internally to assign unique IDs to each AbstractSoundInstance.\n\t\t * @property _lastID\n\t\t * @type {Number}\n\t\t * @static\n\t\t * @protected\n\t\t */\n\t\ts._lastID = 0;\n\t\n\t\t/**\n\t\t * An array containing all currently playing instances. This allows Sound to control the volume, mute, and playback of\n\t\t * all instances when using static APIs like {{#crossLink \"Sound/stop\"}}{{/crossLink}} and {{#crossLink \"Sound/setVolume\"}}{{/crossLink}}.\n\t\t * When an instance has finished playback, it gets removed via the {{#crossLink \"Sound/finishedPlaying\"}}{{/crossLink}}\n\t\t * method. If the user replays an instance, it gets added back in via the {{#crossLink \"Sound/_beginPlaying\"}}{{/crossLink}}\n\t\t * method.\n\t\t * @property _instances\n\t\t * @type {Array}\n\t\t * @protected\n\t\t * @static\n\t\t */\n\t\ts._instances = [];\n\t\n\t\t/**\n\t\t * An object hash storing objects with sound sources, startTime, and duration via there corresponding ID.\n\t\t * @property _idHash\n\t\t * @type {Object}\n\t\t * @protected\n\t\t * @static\n\t\t */\n\t\ts._idHash = {};\n\t\n\t\t/**\n\t\t * An object hash that stores preloading sound sources via the parsed source that is passed to the plugin.  Contains the\n\t\t * source, id, and data that was passed in by the user.  Parsed sources can contain multiple instances of source, id,\n\t\t * and data.\n\t\t * @property _preloadHash\n\t\t * @type {Object}\n\t\t * @protected\n\t\t * @static\n\t\t */\n\t\ts._preloadHash = {};\n\t\n\t\t/**\n\t\t * An object hash storing {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} via the parsed source that is passed as defaultPlayProps in\n\t\t * {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} and {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n\t\t * @property _defaultPlayPropsHash\n\t\t * @type {Object}\n\t\t * @protected\n\t\t * @static\n\t\t * @since 0.6.1\n\t\t */\n\t\ts._defaultPlayPropsHash = {};\n\t\n\t\n\t// EventDispatcher methods:\n\t\ts.addEventListener = null;\n\t\ts.removeEventListener = null;\n\t\ts.removeAllEventListeners = null;\n\t\ts.dispatchEvent = null;\n\t\ts.hasEventListener = null;\n\t\ts._listeners = null;\n\t\n\t\tcreatejs.EventDispatcher.initialize(s); // inject EventDispatcher methods.\n\t\n\t\n\t// Events\n\t\t/**\n\t\t * This event is fired when a file finishes loading internally. This event is fired for each loaded sound,\n\t\t * so any handler methods should look up the <code>event.src</code> to handle a particular sound.\n\t\t * @event fileload\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @param {String} src The source of the sound that was loaded.\n\t\t * @param {String} [id] The id passed in when the sound was registered. If one was not provided, it will be null.\n\t\t * @param {Number|Object} [data] Any additional data associated with the item. If not provided, it will be undefined.\n\t\t * @since 0.4.1\n\t\t */\n\t\n\t\t/**\n\t\t * This event is fired when a file fails loading internally. This event is fired for each loaded sound,\n\t\t * so any handler methods should look up the <code>event.src</code> to handle a particular sound.\n\t\t * @event fileerror\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @param {String} src The source of the sound that was loaded.\n\t\t * @param {String} [id] The id passed in when the sound was registered. If one was not provided, it will be null.\n\t\t * @param {Number|Object} [data] Any additional data associated with the item. If not provided, it will be undefined.\n\t\t * @since 0.6.0\n\t\t */\n\t\n\t\n\t// Class Public Methods\n\t\t/**\n\t\t * Get the preload rules to allow Sound to be used as a plugin by <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.\n\t\t * Any load calls that have the matching type or extension will fire the callback method, and use the resulting\n\t\t * object, which is potentially modified by Sound. This helps when determining the correct path, as well as\n\t\t * registering the audio instance(s) with Sound. This method should not be called, except by PreloadJS.\n\t\t * @method getPreloadHandlers\n\t\t * @return {Object} An object containing:\n\t\t * <ul><li>callback: A preload callback that is fired when a file is added to PreloadJS, which provides\n\t\t *      Sound a mechanism to modify the load parameters, select the correct file format, register the sound, etc.</li>\n\t\t *      <li>types: A list of file types that are supported by Sound (currently supports \"sound\").</li>\n\t\t *      <li>extensions: A list of file extensions that are supported by Sound (see {{#crossLink \"Sound/SUPPORTED_EXTENSIONS:property\"}}{{/crossLink}}).</li></ul>\n\t\t * @static\n\t\t * @protected\n\t\t */\n\t\ts.getPreloadHandlers = function () {\n\t\t\treturn {\n\t\t\t\tcallback:createjs.proxy(s.initLoad, s),\n\t\t\t\ttypes:[\"sound\"],\n\t\t\t\textensions:s.SUPPORTED_EXTENSIONS\n\t\t\t};\n\t\t};\n\t\n\t\t/**\n\t\t * Used to dispatch fileload events from internal loading.\n\t\t * @method _handleLoadComplete\n\t\t * @param event A loader event.\n\t\t * @protected\n\t\t * @static\n\t\t * @since 0.6.0\n\t\t */\n\t\ts._handleLoadComplete = function(event) {\n\t\t\tvar src = event.target.getItem().src;\n\t\t\tif (!s._preloadHash[src]) {return;}\n\t\n\t\t\tfor (var i = 0, l = s._preloadHash[src].length; i < l; i++) {\n\t\t\t\tvar item = s._preloadHash[src][i];\n\t\t\t\ts._preloadHash[src][i] = true;\n\t\n\t\t\t\tif (!s.hasEventListener(\"fileload\")) { continue; }\n\t\n\t\t\t\tvar event = new createjs.Event(\"fileload\");\n\t\t\t\tevent.src = item.src;\n\t\t\t\tevent.id = item.id;\n\t\t\t\tevent.data = item.data;\n\t\t\t\tevent.sprite = item.sprite;\n\t\n\t\t\t\ts.dispatchEvent(event);\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Used to dispatch error events from internal preloading.\n\t\t * @param event\n\t\t * @protected\n\t\t * @since 0.6.0\n\t\t * @static\n\t\t */\n\t\ts._handleLoadError = function(event) {\n\t\t\tvar src = event.target.getItem().src;\n\t\t\tif (!s._preloadHash[src]) {return;}\n\t\n\t\t\tfor (var i = 0, l = s._preloadHash[src].length; i < l; i++) {\n\t\t\t\tvar item = s._preloadHash[src][i];\n\t\t\t\ts._preloadHash[src][i] = false;\n\t\n\t\t\t\tif (!s.hasEventListener(\"fileerror\")) { continue; }\n\t\n\t\t\t\tvar event = new createjs.Event(\"fileerror\");\n\t\t\t\tevent.src = item.src;\n\t\t\t\tevent.id = item.id;\n\t\t\t\tevent.data = item.data;\n\t\t\t\tevent.sprite = item.sprite;\n\t\n\t\t\t\ts.dispatchEvent(event);\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Used by {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} to register a Sound plugin.\n\t\t *\n\t\t * @method _registerPlugin\n\t\t * @param {Object} plugin The plugin class to install.\n\t\t * @return {Boolean} Whether the plugin was successfully initialized.\n\t\t * @static\n\t\t * @private\n\t\t */\n\t\ts._registerPlugin = function (plugin) {\n\t\t\t// Note: Each plugin is passed in as a class reference, but we store the activePlugin as an instance\n\t\t\tif (plugin.isSupported()) {\n\t\t\t\ts.activePlugin = new plugin();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\n\t\t/**\n\t\t * Register a list of Sound plugins, in order of precedence. To register a single plugin, pass a single element in the array.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      createjs.FlashAudioPlugin.swfPath = \"../src/soundjs/flashaudio/\";\n\t\t *      createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\n\t\t *\n\t\t * @method registerPlugins\n\t\t * @param {Array} plugins An array of plugins classes to install.\n\t\t * @return {Boolean} Whether a plugin was successfully initialized.\n\t\t * @static\n\t\t */\n\t\ts.registerPlugins = function (plugins) {\n\t\t\ts._pluginsRegistered = true;\n\t\t\tfor (var i = 0, l = plugins.length; i < l; i++) {\n\t\t\t\tif (s._registerPlugin(plugins[i])) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\n\t\t/**\n\t\t * Initialize the default plugins. This method is automatically called when any audio is played or registered before\n\t\t * the user has manually registered plugins, and enables Sound to work without manual plugin setup. Currently, the\n\t\t * default plugins are {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} followed by {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t * \tif (!createjs.initializeDefaultPlugins()) { return; }\n\t\t *\n\t\t * @method initializeDefaultPlugins\n\t\t * @returns {Boolean} True if a plugin was initialized, false otherwise.\n\t\t * @since 0.4.0\n\t\t * @static\n\t\t */\n\t\ts.initializeDefaultPlugins = function () {\n\t\t\tif (s.activePlugin != null) {return true;}\n\t\t\tif (s._pluginsRegistered) {return false;}\n\t\t\tif (s.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin])) {return true;}\n\t\t\treturn false;\n\t\t};\n\t\n\t\t/**\n\t\t * Determines if Sound has been initialized, and a plugin has been activated.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t * This example sets up a Flash fallback, but only if there is no plugin specified yet.\n\t\t *\n\t\t * \tif (!createjs.Sound.isReady()) {\n\t\t *\t\tcreatejs.FlashAudioPlugin.swfPath = \"../src/soundjs/flashaudio/\";\n\t\t * \t\tcreatejs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\n\t\t *\t}\n\t\t *\n\t\t * @method isReady\n\t\t * @return {Boolean} If Sound has initialized a plugin.\n\t\t * @static\n\t\t */\n\t\ts.isReady = function () {\n\t\t\treturn (s.activePlugin != null);\n\t\t};\n\t\n\t\t/**\n\t\t * Deprecated, please use {{#crossLink \"Sound/capabilities:property\"}}{{/crossLink}} instead.\n\t\t *\n\t\t * @method getCapabilities\n\t\t * @return {Object} An object containing the capabilities of the active plugin.\n\t\t * @static\n\t\t * @deprecated\n\t\t */\n\t\ts.getCapabilities = function () {\n\t\t\tif (s.activePlugin == null) {return null;}\n\t\t\treturn s.activePlugin._capabilities;\n\t\t};\n\t\n\t\t/**\n\t\t * Deprecated, please use {{#crossLink \"Sound/capabilities:property\"}}{{/crossLink}} instead.\n\t\t *\n\t\t * @method getCapability\n\t\t * @param {String} key The capability to retrieve\n\t\t * @return {Number|Boolean} The value of the capability.\n\t\t * @static\n\t\t * @see getCapabilities\n\t\t * @deprecated\n\t\t */\n\t\ts.getCapability = function (key) {\n\t\t\tif (s.activePlugin == null) {return null;}\n\t\t\treturn s.activePlugin._capabilities[key];\n\t\t};\n\t\n\t\t/**\n\t\t * Process manifest items from <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>. This method is intended\n\t\t * for usage by a plugin, and not for direct interaction.\n\t\t * @method initLoad\n\t\t * @param {Object} src The object to load.\n\t\t * @return {Object|AbstractLoader} An instance of AbstractLoader.\n\t\t * @protected\n\t\t * @static\n\t\t */\n\t\ts.initLoad = function (loadItem) {\n\t\t\treturn s._registerSound(loadItem);\n\t\t};\n\t\n\t\t/**\n\t\t * Internal method for loading sounds.  This should not be called directly.\n\t\t *\n\t\t * @method _registerSound\n\t\t * @param {Object} src The object to load, containing src property and optionally containing id and data.\n\t\t * @return {Object} An object with the modified values that were passed in, which defines the sound.\n\t\t * Returns false if the source cannot be parsed or no plugins can be initialized.\n\t\t * Returns true if the source is already loaded.\n\t\t * @static\n\t\t * @private\n\t\t * @since 0.6.0\n\t\t */\n\t\n\t\ts._registerSound = function (loadItem) {\n\t\t\tif (!s.initializeDefaultPlugins()) {return false;}\n\t\n\t\t\tvar details;\n\t\t\tif (loadItem.src instanceof Object) {\n\t\t\t\tdetails = s._parseSrc(loadItem.src);\n\t\t\t\tdetails.src = loadItem.path + details.src;\n\t\t\t} else {\n\t\t\t\tdetails = s._parsePath(loadItem.src);\n\t\t\t}\n\t\t\tif (details == null) {return false;}\n\t\t\tloadItem.src = details.src;\n\t\t\tloadItem.type = \"sound\";\n\t\n\t\t\tvar data = loadItem.data;\n\t\t\tvar numChannels = null;\n\t\t\tif (data != null) {\n\t\t\t\tif (!isNaN(data.channels)) {\n\t\t\t\t\tnumChannels = parseInt(data.channels);\n\t\t\t\t} else if (!isNaN(data)) {\n\t\t\t\t\tnumChannels = parseInt(data);\n\t\t\t\t}\n\t\n\t\t\t\tif(data.audioSprite) {\n\t\t\t\t\tvar sp;\n\t\t\t\t\tfor(var i = data.audioSprite.length; i--; ) {\n\t\t\t\t\t\tsp = data.audioSprite[i];\n\t\t\t\t\t\ts._idHash[sp.id] = {src: loadItem.src, startTime: parseInt(sp.startTime), duration: parseInt(sp.duration)};\n\t\n\t\t\t\t\t\tif (sp.defaultPlayProps) {\n\t\t\t\t\t\t\ts._defaultPlayPropsHash[sp.id] = createjs.PlayPropsConfig.create(sp.defaultPlayProps);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (loadItem.id != null) {s._idHash[loadItem.id] = {src: loadItem.src}};\n\t\t\tvar loader = s.activePlugin.register(loadItem);\n\t\n\t\t\tSoundChannel.create(loadItem.src, numChannels);\n\t\n\t\t\t// return the number of instances to the user.  This will also be returned in the load event.\n\t\t\tif (data == null || !isNaN(data)) {\n\t\t\t\tloadItem.data = numChannels || SoundChannel.maxPerChannel();\n\t\t\t} else {\n\t\t\t\tloadItem.data.channels = numChannels || SoundChannel.maxPerChannel();\n\t\t\t}\n\t\n\t\t\tif (loader.type) {loadItem.type = loader.type;}\n\t\n\t\t\tif (loadItem.defaultPlayProps) {\n\t\t\t\ts._defaultPlayPropsHash[loadItem.src] = createjs.PlayPropsConfig.create(loadItem.defaultPlayProps);\n\t\t\t}\n\t\t\treturn loader;\n\t\t};\n\t\n\t\t/**\n\t\t * Register an audio file for loading and future playback in Sound. This is automatically called when using\n\t\t * <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.  It is recommended to register all sounds that\n\t\t * need to be played back in order to properly prepare and preload them. Sound does internal preloading when required.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      createjs.Sound.alternateExtensions = [\"mp3\"];\n\t\t *      createjs.Sound.on(\"fileload\", handleLoad); // add an event listener for when load is completed\n\t\t *      createjs.Sound.registerSound(\"myAudioPath/mySound.ogg\", \"myID\", 3);\n\t\t *      createjs.Sound.registerSound({ogg:\"path1/mySound.ogg\", mp3:\"path2/mySoundNoExtension\"}, \"myID\", 3);\n\t\t *\n\t\t *\n\t\t * @method registerSound\n\t\t * @param {String | Object} src The source or an Object with a \"src\" property or an Object with multiple extension labeled src properties.\n\t\t * @param {String} [id] An id specified by the user to play the sound later.  Note id is required for when src is multiple extension labeled src properties.\n\t\t * @param {Number | Object} [data] Data associated with the item. Sound uses the data parameter as the number of\n\t\t * channels for an audio instance, however a \"channels\" property can be appended to the data object if it is used\n\t\t * for other information. The audio channels will set a default based on plugin if no value is found.\n\t\t * Sound also uses the data property to hold an {{#crossLink \"AudioSprite\"}}{{/crossLink}} array of objects in the following format {id, startTime, duration}.<br/>\n\t\t *   id used to play the sound later, in the same manner as a sound src with an id.<br/>\n\t\t *   startTime is the initial offset to start playback and loop from, in milliseconds.<br/>\n\t\t *   duration is the amount of time to play the clip for, in milliseconds.<br/>\n\t\t * This allows Sound to support audio sprites that are played back by id.\n\t\t * @param {string} basePath Set a path that will be prepended to src for loading.\n\t\t * @param {Object | PlayPropsConfig} defaultPlayProps Optional Playback properties that will be set as the defaults on any new AbstractSoundInstance.\n\t\t * See {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} for options.\n\t\t * @return {Object} An object with the modified values that were passed in, which defines the sound.\n\t\t * Returns false if the source cannot be parsed or no plugins can be initialized.\n\t\t * Returns true if the source is already loaded.\n\t\t * @static\n\t\t * @since 0.4.0\n\t\t */\n\t\ts.registerSound = function (src, id, data, basePath, defaultPlayProps) {\n\t\t\tvar loadItem = {src: src, id: id, data:data, defaultPlayProps:defaultPlayProps};\n\t\t\tif (src instanceof Object && src.src) {\n\t\t\t\tbasePath = id;\n\t\t\t\tloadItem = src;\n\t\t\t}\n\t\t\tloadItem = createjs.LoadItem.create(loadItem);\n\t\t\tloadItem.path = basePath;\n\t\n\t\t\tif (basePath != null && !(loadItem.src instanceof Object)) {loadItem.src = basePath + loadItem.src;}\n\t\n\t\t\tvar loader = s._registerSound(loadItem);\n\t\t\tif(!loader) {return false;}\n\t\n\t\t\tif (!s._preloadHash[loadItem.src]) { s._preloadHash[loadItem.src] = [];}\n\t\t\ts._preloadHash[loadItem.src].push(loadItem);\n\t\t\tif (s._preloadHash[loadItem.src].length == 1) {\n\t\t\t\t// OJR note this will disallow reloading a sound if loading fails or the source changes\n\t\t\t\tloader.on(\"complete\", this._handleLoadComplete, this);\n\t\t\t\tloader.on(\"error\", this._handleLoadError, this);\n\t\t\t\ts.activePlugin.preload(loader);\n\t\t\t} else {\n\t\t\t\tif (s._preloadHash[loadItem.src][0] == true) {return true;}\n\t\t\t}\n\t\n\t\t\treturn loadItem;\n\t\t};\n\t\n\t\t/**\n\t\t * Register an array of audio files for loading and future playback in Sound. It is recommended to register all\n\t\t * sounds that need to be played back in order to properly prepare and preload them. Sound does internal preloading\n\t\t * when required.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t * \t\tvar assetPath = \"./myAudioPath/\";\n\t\t *      var sounds = [\n\t\t *          {src:\"asset0.ogg\", id:\"example\"},\n\t\t *          {src:\"asset1.ogg\", id:\"1\", data:6},\n\t\t *          {src:\"asset2.mp3\", id:\"works\"}\n\t\t *          {src:{mp3:\"path1/asset3.mp3\", ogg:\"path2/asset3NoExtension\"}, id:\"better\"}\n\t\t *      ];\n\t\t *      createjs.Sound.alternateExtensions = [\"mp3\"];\t// if the passed extension is not supported, try this extension\n\t\t *      createjs.Sound.on(\"fileload\", handleLoad); // call handleLoad when each sound loads\n\t\t *      createjs.Sound.registerSounds(sounds, assetPath);\n\t\t *\n\t\t * @method registerSounds\n\t\t * @param {Array} sounds An array of objects to load. Objects are expected to be in the format needed for\n\t\t * {{#crossLink \"Sound/registerSound\"}}{{/crossLink}}: <code>{src:srcURI, id:ID, data:Data}</code>\n\t\t * with \"id\" and \"data\" being optional.\n\t\t * You can also pass an object with path and manifest properties, where path is a basePath and manifest is an array of objects to load.\n\t\t * Note id is required if src is an object with extension labeled src properties.\n\t\t * @param {string} basePath Set a path that will be prepended to each src when loading.  When creating, playing, or removing\n\t\t * audio that was loaded with a basePath by src, the basePath must be included.\n\t\t * @return {Object} An array of objects with the modified values that were passed in, which defines each sound.\n\t\t * Like registerSound, it will return false for any values when the source cannot be parsed or if no plugins can be initialized.\n\t\t * Also, it will return true for any values when the source is already loaded.\n\t\t * @static\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.registerSounds = function (sounds, basePath) {\n\t\t\tvar returnValues = [];\n\t\t\tif (sounds.path) {\n\t\t\t\tif (!basePath) {\n\t\t\t\t\tbasePath = sounds.path;\n\t\t\t\t} else {\n\t\t\t\t\tbasePath = basePath + sounds.path;\n\t\t\t\t}\n\t\t\t\tsounds = sounds.manifest;\n\t\t\t\t// TODO document this feature\n\t\t\t}\n\t\t\tfor (var i = 0, l = sounds.length; i < l; i++) {\n\t\t\t\treturnValues[i] = createjs.Sound.registerSound(sounds[i].src, sounds[i].id, sounds[i].data, basePath, sounds[i].defaultPlayProps);\n\t\t\t}\n\t\t\treturn returnValues;\n\t\t};\n\t\n\t\t/**\n\t\t * Remove a sound that has been registered with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} or\n\t\t * {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n\t\t * <br />Note this will stop playback on active instances playing this sound before deleting them.\n\t\t * <br />Note if you passed in a basePath, you need to pass it or prepend it to the src here.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      createjs.Sound.removeSound(\"myID\");\n\t\t *      createjs.Sound.removeSound(\"myAudioBasePath/mySound.ogg\");\n\t\t *      createjs.Sound.removeSound(\"myPath/myOtherSound.mp3\", \"myBasePath/\");\n\t\t *      createjs.Sound.removeSound({mp3:\"musicNoExtension\", ogg:\"music.ogg\"}, \"myBasePath/\");\n\t\t *\n\t\t * @method removeSound\n\t\t * @param {String | Object} src The src or ID of the audio, or an Object with a \"src\" property, or an Object with multiple extension labeled src properties.\n\t\t * @param {string} basePath Set a path that will be prepended to each src when removing.\n\t\t * @return {Boolean} True if sound is successfully removed.\n\t\t * @static\n\t\t * @since 0.4.1\n\t\t */\n\t\ts.removeSound = function(src, basePath) {\n\t\t\tif (s.activePlugin == null) {return false;}\n\t\n\t\t\tif (src instanceof Object && src.src) {src = src.src;}\n\t\n\t\t\tvar details;\n\t\t\tif (src instanceof Object) {\n\t\t\t\tdetails = s._parseSrc(src);\n\t\t\t} else {\n\t\t\t\tsrc = s._getSrcById(src).src;\n\t\t\t\tdetails = s._parsePath(src);\n\t\t\t}\n\t\t\tif (details == null) {return false;}\n\t\t\tsrc = details.src;\n\t\t\tif (basePath != null) {src = basePath + src;}\n\t\n\t\t\tfor(var prop in s._idHash){\n\t\t\t\tif(s._idHash[prop].src == src) {\n\t\t\t\t\tdelete(s._idHash[prop]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// clear from SoundChannel, which also stops and deletes all instances\n\t\t\tSoundChannel.removeSrc(src);\n\t\n\t\t\tdelete(s._preloadHash[src]);\n\t\n\t\t\ts.activePlugin.removeSound(src);\n\t\n\t\t\treturn true;\n\t\t};\n\t\n\t\t/**\n\t\t * Remove an array of audio files that have been registered with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} or\n\t\t * {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n\t\t * <br />Note this will stop playback on active instances playing this audio before deleting them.\n\t\t * <br />Note if you passed in a basePath, you need to pass it or prepend it to the src here.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t * \t\tassetPath = \"./myPath/\";\n\t\t *      var sounds = [\n\t\t *          {src:\"asset0.ogg\", id:\"example\"},\n\t\t *          {src:\"asset1.ogg\", id:\"1\", data:6},\n\t\t *          {src:\"asset2.mp3\", id:\"works\"}\n\t\t *      ];\n\t\t *      createjs.Sound.removeSounds(sounds, assetPath);\n\t\t *\n\t\t * @method removeSounds\n\t\t * @param {Array} sounds An array of objects to remove. Objects are expected to be in the format needed for\n\t\t * {{#crossLink \"Sound/removeSound\"}}{{/crossLink}}: <code>{srcOrID:srcURIorID}</code>.\n\t\t * You can also pass an object with path and manifest properties, where path is a basePath and manifest is an array of objects to remove.\n\t\t * @param {string} basePath Set a path that will be prepended to each src when removing.\n\t\t * @return {Object} An array of Boolean values representing if the sounds with the same array index were\n\t\t * successfully removed.\n\t\t * @static\n\t\t * @since 0.4.1\n\t\t */\n\t\ts.removeSounds = function (sounds, basePath) {\n\t\t\tvar returnValues = [];\n\t\t\tif (sounds.path) {\n\t\t\t\tif (!basePath) {\n\t\t\t\t\tbasePath = sounds.path;\n\t\t\t\t} else {\n\t\t\t\t\tbasePath = basePath + sounds.path;\n\t\t\t\t}\n\t\t\t\tsounds = sounds.manifest;\n\t\t\t}\n\t\t\tfor (var i = 0, l = sounds.length; i < l; i++) {\n\t\t\t\treturnValues[i] = createjs.Sound.removeSound(sounds[i].src, basePath);\n\t\t\t}\n\t\t\treturn returnValues;\n\t\t};\n\t\n\t\t/**\n\t\t * Remove all sounds that have been registered with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} or\n\t\t * {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n\t\t * <br />Note this will stop playback on all active sound instances before deleting them.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *     createjs.Sound.removeAllSounds();\n\t\t *\n\t\t * @method removeAllSounds\n\t\t * @static\n\t\t * @since 0.4.1\n\t\t */\n\t\ts.removeAllSounds = function() {\n\t\t\ts._idHash = {};\n\t\t\ts._preloadHash = {};\n\t\t\tSoundChannel.removeAll();\n\t\t\tif (s.activePlugin) {s.activePlugin.removeAllSounds();}\n\t\t};\n\t\n\t\t/**\n\t\t * Check if a source has been loaded by internal preloaders. This is necessary to ensure that sounds that are\n\t\t * not completed preloading will not kick off a new internal preload if they are played.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *     var mySound = \"assetPath/asset0.ogg\";\n\t\t *     if(createjs.Sound.loadComplete(mySound) {\n\t\t *         createjs.Sound.play(mySound);\n\t\t *     }\n\t\t *\n\t\t * @method loadComplete\n\t\t * @param {String} src The src or id that is being loaded.\n\t\t * @return {Boolean} If the src is already loaded.\n\t\t * @since 0.4.0\n\t\t * @static\n\t\t */\n\t\ts.loadComplete = function (src) {\n\t\t\tif (!s.isReady()) { return false; }\n\t\t\tvar details = s._parsePath(src);\n\t\t\tif (details) {\n\t\t\t\tsrc = s._getSrcById(details.src).src;\n\t\t\t} else {\n\t\t\t\tsrc = s._getSrcById(src).src;\n\t\t\t}\n\t\t\tif(s._preloadHash[src] == undefined) {return false;}\n\t\t\treturn (s._preloadHash[src][0] == true);  // src only loads once, so if it's true for the first it's true for all\n\t\t};\n\t\n\t\t/**\n\t\t * Parse the path of a sound. Alternate extensions will be attempted in order if the\n\t\t * current extension is not supported\n\t\t * @method _parsePath\n\t\t * @param {String} value The path to an audio source.\n\t\t * @return {Object} A formatted object that can be registered with the {{#crossLink \"Sound/activePlugin:property\"}}{{/crossLink}}\n\t\t * and returned to a preloader like <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.\n\t\t * @protected\n\t\t * @static\n\t\t */\n\t\ts._parsePath = function (value) {\n\t\t\tif (typeof(value) != \"string\") {value = value.toString();}\n\t\n\t\t\tvar match = value.match(s.FILE_PATTERN);\n\t\t\tif (match == null) {return false;}\n\t\n\t\t\tvar name = match[4];\n\t\t\tvar ext = match[5];\n\t\t\tvar c = s.capabilities;\n\t\t\tvar i = 0;\n\t\t\twhile (!c[ext]) {\n\t\t\t\text = s.alternateExtensions[i++];\n\t\t\t\tif (i > s.alternateExtensions.length) { return null;}\t// no extensions are supported\n\t\t\t}\n\t\t\tvalue = value.replace(\".\"+match[5], \".\"+ext);\n\t\n\t\t\tvar ret = {name:name, src:value, extension:ext};\n\t\t\treturn ret;\n\t\t};\n\t\n\t\t/**\n\t\t * Parse the path of a sound based on properties of src matching with supported extensions.\n\t\t * Returns false if none of the properties are supported\n\t\t * @method _parseSrc\n\t\t * @param {Object} value The paths to an audio source, indexed by extension type.\n\t\t * @return {Object} A formatted object that can be registered with the {{#crossLink \"Sound/activePlugin:property\"}}{{/crossLink}}\n\t\t * and returned to a preloader like <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.\n\t\t * @protected\n\t\t * @static\n\t\t */\n\t\ts._parseSrc = function (value) {\n\t\t\tvar ret = {name:undefined, src:undefined, extension:undefined};\n\t\t\tvar c = s.capabilities;\n\t\n\t\t\tfor (var prop in value) {\n\t\t\t  if(value.hasOwnProperty(prop) && c[prop]) {\n\t\t\t\t\tret.src = value[prop];\n\t\t\t\t\tret.extension = prop;\n\t\t\t\t\tbreak;\n\t\t\t  }\n\t\t\t}\n\t\t\tif (!ret.src) {return false;}\t// no matches\n\t\n\t\t\tvar i = ret.src.lastIndexOf(\"/\");\n\t\t\tif (i != -1) {\n\t\t\t\tret.name = ret.src.slice(i+1);\n\t\t\t} else {\n\t\t\t\tret.name = ret.src;\n\t\t\t}\n\t\n\t\t\treturn ret;\n\t\t};\n\t\n\t\t/* ---------------\n\t\t Static API.\n\t\t --------------- */\n\t\t/**\n\t\t * Play a sound and get a {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} to control. If the sound fails to play, a\n\t\t * AbstractSoundInstance will still be returned, and have a playState of {{#crossLink \"Sound/PLAY_FAILED:property\"}}{{/crossLink}}.\n\t\t * Note that even on sounds with failed playback, you may still be able to call AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}},\n\t\t * since the failure could be due to lack of available channels. If the src does not have a supported extension or\n\t\t * if there is no available plugin, a default AbstractSoundInstance will be returned which will not play any audio, but will not generate errors.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      createjs.Sound.on(\"fileload\", handleLoad);\n\t\t *      createjs.Sound.registerSound(\"myAudioPath/mySound.mp3\", \"myID\", 3);\n\t\t *      function handleLoad(event) {\n\t\t *      \tcreatejs.Sound.play(\"myID\");\n\t\t *      \t// store off AbstractSoundInstance for controlling\n\t\t *      \tvar myInstance = createjs.Sound.play(\"myID\", {interrupt: createjs.Sound.INTERRUPT_ANY, loop:-1});\n\t\t *      }\n\t\t *\n\t\t * NOTE to create an audio sprite that has not already been registered, both startTime and duration need to be set.\n\t\t * This is only when creating a new audio sprite, not when playing using the id of an already registered audio sprite.\n\t\t *\n\t\t * <b>Parameters Deprecated</b><br />\n\t\t * The parameters for this method are deprecated in favor of a single parameter that is an Object or {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}}.\n\t\t *\n\t\t * @method play\n\t\t * @param {String} src The src or ID of the audio.\n\t\t * @param {String | Object} [interrupt=\"none\"|options] <b>This parameter will be renamed playProps in the next release.</b><br />\n\t\t * This parameter can be an instance of {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} or an Object that contains any or all optional properties by name,\n\t\t * including: interrupt, delay, offset, loop, volume, pan, startTime, and duration (see the above code sample).\n\t\t * <br /><strong>OR</strong><br />\n\t\t * <b>Deprecated</b> How to interrupt any currently playing instances of audio with the same source,\n\t\t * if the maximum number of instances of the sound are already playing. Values are defined as <code>INTERRUPT_TYPE</code>\n\t\t * constants on the Sound class, with the default defined by {{#crossLink \"Sound/defaultInterruptBehavior:property\"}}{{/crossLink}}.\n\t\t * @param {Number} [delay=0] <b>Deprecated</b> The amount of time to delay the start of audio playback, in milliseconds.\n\t\t * @param {Number} [offset=0] <b>Deprecated</b> The offset from the start of the audio to begin playback, in milliseconds.\n\t\t * @param {Number} [loop=0] <b>Deprecated</b> How many times the audio loops when it reaches the end of playback. The default is 0 (no\n\t\t * loops), and -1 can be used for infinite playback.\n\t\t * @param {Number} [volume=1] <b>Deprecated</b> The volume of the sound, between 0 and 1. Note that the master volume is applied\n\t\t * against the individual volume.\n\t\t * @param {Number} [pan=0] <b>Deprecated</b> The left-right pan of the sound (if supported), between -1 (left) and 1 (right).\n\t\t * @param {Number} [startTime=null] <b>Deprecated</b> To create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.\n\t\t * @param {Number} [duration=null] <b>Deprecated</b> To create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.\n\t\t * @return {AbstractSoundInstance} A {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} that can be controlled after it is created.\n\t\t * @static\n\t\t */\n\t\ts.play = function (src, interrupt, delay, offset, loop, volume, pan, startTime, duration) {\n\t\t\tvar playProps;\n\t\t\tif (interrupt instanceof Object || interrupt instanceof createjs.PlayPropsConfig) {\n\t\t\t\tplayProps = createjs.PlayPropsConfig.create(interrupt);\n\t\t\t} else {\n\t\t\t\tplayProps = createjs.PlayPropsConfig.create({interrupt:interrupt, delay:delay, offset:offset, loop:loop, volume:volume, pan:pan, startTime:startTime, duration:duration});\n\t\t\t}\n\t\t\tvar instance = s.createInstance(src, playProps.startTime, playProps.duration);\n\t\t\tvar ok = s._playInstance(instance, playProps);\n\t\t\tif (!ok) {instance._playFailed();}\n\t\t\treturn instance;\n\t\t};\n\t\n\t\t/**\n\t\t * Creates a {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} using the passed in src. If the src does not have a\n\t\t * supported extension or if there is no available plugin, a default AbstractSoundInstance will be returned that can be\n\t\t * called safely but does nothing.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var myInstance = null;\n\t\t *      createjs.Sound.on(\"fileload\", handleLoad);\n\t\t *      createjs.Sound.registerSound(\"myAudioPath/mySound.mp3\", \"myID\", 3);\n\t\t *      function handleLoad(event) {\n\t\t *      \tmyInstance = createjs.Sound.createInstance(\"myID\");\n\t\t *      \t// alternately we could call the following\n\t\t *      \tmyInstance = createjs.Sound.createInstance(\"myAudioPath/mySound.mp3\");\n\t\t *      }\n\t\t *\n\t\t * NOTE to create an audio sprite that has not already been registered, both startTime and duration need to be set.\n\t\t * This is only when creating a new audio sprite, not when playing using the id of an already registered audio sprite.\n\t\t *\n\t\t * @method createInstance\n\t\t * @param {String} src The src or ID of the audio.\n\t\t * @param {Number} [startTime=null] To create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.\n\t\t * @param {Number} [duration=null] To create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.\n\t\t * @return {AbstractSoundInstance} A {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} that can be controlled after it is created.\n\t\t * Unsupported extensions will return the default AbstractSoundInstance.\n\t\t * @since 0.4.0\n\t\t * @static\n\t\t */\n\t\ts.createInstance = function (src, startTime, duration) {\n\t\t\tif (!s.initializeDefaultPlugins()) {return new createjs.DefaultSoundInstance(src, startTime, duration);}\n\t\n\t\t\tvar defaultPlayProps = s._defaultPlayPropsHash[src];\t// for audio sprites, which create and store defaults by id\n\t\t\tsrc = s._getSrcById(src);\n\t\n\t\t\tvar details = s._parsePath(src.src);\n\t\n\t\t\tvar instance = null;\n\t\t\tif (details != null && details.src != null) {\n\t\t\t\tSoundChannel.create(details.src);\n\t\t\t\tif (startTime == null) {startTime = src.startTime;}\n\t\t\t\tinstance = s.activePlugin.create(details.src, startTime, duration || src.duration);\n\t\n\t\t\t\tdefaultPlayProps = defaultPlayProps || s._defaultPlayPropsHash[details.src];\n\t\t\t\tif(defaultPlayProps) {\n\t\t\t\t\tinstance.applyPlayProps(defaultPlayProps);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tinstance = new createjs.DefaultSoundInstance(src, startTime, duration);\n\t\t\t}\n\t\n\t\t\tinstance.uniqueId = s._lastID++;\n\t\n\t\t\treturn instance;\n\t\t};\n\t\n\t\t/**\n\t\t * Stop all audio (global stop). Stopped audio is reset, and not paused. To play audio that has been stopped,\n\t\t * call AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}}.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *     createjs.Sound.stop();\n\t\t *\n\t\t * @method stop\n\t\t * @static\n\t\t */\n\t\ts.stop = function () {\n\t\t\tvar instances = this._instances;\n\t\t\tfor (var i = instances.length; i--; ) {\n\t\t\t\tinstances[i].stop();  // NOTE stop removes instance from this._instances\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Deprecated, please use {{#crossLink \"Sound/volume:property\"}}{{/crossLink}} instead.\n\t\t *\n\t\t * @method setVolume\n\t\t * @param {Number} value The master volume value. The acceptable range is 0-1.\n\t\t * @static\n\t\t * @deprecated\n\t\t */\n\t\ts.setVolume = function (value) {\n\t\t\tif (Number(value) == null) {return false;}\n\t\t\tvalue = Math.max(0, Math.min(1, value));\n\t\t\ts._masterVolume = value;\n\t\t\tif (!this.activePlugin || !this.activePlugin.setVolume || !this.activePlugin.setVolume(value)) {\n\t\t\t\tvar instances = this._instances;\n\t\t\t\tfor (var i = 0, l = instances.length; i < l; i++) {\n\t\t\t\t\tinstances[i].setMasterVolume(value);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Deprecated, please use {{#crossLink \"Sound/volume:property\"}}{{/crossLink}} instead.\n\t\t *\n\t\t * @method getVolume\n\t\t * @return {Number} The master volume, in a range of 0-1.\n\t\t * @static\n\t\t * @deprecated\n\t\t */\n\t\ts.getVolume = function () {\n\t\t\treturn this._masterVolume;\n\t\t};\n\t\n\t\t/**\n\t\t * Deprecated, please use {{#crossLink \"Sound/muted:property\"}}{{/crossLink}} instead.\n\t\t *\n\t\t * @method setMute\n\t\t * @param {Boolean} value Whether the audio should be muted or not.\n\t\t * @return {Boolean} If the mute was set.\n\t\t * @static\n\t\t * @since 0.4.0\n\t\t * @deprecated\n\t\t */\n\t\ts.setMute = function (value) {\n\t\t\tif (value == null) {return false;}\n\t\n\t\t\tthis._masterMute = value;\n\t\t\tif (!this.activePlugin || !this.activePlugin.setMute || !this.activePlugin.setMute(value)) {\n\t\t\t\tvar instances = this._instances;\n\t\t\t\tfor (var i = 0, l = instances.length; i < l; i++) {\n\t\t\t\t\tinstances[i].setMasterMute(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\n\t\t/**\n\t\t * Deprecated, please use {{#crossLink \"Sound/muted:property\"}}{{/crossLink}} instead.\n\t\t *\n\t\t * @method getMute\n\t\t * @return {Boolean} The mute value of Sound.\n\t\t * @static\n\t\t * @since 0.4.0\n\t\t * @deprecated\n\t\t */\n\t\ts.getMute = function () {\n\t\t\treturn this._masterMute;\n\t\t};\n\t\n\t\t/**\n\t\t * Set the default playback properties for all new SoundInstances of the passed in src or ID.\n\t\t * See {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} for available properties.\n\t\t *\n\t\t * @method setDefaultPlayProps\n\t\t * @param {String} src The src or ID used to register the audio.\n\t\t * @param {Object | PlayPropsConfig} playProps The playback properties you would like to set.\n\t\t * @since 0.6.1\n\t\t */\n\t\ts.setDefaultPlayProps = function(src, playProps) {\n\t\t\tsrc = s._getSrcById(src);\n\t\t\ts._defaultPlayPropsHash[s._parsePath(src.src).src] = createjs.PlayPropsConfig.create(playProps);\n\t\t};\n\t\n\t\t/**\n\t\t * Get the default playback properties for the passed in src or ID.  These properties are applied to all\n\t\t * new SoundInstances.  Returns null if default does not exist.\n\t\t *\n\t\t * @method getDefaultPlayProps\n\t\t * @param {String} src The src or ID used to register the audio.\n\t\t * @returns {PlayPropsConfig} returns an existing PlayPropsConfig or null if one does not exist\n\t\t * @since 0.6.1\n\t\t */\n\t\ts.getDefaultPlayProps = function(src) {\n\t\t\tsrc = s._getSrcById(src);\n\t\t\treturn s._defaultPlayPropsHash[s._parsePath(src.src).src];\n\t\t};\n\t\n\t\n\t\t/* ---------------\n\t\t Internal methods\n\t\t --------------- */\n\t\t/**\n\t\t * Play an instance. This is called by the static API, as well as from plugins. This allows the core class to\n\t\t * control delays.\n\t\t * @method _playInstance\n\t\t * @param {AbstractSoundInstance} instance The {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} to start playing.\n\t\t * @param {PlayPropsConfig} playProps A PlayPropsConfig object.\n\t\t * @return {Boolean} If the sound can start playing. Sounds that fail immediately will return false. Sounds that\n\t\t * have a delay will return true, but may still fail to play.\n\t\t * @protected\n\t\t * @static\n\t\t */\n\t\ts._playInstance = function (instance, playProps) {\n\t\t\tvar defaultPlayProps = s._defaultPlayPropsHash[instance.src] || {};\n\t\t\tif (playProps.interrupt == null) {playProps.interrupt = defaultPlayProps.interrupt || s.defaultInterruptBehavior};\n\t\t\tif (playProps.delay == null) {playProps.delay = defaultPlayProps.delay || 0;}\n\t\t\tif (playProps.offset == null) {playProps.offset = instance.getPosition();}\n\t\t\tif (playProps.loop == null) {playProps.loop = instance.loop;}\n\t\t\tif (playProps.volume == null) {playProps.volume = instance.volume;}\n\t\t\tif (playProps.pan == null) {playProps.pan = instance.pan;}\n\t\n\t\t\tif (playProps.delay == 0) {\n\t\t\t\tvar ok = s._beginPlaying(instance, playProps);\n\t\t\t\tif (!ok) {return false;}\n\t\t\t} else {\n\t\t\t\t//Note that we can't pass arguments to proxy OR setTimeout (IE only), so just wrap the function call.\n\t\t\t\t// OJR WebAudio may want to handle this differently, so it might make sense to move this functionality into the plugins in the future\n\t\t\t\tvar delayTimeoutId = setTimeout(function () {\n\t\t\t\t\ts._beginPlaying(instance, playProps);\n\t\t\t\t}, playProps.delay);\n\t\t\t\tinstance.delayTimeoutId = delayTimeoutId;\n\t\t\t}\n\t\n\t\t\tthis._instances.push(instance);\n\t\n\t\t\treturn true;\n\t\t};\n\t\n\t\t/**\n\t\t * Begin playback. This is called immediately or after delay by {{#crossLink \"Sound/playInstance\"}}{{/crossLink}}.\n\t\t * @method _beginPlaying\n\t\t * @param {AbstractSoundInstance} instance A {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} to begin playback.\n\t\t * @param {PlayPropsConfig} playProps A PlayPropsConfig object.\n\t\t * @return {Boolean} If the sound can start playing. If there are no available channels, or the instance fails to\n\t\t * start, this will return false.\n\t\t * @protected\n\t\t * @static\n\t\t */\n\t\ts._beginPlaying = function (instance, playProps) {\n\t\t\tif (!SoundChannel.add(instance, playProps.interrupt)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar result = instance._beginPlaying(playProps);\n\t\t\tif (!result) {\n\t\t\t\tvar index = createjs.indexOf(this._instances, instance);\n\t\t\t\tif (index > -1) {this._instances.splice(index, 1);}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\n\t\t/**\n\t\t * Get the source of a sound via the ID passed in with a register call. If no ID is found the value is returned\n\t\t * instead.\n\t\t * @method _getSrcById\n\t\t * @param {String} value The ID the sound was registered with.\n\t\t * @return {String} The source of the sound if it has been registered with this ID or the value that was passed in.\n\t\t * @protected\n\t\t * @static\n\t\t */\n\t\ts._getSrcById = function (value) {\n\t\t\treturn s._idHash[value] || {src: value};\n\t\t};\n\t\n\t\t/**\n\t\t * A sound has completed playback, been interrupted, failed, or been stopped. This method removes the instance from\n\t\t * Sound management. It will be added again, if the sound re-plays. Note that this method is called from the\n\t\t * instances themselves.\n\t\t * @method _playFinished\n\t\t * @param {AbstractSoundInstance} instance The instance that finished playback.\n\t\t * @protected\n\t\t * @static\n\t\t */\n\t\ts._playFinished = function (instance) {\n\t\t\tSoundChannel.remove(instance);\n\t\t\tvar index = createjs.indexOf(this._instances, instance);\n\t\t\tif (index > -1) {this._instances.splice(index, 1);}\t// OJR this will always be > -1, there is no way for an instance to exist without being added to this._instances\n\t\t};\n\t\n\t\tcreatejs.Sound = Sound;\n\t\n\t\t/**\n\t\t * An internal class that manages the number of active {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} instances for\n\t\t * each sound type. This method is only used internally by the {{#crossLink \"Sound\"}}{{/crossLink}} class.\n\t\t *\n\t\t * The number of sounds is artificially limited by Sound in order to prevent over-saturation of a\n\t\t * single sound, as well as to stay within hardware limitations, although the latter may disappear with better\n\t\t * browser support.\n\t\t *\n\t\t * When a sound is played, this class ensures that there is an available instance, or interrupts an appropriate\n\t\t * sound that is already playing.\n\t\t * #class SoundChannel\n\t\t * @param {String} src The source of the instances\n\t\t * @param {Number} [max=1] The number of instances allowed\n\t\t * @constructor\n\t\t * @protected\n\t\t */\n\t\tfunction SoundChannel(src, max) {\n\t\t\tthis.init(src, max);\n\t\t}\n\t\n\t\t/* ------------\n\t\t Static API\n\t\t ------------ */\n\t\t/**\n\t\t * A hash of channel instances indexed by source.\n\t\t * #property channels\n\t\t * @type {Object}\n\t\t * @static\n\t\t */\n\t\tSoundChannel.channels = {};\n\t\n\t\t/**\n\t\t * Create a sound channel. Note that if the sound channel already exists, this will fail.\n\t\t * #method create\n\t\t * @param {String} src The source for the channel\n\t\t * @param {Number} max The maximum amount this channel holds. The default is {{#crossLink \"SoundChannel.maxDefault\"}}{{/crossLink}}.\n\t\t * @return {Boolean} If the channels were created.\n\t\t * @static\n\t\t */\n\t\tSoundChannel.create = function (src, max) {\n\t\t\tvar channel = SoundChannel.get(src);\n\t\t\tif (channel == null) {\n\t\t\t\tSoundChannel.channels[src] = new SoundChannel(src, max);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\t/**\n\t\t * Delete a sound channel, stop and delete all related instances. Note that if the sound channel does not exist, this will fail.\n\t\t * #method remove\n\t\t * @param {String} src The source for the channel\n\t\t * @return {Boolean} If the channels were deleted.\n\t\t * @static\n\t\t */\n\t\tSoundChannel.removeSrc = function (src) {\n\t\t\tvar channel = SoundChannel.get(src);\n\t\t\tif (channel == null) {return false;}\n\t\t\tchannel._removeAll();\t// this stops and removes all active instances\n\t\t\tdelete(SoundChannel.channels[src]);\n\t\t\treturn true;\n\t\t};\n\t\t/**\n\t\t * Delete all sound channels, stop and delete all related instances.\n\t\t * #method removeAll\n\t\t * @static\n\t\t */\n\t\tSoundChannel.removeAll = function () {\n\t\t\tfor(var channel in SoundChannel.channels) {\n\t\t\t\tSoundChannel.channels[channel]._removeAll();\t// this stops and removes all active instances\n\t\t\t}\n\t\t\tSoundChannel.channels = {};\n\t\t};\n\t\t/**\n\t\t * Add an instance to a sound channel.\n\t\t * #method add\n\t\t * @param {AbstractSoundInstance} instance The instance to add to the channel\n\t\t * @param {String} interrupt The interrupt value to use. Please see the {{#crossLink \"Sound/play\"}}{{/crossLink}}\n\t\t * for details on interrupt modes.\n\t\t * @return {Boolean} The success of the method call. If the channel is full, it will return false.\n\t\t * @static\n\t\t */\n\t\tSoundChannel.add = function (instance, interrupt) {\n\t\t\tvar channel = SoundChannel.get(instance.src);\n\t\t\tif (channel == null) {return false;}\n\t\t\treturn channel._add(instance, interrupt);\n\t\t};\n\t\t/**\n\t\t * Remove an instance from the channel.\n\t\t * #method remove\n\t\t * @param {AbstractSoundInstance} instance The instance to remove from the channel\n\t\t * @return The success of the method call. If there is no channel, it will return false.\n\t\t * @static\n\t\t */\n\t\tSoundChannel.remove = function (instance) {\n\t\t\tvar channel = SoundChannel.get(instance.src);\n\t\t\tif (channel == null) {return false;}\n\t\t\tchannel._remove(instance);\n\t\t\treturn true;\n\t\t};\n\t\t/**\n\t\t * Get the maximum number of sounds you can have in a channel.\n\t\t * #method maxPerChannel\n\t\t * @return {Number} The maximum number of sounds you can have in a channel.\n\t\t */\n\t\tSoundChannel.maxPerChannel = function () {\n\t\t\treturn p.maxDefault;\n\t\t};\n\t\t/**\n\t\t * Get a channel instance by its src.\n\t\t * #method get\n\t\t * @param {String} src The src to use to look up the channel\n\t\t * @static\n\t\t */\n\t\tSoundChannel.get = function (src) {\n\t\t\treturn SoundChannel.channels[src];\n\t\t};\n\t\n\t\tvar p = SoundChannel.prototype;\n\t\tp.constructor = SoundChannel;\n\t\n\t\t/**\n\t\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t\t * for details.\n\t\t *\n\t\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t\t *\n\t\t * @method initialize\n\t\t * @protected\n\t\t * @deprecated\n\t\t */\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\t\n\t\n\t\t/**\n\t\t * The source of the channel.\n\t\t * #property src\n\t\t * @type {String}\n\t\t */\n\t\tp.src = null;\n\t\n\t\t/**\n\t\t * The maximum number of instances in this channel.  -1 indicates no limit\n\t\t * #property max\n\t\t * @type {Number}\n\t\t */\n\t\tp.max = null;\n\t\n\t\t/**\n\t\t * The default value to set for max, if it isn't passed in.  Also used if -1 is passed.\n\t\t * #property maxDefault\n\t\t * @type {Number}\n\t\t * @default 100\n\t\t * @since 0.4.0\n\t\t */\n\t\tp.maxDefault = 100;\n\t\n\t\t/**\n\t\t * The current number of active instances.\n\t\t * #property length\n\t\t * @type {Number}\n\t\t */\n\t\tp.length = 0;\n\t\n\t\t/**\n\t\t * Initialize the channel.\n\t\t * #method init\n\t\t * @param {String} src The source of the channel\n\t\t * @param {Number} max The maximum number of instances in the channel\n\t\t * @protected\n\t\t */\n\t\tp.init = function (src, max) {\n\t\t\tthis.src = src;\n\t\t\tthis.max = max || this.maxDefault;\n\t\t\tif (this.max == -1) {this.max = this.maxDefault;}\n\t\t\tthis._instances = [];\n\t\t};\n\t\n\t\t/**\n\t\t * Get an instance by index.\n\t\t * #method get\n\t\t * @param {Number} index The index to return.\n\t\t * @return {AbstractSoundInstance} The AbstractSoundInstance at a specific instance.\n\t\t */\n\t\tp._get = function (index) {\n\t\t\treturn this._instances[index];\n\t\t};\n\t\n\t\t/**\n\t\t * Add a new instance to the channel.\n\t\t * #method add\n\t\t * @param {AbstractSoundInstance} instance The instance to add.\n\t\t * @return {Boolean} The success of the method call. If the channel is full, it will return false.\n\t\t */\n\t\tp._add = function (instance, interrupt) {\n\t\t\tif (!this._getSlot(interrupt, instance)) {return false;}\n\t\t\tthis._instances.push(instance);\n\t\t\tthis.length++;\n\t\t\treturn true;\n\t\t};\n\t\n\t\t/**\n\t\t * Remove an instance from the channel, either when it has finished playing, or it has been interrupted.\n\t\t * #method remove\n\t\t * @param {AbstractSoundInstance} instance The instance to remove\n\t\t * @return {Boolean} The success of the remove call. If the instance is not found in this channel, it will\n\t\t * return false.\n\t\t */\n\t\tp._remove = function (instance) {\n\t\t\tvar index = createjs.indexOf(this._instances, instance);\n\t\t\tif (index == -1) {return false;}\n\t\t\tthis._instances.splice(index, 1);\n\t\t\tthis.length--;\n\t\t\treturn true;\n\t\t};\n\t\n\t\t/**\n\t\t * Stop playback and remove all instances from the channel.  Usually in response to a delete call.\n\t\t * #method removeAll\n\t\t */\n\t\tp._removeAll = function () {\n\t\t\t// Note that stop() removes the item from the list\n\t\t\tfor (var i=this.length-1; i>=0; i--) {\n\t\t\t\tthis._instances[i].stop();\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Get an available slot depending on interrupt value and if slots are available.\n\t\t * #method getSlot\n\t\t * @param {String} interrupt The interrupt value to use.\n\t\t * @param {AbstractSoundInstance} instance The sound instance that will go in the channel if successful.\n\t\t * @return {Boolean} Determines if there is an available slot. Depending on the interrupt mode, if there are no slots,\n\t\t * an existing AbstractSoundInstance may be interrupted. If there are no slots, this method returns false.\n\t\t */\n\t\tp._getSlot = function (interrupt, instance) {\n\t\t\tvar target, replacement;\n\t\n\t\t\tif (interrupt != Sound.INTERRUPT_NONE) {\n\t\t\t\t// First replacement candidate\n\t\t\t\treplacement = this._get(0);\n\t\t\t\tif (replacement == null) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor (var i = 0, l = this.max; i < l; i++) {\n\t\t\t\ttarget = this._get(i);\n\t\n\t\t\t\t// Available Space\n\t\t\t\tif (target == null) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\n\t\t\t\t// Audio is complete or not playing\n\t\t\t\tif (target.playState == Sound.PLAY_FINISHED ||\n\t\t\t\t\ttarget.playState == Sound.PLAY_INTERRUPTED ||\n\t\t\t\t\ttarget.playState == Sound.PLAY_FAILED) {\n\t\t\t\t\treplacement = target;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\n\t\t\t\tif (interrupt == Sound.INTERRUPT_NONE) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\n\t\t\t\t// Audio is a better candidate than the current target, according to playhead\n\t\t\t\tif ((interrupt == Sound.INTERRUPT_EARLY && target.getPosition() < replacement.getPosition()) ||\n\t\t\t\t\t(interrupt == Sound.INTERRUPT_LATE && target.getPosition() > replacement.getPosition())) {\n\t\t\t\t\t\treplacement = target;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (replacement != null) {\n\t\t\t\treplacement._interrupt();\n\t\t\t\tthis._remove(replacement);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\n\t\tp.toString = function () {\n\t\t\treturn \"[Sound SoundChannel]\";\n\t\t};\n\t\t// do not add SoundChannel to namespace\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// AbstractSoundInstance.js\n\t//##############################################################################\n\t\n\t/**\n\t * A AbstractSoundInstance is created when any calls to the Sound API method {{#crossLink \"Sound/play\"}}{{/crossLink}} or\n\t * {{#crossLink \"Sound/createInstance\"}}{{/crossLink}} are made. The AbstractSoundInstance is returned by the active plugin\n\t * for control by the user.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var myInstance = createjs.Sound.play(\"myAssetPath/mySrcFile.mp3\");\n\t *\n\t * A number of additional parameters provide a quick way to determine how a sound is played. Please see the Sound\n\t * API method {{#crossLink \"Sound/play\"}}{{/crossLink}} for a list of arguments.\n\t *\n\t * Once a AbstractSoundInstance is created, a reference can be stored that can be used to control the audio directly through\n\t * the AbstractSoundInstance. If the reference is not stored, the AbstractSoundInstance will play out its audio (and any loops), and\n\t * is then de-referenced from the {{#crossLink \"Sound\"}}{{/crossLink}} class so that it can be cleaned up. If audio\n\t * playback has completed, a simple call to the {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}} instance method\n\t * will rebuild the references the Sound class need to control it.\n\t *\n\t *      var myInstance = createjs.Sound.play(\"myAssetPath/mySrcFile.mp3\", {loop:2});\n\t *      myInstance.on(\"loop\", handleLoop);\n\t *      function handleLoop(event) {\n\t *          myInstance.volume = myInstance.volume * 0.5;\n\t *      }\n\t *\n\t * Events are dispatched from the instance to notify when the sound has completed, looped, or when playback fails\n\t *\n\t *      var myInstance = createjs.Sound.play(\"myAssetPath/mySrcFile.mp3\");\n\t *      myInstance.on(\"complete\", handleComplete);\n\t *      myInstance.on(\"loop\", handleLoop);\n\t *      myInstance.on(\"failed\", handleFailed);\n\t *\n\t *\n\t * @class AbstractSoundInstance\n\t * @param {String} src The path to and file name of the sound.\n\t * @param {Number} startTime Audio sprite property used to apply an offset, in milliseconds.\n\t * @param {Number} duration Audio sprite property used to set the time the clip plays for, in milliseconds.\n\t * @param {Object} playbackResource Any resource needed by plugin to support audio playback.\n\t * @extends EventDispatcher\n\t * @constructor\n\t */\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\n\t// Constructor:\n\t\tvar AbstractSoundInstance = function (src, startTime, duration, playbackResource) {\n\t\t\tthis.EventDispatcher_constructor();\n\t\n\t\n\t\t// public properties:\n\t\t\t/**\n\t\t\t * The source of the sound.\n\t\t\t * @property src\n\t\t\t * @type {String}\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis.src = src;\n\t\n\t\t\t/**\n\t\t\t * The unique ID of the instance. This is set by {{#crossLink \"Sound\"}}{{/crossLink}}.\n\t\t\t * @property uniqueId\n\t\t\t * @type {String} | Number\n\t\t\t * @default -1\n\t\t\t */\n\t\t\tthis.uniqueId = -1;\n\t\n\t\t\t/**\n\t\t\t * The play state of the sound. Play states are defined as constants on {{#crossLink \"Sound\"}}{{/crossLink}}.\n\t\t\t * @property playState\n\t\t\t * @type {String}\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis.playState = null;\n\t\n\t\t\t/**\n\t\t\t * A Timeout created by {{#crossLink \"Sound\"}}{{/crossLink}} when this AbstractSoundInstance is played with a delay.\n\t\t\t * This allows AbstractSoundInstance to remove the delay if stop, pause, or cleanup are called before playback begins.\n\t\t\t * @property delayTimeoutId\n\t\t\t * @type {timeoutVariable}\n\t\t\t * @default null\n\t\t\t * @protected\n\t\t\t * @since 0.4.0\n\t\t\t */\n\t\t\tthis.delayTimeoutId = null;\n\t\t\t// TODO consider moving delay into AbstractSoundInstance so it can be handled by plugins\n\t\n\t\n\t\t// private properties\n\t\t// Getter / Setter Properties\n\t\t\t// OJR TODO find original reason that we didn't use defined functions.  I think it was performance related\n\t\t\t/**\n\t\t\t * The volume of the sound, between 0 and 1.\n\t\t\t *\n\t\t\t * The actual output volume of a sound can be calculated using:\n\t\t\t * <code>myInstance.volume * createjs.Sound.getVolume();</code>\n\t\t\t *\n\t\t\t * @property volume\n\t\t\t * @type {Number}\n\t\t\t * @default 1\n\t\t\t */\n\t\t\tthis._volume =  1;\n\t\t\tObject.defineProperty(this, \"volume\", {\n\t\t\t\tget: this.getVolume,\n\t\t\t\tset: this.setVolume\n\t\t\t});\n\t\n\t\t\t/**\n\t\t\t * The pan of the sound, between -1 (left) and 1 (right). Note that pan is not supported by HTML Audio.\n\t\t\t *\n\t\t\t * <br />Note in WebAudioPlugin this only gives us the \"x\" value of what is actually 3D audio.\n\t\t\t *\n\t\t\t * @property pan\n\t\t\t * @type {Number}\n\t\t\t * @default 0\n\t\t\t */\n\t\t\tthis._pan =  0;\n\t\t\tObject.defineProperty(this, \"pan\", {\n\t\t\t\tget: this.getPan,\n\t\t\t\tset: this.setPan\n\t\t\t});\n\t\n\t\t\t/**\n\t\t\t * Audio sprite property used to determine the starting offset.\n\t\t\t * @property startTime\n\t\t\t * @type {Number}\n\t\t\t * @default 0\n\t\t\t * @since 0.6.1\n\t\t\t */\n\t\t\tthis._startTime = Math.max(0, startTime || 0);\n\t\t\tObject.defineProperty(this, \"startTime\", {\n\t\t\t\tget: this.getStartTime,\n\t\t\t\tset: this.setStartTime\n\t\t\t});\n\t\n\t\t\t/**\n\t\t\t * Sets or gets the length of the audio clip, value is in milliseconds.\n\t\t\t *\n\t\t\t * @property duration\n\t\t\t * @type {Number}\n\t\t\t * @default 0\n\t\t\t * @since 0.6.0\n\t\t\t */\n\t\t\tthis._duration = Math.max(0, duration || 0);\n\t\t\tObject.defineProperty(this, \"duration\", {\n\t\t\t\tget: this.getDuration,\n\t\t\t\tset: this.setDuration\n\t\t\t});\n\t\n\t\t\t/**\n\t\t\t * Object that holds plugin specific resource need for audio playback.\n\t\t\t * This is set internally by the plugin.  For example, WebAudioPlugin will set an array buffer,\n\t\t\t * HTMLAudioPlugin will set a tag, FlashAudioPlugin will set a flash reference.\n\t\t\t *\n\t\t\t * @property playbackResource\n\t\t\t * @type {Object}\n\t\t\t * @default null\n\t\t\t */\n\t\t\tthis._playbackResource = null;\n\t\t\tObject.defineProperty(this, \"playbackResource\", {\n\t\t\t\tget: this.getPlaybackResource,\n\t\t\t\tset: this.setPlaybackResource\n\t\t\t});\n\t\t\tif(playbackResource !== false && playbackResource !== true) { this.setPlaybackResource(playbackResource); }\n\t\n\t\t\t/**\n\t\t\t * The position of the playhead in milliseconds. This can be set while a sound is playing, paused, or stopped.\n\t\t\t *\n\t\t\t * @property position\n\t\t\t * @type {Number}\n\t\t\t * @default 0\n\t\t\t * @since 0.6.0\n\t\t\t */\n\t\t\tthis._position = 0;\n\t\t\tObject.defineProperty(this, \"position\", {\n\t\t\t\tget: this.getPosition,\n\t\t\t\tset: this.setPosition\n\t\t\t});\n\t\n\t\t\t/**\n\t\t\t * The number of play loops remaining. Negative values will loop infinitely.\n\t\t\t *\n\t\t\t * @property loop\n\t\t\t * @type {Number}\n\t\t\t * @default 0\n\t\t\t * @public\n\t\t\t * @since 0.6.0\n\t\t\t */\n\t\t\tthis._loop = 0;\n\t\t\tObject.defineProperty(this, \"loop\", {\n\t\t\t\tget: this.getLoop,\n\t\t\t\tset: this.setLoop\n\t\t\t});\n\t\n\t\t\t/**\n\t\t\t * Mutes or unmutes the current audio instance.\n\t\t\t *\n\t\t\t * @property muted\n\t\t\t * @type {Boolean}\n\t\t\t * @default false\n\t\t\t * @since 0.6.0\n\t\t\t */\n\t\t\tthis._muted = false;\n\t\t\tObject.defineProperty(this, \"muted\", {\n\t\t\t\tget: this.getMuted,\n\t\t\t\tset: this.setMuted\n\t\t\t});\n\t\n\t\t\t/**\n\t\t\t * Pauses or resumes the current audio instance.\n\t\t\t *\n\t\t\t * @property paused\n\t\t\t * @type {Boolean}\n\t\t\t */\n\t\t\tthis._paused = false;\n\t\t\tObject.defineProperty(this, \"paused\", {\n\t\t\t\tget: this.getPaused,\n\t\t\t\tset: this.setPaused\n\t\t\t});\n\t\n\t\n\t\t// Events\n\t\t\t/**\n\t\t\t * The event that is fired when playback has started successfully.\n\t\t\t * @event succeeded\n\t\t\t * @param {Object} target The object that dispatched the event.\n\t\t\t * @param {String} type The event type.\n\t\t\t * @since 0.4.0\n\t\t\t */\n\t\n\t\t\t/**\n\t\t\t * The event that is fired when playback is interrupted. This happens when another sound with the same\n\t\t\t * src property is played using an interrupt value that causes this instance to stop playing.\n\t\t\t * @event interrupted\n\t\t\t * @param {Object} target The object that dispatched the event.\n\t\t\t * @param {String} type The event type.\n\t\t\t * @since 0.4.0\n\t\t\t */\n\t\n\t\t\t/**\n\t\t\t * The event that is fired when playback has failed. This happens when there are too many channels with the same\n\t\t\t * src property already playing (and the interrupt value doesn't cause an interrupt of another instance), or\n\t\t\t * the sound could not be played, perhaps due to a 404 error.\n\t\t\t * @event failed\n\t\t\t * @param {Object} target The object that dispatched the event.\n\t\t\t * @param {String} type The event type.\n\t\t\t * @since 0.4.0\n\t\t\t */\n\t\n\t\t\t/**\n\t\t\t * The event that is fired when a sound has completed playing but has loops remaining.\n\t\t\t * @event loop\n\t\t\t * @param {Object} target The object that dispatched the event.\n\t\t\t * @param {String} type The event type.\n\t\t\t * @since 0.4.0\n\t\t\t */\n\t\n\t\t\t/**\n\t\t\t * The event that is fired when playback completes. This means that the sound has finished playing in its\n\t\t\t * entirety, including its loop iterations.\n\t\t\t * @event complete\n\t\t\t * @param {Object} target The object that dispatched the event.\n\t\t\t * @param {String} type The event type.\n\t\t\t * @since 0.4.0\n\t\t\t */\n\t\t};\n\t\n\t\tvar p = createjs.extend(AbstractSoundInstance, createjs.EventDispatcher);\n\t\n\t\t// TODO: deprecated\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\n\t\n\t// Public Methods:\n\t\t/**\n\t\t * Play an instance. This method is intended to be called on SoundInstances that already exist (created\n\t\t * with the Sound API {{#crossLink \"Sound/createInstance\"}}{{/crossLink}} or {{#crossLink \"Sound/play\"}}{{/crossLink}}).\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var myInstance = createjs.Sound.createInstance(mySrc);\n\t\t *      myInstance.play({interrupt:createjs.Sound.INTERRUPT_ANY, loop:2, pan:0.5});\n\t\t *\n\t\t * Note that if this sound is already playing, this call will still set the passed in parameters.\n\t\n\t\t * <b>Parameters Deprecated</b><br />\n\t\t * The parameters for this method are deprecated in favor of a single parameter that is an Object or {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}}.\n\t\t *\n\t\t * @method play\n\t\t * @param {String | Object} [interrupt=\"none\"|options] <b>This parameter will be renamed playProps in the next release.</b><br />\n\t\t * This parameter can be an instance of {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} or an Object that contains any or all optional properties by name,\n\t\t * including: interrupt, delay, offset, loop, volume, pan, startTime, and duration (see the above code sample).\n\t\t * <br /><strong>OR</strong><br />\n\t\t * <b>Deprecated</b> How to interrupt any currently playing instances of audio with the same source,\n\t\t * if the maximum number of instances of the sound are already playing. Values are defined as <code>INTERRUPT_TYPE</code>\n\t\t * constants on the Sound class, with the default defined by {{#crossLink \"Sound/defaultInterruptBehavior:property\"}}{{/crossLink}}.\n\t\t * @param {Number} [delay=0] <b>Deprecated</b> The amount of time to delay the start of audio playback, in milliseconds.\n\t\t * @param {Number} [offset=0] <b>Deprecated</b> The offset from the start of the audio to begin playback, in milliseconds.\n\t\t * @param {Number} [loop=0] <b>Deprecated</b> How many times the audio loops when it reaches the end of playback. The default is 0 (no\n\t\t * loops), and -1 can be used for infinite playback.\n\t\t * @param {Number} [volume=1] <b>Deprecated</b> The volume of the sound, between 0 and 1. Note that the master volume is applied\n\t\t * against the individual volume.\n\t\t * @param {Number} [pan=0] <b>Deprecated</b> The left-right pan of the sound (if supported), between -1 (left) and 1 (right).\n\t\t * Note that pan is not supported for HTML Audio.\n\t\t * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n\t\t */\n\t\tp.play = function (interrupt, delay, offset, loop, volume, pan) {\n\t\t\tvar playProps;\n\t\t\tif (interrupt instanceof Object || interrupt instanceof createjs.PlayPropsConfig) {\n\t\t\t\tplayProps = createjs.PlayPropsConfig.create(interrupt);\n\t\t\t} else {\n\t\t\t\tplayProps = createjs.PlayPropsConfig.create({interrupt:interrupt, delay:delay, offset:offset, loop:loop, volume:volume, pan:pan});\n\t\t\t}\n\t\n\t\t\tif (this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\t\tthis.applyPlayProps(playProps);\n\t\t\t\tif (this._paused) {\tthis.setPaused(false); }\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._cleanUp();\n\t\t\tcreatejs.Sound._playInstance(this, playProps);\t// make this an event dispatch??\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * Stop playback of the instance. Stopped sounds will reset their position to 0, and calls to {{#crossLink \"AbstractSoundInstance/resume\"}}{{/crossLink}}\n\t\t * will fail. To start playback again, call {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}}.\n\t     *\n\t     * If you don't want to lose your position use yourSoundInstance.paused = true instead. {{#crossLink \"AbstractSoundInstance/paused\"}}{{/crossLink}}.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *     myInstance.stop();\n\t\t *\n\t\t * @method stop\n\t\t * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n\t\t */\n\t\tp.stop = function () {\n\t\t\tthis._position = 0;\n\t\t\tthis._paused = false;\n\t\t\tthis._handleStop();\n\t\t\tthis._cleanUp();\n\t\t\tthis.playState = createjs.Sound.PLAY_FINISHED;\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * Remove all external references and resources from AbstractSoundInstance.  Note this is irreversible and AbstractSoundInstance will no longer work\n\t\t * @method destroy\n\t\t * @since 0.6.0\n\t\t */\n\t\tp.destroy = function() {\n\t\t\tthis._cleanUp();\n\t\t\tthis.src = null;\n\t\t\tthis.playbackResource = null;\n\t\n\t\t\tthis.removeAllEventListeners();\n\t\t};\n\t\n\t\t/**\n\t\t * Takes an PlayPropsConfig or Object with the same properties and sets them on this instance.\n\t\t * @method applyPlayProps\n\t\t * @param {PlayPropsConfig | Object} playProps A PlayPropsConfig or object containing the same properties.\n\t\t * @since 0.6.1\n\t\t * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n\t\t */\n\t\tp.applyPlayProps = function(playProps) {\n\t\t\tif (playProps.offset != null) { this.setPosition(playProps.offset) }\n\t\t\tif (playProps.loop != null) { this.setLoop(playProps.loop); }\n\t\t\tif (playProps.volume != null) { this.setVolume(playProps.volume); }\n\t\t\tif (playProps.pan != null) { this.setPan(playProps.pan); }\n\t\t\tif (playProps.startTime != null) {\n\t\t\t\tthis.setStartTime(playProps.startTime);\n\t\t\t\tthis.setDuration(playProps.duration);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\t\n\t\tp.toString = function () {\n\t\t\treturn \"[AbstractSoundInstance]\";\n\t\t};\n\t\n\t// get/set methods that allow support for IE8\n\t\t/**\n\t\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/paused:property\"}}{{/crossLink}} directly as a property,\n\t\t *\n\t\t * @deprecated\n\t\t * @method getPaused\n\t\t * @returns {boolean} If the instance is currently paused\n\t\t * @since 0.6.0\n\t\t */\n\t\tp.getPaused = function() {\n\t\t\treturn this._paused;\n\t\t};\n\t\n\t\t/**\n\t\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/paused:property\"}}{{/crossLink}} directly as a property\n\t\t *\n\t\t * @deprecated\n\t\t * @method setPaused\n\t\t * @param {boolean} value\n\t\t * @since 0.6.0\n\t\t * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n\t\t */\n\t\tp.setPaused = function (value) {\n\t\t\tif ((value !== true && value !== false) || this._paused == value) {return;}\n\t\t\tif (value == true && this.playState != createjs.Sound.PLAY_SUCCEEDED) {return;}\n\t\t\tthis._paused = value;\n\t\t\tif(value) {\n\t\t\t\tthis._pause();\n\t\t\t} else {\n\t\t\t\tthis._resume();\n\t\t\t}\n\t\t\tclearTimeout(this.delayTimeoutId);\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/volume:property\"}}{{/crossLink}} directly as a property\n\t\t *\n\t\t * @deprecated\n\t\t * @method setVolume\n\t\t * @param {Number} value The volume to set, between 0 and 1.\n\t\t * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n\t\t */\n\t\tp.setVolume = function (value) {\n\t\t\tif (value == this._volume) { return this; }\n\t\t\tthis._volume = Math.max(0, Math.min(1, value));\n\t\t\tif (!this._muted) {\n\t\t\t\tthis._updateVolume();\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/volume:property\"}}{{/crossLink}} directly as a property\n\t\t *\n\t\t * @deprecated\n\t\t * @method getVolume\n\t\t * @return {Number} The current volume of the sound instance.\n\t\t */\n\t\tp.getVolume = function () {\n\t\t\treturn this._volume;\n\t\t};\n\t\n\t\t/**\n\t\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/muted:property\"}}{{/crossLink}} directly as a property\n\t\t *\n\t\t * @deprecated\n\t\t * @method setMuted\n\t\t * @param {Boolean} value If the sound should be muted.\n\t\t * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n\t\t * @since 0.6.0\n\t\t */\n\t\tp.setMuted = function (value) {\n\t\t\tif (value !== true && value !== false) {return;}\n\t\t\tthis._muted = value;\n\t\t\tthis._updateVolume();\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/muted:property\"}}{{/crossLink}} directly as a property\n\t\t *\n\t\t * @deprecated\n\t\t * @method getMuted\n\t\t * @return {Boolean} If the sound is muted.\n\t\t * @since 0.6.0\n\t\t */\n\t\tp.getMuted = function () {\n\t\t\treturn this._muted;\n\t\t};\n\t\n\t\t/**\n\t\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/pan:property\"}}{{/crossLink}} directly as a property\n\t\t *\n\t\t * @deprecated\n\t\t * @method setPan\n\t\t * @param {Number} value The pan value, between -1 (left) and 1 (right).\n\t\t * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n\t\t */\n\t\tp.setPan = function (value) {\n\t\t\tif(value == this._pan) { return this; }\n\t\t\tthis._pan = Math.max(-1, Math.min(1, value));\n\t\t\tthis._updatePan();\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/pan:property\"}}{{/crossLink}} directly as a property\n\t\t *\n\t\t * @deprecated\n\t\t * @method getPan\n\t\t * @return {Number} The value of the pan, between -1 (left) and 1 (right).\n\t\t */\n\t\tp.getPan = function () {\n\t\t\treturn this._pan;\n\t\t};\n\t\n\t\t/**\n\t\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/position:property\"}}{{/crossLink}} directly as a property\n\t\t *\n\t\t * @deprecated\n\t\t * @method getPosition\n\t\t * @return {Number} The position of the playhead in the sound, in milliseconds.\n\t\t */\n\t\tp.getPosition = function () {\n\t\t\tif (!this._paused && this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\t\tthis._position = this._calculateCurrentPosition();\n\t\t\t}\n\t\t\treturn this._position;\n\t\t};\n\t\n\t\t/**\n\t\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/position:property\"}}{{/crossLink}} directly as a property\n\t\t *\n\t\t * @deprecated\n\t\t * @method setPosition\n\t\t * @param {Number} value The position to place the playhead, in milliseconds.\n\t\t * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n\t\t */\n\t\tp.setPosition = function (value) {\n\t\t\tthis._position = Math.max(0, value);\n\t\t\tif (this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\t\tthis._updatePosition();\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/startTime:property\"}}{{/crossLink}} directly as a property\n\t\t *\n\t\t * @deprecated\n\t\t * @method getStartTime\n\t\t * @return {Number} The startTime of the sound instance in milliseconds.\n\t\t */\n\t\tp.getStartTime = function () {\n\t\t\treturn this._startTime;\n\t\t};\n\t\n\t\t/**\n\t\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/startTime:property\"}}{{/crossLink}} directly as a property\n\t\t *\n\t\t * @deprecated\n\t\t * @method setStartTime\n\t\t * @param {number} value The new startTime time in milli seconds.\n\t\t * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n\t\t */\n\t\tp.setStartTime = function (value) {\n\t\t\tif (value == this._startTime) { return this; }\n\t\t\tthis._startTime = Math.max(0, value || 0);\n\t\t\tthis._updateStartTime();\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/duration:property\"}}{{/crossLink}} directly as a property\n\t\t *\n\t\t * @deprecated\n\t\t * @method getDuration\n\t\t * @return {Number} The duration of the sound instance in milliseconds.\n\t\t */\n\t\tp.getDuration = function () {\n\t\t\treturn this._duration;\n\t\t};\n\t\n\t\t/**\n\t\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/duration:property\"}}{{/crossLink}} directly as a property\n\t\t *\n\t\t * @deprecated\n\t\t * @method setDuration\n\t\t * @param {number} value The new duration time in milli seconds.\n\t\t * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n\t\t * @since 0.6.0\n\t\t */\n\t\tp.setDuration = function (value) {\n\t\t\tif (value == this._duration) { return this; }\n\t\t\tthis._duration = Math.max(0, value || 0);\n\t\t\tthis._updateDuration();\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/playbackResource:property\"}}{{/crossLink}} directly as a property\n\t\t *\n\t\t * @deprecated\n\t\t * @method setPlayback\n\t\t * @param {Object} value The new playback resource.\n\t\t * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n\t\t * @since 0.6.0\n\t\t **/\n\t\tp.setPlaybackResource = function (value) {\n\t\t\tthis._playbackResource = value;\n\t\t\tif (this._duration == 0) { this._setDurationFromSource(); }\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/playbackResource:property\"}}{{/crossLink}} directly as a property\n\t\t *\n\t\t * @deprecated\n\t\t * @method setPlayback\n\t\t * @param {Object} value The new playback resource.\n\t\t * @return {Object} playback resource used for playing audio\n\t\t * @since 0.6.0\n\t\t **/\n\t\tp.getPlaybackResource = function () {\n\t\t\treturn this._playbackResource;\n\t\t};\n\t\n\t\t/**\n\t\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/loop:property\"}}{{/crossLink}} directly as a property\n\t\t *\n\t\t * @deprecated\n\t\t * @method getLoop\n\t\t * @return {number}\n\t\t * @since 0.6.0\n\t\t **/\n\t\tp.getLoop = function () {\n\t\t\treturn this._loop;\n\t\t};\n\t\n\t\t/**\n\t\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/loop:property\"}}{{/crossLink}} directly as a property,\n\t\t *\n\t\t * @deprecated\n\t\t * @method setLoop\n\t\t * @param {number} value The number of times to loop after play.\n\t\t * @since 0.6.0\n\t\t */\n\t\tp.setLoop = function (value) {\n\t\t\tif(this._playbackResource != null) {\n\t\t\t\t// remove looping\n\t\t\t\tif (this._loop != 0 && value == 0) {\n\t\t\t\t\tthis._removeLooping(value);\n\t\t\t\t}\n\t\t\t\t// add looping\n\t\t\t\telse if (this._loop == 0 && value != 0) {\n\t\t\t\t\tthis._addLooping(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._loop = value;\n\t\t};\n\t\n\t\n\t// Private Methods:\n\t\t/**\n\t\t * A helper method that dispatches all events for AbstractSoundInstance.\n\t\t * @method _sendEvent\n\t\t * @param {String} type The event type\n\t\t * @protected\n\t\t */\n\t\tp._sendEvent = function (type) {\n\t\t\tvar event = new createjs.Event(type);\n\t\t\tthis.dispatchEvent(event);\n\t\t};\n\t\n\t\t/**\n\t\t * Clean up the instance. Remove references and clean up any additional properties such as timers.\n\t\t * @method _cleanUp\n\t\t * @protected\n\t\t */\n\t\tp._cleanUp = function () {\n\t\t\tclearTimeout(this.delayTimeoutId); // clear timeout that plays delayed sound\n\t\t\tthis._handleCleanUp();\n\t\t\tthis._paused = false;\n\t\n\t\t\tcreatejs.Sound._playFinished(this);\t// TODO change to an event\n\t\t};\n\t\n\t\t/**\n\t\t * The sound has been interrupted.\n\t\t * @method _interrupt\n\t\t * @protected\n\t\t */\n\t\tp._interrupt = function () {\n\t\t\tthis._cleanUp();\n\t\t\tthis.playState = createjs.Sound.PLAY_INTERRUPTED;\n\t\t\tthis._sendEvent(\"interrupted\");\n\t\t};\n\t\n\t\t/**\n\t\t * Called by the Sound class when the audio is ready to play (delay has completed). Starts sound playing if the\n\t\t * src is loaded, otherwise playback will fail.\n\t\t * @method _beginPlaying\n\t\t * @param {PlayPropsConfig} playProps A PlayPropsConfig object.\n\t\t * @return {Boolean} If playback succeeded.\n\t\t * @protected\n\t\t */\n\t\t// OJR FlashAudioSoundInstance overwrites\n\t\tp._beginPlaying = function (playProps) {\n\t\t\tthis.setPosition(playProps.offset);\n\t\t\tthis.setLoop(playProps.loop);\n\t\t\tthis.setVolume(playProps.volume);\n\t\t\tthis.setPan(playProps.pan);\n\t\t\tif (playProps.startTime != null) {\n\t\t\t\tthis.setStartTime(playProps.startTime);\n\t\t\t\tthis.setDuration(playProps.duration);\n\t\t\t}\n\t\n\t\t\tif (this._playbackResource != null && this._position < this._duration) {\n\t\t\t\tthis._paused = false;\n\t\t\t\tthis._handleSoundReady();\n\t\t\t\tthis.playState = createjs.Sound.PLAY_SUCCEEDED;\n\t\t\t\tthis._sendEvent(\"succeeded\");\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tthis._playFailed();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Play has failed, which can happen for a variety of reasons.\n\t\t * Cleans up instance and dispatches failed event\n\t\t * @method _playFailed\n\t\t * @private\n\t\t */\n\t\tp._playFailed = function () {\n\t\t\tthis._cleanUp();\n\t\t\tthis.playState = createjs.Sound.PLAY_FAILED;\n\t\t\tthis._sendEvent(\"failed\");\n\t\t};\n\t\n\t\t/**\n\t\t * Audio has finished playing. Manually loop it if required.\n\t\t * @method _handleSoundComplete\n\t\t * @param event\n\t\t * @protected\n\t\t */\n\t\tp._handleSoundComplete = function (event) {\n\t\t\tthis._position = 0;  // have to set this as it can be set by pause during playback\n\t\n\t\t\tif (this._loop != 0) {\n\t\t\t\tthis._loop--;  // NOTE this introduces a theoretical limit on loops = float max size x 2 - 1\n\t\t\t\tthis._handleLoop();\n\t\t\t\tthis._sendEvent(\"loop\");\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tthis._cleanUp();\n\t\t\tthis.playState = createjs.Sound.PLAY_FINISHED;\n\t\t\tthis._sendEvent(\"complete\");\n\t\t};\n\t\n\t// Plugin specific code\n\t\t/**\n\t\t * Handles starting playback when the sound is ready for playing.\n\t\t * @method _handleSoundReady\n\t\t * @protected\n\t \t */\n\t\tp._handleSoundReady = function () {\n\t\t\t// plugin specific code\n\t\t};\n\t\n\t\t/**\n\t\t * Internal function used to update the volume based on the instance volume, master volume, instance mute value,\n\t\t * and master mute value.\n\t\t * @method _updateVolume\n\t\t * @protected\n\t\t */\n\t\tp._updateVolume = function () {\n\t\t\t// plugin specific code\n\t\t};\n\t\n\t\t/**\n\t\t * Internal function used to update the pan\n\t\t * @method _updatePan\n\t\t * @protected\n\t\t * @since 0.6.0\n\t\t */\n\t\tp._updatePan = function () {\n\t\t\t// plugin specific code\n\t\t};\n\t\n\t\t/**\n\t\t * Internal function used to update the startTime of the audio.\n\t\t * @method _updateStartTime\n\t\t * @protected\n\t\t * @since 0.6.1\n\t\t */\n\t\tp._updateStartTime = function () {\n\t\t\t// plugin specific code\n\t\t};\n\t\n\t\t/**\n\t\t * Internal function used to update the duration of the audio.\n\t\t * @method _updateDuration\n\t\t * @protected\n\t\t * @since 0.6.0\n\t\t */\n\t\tp._updateDuration = function () {\n\t\t\t// plugin specific code\n\t\t};\n\t\n\t\t/**\n\t\t * Internal function used to get the duration of the audio from the source we'll be playing.\n\t\t * @method _updateDuration\n\t\t * @protected\n\t\t * @since 0.6.0\n\t\t */\n\t\tp._setDurationFromSource = function () {\n\t\t\t// plugin specific code\n\t\t};\n\t\n\t\t/**\n\t\t * Internal function that calculates the current position of the playhead and sets this._position to that value\n\t\t * @method _calculateCurrentPosition\n\t\t * @protected\n\t\t * @since 0.6.0\n\t\t */\n\t\tp._calculateCurrentPosition = function () {\n\t\t\t// plugin specific code that sets this.position\n\t\t};\n\t\n\t\t/**\n\t\t * Internal function used to update the position of the playhead.\n\t\t * @method _updatePosition\n\t\t * @protected\n\t\t * @since 0.6.0\n\t\t */\n\t\tp._updatePosition = function () {\n\t\t\t// plugin specific code\n\t\t};\n\t\n\t\t/**\n\t\t * Internal function called when looping is removed during playback.\n\t\t * @method _removeLooping\n\t\t * @param {number} value The number of times to loop after play.\n\t\t * @protected\n\t\t * @since 0.6.0\n\t\t */\n\t\tp._removeLooping = function (value) {\n\t\t\t// plugin specific code\n\t\t};\n\t\n\t\t/**\n\t\t * Internal function called when looping is added during playback.\n\t\t * @method _addLooping\n\t\t * @param {number} value The number of times to loop after play.\n\t\t * @protected\n\t\t * @since 0.6.0\n\t\t */\n\t\tp._addLooping = function (value) {\n\t\t\t// plugin specific code\n\t\t};\n\t\n\t\t/**\n\t\t * Internal function called when pausing playback\n\t\t * @method _pause\n\t\t * @protected\n\t\t * @since 0.6.0\n\t\t */\n\t\tp._pause = function () {\n\t\t\t// plugin specific code\n\t\t};\n\t\n\t\t/**\n\t\t * Internal function called when resuming playback\n\t\t * @method _resume\n\t\t * @protected\n\t\t * @since 0.6.0\n\t\t */\n\t\tp._resume = function () {\n\t\t\t// plugin specific code\n\t\t};\n\t\n\t\t/**\n\t\t * Internal function called when stopping playback\n\t\t * @method _handleStop\n\t\t * @protected\n\t\t * @since 0.6.0\n\t\t */\n\t\tp._handleStop = function() {\n\t\t\t// plugin specific code\n\t\t};\n\t\n\t\t/**\n\t\t * Internal function called when AbstractSoundInstance is being cleaned up\n\t\t * @method _handleCleanUp\n\t\t * @protected\n\t\t * @since 0.6.0\n\t\t */\n\t\tp._handleCleanUp = function() {\n\t\t\t// plugin specific code\n\t\t};\n\t\n\t\t/**\n\t\t * Internal function called when AbstractSoundInstance has played to end and is looping\n\t\t * @method _handleLoop\n\t\t * @protected\n\t\t * @since 0.6.0\n\t\t */\n\t\tp._handleLoop = function () {\n\t\t\t// plugin specific code\n\t\t};\n\t\n\t\tcreatejs.AbstractSoundInstance = createjs.promote(AbstractSoundInstance, \"EventDispatcher\");\n\t\tcreatejs.DefaultSoundInstance = createjs.AbstractSoundInstance;\t// used when no plugin is supported\n\t}());\n\t\n\t//##############################################################################\n\t// AbstractPlugin.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor:\n\t \t/**\n\t\t * A default plugin class used as a base for all other plugins.\n\t\t * @class AbstractPlugin\n\t\t * @constructor\n\t\t * @since 0.6.0\n\t\t */\n\t\n\t\tvar AbstractPlugin = function () {\n\t\t// private properties:\n\t\t\t/**\n\t\t\t * The capabilities of the plugin.\n\t\t\t * method and is used internally.\n\t\t\t * @property _capabilities\n\t\t\t * @type {Object}\n\t\t\t * @default null\n\t\t\t * @protected\n\t\t\t * @static\n\t\t\t */\n\t\t\tthis._capabilities = null;\n\t\n\t\t\t/**\n\t\t\t * Object hash indexed by the source URI of all created loaders, used to properly destroy them if sources are removed.\n\t\t\t * @type {Object}\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis._loaders = {};\n\t\n\t\t\t/**\n\t\t\t * Object hash indexed by the source URI of each file to indicate if an audio source has begun loading,\n\t\t\t * is currently loading, or has completed loading.  Can be used to store non boolean data after loading\n\t\t\t * is complete (for example arrayBuffers for web audio).\n\t\t\t * @property _audioSources\n\t\t\t * @type {Object}\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis._audioSources = {};\n\t\n\t\t\t/**\n\t\t\t * Object hash indexed by the source URI of all created SoundInstances, updates the playbackResource if it loads after they are created,\n\t\t\t * and properly destroy them if sources are removed\n\t\t\t * @type {Object}\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis._soundInstances = {};\n\t\n\t\t\t/**\n\t\t\t * The internal master volume value of the plugin.\n\t\t\t * @property _volume\n\t\t\t * @type {Number}\n\t\t\t * @default 1\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis._volume = 1;\n\t\n\t\t\t/**\n\t\t\t * A reference to a loader class used by a plugin that must be set.\n\t\t\t * @type {Object}\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis._loaderClass;\n\t\n\t\t\t/**\n\t\t\t * A reference to an AbstractSoundInstance class used by a plugin that must be set.\n\t\t\t * @type {Object}\n\t\t\t * @protected;\n\t\t\t */\n\t\t\tthis._soundInstanceClass;\n\t\t};\n\t\tvar p = AbstractPlugin.prototype;\n\t\n\t\t/**\n\t\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t\t * for details.\n\t\t *\n\t\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t\t *\n\t\t * @method initialize\n\t\t * @protected\n\t\t * @deprecated\n\t\t */\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\t\n\t\n\t// Static Properties:\n\t// NOTE THESE PROPERTIES NEED TO BE ADDED TO EACH PLUGIN\n\t\t/**\n\t\t * The capabilities of the plugin. This is generated via the _generateCapabilities method and is used internally.\n\t\t * @property _capabilities\n\t\t * @type {Object}\n\t\t * @default null\n\t\t * @protected\n\t\t * @static\n\t\t */\n\t\tAbstractPlugin._capabilities = null;\n\t\n\t\t/**\n\t\t * Determine if the plugin can be used in the current browser/OS.\n\t\t * @method isSupported\n\t\t * @return {Boolean} If the plugin can be initialized.\n\t\t * @static\n\t\t */\n\t\tAbstractPlugin.isSupported = function () {\n\t\t\treturn true;\n\t\t};\n\t\n\t\n\t// public methods:\n\t\t/**\n\t\t * Pre-register a sound for preloading and setup. This is called by {{#crossLink \"Sound\"}}{{/crossLink}}.\n\t\t * Note all plugins provide a <code>Loader</code> instance, which <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>\n\t\t * can use to assist with preloading.\n\t\t * @method register\n\t\t * @param {String} loadItem An Object containing the source of the audio\n\t\t * Note that not every plugin will manage this value.\n\t\t * @return {Object} A result object, containing a \"tag\" for preloading purposes.\n\t\t */\n\t\tp.register = function (loadItem) {\n\t\t\tvar loader = this._loaders[loadItem.src];\n\t\t\tif(loader && !loader.canceled) {return this._loaders[loadItem.src];}\t// already loading/loaded this, so don't load twice\n\t\t\t// OJR potential issue that we won't be firing loaded event, might need to trigger if this is already loaded?\n\t\t\tthis._audioSources[loadItem.src] = true;\n\t\t\tthis._soundInstances[loadItem.src] = [];\n\t\t\tloader = new this._loaderClass(loadItem);\n\t\t\tloader.on(\"complete\", this._handlePreloadComplete, this);\n\t\t\tthis._loaders[loadItem.src] = loader;\n\t\t\treturn loader;\n\t\t};\n\t\n\t\t// note sound calls register before calling preload\n\t\t/**\n\t\t * Internally preload a sound.\n\t\t * @method preload\n\t\t * @param {Loader} loader The sound URI to load.\n\t\t */\n\t\tp.preload = function (loader) {\n\t\t\tloader.on(\"error\", this._handlePreloadError, this);\n\t\t\tloader.load();\n\t\t};\n\t\n\t\t/**\n\t\t * Checks if preloading has started for a specific source. If the source is found, we can assume it is loading,\n\t\t * or has already finished loading.\n\t\t * @method isPreloadStarted\n\t\t * @param {String} src The sound URI to check.\n\t\t * @return {Boolean}\n\t\t */\n\t\tp.isPreloadStarted = function (src) {\n\t\t\treturn (this._audioSources[src] != null);\n\t\t};\n\t\n\t\t/**\n\t\t * Checks if preloading has finished for a specific source.\n\t\t * @method isPreloadComplete\n\t\t * @param {String} src The sound URI to load.\n\t\t * @return {Boolean}\n\t\t */\n\t\tp.isPreloadComplete = function (src) {\n\t\t\treturn (!(this._audioSources[src] == null || this._audioSources[src] == true));\n\t\t};\n\t\n\t\t/**\n\t\t * Remove a sound added using {{#crossLink \"WebAudioPlugin/register\"}}{{/crossLink}}. Note this does not cancel a preload.\n\t\t * @method removeSound\n\t\t * @param {String} src The sound URI to unload.\n\t\t */\n\t\tp.removeSound = function (src) {\n\t\t\tif (!this._soundInstances[src]) { return; }\n\t\t\tfor (var i = this._soundInstances[src].length; i--; ) {\n\t\t\t\tvar item = this._soundInstances[src][i];\n\t\t\t\titem.destroy();\n\t\t\t}\n\t\t\tdelete(this._soundInstances[src]);\n\t\t\tdelete(this._audioSources[src]);\n\t\t\tif(this._loaders[src]) { this._loaders[src].destroy(); }\n\t\t\tdelete(this._loaders[src]);\n\t\t};\n\t\n\t\t/**\n\t\t * Remove all sounds added using {{#crossLink \"WebAudioPlugin/register\"}}{{/crossLink}}. Note this does not cancel a preload.\n\t\t * @method removeAllSounds\n\t\t * @param {String} src The sound URI to unload.\n\t\t */\n\t\tp.removeAllSounds = function () {\n\t\t\tfor(var key in this._audioSources) {\n\t\t\t\tthis.removeSound(key);\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Create a sound instance. If the sound has not been preloaded, it is internally preloaded here.\n\t\t * @method create\n\t\t * @param {String} src The sound source to use.\n\t\t * @param {Number} startTime Audio sprite property used to apply an offset, in milliseconds.\n\t\t * @param {Number} duration Audio sprite property used to set the time the clip plays for, in milliseconds.\n\t\t * @return {AbstractSoundInstance} A sound instance for playback and control.\n\t\t */\n\t\tp.create = function (src, startTime, duration) {\n\t\t\tif (!this.isPreloadStarted(src)) {\n\t\t\t\tthis.preload(this.register(src));\n\t\t\t}\n\t\t\tvar si = new this._soundInstanceClass(src, startTime, duration, this._audioSources[src]);\n\t\t\tif(this._soundInstances[src]){\n\t\t\t\tthis._soundInstances[src].push(si);\n\t\t\t}\n\t\n\t\t\treturn si;\n\t\t};\n\t\n\t\t// if a plugin does not support volume and mute, it should set these to null\n\t\t/**\n\t\t * Set the master volume of the plugin, which affects all SoundInstances.\n\t\t * @method setVolume\n\t\t * @param {Number} value The volume to set, between 0 and 1.\n\t\t * @return {Boolean} If the plugin processes the setVolume call (true). The Sound class will affect all the\n\t\t * instances manually otherwise.\n\t\t */\n\t\tp.setVolume = function (value) {\n\t\t\tthis._volume = value;\n\t\t\tthis._updateVolume();\n\t\t\treturn true;\n\t\t};\n\t\n\t\t/**\n\t\t * Get the master volume of the plugin, which affects all SoundInstances.\n\t\t * @method getVolume\n\t\t * @return {Number} The volume level, between 0 and 1.\n\t\t */\n\t\tp.getVolume = function () {\n\t\t\treturn this._volume;\n\t\t};\n\t\n\t\t/**\n\t\t * Mute all sounds via the plugin.\n\t\t * @method setMute\n\t\t * @param {Boolean} value If all sound should be muted or not. Note that plugin-level muting just looks up\n\t\t * the mute value of Sound {{#crossLink \"Sound/getMute\"}}{{/crossLink}}, so this property is not used here.\n\t\t * @return {Boolean} If the mute call succeeds.\n\t\t */\n\t\tp.setMute = function (value) {\n\t\t\tthis._updateVolume();\n\t\t\treturn true;\n\t\t};\n\t\n\t\t// plugins should overwrite this method\n\t\tp.toString = function () {\n\t\t\treturn \"[AbstractPlugin]\";\n\t\t};\n\t\n\t\n\t// private methods:\n\t\t/**\n\t\t * Handles internal preload completion.\n\t\t * @method _handlePreloadComplete\n\t\t * @protected\n\t\t */\n\t\tp._handlePreloadComplete = function (event) {\n\t\t\tvar src = event.target.getItem().src;\n\t\t\tthis._audioSources[src] = event.result;\n\t\t\tfor (var i = 0, l = this._soundInstances[src].length; i < l; i++) {\n\t\t\t\tvar item = this._soundInstances[src][i];\n\t\t\t\titem.setPlaybackResource(this._audioSources[src]);\n\t\t\t\t// ToDo consider adding play call here if playstate == playfailed\n\t\t\t\tthis._soundInstances[src] = null;\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Handles internal preload erros\n\t\t * @method _handlePreloadError\n\t\t * @param event\n\t\t * @protected\n\t\t */\n\t\tp._handlePreloadError = function(event) {\n\t\t\t//delete(this._audioSources[src]);\n\t\t};\n\t\n\t\t/**\n\t\t * Set the gain value for master audio. Should not be called externally.\n\t\t * @method _updateVolume\n\t\t * @protected\n\t\t */\n\t\tp._updateVolume = function () {\n\t\t\t// Plugin Specific code\n\t\t};\n\t\n\t\tcreatejs.AbstractPlugin = AbstractPlugin;\n\t}());\n\t\n\t//##############################################################################\n\t// WebAudioLoader.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\t/**\n\t\t * Loader provides a mechanism to preload Web Audio content via PreloadJS or internally. Instances are returned to\n\t\t * the preloader, and the load method is called when the asset needs to be requested.\n\t\t *\n\t\t * @class WebAudioLoader\n\t\t * @param {String} loadItem The item to be loaded\n\t\t * @extends XHRRequest\n\t\t * @protected\n\t\t */\n\t\tfunction Loader(loadItem) {\n\t\t\tthis.AbstractLoader_constructor(loadItem, true, createjs.AbstractLoader.SOUND);\n\t\n\t\t};\n\t\tvar p = createjs.extend(Loader, createjs.AbstractLoader);\n\t\n\t\t// TODO: deprecated\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\n\t\n\t\t/**\n\t\t * web audio context required for decoding audio\n\t\t * @property context\n\t\t * @type {AudioContext}\n\t\t * @static\n\t\t */\n\t\tLoader.context = null;\n\t\n\t\n\t// public methods\n\t\tp.toString = function () {\n\t\t\treturn \"[WebAudioLoader]\";\n\t\t};\n\t\n\t\n\t// private methods\n\t\tp._createRequest = function() {\n\t\t\tthis._request = new createjs.XHRRequest(this._item, false);\n\t\t\tthis._request.setResponseType(\"arraybuffer\");\n\t\t};\n\t\n\t\tp._sendComplete = function (event) {\n\t\t\t// OJR we leave this wrapped in Loader because we need to reference src and the handler only receives a single argument, the decodedAudio\n\t\t\tLoader.context.decodeAudioData(this._rawResult,\n\t\t         createjs.proxy(this._handleAudioDecoded, this),\n\t\t         createjs.proxy(this._sendError, this));\n\t\t};\n\t\n\t\n\t\t/**\n\t\t* The audio has been decoded.\n\t\t* @method handleAudioDecoded\n\t\t* @param decoded\n\t\t* @protected\n\t\t*/\n\t\tp._handleAudioDecoded = function (decodedAudio) {\n\t\t\tthis._result = decodedAudio;\n\t\t\tthis.AbstractLoader__sendComplete();\n\t\t};\n\t\n\t\tcreatejs.WebAudioLoader = createjs.promote(Loader, \"AbstractLoader\");\n\t}());\n\t\n\t//##############################################################################\n\t// WebAudioSoundInstance.js\n\t//##############################################################################\n\t\n\t/**\n\t * WebAudioSoundInstance extends the base api of {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} and is used by\n\t * {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.\n\t *\n\t * WebAudioSoundInstance exposes audioNodes for advanced users.\n\t *\n\t * @param {String} src The path to and file name of the sound.\n\t * @param {Number} startTime Audio sprite property used to apply an offset, in milliseconds.\n\t * @param {Number} duration Audio sprite property used to set the time the clip plays for, in milliseconds.\n\t * @param {Object} playbackResource Any resource needed by plugin to support audio playback.\n\t * @class WebAudioSoundInstance\n\t * @extends AbstractSoundInstance\n\t * @constructor\n\t */\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\tfunction WebAudioSoundInstance(src, startTime, duration, playbackResource) {\n\t\t\tthis.AbstractSoundInstance_constructor(src, startTime, duration, playbackResource);\n\t\n\t\n\t// public properties\n\t\t\t/**\n\t\t\t * NOTE this is only intended for use by advanced users.\n\t\t\t * <br />GainNode for controlling <code>WebAudioSoundInstance</code> volume. Connected to the {{#crossLink \"WebAudioSoundInstance/destinationNode:property\"}}{{/crossLink}}.\n\t\t\t * @property gainNode\n\t\t\t * @type {AudioGainNode}\n\t\t\t * @since 0.4.0\n\t\t\t *\n\t\t\t */\n\t\t\tthis.gainNode = s.context.createGain();\n\t\n\t\t\t/**\n\t\t\t * NOTE this is only intended for use by advanced users.\n\t\t\t * <br />A panNode allowing left and right audio channel panning only. Connected to WebAudioSoundInstance {{#crossLink \"WebAudioSoundInstance/gainNode:property\"}}{{/crossLink}}.\n\t\t\t * @property panNode\n\t\t\t * @type {AudioPannerNode}\n\t\t\t * @since 0.4.0\n\t\t\t */\n\t\t\tthis.panNode = s.context.createPanner();\n\t\t\tthis.panNode.panningModel = s._panningModel;\n\t\t\tthis.panNode.connect(this.gainNode);\n\t\t\tthis._updatePan();\n\t\n\t\t\t/**\n\t\t\t * NOTE this is only intended for use by advanced users.\n\t\t\t * <br />sourceNode is the audio source. Connected to WebAudioSoundInstance {{#crossLink \"WebAudioSoundInstance/panNode:property\"}}{{/crossLink}}.\n\t\t\t * @property sourceNode\n\t\t\t * @type {AudioNode}\n\t\t\t * @since 0.4.0\n\t\t\t *\n\t\t\t */\n\t\t\tthis.sourceNode = null;\n\t\n\t\n\t// private properties\n\t\t\t/**\n\t\t\t * Timeout that is created internally to handle sound playing to completion.\n\t\t\t * Stored so we can remove it when stop, pause, or cleanup are called\n\t\t\t * @property _soundCompleteTimeout\n\t\t\t * @type {timeoutVariable}\n\t\t\t * @default null\n\t\t\t * @protected\n\t\t\t * @since 0.4.0\n\t\t\t */\n\t\t\tthis._soundCompleteTimeout = null;\n\t\n\t\t\t/**\n\t\t\t * NOTE this is only intended for use by very advanced users.\n\t\t\t * _sourceNodeNext is the audio source for the next loop, inserted in a look ahead approach to allow for smooth\n\t\t\t * looping. Connected to {{#crossLink \"WebAudioSoundInstance/gainNode:property\"}}{{/crossLink}}.\n\t\t\t * @property _sourceNodeNext\n\t\t\t * @type {AudioNode}\n\t\t\t * @default null\n\t\t\t * @protected\n\t\t\t * @since 0.4.1\n\t\t\t *\n\t\t\t */\n\t\t\tthis._sourceNodeNext = null;\n\t\n\t\t\t/**\n\t\t\t * Time audio started playback, in seconds. Used to handle set position, get position, and resuming from paused.\n\t\t\t * @property _playbackStartTime\n\t\t\t * @type {Number}\n\t\t\t * @default 0\n\t\t\t * @protected\n\t\t\t * @since 0.4.0\n\t\t\t */\n\t\t\tthis._playbackStartTime = 0;\n\t\n\t\t\t// Proxies, make removing listeners easier.\n\t\t\tthis._endedHandler = createjs.proxy(this._handleSoundComplete, this);\n\t\t};\n\t\tvar p = createjs.extend(WebAudioSoundInstance, createjs.AbstractSoundInstance);\n\t\tvar s = WebAudioSoundInstance;\n\t\n\t\t// TODO: deprecated\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\n\t\n\t\t/**\n\t\t * Note this is only intended for use by advanced users.\n\t\t * <br />Audio context used to create nodes.  This is and needs to be the same context used by {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.\n\t  \t * @property context\n\t\t * @type {AudioContext}\n\t\t * @static\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.context = null;\n\t\n\t\t/**\n\t\t * Note this is only intended for use by advanced users.\n\t\t * <br />The scratch buffer that will be assigned to the buffer property of a source node on close.  \n\t\t * This is and should be the same scratch buffer referenced by {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.\n\t  \t * @property _scratchBuffer\n\t\t * @type {AudioBufferSourceNode}\n\t\t * @static\n\t\t */\n\t\ts._scratchBuffer = null;\n\t\n\t\t/**\n\t\t * Note this is only intended for use by advanced users.\n\t\t * <br /> Audio node from WebAudioPlugin that sequences to <code>context.destination</code>\n\t\t * @property destinationNode\n\t\t * @type {AudioNode}\n\t\t * @static\n\t\t * @since 0.6.0\n\t\t */\n\t\ts.destinationNode = null;\n\t\n\t\t/**\n\t\t * Value to set panning model to equal power for WebAudioSoundInstance.  Can be \"equalpower\" or 0 depending on browser implementation.\n\t\t * @property _panningModel\n\t\t * @type {Number / String}\n\t\t * @protected\n\t\t * @static\n\t\t * @since 0.6.0\n\t\t */\n\t\ts._panningModel = \"equalpower\";\n\t\n\t\n\t// Public methods\n\t\tp.destroy = function() {\n\t\t\tthis.AbstractSoundInstance_destroy();\n\t\n\t\t\tthis.panNode.disconnect(0);\n\t\t\tthis.panNode = null;\n\t\t\tthis.gainNode.disconnect(0);\n\t\t\tthis.gainNode = null;\n\t\t};\n\t\n\t\tp.toString = function () {\n\t\t\treturn \"[WebAudioSoundInstance]\";\n\t\t};\n\t\n\t\n\t// Private Methods\n\t\tp._updatePan = function() {\n\t\t\tthis.panNode.setPosition(this._pan, 0, -0.5);\n\t\t\t// z need to be -0.5 otherwise the sound only plays in left, right, or center\n\t\t};\n\t\n\t\tp._removeLooping = function(value) {\n\t\t\tthis._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);\n\t\t};\n\t\n\t\tp._addLooping = function(value) {\n\t\t\tif (this.playState != createjs.Sound.PLAY_SUCCEEDED) { return; }\n\t\t\tthis._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0);\n\t\t};\n\t\n\t\tp._setDurationFromSource = function () {\n\t\t\tthis._duration = this.playbackResource.duration * 1000;\n\t\t};\n\t\n\t\tp._handleCleanUp = function () {\n\t\t\tif (this.sourceNode && this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\t\tthis.sourceNode = this._cleanUpAudioNode(this.sourceNode);\n\t\t\t\tthis._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);\n\t\t\t}\n\t\n\t\t\tif (this.gainNode.numberOfOutputs != 0) {this.gainNode.disconnect(0);}\n\t\t\t// OJR there appears to be a bug that this doesn't always work in webkit (Chrome and Safari). According to the documentation, this should work.\n\t\n\t\t\tclearTimeout(this._soundCompleteTimeout);\n\t\n\t\t\tthis._playbackStartTime = 0;\t// This is used by getPosition\n\t\t};\n\t\n\t\t/**\n\t\t * Turn off and disconnect an audioNode, then set reference to null to release it for garbage collection\n\t\t * @method _cleanUpAudioNode\n\t\t * @param audioNode\n\t\t * @return {audioNode}\n\t\t * @protected\n\t\t * @since 0.4.1\n\t\t */\n\t\tp._cleanUpAudioNode = function(audioNode) {\n\t\t\tif(audioNode) {\n\t\t\t\taudioNode.stop(0);\n\t\t\t\taudioNode.disconnect(0);\n\t\t\t\t// necessary to prevent leak on iOS Safari 7-9. will throw in almost all other\n\t\t\t\t// browser implementations.\n\t\t\t\ttry { audioNode.buffer = s._scratchBuffer; } catch(e) {}\n\t\t\t\taudioNode = null;\n\t\t\t}\n\t\t\treturn audioNode;\n\t\t};\n\t\n\t\tp._handleSoundReady = function (event) {\n\t\t\tthis.gainNode.connect(s.destinationNode);  // this line can cause a memory leak.  Nodes need to be disconnected from the audioDestination or any sequence that leads to it.\n\t\n\t\t\tvar dur = this._duration * 0.001;\n\t\t\tvar pos = this._position * 0.001;\n\t\t\tif (pos > dur) {pos = dur;}\n\t\t\tthis.sourceNode = this._createAndPlayAudioNode((s.context.currentTime - dur), pos);\n\t\t\tthis._playbackStartTime = this.sourceNode.startTime - pos;\n\t\n\t\t\tthis._soundCompleteTimeout = setTimeout(this._endedHandler, (dur - pos) * 1000);\n\t\n\t\t\tif(this._loop != 0) {\n\t\t\t\tthis._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0);\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Creates an audio node using the current src and context, connects it to the gain node, and starts playback.\n\t\t * @method _createAndPlayAudioNode\n\t\t * @param {Number} startTime The time to add this to the web audio context, in seconds.\n\t\t * @param {Number} offset The amount of time into the src audio to start playback, in seconds.\n\t\t * @return {audioNode}\n\t\t * @protected\n\t\t * @since 0.4.1\n\t\t */\n\t\tp._createAndPlayAudioNode = function(startTime, offset) {\n\t\t\tvar audioNode = s.context.createBufferSource();\n\t\t\taudioNode.buffer = this.playbackResource;\n\t\t\taudioNode.connect(this.panNode);\n\t\t\tvar dur = this._duration * 0.001;\n\t\t\taudioNode.startTime = startTime + dur;\n\t\t\taudioNode.start(audioNode.startTime, offset+(this._startTime*0.001), dur - offset);\n\t\t\treturn audioNode;\n\t\t};\n\t\n\t\tp._pause = function () {\n\t\t\tthis._position = (s.context.currentTime - this._playbackStartTime) * 1000;  // * 1000 to give milliseconds, lets us restart at same point\n\t\t\tthis.sourceNode = this._cleanUpAudioNode(this.sourceNode);\n\t\t\tthis._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);\n\t\n\t\t\tif (this.gainNode.numberOfOutputs != 0) {this.gainNode.disconnect(0);}\n\t\n\t\t\tclearTimeout(this._soundCompleteTimeout);\n\t\t};\n\t\n\t\tp._resume = function () {\n\t\t\tthis._handleSoundReady();\n\t\t};\n\t\n\t\t/*\n\t\tp._handleStop = function () {\n\t\t\t// web audio does not need to do anything extra\n\t\t};\n\t\t*/\n\t\n\t\tp._updateVolume = function () {\n\t\t\tvar newVolume = this._muted ? 0 : this._volume;\n\t\t  \tif (newVolume != this.gainNode.gain.value) {\n\t\t\t  this.gainNode.gain.value = newVolume;\n\t  \t\t}\n\t\t};\n\t\n\t\tp._calculateCurrentPosition = function () {\n\t\t\treturn ((s.context.currentTime - this._playbackStartTime) * 1000); // pos in seconds * 1000 to give milliseconds\n\t\t};\n\t\n\t\tp._updatePosition = function () {\n\t\t\tthis.sourceNode = this._cleanUpAudioNode(this.sourceNode);\n\t\t\tthis._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);\n\t\t\tclearTimeout(this._soundCompleteTimeout);\n\t\n\t\t\tif (!this._paused) {this._handleSoundReady();}\n\t\t};\n\t\n\t\t// OJR we are using a look ahead approach to ensure smooth looping.\n\t\t// We add _sourceNodeNext to the audio context so that it starts playing even if this callback is delayed.\n\t\t// This technique is described here:  http://www.html5rocks.com/en/tutorials/audio/scheduling/\n\t\t// NOTE the cost of this is that our audio loop may not always match the loop event timing precisely.\n\t\tp._handleLoop = function () {\n\t\t\tthis._cleanUpAudioNode(this.sourceNode);\n\t\t\tthis.sourceNode = this._sourceNodeNext;\n\t\t\tthis._playbackStartTime = this.sourceNode.startTime;\n\t\t\tthis._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0);\n\t\t\tthis._soundCompleteTimeout = setTimeout(this._endedHandler, this._duration);\n\t\t};\n\t\n\t\tp._updateDuration = function () {\n\t\t\tif(this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\t\tthis._pause();\n\t\t\t\tthis._resume();\n\t\t\t}\n\t\t};\n\t\n\t\tcreatejs.WebAudioSoundInstance = createjs.promote(WebAudioSoundInstance, \"AbstractSoundInstance\");\n\t}());\n\t\n\t//##############################################################################\n\t// WebAudioPlugin.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\n\t\t\"use strict\";\n\t\n\t\t/**\n\t\t * Play sounds using Web Audio in the browser. The WebAudioPlugin is currently the default plugin, and will be used\n\t\t * anywhere that it is supported. To change plugin priority, check out the Sound API\n\t\t * {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} method.\n\t\n\t\t * <h4>Known Browser and OS issues for Web Audio</h4>\n\t\t * <b>Firefox 25</b>\n\t\t * <li>\n\t\t *     mp3 audio files do not load properly on all windows machines, reported <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=929969\" target=\"_blank\">here</a>.\n\t\t *     <br />For this reason it is recommended to pass another FireFox-supported type (i.e. ogg) as the default\n\t\t *     extension, until this bug is resolved\n\t\t * </li>\n\t\t *\n\t\t * <b>Webkit (Chrome and Safari)</b>\n\t\t * <li>\n\t\t *     AudioNode.disconnect does not always seem to work.  This can cause the file size to grow over time if you\n\t\t * \t   are playing a lot of audio files.\n\t\t * </li>\n\t\t *\n\t\t * <b>iOS 6 limitations</b>\n\t\t * <ul>\n\t\t *     <li>\n\t\t *         Sound is initially muted and will only unmute through play being called inside a user initiated event\n\t\t *         (touch/click). Please read the mobile playback notes in the the {{#crossLink \"Sound\"}}{{/crossLink}}\n\t\t *         class for a full overview of the limitations, and how to get around them.\n\t\t *     </li>\n\t\t *\t   <li>\n\t\t *\t       A bug exists that will distort un-cached audio when a video element is present in the DOM. You can avoid\n\t\t *\t       this bug by ensuring the audio and video audio share the same sample rate.\n\t\t *\t   </li>\n\t\t * </ul>\n\t\t * @class WebAudioPlugin\n\t\t * @extends AbstractPlugin\n\t\t * @constructor\n\t\t * @since 0.4.0\n\t\t */\n\t\tfunction WebAudioPlugin() {\n\t\t\tthis.AbstractPlugin_constructor();\n\t\n\t\n\t// Private Properties\n\t\t\t/**\n\t\t\t * Value to set panning model to equal power for WebAudioSoundInstance.  Can be \"equalpower\" or 0 depending on browser implementation.\n\t\t\t * @property _panningModel\n\t\t\t * @type {Number / String}\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis._panningModel = s._panningModel;;\n\t\n\t\t\t/**\n\t\t\t * The web audio context, which WebAudio uses to play audio. All nodes that interact with the WebAudioPlugin\n\t\t\t * need to be created within this context.\n\t\t\t * @property context\n\t\t\t * @type {AudioContext}\n\t\t\t */\n\t\t\tthis.context = s.context;\n\t\n\t\t\t/**\n\t\t\t * A DynamicsCompressorNode, which is used to improve sound quality and prevent audio distortion.\n\t\t\t * It is connected to <code>context.destination</code>.\n\t\t\t *\n\t\t\t * Can be accessed by advanced users through createjs.Sound.activePlugin.dynamicsCompressorNode.\n\t\t\t * @property dynamicsCompressorNode\n\t\t\t * @type {AudioNode}\n\t\t\t */\n\t\t\tthis.dynamicsCompressorNode = this.context.createDynamicsCompressor();\n\t\t\tthis.dynamicsCompressorNode.connect(this.context.destination);\n\t\n\t\t\t/**\n\t\t\t * A GainNode for controlling master volume. It is connected to {{#crossLink \"WebAudioPlugin/dynamicsCompressorNode:property\"}}{{/crossLink}}.\n\t\t\t *\n\t\t\t * Can be accessed by advanced users through createjs.Sound.activePlugin.gainNode.\n\t\t\t * @property gainNode\n\t\t\t * @type {AudioGainNode}\n\t\t\t */\n\t\t\tthis.gainNode = this.context.createGain();\n\t\t\tthis.gainNode.connect(this.dynamicsCompressorNode);\n\t\t\tcreatejs.WebAudioSoundInstance.destinationNode = this.gainNode;\n\t\n\t\t\tthis._capabilities = s._capabilities;\n\t\n\t\t\tthis._loaderClass = createjs.WebAudioLoader;\n\t\t\tthis._soundInstanceClass = createjs.WebAudioSoundInstance;\n\t\n\t\t\tthis._addPropsToClasses();\n\t\t}\n\t\tvar p = createjs.extend(WebAudioPlugin, createjs.AbstractPlugin);\n\t\n\t\t// TODO: deprecated\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\n\t\n\t// Static Properties\n\t\tvar s = WebAudioPlugin;\n\t\t/**\n\t\t * The capabilities of the plugin. This is generated via the {{#crossLink \"WebAudioPlugin/_generateCapabilities:method\"}}{{/crossLink}}\n\t\t * method and is used internally.\n\t\t * @property _capabilities\n\t\t * @type {Object}\n\t\t * @default null\n\t\t * @protected\n\t\t * @static\n\t\t */\n\t\ts._capabilities = null;\n\t\n\t\t/**\n\t\t * Value to set panning model to equal power for WebAudioSoundInstance.  Can be \"equalpower\" or 0 depending on browser implementation.\n\t\t * @property _panningModel\n\t\t * @type {Number / String}\n\t\t * @protected\n\t\t * @static\n\t\t */\n\t\ts._panningModel = \"equalpower\";\n\t\n\t\t/**\n\t\t * The web audio context, which WebAudio uses to play audio. All nodes that interact with the WebAudioPlugin\n\t\t * need to be created within this context.\n\t\t *\n\t\t * Advanced users can set this to an existing context, but <b>must</b> do so before they call\n\t\t * {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} or {{#crossLink \"Sound/initializeDefaultPlugins\"}}{{/crossLink}}.\n\t\t *\n\t\t * @property context\n\t\t * @type {AudioContext}\n\t\t * @static\n\t\t */\n\t\ts.context = null;\n\t\n\t\t/**\n\t\t * The scratch buffer that will be assigned to the buffer property of a source node on close.\n\t\t * Works around an iOS Safari bug: https://github.com/CreateJS/SoundJS/issues/102\n\t\t *\n\t\t * Advanced users can set this to an existing source node, but <b>must</b> do so before they call\n\t\t * {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} or {{#crossLink \"Sound/initializeDefaultPlugins\"}}{{/crossLink}}.\n\t\t *\n\t\t * @property _scratchBuffer\n\t\t * @type {AudioBuffer}\n\t\t * @protected\n\t\t * @static\n\t\t */\n\t\t s._scratchBuffer = null;\n\t\n\t\t/**\n\t\t * Indicated whether audio on iOS has been unlocked, which requires a touchend/mousedown event that plays an\n\t\t * empty sound.\n\t\t * @property _unlocked\n\t\t * @type {boolean}\n\t\t * @since 0.6.2\n\t\t * @private\n\t\t */\n\t\ts._unlocked = false;\n\t\n\t\n\t// Static Public Methods\n\t\t/**\n\t\t * Determine if the plugin can be used in the current browser/OS.\n\t\t * @method isSupported\n\t\t * @return {Boolean} If the plugin can be initialized.\n\t\t * @static\n\t\t */\n\t\ts.isSupported = function () {\n\t\t\t// check if this is some kind of mobile device, Web Audio works with local protocol under PhoneGap and it is unlikely someone is trying to run a local file\n\t\t\tvar isMobilePhoneGap = createjs.BrowserDetect.isIOS || createjs.BrowserDetect.isAndroid || createjs.BrowserDetect.isBlackberry;\n\t\t\t// OJR isMobile may be redundant with _isFileXHRSupported available.  Consider removing.\n\t\t\tif (location.protocol == \"file:\" && !isMobilePhoneGap && !this._isFileXHRSupported()) { return false; }  // Web Audio requires XHR, which is not usually available locally\n\t\t\ts._generateCapabilities();\n\t\t\tif (s.context == null) {return false;}\n\t\t\treturn true;\n\t\t};\n\t\n\t\t/**\n\t\t * Plays an empty sound in the web audio context.  This is used to enable web audio on iOS devices, as they\n\t\t * require the first sound to be played inside of a user initiated event (touch/click).  This is called when\n\t\t * {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} is initialized (by Sound {{#crossLink \"Sound/initializeDefaultPlugins\"}}{{/crossLink}}\n\t\t * for example).\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *     function handleTouch(event) {\n\t\t *         createjs.WebAudioPlugin.playEmptySound();\n\t\t *     }\n\t\t *\n\t\t * @method playEmptySound\n\t\t * @static\n\t\t * @since 0.4.1\n\t\t */\n\t\ts.playEmptySound = function() {\n\t\t\tif (s.context == null) {return;}\n\t\t\tvar source = s.context.createBufferSource();\n\t\t\tsource.buffer = s._scratchBuffer;\n\t\t\tsource.connect(s.context.destination);\n\t\t\tsource.start(0, 0, 0);\n\t\t};\n\t\n\t\n\t// Static Private Methods\n\t\t/**\n\t\t * Determine if XHR is supported, which is necessary for web audio.\n\t\t * @method _isFileXHRSupported\n\t\t * @return {Boolean} If XHR is supported.\n\t\t * @since 0.4.2\n\t\t * @protected\n\t\t * @static\n\t\t */\n\t\ts._isFileXHRSupported = function() {\n\t\t\t// it's much easier to detect when something goes wrong, so let's start optimistically\n\t\t\tvar supported = true;\n\t\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\ttry {\n\t\t\t\txhr.open(\"GET\", \"WebAudioPluginTest.fail\", false); // loading non-existant file triggers 404 only if it could load (synchronous call)\n\t\t\t} catch (error) {\n\t\t\t\t// catch errors in cases where the onerror is passed by\n\t\t\t\tsupported = false;\n\t\t\t\treturn supported;\n\t\t\t}\n\t\t\txhr.onerror = function() { supported = false; }; // cause irrelevant\n\t\t\t// with security turned off, we can get empty success results, which is actually a failed read (status code 0?)\n\t\t\txhr.onload = function() { supported = this.status == 404 || (this.status == 200 || (this.status == 0 && this.response != \"\")); };\n\t\t\ttry {\n\t\t\t\txhr.send();\n\t\t\t} catch (error) {\n\t\t\t\t// catch errors in cases where the onerror is passed by\n\t\t\t\tsupported = false;\n\t\t\t}\n\t\n\t\t\treturn supported;\n\t\t};\n\t\n\t\t/**\n\t\t * Determine the capabilities of the plugin. Used internally. Please see the Sound API {{#crossLink \"Sound/getCapabilities\"}}{{/crossLink}}\n\t\t * method for an overview of plugin capabilities.\n\t\t * @method _generateCapabilities\n\t\t * @static\n\t\t * @protected\n\t\t */\n\t\ts._generateCapabilities = function () {\n\t\t\tif (s._capabilities != null) {return;}\n\t\t\t// Web Audio can be in any formats supported by the audio element, from http://www.w3.org/TR/webaudio/#AudioContext-section\n\t\t\tvar t = document.createElement(\"audio\");\n\t\t\tif (t.canPlayType == null) {return null;}\n\t\n\t\t\tif (s.context == null) {\n\t\t\t\tif (window.AudioContext) {\n\t\t\t\t\ts.context = new AudioContext();\n\t\t\t\t} else if (window.webkitAudioContext) {\n\t\t\t\t\ts.context = new webkitAudioContext();\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (s._scratchBuffer == null) {\n\t\t\t\ts._scratchBuffer = s.context.createBuffer(1, 1, 22050);\n\t\t\t}\n\t\n\t\t\ts._compatibilitySetUp();\n\t\n\t\t\t// Listen for document level clicks to unlock WebAudio on iOS. See the _unlock method.\n\t\t\tif (\"ontouchstart\" in window && s.context.state != \"running\") {\n\t\t\t\ts._unlock(); // When played inside of a touch event, this will enable audio on iOS immediately.\n\t\t\t\tdocument.addEventListener(\"mousedown\", s._unlock, true);\n\t\t\t\tdocument.addEventListener(\"touchend\", s._unlock, true);\n\t\t\t}\n\t\n\t\n\t\t\ts._capabilities = {\n\t\t\t\tpanning:true,\n\t\t\t\tvolume:true,\n\t\t\t\ttracks:-1\n\t\t\t};\n\t\n\t\t\t// determine which extensions our browser supports for this plugin by iterating through Sound.SUPPORTED_EXTENSIONS\n\t\t\tvar supportedExtensions = createjs.Sound.SUPPORTED_EXTENSIONS;\n\t\t\tvar extensionMap = createjs.Sound.EXTENSION_MAP;\n\t\t\tfor (var i = 0, l = supportedExtensions.length; i < l; i++) {\n\t\t\t\tvar ext = supportedExtensions[i];\n\t\t\t\tvar playType = extensionMap[ext] || ext;\n\t\t\t\ts._capabilities[ext] = (t.canPlayType(\"audio/\" + ext) != \"no\" && t.canPlayType(\"audio/\" + ext) != \"\") || (t.canPlayType(\"audio/\" + playType) != \"no\" && t.canPlayType(\"audio/\" + playType) != \"\");\n\t\t\t}  // OJR another way to do this might be canPlayType:\"m4a\", codex: mp4\n\t\n\t\t\t// 0=no output, 1=mono, 2=stereo, 4=surround, 6=5.1 surround.\n\t\t\t// See http://www.w3.org/TR/webaudio/#AudioChannelSplitter for more details on channels.\n\t\t\tif (s.context.destination.numberOfChannels < 2) {\n\t\t\t\ts._capabilities.panning = false;\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Set up compatibility if only deprecated web audio calls are supported.\n\t\t * See http://www.w3.org/TR/webaudio/#DeprecationNotes\n\t\t * Needed so we can support new browsers that don't support deprecated calls (Firefox) as well as old browsers that\n\t\t * don't support new calls.\n\t\t *\n\t\t * @method _compatibilitySetUp\n\t\t * @static\n\t\t * @protected\n\t\t * @since 0.4.2\n\t\t */\n\t\ts._compatibilitySetUp = function() {\n\t\t\ts._panningModel = \"equalpower\";\n\t\t\t//assume that if one new call is supported, they all are\n\t\t\tif (s.context.createGain) { return; }\n\t\n\t\t\t// simple name change, functionality the same\n\t\t\ts.context.createGain = s.context.createGainNode;\n\t\n\t\t\t// source node, add to prototype\n\t\t\tvar audioNode = s.context.createBufferSource();\n\t\t\taudioNode.__proto__.start = audioNode.__proto__.noteGrainOn;\t// note that noteGrainOn requires all 3 parameters\n\t\t\taudioNode.__proto__.stop = audioNode.__proto__.noteOff;\n\t\n\t\t\t// panningModel\n\t\t\ts._panningModel = 0;\n\t\t};\n\t\n\t\t/**\n\t\t * Try to unlock audio on iOS. This is triggered from either WebAudio plugin setup (which will work if inside of\n\t\t * a `mousedown` or `touchend` event stack), or the first document touchend/mousedown event. If it fails (touchend\n\t\t * will fail if the user presses for too long, indicating a scroll event instead of a click event.\n\t\t *\n\t\t * Note that earlier versions of iOS supported `touchstart` for this, but iOS9 removed this functionality. Adding\n\t\t * a `touchstart` event to support older platforms may preclude a `mousedown` even from getting fired on iOS9, so we\n\t\t * stick with `mousedown` and `touchend`.\n\t\t * @method _unlock\n\t\t * @since 0.6.2\n\t\t * @private\n\t\t */\n\t\ts._unlock = function() {\n\t\t\tif (s._unlocked) { return; }\n\t\t\ts.playEmptySound();\n\t\t\tif (s.context.state == \"running\") {\n\t\t\t\tdocument.removeEventListener(\"mousedown\", s._unlock, true);\n\t\t\t\tdocument.removeEventListener(\"touchend\", s._unlock, true);\n\t\t\t\ts._unlocked = true;\n\t\t\t}\n\t\t};\n\t\n\t\n\t// Public Methods\n\t\tp.toString = function () {\n\t\t\treturn \"[WebAudioPlugin]\";\n\t\t};\n\t\n\t\n\t// Private Methods\n\t\t/**\n\t\t * Set up needed properties on supported classes WebAudioSoundInstance and WebAudioLoader.\n\t\t * @method _addPropsToClasses\n\t\t * @static\n\t\t * @protected\n\t\t * @since 0.6.0\n\t\t */\n\t\tp._addPropsToClasses = function() {\n\t\t\tvar c = this._soundInstanceClass;\n\t\t\tc.context = this.context;\n\t\t\tc._scratchBuffer = s._scratchBuffer;\n\t\t\tc.destinationNode = this.gainNode;\n\t\t\tc._panningModel = this._panningModel;\n\t\n\t\t\tthis._loaderClass.context = this.context;\n\t\t};\n\t\n\t\n\t\t/**\n\t\t * Set the gain value for master audio. Should not be called externally.\n\t\t * @method _updateVolume\n\t\t * @protected\n\t\t */\n\t\tp._updateVolume = function () {\n\t\t\tvar newVolume = createjs.Sound._masterMute ? 0 : this._volume;\n\t\t\tif (newVolume != this.gainNode.gain.value) {\n\t\t\t\tthis.gainNode.gain.value = newVolume;\n\t\t\t}\n\t\t};\n\t\n\t\tcreatejs.WebAudioPlugin = createjs.promote(WebAudioPlugin, \"AbstractPlugin\");\n\t}());\n\t\n\t//##############################################################################\n\t// HTMLAudioTagPool.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\t/**\n\t\t * HTMLAudioTagPool is an object pool for HTMLAudio tag instances.\n\t\t * @class HTMLAudioTagPool\n\t\t * @param {String} src The source of the channel.\n\t\t * @protected\n\t\t */\n\t\tfunction HTMLAudioTagPool() {\n\t\t\t\tthrow \"HTMLAudioTagPool cannot be instantiated\";\n\t\t}\n\t\n\t\tvar s = HTMLAudioTagPool;\n\t\n\t// Static Properties\n\t\t/**\n\t\t * A hash lookup of each base audio tag, indexed by the audio source.\n\t\t * @property _tags\n\t\t * @type {{}}\n\t\t * @static\n\t\t * @protected\n\t\t */\n\t\ts._tags = {};\n\t\n\t\t/**\n\t\t * An object pool for html audio tags\n\t\t * @property _tagPool\n\t\t * @type {TagPool}\n\t\t * @static\n\t\t * @protected\n\t\t */\n\t\ts._tagPool = new TagPool();\n\t\n\t\t/**\n\t\t * A hash lookup of if a base audio tag is available, indexed by the audio source\n\t\t * @property _tagsUsed\n\t\t * @type {{}}\n\t\t * @protected\n\t\t * @static\n\t\t */\n\t\ts._tagUsed = {};\n\t\n\t// Static Methods\n\t\t/**\n\t\t  * Get an audio tag with the given source.\n\t\t  * @method get\n\t\t  * @param {String} src The source file used by the audio tag.\n\t\t  * @static\n\t\t  */\n\t\t s.get = function (src) {\n\t\t\tvar t = s._tags[src];\n\t\t\tif (t == null) {\n\t\t\t\t// create new base tag\n\t\t\t\tt = s._tags[src] = s._tagPool.get();\n\t\t\t\tt.src = src;\n\t\t\t} else {\n\t\t\t\t// get base or pool\n\t\t\t\tif (s._tagUsed[src]) {\n\t\t\t\t\tt = s._tagPool.get();\n\t\t\t\t\tt.src = src;\n\t\t\t\t} else {\n\t\t\t\t\ts._tagUsed[src] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn t;\n\t\t };\n\t\n\t\t /**\n\t\t  * Return an audio tag to the pool.\n\t\t  * @method set\n\t\t  * @param {String} src The source file used by the audio tag.\n\t\t  * @param {HTMLElement} tag Audio tag to set.\n\t\t  * @static\n\t\t  */\n\t\t s.set = function (src, tag) {\n\t\t\t // check if this is base, if yes set boolean if not return to pool\n\t\t\t if(tag == s._tags[src]) {\n\t\t\t\t s._tagUsed[src] = false;\n\t\t\t } else {\n\t\t\t\t s._tagPool.set(tag);\n\t\t\t }\n\t\t };\n\t\n\t\t/**\n\t\t * Delete stored tag reference and return them to pool. Note that if the tag reference does not exist, this will fail.\n\t\t * @method remove\n\t\t * @param {String} src The source for the tag\n\t\t * @return {Boolean} If the TagPool was deleted.\n\t\t * @static\n\t\t */\n\t\ts.remove = function (src) {\n\t\t\tvar tag = s._tags[src];\n\t\t\tif (tag == null) {return false;}\n\t\t\ts._tagPool.set(tag);\n\t\t\tdelete(s._tags[src]);\n\t\t\tdelete(s._tagUsed[src]);\n\t\t\treturn true;\n\t\t};\n\t\n\t\t/**\n\t\t * Gets the duration of the src audio in milliseconds\n\t\t * @method getDuration\n\t\t * @param {String} src The source file used by the audio tag.\n\t\t * @return {Number} Duration of src in milliseconds\n\t\t * @static\n\t\t */\n\t\ts.getDuration= function (src) {\n\t\t\tvar t = s._tags[src];\n\t\t\tif (t == null || !t.duration) {return 0;}\t// OJR duration is NaN if loading has not completed\n\t\t\treturn t.duration * 1000;\n\t\t};\n\t\n\t\tcreatejs.HTMLAudioTagPool = HTMLAudioTagPool;\n\t\n\t\n\t// ************************************************************************************************************\n\t\t/**\n\t\t * The TagPool is an object pool for HTMLAudio tag instances.\n\t\t * #class TagPool\n\t\t * @param {String} src The source of the channel.\n\t\t * @protected\n\t\t */\n\t\tfunction TagPool(src) {\n\t\n\t// Public Properties\n\t\t\t/**\n\t\t\t * A list of all available tags in the pool.\n\t\t\t * #property tags\n\t\t\t * @type {Array}\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis._tags = [];\n\t\t};\n\t\n\t\tvar p = TagPool.prototype;\n\t\tp.constructor = TagPool;\n\t\n\t\n\t// Public Methods\n\t\t/**\n\t\t * Get an HTMLAudioElement for immediate playback. This takes it out of the pool.\n\t\t * #method get\n\t\t * @return {HTMLAudioElement} An HTML audio tag.\n\t\t */\n\t\tp.get = function () {\n\t\t\tvar tag;\n\t\t\tif (this._tags.length == 0) {\n\t\t\t\ttag = this._createTag();\n\t\t\t} else {\n\t\t\t\ttag = this._tags.pop();\n\t\t\t}\n\t\t\tif (tag.parentNode == null) {document.body.appendChild(tag);}\n\t\t\treturn tag;\n\t\t};\n\t\n\t\t/**\n\t\t * Put an HTMLAudioElement back in the pool for use.\n\t\t * #method set\n\t\t * @param {HTMLAudioElement} tag HTML audio tag\n\t\t */\n\t\tp.set = function (tag) {\n\t\t\t// OJR this first step seems unnecessary\n\t\t\tvar index = createjs.indexOf(this._tags, tag);\n\t\t\tif (index == -1) {\n\t\t\t\tthis._tags.src = null;\n\t\t\t\tthis._tags.push(tag);\n\t\t\t}\n\t\t};\n\t\n\t\tp.toString = function () {\n\t\t\treturn \"[TagPool]\";\n\t\t};\n\t\n\t\n\t// Private Methods\n\t\t/**\n\t\t * Create an HTML audio tag.\n\t\t * #method _createTag\n\t\t * @param {String} src The source file to set for the audio tag.\n\t\t * @return {HTMLElement} Returns an HTML audio tag.\n\t\t * @protected\n\t\t */\n\t\tp._createTag = function () {\n\t\t\tvar tag = document.createElement(\"audio\");\n\t\t\ttag.autoplay = false;\n\t\t\ttag.preload = \"none\";\n\t\t\t//LM: Firefox fails when this the preload=\"none\" for other tags, but it needs to be \"none\" to ensure PreloadJS works.\n\t\t\treturn tag;\n\t\t};\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// HTMLAudioSoundInstance.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\t\"use strict\";\n\t\n\t\t/**\n\t\t * HTMLAudioSoundInstance extends the base api of {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} and is used by\n\t\t * {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.\n\t\t *\n\t\t * @param {String} src The path to and file name of the sound.\n\t\t * @param {Number} startTime Audio sprite property used to apply an offset, in milliseconds.\n\t\t * @param {Number} duration Audio sprite property used to set the time the clip plays for, in milliseconds.\n\t\t * @param {Object} playbackResource Any resource needed by plugin to support audio playback.\n\t\t * @class HTMLAudioSoundInstance\n\t\t * @extends AbstractSoundInstance\n\t\t * @constructor\n\t\t */\n\t\tfunction HTMLAudioSoundInstance(src, startTime, duration, playbackResource) {\n\t\t\tthis.AbstractSoundInstance_constructor(src, startTime, duration, playbackResource);\n\t\n\t\n\t// Private Properties\n\t\t\tthis._audioSpriteStopTime = null;\n\t\t\tthis._delayTimeoutId = null;\n\t\n\t\t\t// Proxies, make removing listeners easier.\n\t\t\tthis._endedHandler = createjs.proxy(this._handleSoundComplete, this);\n\t\t\tthis._readyHandler = createjs.proxy(this._handleTagReady, this);\n\t\t\tthis._stalledHandler = createjs.proxy(this._playFailed, this);\n\t\t\tthis._audioSpriteEndHandler = createjs.proxy(this._handleAudioSpriteLoop, this);\n\t\t\tthis._loopHandler = createjs.proxy(this._handleSoundComplete, this);\n\t\n\t\t\tif (duration) {\n\t\t\t\tthis._audioSpriteStopTime = (startTime + duration) * 0.001;\n\t\t\t} else {\n\t\t\t\tthis._duration = createjs.HTMLAudioTagPool.getDuration(this.src);\n\t\t\t}\n\t\t}\n\t\tvar p = createjs.extend(HTMLAudioSoundInstance, createjs.AbstractSoundInstance);\n\t\n\t\t// TODO: deprecated\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\n\t\n\t// Public Methods\n\t\t/**\n\t\t * Called by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master volume.\n\t\t * undoc'd because it is not meant to be used outside of Sound\n\t\t * #method setMasterVolume\n\t\t * @param value\n\t\t */\n\t\tp.setMasterVolume = function (value) {\n\t\t\tthis._updateVolume();\n\t\t};\n\t\n\t\t/**\n\t\t * Called by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master mute.\n\t\t * undoc'd because it is not meant to be used outside of Sound\n\t\t * #method setMasterMute\n\t\t * @param value\n\t\t */\n\t\tp.setMasterMute = function (isMuted) {\n\t\t\tthis._updateVolume();\n\t\t};\n\t\n\t\tp.toString = function () {\n\t\t\treturn \"[HTMLAudioSoundInstance]\";\n\t\t};\n\t\n\t//Private Methods\n\t\tp._removeLooping = function() {\n\t\t\tif(this._playbackResource == null) {return;}\n\t\t\tthis._playbackResource.loop = false;\n\t\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t\t};\n\t\n\t\tp._addLooping = function() {\n\t\t\tif(this._playbackResource == null  || this._audioSpriteStopTime) {return;}\n\t\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t\t\tthis._playbackResource.loop = true;\n\t\t};\n\t\n\t\tp._handleCleanUp = function () {\n\t\t\tvar tag = this._playbackResource;\n\t\t\tif (tag != null) {\n\t\t\t\ttag.pause();\n\t\t\t\ttag.loop = false;\n\t\t\t\ttag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false);\n\t\t\t\ttag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, false);\n\t\t\t\ttag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, false);\n\t\t\t\ttag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t\t\t\ttag.removeEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);\n\t\n\t\t\t\ttry {\n\t\t\t\t\ttag.currentTime = this._startTime;\n\t\t\t\t} catch (e) {\n\t\t\t\t} // Reset Position\n\t\t\t\tcreatejs.HTMLAudioTagPool.set(this.src, tag);\n\t\t\t\tthis._playbackResource = null;\n\t\t\t}\n\t\t};\n\t\n\t\tp._beginPlaying = function (playProps) {\n\t\t\tthis._playbackResource = createjs.HTMLAudioTagPool.get(this.src);\n\t\t\treturn this.AbstractSoundInstance__beginPlaying(playProps);\n\t\t};\n\t\n\t\tp._handleSoundReady = function (event) {\n\t\t\tif (this._playbackResource.readyState !== 4) {\n\t\t\t\tvar tag = this._playbackResource;\n\t\t\t\ttag.addEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, false);\n\t\t\t\ttag.addEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, false);\n\t\t\t\ttag.preload = \"auto\"; // This is necessary for Firefox, as it won't ever \"load\" until this is set.\n\t\t\t\ttag.load();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tthis._updateVolume();\n\t\t\tthis._playbackResource.currentTime = (this._startTime + this._position) * 0.001;\n\t\t\tif (this._audioSpriteStopTime) {\n\t\t\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);\n\t\t\t} else {\n\t\t\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false);\n\t\t\t\tif(this._loop != 0) {\n\t\t\t\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t\t\t\t\tthis._playbackResource.loop = true;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tthis._playbackResource.play();\n\t\t};\n\t\n\t\t/**\n\t\t * Used to handle when a tag is not ready for immediate playback when it is returned from the HTMLAudioTagPool.\n\t\t * @method _handleTagReady\n\t\t * @param event\n\t\t * @protected\n\t\t */\n\t\tp._handleTagReady = function (event) {\n\t\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, false);\n\t\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, false);\n\t\n\t\t\tthis._handleSoundReady();\n\t\t};\n\t\n\t\tp._pause = function () {\n\t\t\tthis._playbackResource.pause();\n\t\t};\n\t\n\t\tp._resume = function () {\n\t\t\tthis._playbackResource.play();\n\t\t};\n\t\n\t\tp._updateVolume = function () {\n\t\t\tif (this._playbackResource != null) {\n\t\t\t\tvar newVolume = (this._muted || createjs.Sound._masterMute) ? 0 : this._volume * createjs.Sound._masterVolume;\n\t\t\t\tif (newVolume != this._playbackResource.volume) {this._playbackResource.volume = newVolume;}\n\t\t\t}\n\t\t};\n\t\n\t\tp._calculateCurrentPosition = function() {\n\t\t\treturn (this._playbackResource.currentTime * 1000) - this._startTime;\n\t\t};\n\t\n\t\tp._updatePosition = function() {\n\t\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._handleSetPositionSeek, false);\n\t\t\ttry {\n\t\t\t\tthis._playbackResource.currentTime = (this._position + this._startTime) * 0.001;\n\t\t\t} catch (error) { // Out of range\n\t\t\t\tthis._handleSetPositionSeek(null);\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Used to enable setting position, as we need to wait for that seek to be done before we add back our loop handling seek listener\n\t\t * @method _handleSetPositionSeek\n\t\t * @param event\n\t\t * @protected\n\t\t */\n\t\tp._handleSetPositionSeek = function(event) {\n\t\t\tif (this._playbackResource == null) { return; }\n\t\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._handleSetPositionSeek, false);\n\t\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t\t};\n\t\n\t\t/**\n\t\t * Timer used to loop audio sprites.\n\t\t * NOTE because of the inaccuracies in the timeupdate event (15 - 250ms) and in setting the tag to the desired timed\n\t\t * (up to 300ms), it is strongly recommended not to loop audio sprites with HTML Audio if smooth looping is desired\n\t\t *\n\t\t * @method _handleAudioSpriteLoop\n\t\t * @param event\n\t\t * @private\n\t\t */\n\t\tp._handleAudioSpriteLoop = function (event) {\n\t\t\tif(this._playbackResource.currentTime <= this._audioSpriteStopTime) {return;}\n\t\t\tthis._playbackResource.pause();\n\t\t\tif(this._loop == 0) {\n\t\t\t\tthis._handleSoundComplete(null);\n\t\t\t} else {\n\t\t\t\tthis._position = 0;\n\t\t\t\tthis._loop--;\n\t\t\t\tthis._playbackResource.currentTime = this._startTime * 0.001;\n\t\t\t\tif(!this._paused) {this._playbackResource.play();}\n\t\t\t\tthis._sendEvent(\"loop\");\n\t\t\t}\n\t\t};\n\t\n\t\t// NOTE with this approach audio will loop as reliably as the browser allows\n\t\t// but we could end up sending the loop event after next loop playback begins\n\t\tp._handleLoop = function (event) {\n\t\t\tif(this._loop == 0) {\n\t\t\t\tthis._playbackResource.loop = false;\n\t\t\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t\t\t}\n\t\t};\n\t\n\t\tp._updateStartTime = function () {\n\t\t\tthis._audioSpriteStopTime = (this._startTime + this._duration) * 0.001;\n\t\n\t\t\tif(this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false);\n\t\t\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);\n\t\t\t}\n\t\t};\n\t\n\t\tp._updateDuration = function () {\n\t\t\tthis._audioSpriteStopTime = (this._startTime + this._duration) * 0.001;\n\t\n\t\t\tif(this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false);\n\t\t\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);\n\t\t\t}\n\t\t};\n\t\n\t\tp._setDurationFromSource = function () {\n\t\t\tthis._duration = createjs.HTMLAudioTagPool.getDuration(this.src);\n\t\t\tthis._playbackResource = null;\n\t\t};\n\t\n\t\tcreatejs.HTMLAudioSoundInstance = createjs.promote(HTMLAudioSoundInstance, \"AbstractSoundInstance\");\n\t}());\n\t\n\t//##############################################################################\n\t// HTMLAudioPlugin.js\n\t//##############################################################################\n\t\n\t(function () {\n\t\n\t\t\"use strict\";\n\t\n\t\t/**\n\t\t * Play sounds using HTML &lt;audio&gt; tags in the browser. This plugin is the second priority plugin installed\n\t\t * by default, after the {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.  For older browsers that do not support html\n\t\t * audio, include and install the {{#crossLink \"FlashAudioPlugin\"}}{{/crossLink}}.\n\t\t *\n\t\t * <h4>Known Browser and OS issues for HTML Audio</h4>\n\t\t * <b>All browsers</b><br />\n\t\t * Testing has shown in all browsers there is a limit to how many audio tag instances you are allowed.  If you exceed\n\t\t * this limit, you can expect to see unpredictable results. Please use {{#crossLink \"Sound.MAX_INSTANCES\"}}{{/crossLink}} as\n\t\t * a guide to how many total audio tags you can safely use in all browsers.  This issue is primarily limited to IE9.\n\t\t *\n\t     * <b>IE html limitations</b><br />\n\t     * <ul><li>There is a delay in applying volume changes to tags that occurs once playback is started. So if you have\n\t     * muted all sounds, they will all play during this delay until the mute applies internally. This happens regardless of\n\t     * when or how you apply the volume change, as the tag seems to need to play to apply it.</li>\n\t     * <li>MP3 encoding will not always work for audio tags if it's not default.  We've found default encoding with\n\t     * 64kbps works.</li>\n\t\t * <li>Occasionally very short samples will get cut off.</li>\n\t\t * <li>There is a limit to how many audio tags you can load or play at once, which appears to be determined by\n\t\t * hardware and browser settings.  See {{#crossLink \"HTMLAudioPlugin.MAX_INSTANCES\"}}{{/crossLink}} for a safe estimate.\n\t\t * Note that audio sprites can be used as a solution to this issue.</li></ul>\n\t\t *\n\t\t * <b>Safari limitations</b><br />\n\t\t * <ul><li>Safari requires Quicktime to be installed for audio playback.</li></ul>\n\t\t *\n\t\t * <b>iOS 6 limitations</b><br />\n\t\t * <ul><li>can only have one &lt;audio&gt; tag</li>\n\t\t * \t\t<li>can not preload or autoplay the audio</li>\n\t\t * \t\t<li>can not cache the audio</li>\n\t\t * \t\t<li>can not play the audio except inside a user initiated event.</li>\n\t\t *\t\t<li>Note it is recommended to use {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} for iOS (6+)</li>\n\t\t * \t\t<li>audio sprites can be used to mitigate some of these issues and are strongly recommended on iOS</li>\n\t\t * </ul>\n\t\t *\n\t\t * <b>Android Native Browser limitations</b><br />\n\t\t * <ul><li>We have no control over audio volume. Only the user can set volume on their device.</li>\n\t\t *      <li>We can only play audio inside a user event (touch/click).  This currently means you cannot loop sound or use a delay.</li></ul>\n\t\t * <b> Android Chrome 26.0.1410.58 specific limitations</b><br />\n\t\t * <ul> <li>Can only play 1 sound at a time.</li>\n\t\t *      <li>Sound is not cached.</li>\n\t\t *      <li>Sound can only be loaded in a user initiated touch/click event.</li>\n\t\t *      <li>There is a delay before a sound is played, presumably while the src is loaded.</li>\n\t\t * </ul>\n\t\t *\n\t\t * See {{#crossLink \"Sound\"}}{{/crossLink}} for general notes on known issues.\n\t\t *\n\t\t * @class HTMLAudioPlugin\n\t\t * @extends AbstractPlugin\n\t\t * @constructor\n\t\t */\n\t\tfunction HTMLAudioPlugin() {\n\t\t\tthis.AbstractPlugin_constructor();\n\t\n\t\n\t\t// Public Properties\n\t\t\t/**\n\t\t\t * This is no longer needed as we are now using object pooling for tags.\n\t\t\t *\n\t\t\t * <b>NOTE this property only exists as a limitation of HTML audio.</b>\n\t\t\t * @property defaultNumChannels\n\t\t\t * @type {Number}\n\t\t\t * @default 2\n\t\t\t * @since 0.4.0\n\t\t\t * @deprecated\n\t\t\t */\n\t\t\tthis.defaultNumChannels = 2;\n\t\n\t\t\tthis._capabilities = s._capabilities;\n\t\n\t\t\tthis._loaderClass = createjs.SoundLoader;\n\t\t\tthis._soundInstanceClass = createjs.HTMLAudioSoundInstance;\n\t\t}\n\t\n\t\tvar p = createjs.extend(HTMLAudioPlugin, createjs.AbstractPlugin);\n\t\tvar s = HTMLAudioPlugin;\n\t\n\t\t// TODO: deprecated\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\n\t\n\t// Static Properties\n\t\t/**\n\t\t * The maximum number of instances that can be loaded or played. This is a browser limitation, primarily limited to IE9.\n\t\t * The actual number varies from browser to browser (and is largely hardware dependant), but this is a safe estimate.\n\t\t * Audio sprites work around this limitation.\n\t\t * @property MAX_INSTANCES\n\t\t * @type {Number}\n\t\t * @default 30\n\t\t * @static\n\t\t */\n\t\ts.MAX_INSTANCES = 30;\n\t\n\t\t/**\n\t\t * Event constant for the \"canPlayThrough\" event for cleaner code.\n\t\t * @property _AUDIO_READY\n\t\t * @type {String}\n\t\t * @default canplaythrough\n\t\t * @static\n\t\t * @protected\n\t\t */\n\t\ts._AUDIO_READY = \"canplaythrough\";\n\t\n\t\t/**\n\t\t * Event constant for the \"ended\" event for cleaner code.\n\t\t * @property _AUDIO_ENDED\n\t\t * @type {String}\n\t\t * @default ended\n\t\t * @static\n\t\t * @protected\n\t\t */\n\t\ts._AUDIO_ENDED = \"ended\";\n\t\n\t\t/**\n\t\t * Event constant for the \"seeked\" event for cleaner code.  We utilize this event for maintaining loop events.\n\t\t * @property _AUDIO_SEEKED\n\t\t * @type {String}\n\t\t * @default seeked\n\t\t * @static\n\t\t * @protected\n\t\t */\n\t\ts._AUDIO_SEEKED = \"seeked\";\n\t\n\t\t/**\n\t\t * Event constant for the \"stalled\" event for cleaner code.\n\t\t * @property _AUDIO_STALLED\n\t\t * @type {String}\n\t\t * @default stalled\n\t\t * @static\n\t\t * @protected\n\t\t */\n\t\ts._AUDIO_STALLED = \"stalled\";\n\t\n\t\t/**\n\t\t * Event constant for the \"timeupdate\" event for cleaner code.  Utilized for looping audio sprites.\n\t\t * This event callsback ever 15 to 250ms and can be dropped by the browser for performance.\n\t\t * @property _TIME_UPDATE\n\t\t * @type {String}\n\t\t * @default timeupdate\n\t\t * @static\n\t\t * @protected\n\t\t */\n\t\ts._TIME_UPDATE = \"timeupdate\";\n\t\n\t\t/**\n\t\t * The capabilities of the plugin. This is generated via the {{#crossLink \"HTMLAudioPlugin/_generateCapabilities\"}}{{/crossLink}}\n\t\t * method. Please see the Sound {{#crossLink \"Sound/getCapabilities\"}}{{/crossLink}} method for an overview of all\n\t\t * of the available properties.\n\t\t * @property _capabilities\n\t\t * @type {Object}\n\t\t * @protected\n\t\t * @static\n\t\t */\n\t\ts._capabilities = null;\n\t\n\t\n\t// Static Methods\n\t\t/**\n\t\t * Determine if the plugin can be used in the current browser/OS. Note that HTML audio is available in most modern\n\t\t * browsers, but is disabled in iOS because of its limitations.\n\t\t * @method isSupported\n\t\t * @return {Boolean} If the plugin can be initialized.\n\t\t * @static\n\t\t */\n\t\ts.isSupported = function () {\n\t\t\ts._generateCapabilities();\n\t\t\treturn (s._capabilities != null);\n\t\t};\n\t\n\t\t/**\n\t\t * Determine the capabilities of the plugin. Used internally. Please see the Sound API {{#crossLink \"Sound/getCapabilities\"}}{{/crossLink}}\n\t\t * method for an overview of plugin capabilities.\n\t\t * @method _generateCapabilities\n\t\t * @static\n\t\t * @protected\n\t\t */\n\t\ts._generateCapabilities = function () {\n\t\t\tif (s._capabilities != null) {return;}\n\t\t\tvar t = document.createElement(\"audio\");\n\t\t\tif (t.canPlayType == null) {return null;}\n\t\n\t\t\ts._capabilities = {\n\t\t\t\tpanning:false,\n\t\t\t\tvolume:true,\n\t\t\t\ttracks:-1\n\t\t\t};\n\t\n\t\t\t// determine which extensions our browser supports for this plugin by iterating through Sound.SUPPORTED_EXTENSIONS\n\t\t\tvar supportedExtensions = createjs.Sound.SUPPORTED_EXTENSIONS;\n\t\t\tvar extensionMap = createjs.Sound.EXTENSION_MAP;\n\t\t\tfor (var i = 0, l = supportedExtensions.length; i < l; i++) {\n\t\t\t\tvar ext = supportedExtensions[i];\n\t\t\t\tvar playType = extensionMap[ext] || ext;\n\t\t\t\ts._capabilities[ext] = (t.canPlayType(\"audio/\" + ext) != \"no\" && t.canPlayType(\"audio/\" + ext) != \"\") || (t.canPlayType(\"audio/\" + playType) != \"no\" && t.canPlayType(\"audio/\" + playType) != \"\");\n\t\t\t}  // OJR another way to do this might be canPlayType:\"m4a\", codex: mp4\n\t\t};\n\t\n\t\n\t// public methods\n\t\tp.register = function (loadItem) {\n\t\t\tvar tag = createjs.HTMLAudioTagPool.get(loadItem.src);\n\t\t\tvar loader = this.AbstractPlugin_register(loadItem);\n\t\t\tloader.setTag(tag);\n\t\n\t\t\treturn loader;\n\t\t};\n\t\n\t\tp.removeSound = function (src) {\n\t\t\tthis.AbstractPlugin_removeSound(src);\n\t\t\tcreatejs.HTMLAudioTagPool.remove(src);\n\t\t};\n\t\n\t\tp.create = function (src, startTime, duration) {\n\t\t\tvar si = this.AbstractPlugin_create(src, startTime, duration);\n\t\t\tsi.setPlaybackResource(null);\n\t\t\treturn si;\n\t\t};\n\t\n\t\tp.toString = function () {\n\t\t\treturn \"[HTMLAudioPlugin]\";\n\t\t};\n\t\n\t\t// plugin does not support these\n\t\tp.setVolume = p.getVolume = p.setMute = null;\n\t\n\t\n\t\tcreatejs.HTMLAudioPlugin = createjs.promote(HTMLAudioPlugin, \"AbstractPlugin\");\n\t}());\n\t\n\t//##############################################################################\n\t// Tween.js\n\t//##############################################################################\n\t\n\t// TODO: possibly add a END actionsMode (only runs actions that == position)?\n\t// TODO: evaluate a way to decouple paused from tick registration.\n\t\n\t\n\t\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\n\t// constructor\n\t\t/**\n\t\t * A Tween instance tweens properties for a single target. Instance methods can be chained for easy construction and sequencing:\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      target.alpha = 1;\n\t\t *\t    createjs.Tween.get(target)\n\t\t *\t         .wait(500)\n\t\t *\t         .to({alpha:0, visible:false}, 1000)\n\t\t *\t         .call(handleComplete);\n\t\t *\t    function handleComplete() {\n\t\t *\t    \t//Tween complete\n\t\t *\t    }\n\t\t *\n\t\t * Multiple tweens can point to the same instance, however if they affect the same properties there could be unexpected\n\t\t * behaviour. To stop all tweens on an object, use {{#crossLink \"Tween/removeTweens\"}}{{/crossLink}} or pass `override:true`\n\t\t * in the props argument.\n\t\t *\n\t\t *      createjs.Tween.get(target, {override:true}).to({x:100});\n\t\t *\n\t\t * Subscribe to the {{#crossLink \"Tween/change:event\"}}{{/crossLink}} event to get notified when a property of the\n\t\t * target is changed.\n\t\t *\n\t\t *      createjs.Tween.get(target, {override:true}).to({x:100}).addEventListener(\"change\", handleChange);\n\t\t *      function handleChange(event) {\n\t\t *          // The tween changed.\n\t\t *      }\n\t\t *\n\t\t * See the Tween {{#crossLink \"Tween/get\"}}{{/crossLink}} method for additional param documentation.\n\t\t * @class Tween\n\t\t * @param {Object} target The target object that will have its properties tweened.\n\t\t * @param {Object} [props] The configuration properties to apply to this tween instance (ex. `{loop:true, paused:true}`.\n\t\t * All properties default to false. Supported props are:<UL>\n\t\t *    <LI> loop: sets the loop property on this tween.</LI>\n\t\t *    <LI> useTicks: uses ticks for all durations instead of milliseconds.</LI>\n\t\t *    <LI> ignoreGlobalPause: sets the {{#crossLink \"Tween/ignoreGlobalPause:property\"}}{{/crossLink}} property on this tween.</LI>\n\t\t *    <LI> override: if true, `Tween.removeTweens(target)` will be called to remove any other tweens with the same target.\n\t\t *    <LI> paused: indicates whether to start the tween paused.</LI>\n\t\t *    <LI> position: indicates the initial position for this tween.</LI>\n\t\t *    <LI> onChange: specifies a listener for the \"change\" event.</LI>\n\t\t * </UL>\n\t\t * @param {Object} [pluginData] An object containing data for use by installed plugins. See individual\n\t\t * plugins' documentation for details.\n\t\t * @extends EventDispatcher\n\t\t * @constructor\n\t\t */\n\t\tfunction Tween(target, props, pluginData) {\n\t\n\t\t// public properties:\n\t\t\t/**\n\t\t\t * Causes this tween to continue playing when a global pause is active. For example, if TweenJS is using {{#crossLink \"Ticker\"}}{{/crossLink}},\n\t\t\t * then setting this to true (the default) will cause this tween to be paused when <code>Ticker.setPaused(true)</code>\n\t\t\t * is called. See the Tween {{#crossLink \"Tween/tick\"}}{{/crossLink}} method for more info. Can be set via the props\n\t\t\t * parameter.\n\t\t\t * @property ignoreGlobalPause\n\t\t\t * @type Boolean\n\t\t\t * @default false\n\t\t\t */\n\t\t\tthis.ignoreGlobalPause = false;\n\t\t\n\t\t\t/**\n\t\t\t * If true, the tween will loop when it reaches the end. Can be set via the props param.\n\t\t\t * @property loop\n\t\t\t * @type {Boolean}\n\t\t\t * @default false\n\t\t\t */\n\t\t\tthis.loop = false;\n\t\t\n\t\t\t/**\n\t\t\t * Specifies the total duration of this tween in milliseconds (or ticks if useTicks is true).\n\t\t\t * This value is automatically updated as you modify the tween. Changing it directly could result in unexpected\n\t\t\t * behaviour.\n\t\t\t * @property duration\n\t\t\t * @type {Number}\n\t\t\t * @default 0\n\t\t\t * @readonly\n\t\t\t */\n\t\t\tthis.duration = 0;\n\t\t\n\t\t\t/**\n\t\t\t * Allows you to specify data that will be used by installed plugins. Each plugin uses this differently, but in general\n\t\t\t * you specify data by setting it to a property of pluginData with the same name as the plugin class.\n\t\t\t * @example\n\t\t\t *\tmyTween.pluginData.PluginClassName = data;\n\t\t\t * <br/>\n\t\t\t * Also, most plugins support a property to enable or disable them. This is typically the plugin class name followed by \"_enabled\".<br/>\n\t\t\t * @example\n\t\t\t *\tmyTween.pluginData.PluginClassName_enabled = false;<br/>\n\t\t\t * <br/>\n\t\t\t * Some plugins also store instance data in this object, usually in a property named _PluginClassName.\n\t\t\t * See the documentation for individual plugins for more details.\n\t\t\t * @property pluginData\n\t\t\t * @type {Object}\n\t\t\t */\n\t\t\tthis.pluginData = pluginData || {};\n\t\t\n\t\t\t/**\n\t\t\t * The target of this tween. This is the object on which the tweened properties will be changed. Changing\n\t\t\t * this property after the tween is created will not have any effect.\n\t\t\t * @property target\n\t\t\t * @type {Object}\n\t\t\t * @readonly\n\t\t\t */\n\t\t\tthis.target = target;\n\t\t\n\t\t\t/**\n\t\t\t * The current normalized position of the tween. This will always be a value between 0 and duration.\n\t\t\t * Changing this property directly will have no effect.\n\t\t\t * @property position\n\t\t\t * @type {Object}\n\t\t\t * @readonly\n\t\t\t */\n\t\t\tthis.position = null;\n\t\t\n\t\t\t/**\n\t\t\t * Indicates the tween's current position is within a passive wait.\n\t\t\t * @property passive\n\t\t\t * @type {Boolean}\n\t\t\t * @default false\n\t\t\t * @readonly\n\t\t\t **/\n\t\t\tthis.passive = false;\n\t\t\n\t\t// private properties:\t\n\t\t\t/**\n\t\t\t * @property _paused\n\t\t\t * @type {Boolean}\n\t\t\t * @default false\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis._paused = false;\n\t\t\n\t\t\t/**\n\t\t\t * @property _curQueueProps\n\t\t\t * @type {Object}\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis._curQueueProps = {};\n\t\t\n\t\t\t/**\n\t\t\t * @property _initQueueProps\n\t\t\t * @type {Object}\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis._initQueueProps = {};\n\t\t\n\t\t\t/**\n\t\t\t * @property _steps\n\t\t\t * @type {Array}\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis._steps = [];\n\t\t\n\t\t\t/**\n\t\t\t * @property _actions\n\t\t\t * @type {Array}\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis._actions = [];\n\t\t\n\t\t\t/**\n\t\t\t * Raw position.\n\t\t\t * @property _prevPosition\n\t\t\t * @type {Number}\n\t\t\t * @default 0\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis._prevPosition = 0;\n\t\t\n\t\t\t/**\n\t\t\t * The position within the current step.\n\t\t\t * @property _stepPosition\n\t\t\t * @type {Number}\n\t\t\t * @default 0\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis._stepPosition = 0; // this is needed by MovieClip.\n\t\t\n\t\t\t/**\n\t\t\t * Normalized position.\n\t\t\t * @property _prevPos\n\t\t\t * @type {Number}\n\t\t\t * @default -1\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis._prevPos = -1;\n\t\t\n\t\t\t/**\n\t\t\t * @property _target\n\t\t\t * @type {Object}\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis._target = target;\n\t\t\n\t\t\t/**\n\t\t\t * @property _useTicks\n\t\t\t * @type {Boolean}\n\t\t\t * @default false\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis._useTicks = false;\n\t\t\n\t\t\t/**\n\t\t\t * @property _inited\n\t\t\t * @type {boolean}\n\t\t\t * @default false\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis._inited = false;\n\t\t\t\n\t\t\t/**\n\t\t\t * Indicates whether the tween is currently registered with Tween.\n\t\t\t * @property _registered\n\t\t\t * @type {boolean}\n\t\t\t * @default false\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis._registered = false;\n\t\n\t\n\t\t\tif (props) {\n\t\t\t\tthis._useTicks = props.useTicks;\n\t\t\t\tthis.ignoreGlobalPause = props.ignoreGlobalPause;\n\t\t\t\tthis.loop = props.loop;\n\t\t\t\tprops.onChange && this.addEventListener(\"change\", props.onChange);\n\t\t\t\tif (props.override) { Tween.removeTweens(target); }\n\t\t\t}\n\t\t\tif (props&&props.paused) { this._paused=true; }\n\t\t\telse { createjs.Tween._register(this,true); }\n\t\t\tif (props&&props.position!=null) { this.setPosition(props.position, Tween.NONE); }\n\t\n\t\t};\n\t\n\t\tvar p = createjs.extend(Tween, createjs.EventDispatcher);\n\t\n\t\t// TODO: deprecated\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\t\n\t\n\t// static properties\n\t\t/**\n\t\t * Constant defining the none actionsMode for use with setPosition.\n\t\t * @property NONE\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @static\n\t\t */\n\t\tTween.NONE = 0;\n\t\n\t\t/**\n\t\t * Constant defining the loop actionsMode for use with setPosition.\n\t\t * @property LOOP\n\t\t * @type Number\n\t\t * @default 1\n\t\t * @static\n\t\t */\n\t\tTween.LOOP = 1;\n\t\n\t\t/**\n\t\t * Constant defining the reverse actionsMode for use with setPosition.\n\t\t * @property REVERSE\n\t\t * @type Number\n\t\t * @default 2\n\t\t * @static\n\t\t */\n\t\tTween.REVERSE = 2;\n\t\n\t\t/**\n\t\t * Constant returned by plugins to tell the tween not to use default assignment.\n\t\t * @property IGNORE\n\t\t * @type Object\n\t\t * @static\n\t\t */\n\t\tTween.IGNORE = {};\n\t\n\t\t/**\n\t\t * @property _listeners\n\t\t * @type Array[Tween]\n\t\t * @static\n\t\t * @protected\n\t\t */\n\t\tTween._tweens = [];\n\t\n\t\t/**\n\t\t * @property _plugins\n\t\t * @type Object\n\t\t * @static\n\t\t * @protected\n\t\t */\n\t\tTween._plugins = {};\n\t\n\t\n\t// static methods\t\n\t\t/**\n\t\t * Returns a new tween instance. This is functionally identical to using \"new Tween(...)\", but looks cleaner\n\t\t * with the chained syntax of TweenJS.\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *\t\tvar tween = createjs.Tween.get(target);\n\t\t *\n\t\t * @method get\n\t\t * @param {Object} target The target object that will have its properties tweened.\n\t\t * @param {Object} [props] The configuration properties to apply to this tween instance (ex. `{loop:true, paused:true}`).\n\t\t * All properties default to `false`. Supported props are:\n\t\t * <UL>\n\t\t *    <LI> loop: sets the loop property on this tween.</LI>\n\t\t *    <LI> useTicks: uses ticks for all durations instead of milliseconds.</LI>\n\t\t *    <LI> ignoreGlobalPause: sets the {{#crossLink \"Tween/ignoreGlobalPause:property\"}}{{/crossLink}} property on\n\t\t *    this tween.</LI>\n\t\t *    <LI> override: if true, `createjs.Tween.removeTweens(target)` will be called to remove any other tweens with\n\t\t *    the same target.\n\t\t *    <LI> paused: indicates whether to start the tween paused.</LI>\n\t\t *    <LI> position: indicates the initial position for this tween.</LI>\n\t\t *    <LI> onChange: specifies a listener for the {{#crossLink \"Tween/change:event\"}}{{/crossLink}} event.</LI>\n\t\t * </UL>\n\t\t * @param {Object} [pluginData] An object containing data for use by installed plugins. See individual plugins'\n\t\t * documentation for details.\n\t\t * @param {Boolean} [override=false] If true, any previous tweens on the same target will be removed. This is the\n\t\t * same as calling `Tween.removeTweens(target)`.\n\t\t * @return {Tween} A reference to the created tween. Additional chained tweens, method calls, or callbacks can be\n\t\t * applied to the returned tween instance.\n\t\t * @static\n\t\t */\n\t\tTween.get = function(target, props, pluginData, override) {\n\t\t\tif (override) { Tween.removeTweens(target); }\n\t\t\treturn new Tween(target, props, pluginData);\n\t\t};\n\t\n\t\t/**\n\t\t * Advances all tweens. This typically uses the {{#crossLink \"Ticker\"}}{{/crossLink}} class, but you can call it\n\t\t * manually if you prefer to use your own \"heartbeat\" implementation.\n\t\t * @method tick\n\t\t * @param {Number} delta The change in time in milliseconds since the last tick. Required unless all tweens have\n\t\t * `useTicks` set to true.\n\t\t * @param {Boolean} paused Indicates whether a global pause is in effect. Tweens with {{#crossLink \"Tween/ignoreGlobalPause:property\"}}{{/crossLink}}\n\t\t * will ignore this, but all others will pause if this is `true`.\n\t\t * @static\n\t\t */\n\t\tTween.tick = function(delta, paused) {\n\t\t\tvar tweens = Tween._tweens.slice(); // to avoid race conditions.\n\t\t\tfor (var i=tweens.length-1; i>=0; i--) {\n\t\t\t\tvar tween = tweens[i];\n\t\t\t\tif ((paused && !tween.ignoreGlobalPause) || tween._paused) { continue; }\n\t\t\t\ttween.tick(tween._useTicks?1:delta);\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Handle events that result from Tween being used as an event handler. This is included to allow Tween to handle\n\t\t * {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}} events from the createjs {{#crossLink \"Ticker\"}}{{/crossLink}}.\n\t\t * No other events are handled in Tween.\n\t\t * @method handleEvent\n\t\t * @param {Object} event An event object passed in by the {{#crossLink \"EventDispatcher\"}}{{/crossLink}}. Will\n\t\t * usually be of type \"tick\".\n\t\t * @private\n\t\t * @static\n\t\t * @since 0.4.2\n\t\t */\n\t\tTween.handleEvent = function(event) {\n\t\t\tif (event.type == \"tick\") {\n\t\t\t\tthis.tick(event.delta, event.paused);\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Removes all existing tweens for a target. This is called automatically by new tweens if the `override`\n\t\t * property is `true`.\n\t\t * @method removeTweens\n\t\t * @param {Object} target The target object to remove existing tweens from.\n\t\t * @static\n\t\t */\n\t\tTween.removeTweens = function(target) {\n\t\t\tif (!target.tweenjs_count) { return; }\n\t\t\tvar tweens = Tween._tweens;\n\t\t\tfor (var i=tweens.length-1; i>=0; i--) {\n\t\t\t\tvar tween = tweens[i];\n\t\t\t\tif (tween._target == target) {\n\t\t\t\t\ttween._paused = true;\n\t\t\t\t\ttweens.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\ttarget.tweenjs_count = 0;\n\t\t};\n\t\n\t\t/**\n\t\t * Stop and remove all existing tweens.\n\t\t * @method removeAllTweens\n\t\t * @static\n\t\t * @since 0.4.1\n\t\t */\n\t\tTween.removeAllTweens = function() {\n\t\t\tvar tweens = Tween._tweens;\n\t\t\tfor (var i= 0, l=tweens.length; i<l; i++) {\n\t\t\t\tvar tween = tweens[i];\n\t\t\t\ttween._paused = true;\n\t\t\t\ttween.target&&(tween.target.tweenjs_count = 0);\n\t\t\t}\n\t\t\ttweens.length = 0;\n\t\t};\n\t\n\t\t/**\n\t\t * Indicates whether there are any active tweens (and how many) on the target object (if specified) or in general.\n\t\t * @method hasActiveTweens\n\t\t * @param {Object} [target] The target to check for active tweens. If not specified, the return value will indicate\n\t\t * if there are any active tweens on any target.\n\t\t * @return {Boolean} If there are active tweens.\n\t\t * @static\n\t\t */\n\t\tTween.hasActiveTweens = function(target) {\n\t\t\tif (target) { return target.tweenjs_count != null && !!target.tweenjs_count; }\n\t\t\treturn Tween._tweens && !!Tween._tweens.length;\n\t\t};\n\t\n\t\t/**\n\t\t * Installs a plugin, which can modify how certain properties are handled when tweened. See the {{#crossLink \"CSSPlugin\"}}{{/crossLink}}\n\t\t * for an example of how to write TweenJS plugins.\n\t\t * @method installPlugin\n\t\t * @static\n\t\t * @param {Object} plugin The plugin class to install\n\t\t * @param {Array} properties An array of properties that the plugin will handle.\n\t\t */\n\t\tTween.installPlugin = function(plugin, properties) {\n\t\t\tvar priority = plugin.priority;\n\t\t\tif (priority == null) { plugin.priority = priority = 0; }\n\t\t\tfor (var i=0,l=properties.length,p=Tween._plugins;i<l;i++) {\n\t\t\t\tvar n = properties[i];\n\t\t\t\tif (!p[n]) { p[n] = [plugin]; }\n\t\t\t\telse {\n\t\t\t\t\tvar arr = p[n];\n\t\t\t\t\tfor (var j=0,jl=arr.length;j<jl;j++) {\n\t\t\t\t\t\tif (priority < arr[j].priority) { break; }\n\t\t\t\t\t}\n\t\t\t\t\tp[n].splice(j,0,plugin);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Registers or unregisters a tween with the ticking system.\n\t\t * @method _register\n\t\t * @param {Tween} tween The tween instance to register or unregister.\n\t\t * @param {Boolean} value If `true`, the tween is registered. If `false` the tween is unregistered.\n\t\t * @static\n\t\t * @protected\n\t\t */\n\t\tTween._register = function(tween, value) {\n\t\t\tvar target = tween._target;\n\t\t\tvar tweens = Tween._tweens;\n\t\t\tif (value && !tween._registered) {\n\t\t\t\t// TODO: this approach might fail if a dev is using sealed objects in ES5\n\t\t\t\tif (target) { target.tweenjs_count = target.tweenjs_count ? target.tweenjs_count+1 : 1; }\n\t\t\t\ttweens.push(tween);\n\t\t\t\tif (!Tween._inited && createjs.Ticker) { createjs.Ticker.addEventListener(\"tick\", Tween); Tween._inited = true; }\n\t\t\t} else if (!value && tween._registered) {\n\t\t\t\tif (target) { target.tweenjs_count--; }\n\t\t\t\tvar i = tweens.length;\n\t\t\t\twhile (i--) {\n\t\t\t\t\tif (tweens[i] == tween) {\n\t\t\t\t\t\ttweens.splice(i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttween._registered = value;\n\t\t};\n\t\n\t\n\t// events:\n\t\t/**\n\t\t * Called whenever the tween's position changes.\n\t\t * @event change\n\t\t * @since 0.4.0\n\t\t **/\n\t\t\n\t\n\t// public methods:\n\t\t/**\n\t\t * Queues a wait (essentially an empty tween).\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *\t\t//This tween will wait 1s before alpha is faded to 0.\n\t\t *\t\tcreatejs.Tween.get(target).wait(1000).to({alpha:0}, 1000);\n\t\t *\n\t\t * @method wait\n\t\t * @param {Number} duration The duration of the wait in milliseconds (or in ticks if `useTicks` is true).\n\t\t * @param {Boolean} [passive] Tween properties will not be updated during a passive wait. This\n\t\t * is mostly useful for use with {{#crossLink \"Timeline\"}}{{/crossLink}} instances that contain multiple tweens\n\t\t * affecting the same target at different times.\n\t\t * @return {Tween} This tween instance (for chaining calls).\n\t\t **/\n\t\tp.wait = function(duration, passive) {\n\t\t\tif (duration == null || duration <= 0) { return this; }\n\t\t\tvar o = this._cloneProps(this._curQueueProps);\n\t\t\treturn this._addStep({d:duration, p0:o, e:this._linearEase, p1:o, v:passive});\n\t\t};\n\t\n\t\t/**\n\t\t * Queues a tween from the current values to the target properties. Set duration to 0 to jump to these value.\n\t\t * Numeric properties will be tweened from their current value in the tween to the target value. Non-numeric\n\t\t * properties will be set at the end of the specified duration.\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *\t\tcreatejs.Tween.get(target).to({alpha:0}, 1000);\n\t\t *\n\t\t * @method to\n\t\t * @param {Object} props An object specifying property target values for this tween (Ex. `{x:300}` would tween the x\n\t\t * property of the target to 300).\n\t\t * @param {Number} [duration=0] The duration of the wait in milliseconds (or in ticks if `useTicks` is true).\n\t\t * @param {Function} [ease=\"linear\"] The easing function to use for this tween. See the {{#crossLink \"Ease\"}}{{/crossLink}}\n\t\t * class for a list of built-in ease functions.\n\t\t * @return {Tween} This tween instance (for chaining calls).\n\t\t */\n\t\tp.to = function(props, duration, ease) {\n\t\t\tif (isNaN(duration) || duration < 0) { duration = 0; }\n\t\t\treturn this._addStep({d:duration||0, p0:this._cloneProps(this._curQueueProps), e:ease, p1:this._cloneProps(this._appendQueueProps(props))});\n\t\t};\n\t\n\t\t/**\n\t\t * Queues an action to call the specified function.\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *   \t//would call myFunction() after 1 second.\n\t\t *   \tmyTween.wait(1000).call(myFunction);\n\t\t *\n\t\t * @method call\n\t\t * @param {Function} callback The function to call.\n\t\t * @param {Array} [params]. The parameters to call the function with. If this is omitted, then the function\n\t\t *      will be called with a single param pointing to this tween.\n\t\t * @param {Object} [scope]. The scope to call the function in. If omitted, it will be called in the target's\n\t\t *      scope.\n\t\t * @return {Tween} This tween instance (for chaining calls).\n\t\t */\n\t\tp.call = function(callback, params, scope) {\n\t\t\treturn this._addAction({f:callback, p:params ? params : [this], o:scope ? scope : this._target});\n\t\t};\n\t\n\t\t// TODO: add clarification between this and a 0 duration .to:\n\t\t/**\n\t\t * Queues an action to set the specified props on the specified target. If target is null, it will use this tween's\n\t\t * target.\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *\t\tmyTween.wait(1000).set({visible:false},foo);\n\t\t *\n\t\t * @method set\n\t\t * @param {Object} props The properties to set (ex. `{visible:false}`).\n\t\t * @param {Object} [target] The target to set the properties on. If omitted, they will be set on the tween's target.\n\t\t * @return {Tween} This tween instance (for chaining calls).\n\t\t */\n\t\tp.set = function(props, target) {\n\t\t\treturn this._addAction({f:this._set, o:this, p:[props, target ? target : this._target]});\n\t\t};\n\t\n\t\t/**\n\t\t * Queues an action to play (unpause) the specified tween. This enables you to sequence multiple tweens.\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *\t\tmyTween.to({x:100},500).play(otherTween);\n\t\t *\n\t\t * @method play\n\t\t * @param {Tween} tween The tween to play.\n\t\t * @return {Tween} This tween instance (for chaining calls).\n\t\t */\n\t\tp.play = function(tween) {\n\t\t\tif (!tween) { tween = this; }\n\t\t\treturn this.call(tween.setPaused, [false], tween);\n\t\t};\n\t\n\t\t/**\n\t\t * Queues an action to pause the specified tween.\n\t\t * @method pause\n\t\t * @param {Tween} tween The tween to pause. If null, it pauses this tween.\n\t\t * @return {Tween} This tween instance (for chaining calls)\n\t\t */\n\t\tp.pause = function(tween) {\n\t\t\tif (!tween) { tween = this; }\n\t\t\treturn this.call(tween.setPaused, [true], tween);\n\t\t};\n\t\n\t\t/**\n\t\t * Advances the tween to a specified position.\n\t\t * @method setPosition\n\t\t * @param {Number} value The position to seek to in milliseconds (or ticks if useTicks is true).\n\t\t * @param {Number} [actionsMode=1] Specifies how actions are handled (ie. call, set, play, pause):\n\t\t * <ul>\n\t\t *      <li>{{#crossLink \"Tween/NONE:property\"}}{{/crossLink}} (0) - run no actions.</li>\n\t\t *      <li>{{#crossLink \"Tween/LOOP:property\"}}{{/crossLink}} (1) - if new position is less than old, then run all\n\t\t *      actions between old and duration, then all actions between 0 and new.</li>\n\t\t *      <li>{{#crossLink \"Tween/REVERSE:property\"}}{{/crossLink}} (2) - if new position is less than old, run all\n\t\t *      actions between them in reverse.</li>\n\t\t * </ul>\n\t\t * @return {Boolean} Returns `true` if the tween is complete (ie. the full tween has run & {{#crossLink \"Tween/loop:property\"}}{{/crossLink}}\n\t\t * is `false`).\n\t\t */\n\t\tp.setPosition = function(value, actionsMode) {\n\t\t\tif (value < 0) { value = 0; }\n\t\t\tif (actionsMode == null) { actionsMode = 1; }\n\t\n\t\t\t// normalize position:\n\t\t\tvar t = value;\n\t\t\tvar end = false;\n\t\t\tif (t >= this.duration) {\n\t\t\t\tif (this.loop) { t = t%this.duration; }\n\t\t\t\telse {\n\t\t\t\t\tt = this.duration;\n\t\t\t\t\tend = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (t == this._prevPos) { return end; }\n\t\n\t\n\t\t\tvar prevPos = this._prevPos;\n\t\t\tthis.position = this._prevPos = t; // set this in advance in case an action modifies position.\n\t\t\tthis._prevPosition = value;\n\t\n\t\t\t// handle tweens:\n\t\t\tif (this._target) {\n\t\t\t\tif (end) {\n\t\t\t\t\t// addresses problems with an ending zero length step.\n\t\t\t\t\tthis._updateTargetProps(null,1);\n\t\t\t\t} else if (this._steps.length > 0) {\n\t\t\t\t\t// find our new tween index:\n\t\t\t\t\tfor (var i=0, l=this._steps.length; i<l; i++) {\n\t\t\t\t\t\tif (this._steps[i].t > t) { break; }\n\t\t\t\t\t}\n\t\t\t\t\tvar step = this._steps[i-1];\n\t\t\t\t\tthis._updateTargetProps(step,(this._stepPosition = t-step.t)/step.d);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// run actions:\n\t\t\tif (actionsMode != 0 && this._actions.length > 0) {\n\t\t\t\tif (this._useTicks) {\n\t\t\t\t\t// only run the actions we landed on.\n\t\t\t\t\tthis._runActions(t,t);\n\t\t\t\t} else if (actionsMode == 1 && t<prevPos) {\n\t\t\t\t\tif (prevPos != this.duration) { this._runActions(prevPos, this.duration); }\n\t\t\t\t\tthis._runActions(0, t, true);\n\t\t\t\t} else {\n\t\t\t\t\tthis._runActions(prevPos, t);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (end) { this.setPaused(true); }\n\t\n\t        this.dispatchEvent(\"change\");\n\t\t\treturn end;\n\t\t};\n\t\n\t\t/**\n\t\t * Advances this tween by the specified amount of time in milliseconds (or ticks if`useTicks` is `true`).\n\t\t * This is normally called automatically by the Tween engine (via {{#crossLink \"Tween/tick\"}}{{/crossLink}}), but is\n\t\t * exposed for advanced uses.\n\t\t * @method tick\n\t\t * @param {Number} delta The time to advance in milliseconds (or ticks if `useTicks` is `true`).\n\t\t */\n\t\tp.tick = function(delta) {\n\t\t\tif (this._paused) { return; }\n\t\t\tthis.setPosition(this._prevPosition+delta);\n\t\t};\n\t\n\t\t/**\n\t\t * Pauses or plays this tween.\n\t\t * @method setPaused\n\t\t * @param {Boolean} [value=true] Indicates whether the tween should be paused (`true`) or played (`false`).\n\t\t * @return {Tween} This tween instance (for chaining calls)\n\t\t */\n\t\tp.setPaused = function(value) {\n\t\t\tif (this._paused === !!value) { return this; }\n\t\t\tthis._paused = !!value;\n\t\t\tTween._register(this, !value);\n\t\t\treturn this;\n\t\t};\n\t\n\t\t// tiny api (primarily for tool output):\n\t\tp.w = p.wait;\n\t\tp.t = p.to;\n\t\tp.c = p.call;\n\t\tp.s = p.set;\n\t\n\t\t/**\n\t\t * Returns a string representation of this object.\n\t\t * @method toString\n\t\t * @return {String} a string representation of the instance.\n\t\t */\n\t\tp.toString = function() {\n\t\t\treturn \"[Tween]\";\n\t\t};\n\t\n\t\t/**\n\t\t * @method clone\n\t\t * @protected\n\t\t */\n\t\tp.clone = function() {\n\t\t\tthrow(\"Tween can not be cloned.\")\n\t\t};\n\t\n\t// private methods:\n\t\t/**\n\t\t * @method _updateTargetProps\n\t\t * @param {Object} step\n\t\t * @param {Number} ratio\n\t\t * @protected\n\t\t */\n\t\tp._updateTargetProps = function(step, ratio) {\n\t\t\tvar p0,p1,v,v0,v1,arr;\n\t\t\tif (!step && ratio == 1) {\n\t\t\t\t// GDS: when does this run? Just at the very end? Shouldn't.\n\t\t\t\tthis.passive = false;\n\t\t\t\tp0 = p1 = this._curQueueProps;\n\t\t\t} else {\n\t\t\t\tthis.passive = !!step.v;\n\t\t\t\tif (this.passive) { return; } // don't update props.\n\t\t\t\t// apply ease to ratio.\n\t\t\t\tif (step.e) { ratio = step.e(ratio,0,1,1); }\n\t\t\t\tp0 = step.p0;\n\t\t\t\tp1 = step.p1;\n\t\t\t}\n\t\n\t\t\tfor (var n in this._initQueueProps) {\n\t\t\t\tif ((v0 = p0[n]) == null) { p0[n] = v0 = this._initQueueProps[n]; }\n\t\t\t\tif ((v1 = p1[n]) == null) { p1[n] = v1 = v0; }\n\t\t\t\tif (v0 == v1 || ratio == 0 || ratio == 1 || (typeof(v0) != \"number\")) {\n\t\t\t\t\t// no interpolation - either at start, end, values don't change, or the value is non-numeric.\n\t\t\t\t\tv = ratio == 1 ? v1 : v0;\n\t\t\t\t} else {\n\t\t\t\t\tv = v0+(v1-v0)*ratio;\n\t\t\t\t}\n\t\n\t\t\t\tvar ignore = false;\n\t\t\t\tif (arr = Tween._plugins[n]) {\n\t\t\t\t\tfor (var i=0,l=arr.length;i<l;i++) {\n\t\t\t\t\t\tvar v2 = arr[i].tween(this, n, v, p0, p1, ratio, !!step&&p0==p1, !step);\n\t\t\t\t\t\tif (v2 == Tween.IGNORE) { ignore = true; }\n\t\t\t\t\t\telse { v = v2; }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!ignore) { this._target[n] = v; }\n\t\t\t}\n\t\n\t\t};\n\t\n\t\t/**\n\t\t * @method _runActions\n\t\t * @param {Number} startPos\n\t\t * @param {Number} endPos\n\t\t * @param {Boolean} includeStart\n\t\t * @protected\n\t\t */\n\t\tp._runActions = function(startPos, endPos, includeStart) {\n\t\t\tvar sPos = startPos;\n\t\t\tvar ePos = endPos;\n\t\t\tvar i = -1;\n\t\t\tvar j = this._actions.length;\n\t\t\tvar k = 1;\n\t\t\tif (startPos > endPos) {\n\t\t\t\t// running backwards, flip everything:\n\t\t\t\tsPos = endPos;\n\t\t\t\tePos = startPos;\n\t\t\t\ti = j;\n\t\t\t\tj = k = -1;\n\t\t\t}\n\t\t\twhile ((i+=k) != j) {\n\t\t\t\tvar action = this._actions[i];\n\t\t\t\tvar pos = action.t;\n\t\t\t\tif (pos == ePos || (pos > sPos && pos < ePos) || (includeStart && pos == startPos) ) {\n\t\t\t\t\taction.f.apply(action.o, action.p);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * @method _appendQueueProps\n\t\t * @param {Object} o\n\t\t * @protected\n\t\t */\n\t\tp._appendQueueProps = function(o) {\n\t\t\tvar arr,oldValue,i, l, injectProps;\n\t\t\tfor (var n in o) {\n\t\t\t\tif (this._initQueueProps[n] === undefined) {\n\t\t\t\t\toldValue = this._target[n];\n\t\n\t\t\t\t\t// init plugins:\n\t\t\t\t\tif (arr = Tween._plugins[n]) {\n\t\t\t\t\t\tfor (i=0,l=arr.length;i<l;i++) {\n\t\t\t\t\t\t\toldValue = arr[i].init(this, n, oldValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._initQueueProps[n] = this._curQueueProps[n] = (oldValue===undefined) ? null : oldValue;\n\t\t\t\t} else {\n\t\t\t\t\toldValue = this._curQueueProps[n];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor (var n in o) {\n\t\t\t\toldValue = this._curQueueProps[n];\n\t\t\t\tif (arr = Tween._plugins[n]) {\n\t\t\t\t\tinjectProps = injectProps||{};\n\t\t\t\t\tfor (i=0, l=arr.length;i<l;i++) {\n\t\t\t\t\t\t// TODO: remove the check for .step in the next version. It's here for backwards compatibility.\n\t\t\t\t\t\tif (arr[i].step) { arr[i].step(this, n, oldValue, o[n], injectProps); }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._curQueueProps[n] = o[n];\n\t\t\t}\n\t\t\tif (injectProps) { this._appendQueueProps(injectProps); }\n\t\t\treturn this._curQueueProps;\n\t\t};\n\t\n\t\t/**\n\t\t * @method _cloneProps\n\t\t * @param {Object} props\n\t\t * @protected\n\t\t */\n\t\tp._cloneProps = function(props) {\n\t\t\tvar o = {};\n\t\t\tfor (var n in props) {\n\t\t\t\to[n] = props[n];\n\t\t\t}\n\t\t\treturn o;\n\t\t};\n\t\n\t\t/**\n\t\t * @method _addStep\n\t\t * @param {Object} o\n\t\t * @protected\n\t\t */\n\t\tp._addStep = function(o) {\n\t\t\tif (o.d > 0) {\n\t\t\t\tthis._steps.push(o);\n\t\t\t\to.t = this.duration;\n\t\t\t\tthis.duration += o.d;\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * @method _addAction\n\t\t * @param {Object} o\n\t\t * @protected\n\t\t */\n\t\tp._addAction = function(o) {\n\t\t\to.t = this.duration;\n\t\t\tthis._actions.push(o);\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/**\n\t\t * @method _set\n\t\t * @param {Object} props\n\t\t * @param {Object} o\n\t\t * @protected\n\t\t */\n\t\tp._set = function(props, o) {\n\t\t\tfor (var n in props) {\n\t\t\t\to[n] = props[n];\n\t\t\t}\n\t\t};\n\t\n\t\tcreatejs.Tween = createjs.promote(Tween, \"EventDispatcher\");\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// Timeline.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\t\n\t\n\t// constructor\t\n\t\t/**\n\t\t * The Timeline class synchronizes multiple tweens and allows them to be controlled as a group. Please note that if a\n\t\t * timeline is looping, the tweens on it may appear to loop even if the \"loop\" property of the tween is false.\n\t\t * @class Timeline\n\t\t * @param {Array} tweens An array of Tweens to add to this timeline. See {{#crossLink \"Timeline/addTween\"}}{{/crossLink}}\n\t\t * for more info.\n\t\t * @param {Object} labels An object defining labels for using {{#crossLink \"Timeline/gotoAndPlay\"}}{{/crossLink}}/{{#crossLink \"Timeline/gotoAndStop\"}}{{/crossLink}}.\n\t\t * See {{#crossLink \"Timeline/setLabels\"}}{{/crossLink}}\n\t\t * for details.\n\t\t * @param {Object} props The configuration properties to apply to this tween instance (ex. `{loop:true}`). All properties\n\t\t * default to false. Supported props are:<UL>\n\t\t *    <LI> loop: sets the loop property on this tween.</LI>\n\t\t *    <LI> useTicks: uses ticks for all durations instead of milliseconds.</LI>\n\t\t *    <LI> ignoreGlobalPause: sets the ignoreGlobalPause property on this tween.</LI>\n\t\t *    <LI> paused: indicates whether to start the tween paused.</LI>\n\t\t *    <LI> position: indicates the initial position for this timeline.</LI>\n\t\t *    <LI> onChange: specifies a listener to add for the {{#crossLink \"Timeline/change:event\"}}{{/crossLink}} event.</LI>\n\t\t * </UL>\n\t\t * @extends EventDispatcher\n\t\t * @constructor\n\t\t **/\n\t\tfunction Timeline(tweens, labels, props) {\n\t\t\tthis.EventDispatcher_constructor();\n\t\n\t\t// public properties:\n\t\t\t/**\n\t\t\t * Causes this timeline to continue playing when a global pause is active.\n\t\t\t * @property ignoreGlobalPause\n\t\t\t * @type Boolean\n\t\t\t **/\n\t\t\tthis.ignoreGlobalPause = false;\n\t\n\t\t\t/**\n\t\t\t * The total duration of this timeline in milliseconds (or ticks if `useTicks `is `true`). This value is usually\n\t\t\t * automatically updated as you modify the timeline. See {{#crossLink \"Timeline/updateDuration\"}}{{/crossLink}}\n\t\t\t * for more information.\n\t\t\t * @property duration\n\t\t\t * @type Number\n\t\t\t * @default 0\n\t\t\t * @readonly\n\t\t\t **/\n\t\t\tthis.duration = 0;\n\t\n\t\t\t/**\n\t\t\t * If true, the timeline will loop when it reaches the end. Can be set via the props param.\n\t\t\t * @property loop\n\t\t\t * @type Boolean\n\t\t\t **/\n\t\t\tthis.loop = false;\n\t\n\t\t\t/**\n\t\t\t * The current normalized position of the timeline. This will always be a value between 0 and\n\t\t\t * {{#crossLink \"Timeline/duration:property\"}}{{/crossLink}}.\n\t\t\t * Changing this property directly will have no effect.\n\t\t\t * @property position\n\t\t\t * @type Object\n\t\t\t * @readonly\n\t\t\t **/\n\t\t\tthis.position = null;\n\t\n\t\t\t// private properties:\n\t\t\t/**\n\t\t\t * @property _paused\n\t\t\t * @type Boolean\n\t\t\t * @protected\n\t\t\t **/\n\t\t\tthis._paused = false;\n\t\n\t\t\t/**\n\t\t\t * @property _tweens\n\t\t\t * @type Array[Tween]\n\t\t\t * @protected\n\t\t\t **/\n\t\t\tthis._tweens = [];\n\t\n\t\t\t/**\n\t\t\t * @property _labels\n\t\t\t * @type Object\n\t\t\t * @protected\n\t\t\t **/\n\t\t\tthis._labels = null;\n\t\n\t\t\t/**\n\t\t\t * @property _labelList\n\t\t\t * @type Array[Object]\n\t\t\t * @protected\n\t\t\t **/\n\t\t\tthis._labelList = null;\n\t\n\t\t\t/**\n\t\t\t * @property _prevPosition\n\t\t\t * @type Number\n\t\t\t * @default 0\n\t\t\t * @protected\n\t\t\t **/\n\t\t\tthis._prevPosition = 0;\n\t\n\t\t\t/**\n\t\t\t * @property _prevPos\n\t\t\t * @type Number\n\t\t\t * @default -1\n\t\t\t * @protected\n\t\t\t **/\n\t\t\tthis._prevPos = -1;\n\t\n\t\t\t/**\n\t\t\t * @property _useTicks\n\t\t\t * @type Boolean\n\t\t\t * @default false\n\t\t\t * @protected\n\t\t\t **/\n\t\t\tthis._useTicks = false;\n\t\t\t\n\t\t\t/**\n\t\t\t * Indicates whether the timeline is currently registered with Tween.\n\t\t\t * @property _registered\n\t\t\t * @type {boolean}\n\t\t\t * @default false\n\t\t\t * @protected\n\t\t\t */\n\t\t\tthis._registered = false;\n\t\n\t\n\t\t\tif (props) {\n\t\t\t\tthis._useTicks = props.useTicks;\n\t\t\t\tthis.loop = props.loop;\n\t\t\t\tthis.ignoreGlobalPause = props.ignoreGlobalPause;\n\t\t\t\tprops.onChange&&this.addEventListener(\"change\", props.onChange);\n\t\t\t}\n\t\t\tif (tweens) { this.addTween.apply(this, tweens); }\n\t\t\tthis.setLabels(labels);\n\t\t\tif (props&&props.paused) { this._paused=true; }\n\t\t\telse { createjs.Tween._register(this,true); }\n\t\t\tif (props&&props.position!=null) { this.setPosition(props.position, createjs.Tween.NONE); }\n\t\t\t\n\t\t};\n\t\t\n\t\tvar p = createjs.extend(Timeline, createjs.EventDispatcher);\n\t\n\t\t// TODO: deprecated\n\t\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\n\t\t\n\t// events:\n\t\t/**\n\t\t * Called whenever the timeline's position changes.\n\t\t * @event change\n\t\t * @since 0.5.0\n\t\t **/\n\t\n\t\n\t// public methods:\n\t\t/**\n\t\t * Adds one or more tweens (or timelines) to this timeline. The tweens will be paused (to remove them from the\n\t\t * normal ticking system) and managed by this timeline. Adding a tween to multiple timelines will result in\n\t\t * unexpected behaviour.\n\t\t * @method addTween\n\t\t * @param {Tween} ...tween The tween(s) to add. Accepts multiple arguments.\n\t\t * @return {Tween} The first tween that was passed in.\n\t\t **/\n\t\tp.addTween = function(tween) {\n\t\t\tvar l = arguments.length;\n\t\t\tif (l > 1) {\n\t\t\t\tfor (var i=0; i<l; i++) { this.addTween(arguments[i]); }\n\t\t\t\treturn arguments[0];\n\t\t\t} else if (l == 0) { return null; }\n\t\t\tthis.removeTween(tween);\n\t\t\tthis._tweens.push(tween);\n\t\t\ttween.setPaused(true);\n\t\t\ttween._paused = false;\n\t\t\ttween._useTicks = this._useTicks;\n\t\t\tif (tween.duration > this.duration) { this.duration = tween.duration; }\n\t\t\tif (this._prevPos >= 0) { tween.setPosition(this._prevPos, createjs.Tween.NONE); }\n\t\t\treturn tween;\n\t\t};\n\t\n\t\t/**\n\t\t * Removes one or more tweens from this timeline.\n\t\t * @method removeTween\n\t\t * @param {Tween} ...tween The tween(s) to remove. Accepts multiple arguments.\n\t\t * @return Boolean Returns `true` if all of the tweens were successfully removed.\n\t\t **/\n\t\tp.removeTween = function(tween) {\n\t\t\tvar l = arguments.length;\n\t\t\tif (l > 1) {\n\t\t\t\tvar good = true;\n\t\t\t\tfor (var i=0; i<l; i++) { good = good && this.removeTween(arguments[i]); }\n\t\t\t\treturn good;\n\t\t\t} else if (l == 0) { return false; }\n\t\n\t\t\tvar tweens = this._tweens;\n\t\t\tvar i = tweens.length;\n\t\t\twhile (i--) {\n\t\t\t\tif (tweens[i] == tween) {\n\t\t\t\t\ttweens.splice(i, 1);\n\t\t\t\t\tif (tween.duration >= this.duration) { this.updateDuration(); }\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\n\t\t/**\n\t\t * Adds a label that can be used with {{#crossLink \"Timeline/gotoAndPlay\"}}{{/crossLink}}/{{#crossLink \"Timeline/gotoAndStop\"}}{{/crossLink}}.\n\t\t * @method addLabel\n\t\t * @param {String} label The label name.\n\t\t * @param {Number} position The position this label represents.\n\t\t **/\n\t\tp.addLabel = function(label, position) {\n\t\t\tthis._labels[label] = position;\n\t\t\tvar list = this._labelList;\n\t\t\tif (list) {\n\t\t\t\tfor (var i= 0,l=list.length; i<l; i++) { if (position < list[i].position) { break; } }\n\t\t\t\tlist.splice(i, 0, {label:label, position:position});\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Defines labels for use with gotoAndPlay/Stop. Overwrites any previously set labels.\n\t\t * @method setLabels\n\t\t * @param {Object} o An object defining labels for using {{#crossLink \"Timeline/gotoAndPlay\"}}{{/crossLink}}/{{#crossLink \"Timeline/gotoAndStop\"}}{{/crossLink}}\n\t\t * in the form `{labelName:time}` where time is in milliseconds (or ticks if `useTicks` is `true`).\n\t\t **/\n\t\tp.setLabels = function(o) {\n\t\t\tthis._labels = o ?  o : {};\n\t\t};\n\t\n\t\t/**\n\t\t * Returns a sorted list of the labels defined on this timeline.\n\t\t * @method getLabels\n\t\t * @return {Array[Object]} A sorted array of objects with label and position properties.\n\t\t **/\n\t\tp.getLabels = function() {\n\t\t\tvar list = this._labelList;\n\t\t\tif (!list) {\n\t\t\t\tlist = this._labelList = [];\n\t\t\t\tvar labels = this._labels;\n\t\t\t\tfor (var n in labels) {\n\t\t\t\t\tlist.push({label:n, position:labels[n]});\n\t\t\t\t}\n\t\t\t\tlist.sort(function (a,b) { return a.position- b.position; });\n\t\t\t}\n\t\t\treturn list;\n\t\t};\n\t\n\t\t/**\n\t\t * Returns the name of the label on or immediately before the current position. For example, given a timeline with\n\t\t * two labels, \"first\" on frame index 4, and \"second\" on frame 8, getCurrentLabel would return:\n\t\t * <UL>\n\t\t * \t\t<LI>null if the current position is 2.</LI>\n\t\t * \t\t<LI>\"first\" if the current position is 4.</LI>\n\t\t * \t\t<LI>\"first\" if the current position is 7.</LI>\n\t\t * \t\t<LI>\"second\" if the current position is 15.</LI>\n\t\t * </UL>\n\t\t * @method getCurrentLabel\n\t\t * @return {String} The name of the current label or null if there is no label\n\t\t **/\n\t\tp.getCurrentLabel = function() {\n\t\t\tvar labels = this.getLabels();\n\t\t\tvar pos = this.position;\n\t\t\tvar l = labels.length;\n\t\t\tif (l) {\n\t\t\t\tfor (var i = 0; i<l; i++) { if (pos < labels[i].position) { break; } }\n\t\t\t\treturn (i==0) ? null : labels[i-1].label;\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\n\t\t/**\n\t\t * Unpauses this timeline and jumps to the specified position or label.\n\t\t * @method gotoAndPlay\n\t\t * @param {String|Number} positionOrLabel The position in milliseconds (or ticks if `useTicks` is `true`)\n\t\t * or label to jump to.\n\t\t **/\n\t\tp.gotoAndPlay = function(positionOrLabel) {\n\t\t\tthis.setPaused(false);\n\t\t\tthis._goto(positionOrLabel);\n\t\t};\n\t\n\t\t/**\n\t\t * Pauses this timeline and jumps to the specified position or label.\n\t\t * @method gotoAndStop\n\t\t * @param {String|Number} positionOrLabel The position in milliseconds (or ticks if `useTicks` is `true`) or label\n\t\t * to jump to.\n\t\t **/\n\t\tp.gotoAndStop = function(positionOrLabel) {\n\t\t\tthis.setPaused(true);\n\t\t\tthis._goto(positionOrLabel);\n\t\t};\n\t\n\t\t/**\n\t\t * Advances the timeline to the specified position.\n\t\t * @method setPosition\n\t\t * @param {Number} value The position to seek to in milliseconds (or ticks if `useTicks` is `true`).\n\t\t * @param {Number} [actionsMode] parameter specifying how actions are handled. See the Tween {{#crossLink \"Tween/setPosition\"}}{{/crossLink}}\n\t\t * method for more details.\n\t\t * @return {Boolean} Returns `true` if the timeline is complete (ie. the full timeline has run & {{#crossLink \"Timeline/loop:property\"}}{{/crossLink}}\n\t\t * is `false`).\n\t\t **/\n\t\tp.setPosition = function(value, actionsMode) {\n\t\t\tvar t = this._calcPosition(value);\n\t\t\tvar end = !this.loop && value >= this.duration;\n\t\t\tif (t == this._prevPos) { return end; }\n\t\t\tthis._prevPosition = value;\n\t\t\tthis.position = this._prevPos = t; // in case an action changes the current frame.\n\t\t\tfor (var i=0, l=this._tweens.length; i<l; i++) {\n\t\t\t\tthis._tweens[i].setPosition(t, actionsMode);\n\t\t\t\tif (t != this._prevPos) { return false; } // an action changed this timeline's position.\n\t\t\t}\n\t\t\tif (end) { this.setPaused(true); }\n\t\t\tthis.dispatchEvent(\"change\");\n\t\t\treturn end;\n\t\t};\n\t\n\t\t/**\n\t\t * Pauses or plays this timeline.\n\t\t * @method setPaused\n\t\t * @param {Boolean} value Indicates whether the tween should be paused (`true`) or played (`false`).\n\t\t **/\n\t\tp.setPaused = function(value) {\n\t\t\tthis._paused = !!value; \n\t\t\tcreatejs.Tween._register(this, !value);\n\t\t};\n\t\n\t\t/**\n\t\t * Recalculates the duration of the timeline. The duration is automatically updated when tweens are added or removed,\n\t\t * but this method is useful if you modify a tween after it was added to the timeline.\n\t\t * @method updateDuration\n\t\t **/\n\t\tp.updateDuration = function() {\n\t\t\tthis.duration = 0;\n\t\t\tfor (var i=0,l=this._tweens.length; i<l; i++) {\n\t\t\t\tvar tween = this._tweens[i];\n\t\t\t\tif (tween.duration > this.duration) { this.duration = tween.duration; }\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Advances this timeline by the specified amount of time in milliseconds (or ticks if `useTicks` is `true`).\n\t\t * This is normally called automatically by the Tween engine (via the {{#crossLink \"Tween/tick:event\"}}{{/crossLink}}\n\t\t * event), but is exposed for advanced uses.\n\t\t * @method tick\n\t\t * @param {Number} delta The time to advance in milliseconds (or ticks if useTicks is true).\n\t\t **/\n\t\tp.tick = function(delta) {\n\t\t\tthis.setPosition(this._prevPosition+delta);\n\t\t};\n\t\n\t\t/**\n\t\t * If a numeric position is passed, it is returned unchanged. If a string is passed, the position of the\n\t\t * corresponding frame label will be returned, or `null` if a matching label is not defined.\n\t\t * @method resolve\n\t\t * @param {String|Number} positionOrLabel A numeric position value or label string.\n\t\t **/\n\t\tp.resolve = function(positionOrLabel) {\n\t\t\tvar pos = Number(positionOrLabel);\n\t\t\tif (isNaN(pos)) { pos = this._labels[positionOrLabel]; }\n\t\t\treturn pos;\n\t\t};\n\t\n\t\t/**\n\t\t* Returns a string representation of this object.\n\t\t* @method toString\n\t\t* @return {String} a string representation of the instance.\n\t\t**/\n\t\tp.toString = function() {\n\t\t\treturn \"[Timeline]\";\n\t\t};\n\t\n\t\t/**\n\t\t * @method clone\n\t\t * @protected\n\t\t **/\n\t\tp.clone = function() {\n\t\t\tthrow(\"Timeline can not be cloned.\")\n\t\t};\n\t\n\t// private methods:\n\t\t/**\n\t\t * @method _goto\n\t\t * @param {String | Number} positionOrLabel\n\t\t * @protected\n\t\t **/\n\t\tp._goto = function(positionOrLabel) {\n\t\t\tvar pos = this.resolve(positionOrLabel);\n\t\t\tif (pos != null) { this.setPosition(pos); }\n\t\t};\n\t\t\n\t\t/**\n\t\t * @method _calcPosition\n\t\t * @param {Number} value\n\t\t * @return {Number}\n\t\t * @protected\n\t\t **/\n\t\tp._calcPosition = function(value) {\n\t\t\tif (value < 0) { return 0; }\n\t\t\tif (value < this.duration) { return value; }\n\t\t\treturn this.loop ? value%this.duration : this.duration;\n\t\t};\n\t\n\t\tcreatejs.Timeline = createjs.promote(Timeline, \"EventDispatcher\");\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// Ease.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\t/**\n\t\t * The Ease class provides a collection of easing functions for use with TweenJS. It does not use the standard 4 param\n\t\t * easing signature. Instead it uses a single param which indicates the current linear ratio (0 to 1) of the tween.\n\t\t *\n\t\t * Most methods on Ease can be passed directly as easing functions:\n\t\t *\n\t\t *      Tween.get(target).to({x:100}, 500, Ease.linear);\n\t\t *\n\t\t * However, methods beginning with \"get\" will return an easing function based on parameter values:\n\t\t *\n\t\t *      Tween.get(target).to({y:200}, 500, Ease.getPowIn(2.2));\n\t\t *\n\t\t * Please see the <a href=\"http://www.createjs.com/Demos/TweenJS/Tween_SparkTable\">spark table demo</a> for an\n\t\t * overview of the different ease types on <a href=\"http://tweenjs.com\">TweenJS.com</a>.\n\t\t *\n\t\t * <em>Equations derived from work by Robert Penner.</em>\n\t\t * @class Ease\n\t\t * @static\n\t\t **/\n\t\tfunction Ease() {\n\t\t\tthrow \"Ease cannot be instantiated.\";\n\t\t}\n\t\n\t\n\t// static methods and properties\n\t\t/**\n\t\t * @method linear\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.linear = function(t) { return t; };\n\t\n\t\t/**\n\t\t * Identical to linear.\n\t\t * @method none\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.none = Ease.linear;\n\t\n\t\t/**\n\t\t * Mimics the simple -100 to 100 easing in Adobe Flash/Animate.\n\t\t * @method get\n\t\t * @param {Number} amount A value from -1 (ease in) to 1 (ease out) indicating the strength and direction of the ease.\n\t\t * @static\n\t\t * @return {Function}\n\t\t **/\n\t\tEase.get = function(amount) {\n\t\t\tif (amount < -1) { amount = -1; }\n\t\t\tif (amount > 1) { amount = 1; }\n\t\t\treturn function(t) {\n\t\t\t\tif (amount==0) { return t; }\n\t\t\t\tif (amount<0) { return t*(t*-amount+1+amount); }\n\t\t\t\treturn t*((2-t)*amount+(1-amount));\n\t\t\t};\n\t\t};\n\t\n\t\t/**\n\t\t * Configurable exponential ease.\n\t\t * @method getPowIn\n\t\t * @param {Number} pow The exponent to use (ex. 3 would return a cubic ease).\n\t\t * @static\n\t\t * @return {Function}\n\t\t **/\n\t\tEase.getPowIn = function(pow) {\n\t\t\treturn function(t) {\n\t\t\t\treturn Math.pow(t,pow);\n\t\t\t};\n\t\t};\n\t\n\t\t/**\n\t\t * Configurable exponential ease.\n\t\t * @method getPowOut\n\t\t * @param {Number} pow The exponent to use (ex. 3 would return a cubic ease).\n\t\t * @static\n\t\t * @return {Function}\n\t\t **/\n\t\tEase.getPowOut = function(pow) {\n\t\t\treturn function(t) {\n\t\t\t\treturn 1-Math.pow(1-t,pow);\n\t\t\t};\n\t\t};\n\t\n\t\t/**\n\t\t * Configurable exponential ease.\n\t\t * @method getPowInOut\n\t\t * @param {Number} pow The exponent to use (ex. 3 would return a cubic ease).\n\t\t * @static\n\t\t * @return {Function}\n\t\t **/\n\t\tEase.getPowInOut = function(pow) {\n\t\t\treturn function(t) {\n\t\t\t\tif ((t*=2)<1) return 0.5*Math.pow(t,pow);\n\t\t\t\treturn 1-0.5*Math.abs(Math.pow(2-t,pow));\n\t\t\t};\n\t\t};\n\t\n\t\t/**\n\t\t * @method quadIn\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.quadIn = Ease.getPowIn(2);\n\t\t/**\n\t\t * @method quadOut\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.quadOut = Ease.getPowOut(2);\n\t\t/**\n\t\t * @method quadInOut\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.quadInOut = Ease.getPowInOut(2);\n\t\n\t\t/**\n\t\t * @method cubicIn\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.cubicIn = Ease.getPowIn(3);\n\t\t/**\n\t\t * @method cubicOut\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.cubicOut = Ease.getPowOut(3);\n\t\t/**\n\t\t * @method cubicInOut\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.cubicInOut = Ease.getPowInOut(3);\n\t\n\t\t/**\n\t\t * @method quartIn\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.quartIn = Ease.getPowIn(4);\n\t\t/**\n\t\t * @method quartOut\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.quartOut = Ease.getPowOut(4);\n\t\t/**\n\t\t * @method quartInOut\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.quartInOut = Ease.getPowInOut(4);\n\t\n\t\t/**\n\t\t * @method quintIn\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.quintIn = Ease.getPowIn(5);\n\t\t/**\n\t\t * @method quintOut\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.quintOut = Ease.getPowOut(5);\n\t\t/**\n\t\t * @method quintInOut\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.quintInOut = Ease.getPowInOut(5);\n\t\n\t\t/**\n\t\t * @method sineIn\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.sineIn = function(t) {\n\t\t\treturn 1-Math.cos(t*Math.PI/2);\n\t\t};\n\t\n\t\t/**\n\t\t * @method sineOut\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.sineOut = function(t) {\n\t\t\treturn Math.sin(t*Math.PI/2);\n\t\t};\n\t\n\t\t/**\n\t\t * @method sineInOut\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.sineInOut = function(t) {\n\t\t\treturn -0.5*(Math.cos(Math.PI*t) - 1);\n\t\t};\n\t\n\t\t/**\n\t\t * Configurable \"back in\" ease.\n\t\t * @method getBackIn\n\t\t * @param {Number} amount The strength of the ease.\n\t\t * @static\n\t\t * @return {Function}\n\t\t **/\n\t\tEase.getBackIn = function(amount) {\n\t\t\treturn function(t) {\n\t\t\t\treturn t*t*((amount+1)*t-amount);\n\t\t\t};\n\t\t};\n\t\t/**\n\t\t * @method backIn\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.backIn = Ease.getBackIn(1.7);\n\t\n\t\t/**\n\t\t * Configurable \"back out\" ease.\n\t\t * @method getBackOut\n\t\t * @param {Number} amount The strength of the ease.\n\t\t * @static\n\t\t * @return {Function}\n\t\t **/\n\t\tEase.getBackOut = function(amount) {\n\t\t\treturn function(t) {\n\t\t\t\treturn (--t*t*((amount+1)*t + amount) + 1);\n\t\t\t};\n\t\t};\n\t\t/**\n\t\t * @method backOut\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.backOut = Ease.getBackOut(1.7);\n\t\n\t\t/**\n\t\t * Configurable \"back in out\" ease.\n\t\t * @method getBackInOut\n\t\t * @param {Number} amount The strength of the ease.\n\t\t * @static\n\t\t * @return {Function}\n\t\t **/\n\t\tEase.getBackInOut = function(amount) {\n\t\t\tamount*=1.525;\n\t\t\treturn function(t) {\n\t\t\t\tif ((t*=2)<1) return 0.5*(t*t*((amount+1)*t-amount));\n\t\t\t\treturn 0.5*((t-=2)*t*((amount+1)*t+amount)+2);\n\t\t\t};\n\t\t};\n\t\t/**\n\t\t * @method backInOut\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.backInOut = Ease.getBackInOut(1.7);\n\t\n\t\t/**\n\t\t * @method circIn\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.circIn = function(t) {\n\t\t\treturn -(Math.sqrt(1-t*t)- 1);\n\t\t};\n\t\n\t\t/**\n\t\t * @method circOut\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.circOut = function(t) {\n\t\t\treturn Math.sqrt(1-(--t)*t);\n\t\t};\n\t\n\t\t/**\n\t\t * @method circInOut\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.circInOut = function(t) {\n\t\t\tif ((t*=2) < 1) return -0.5*(Math.sqrt(1-t*t)-1);\n\t\t\treturn 0.5*(Math.sqrt(1-(t-=2)*t)+1);\n\t\t};\n\t\n\t\t/**\n\t\t * @method bounceIn\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.bounceIn = function(t) {\n\t\t\treturn 1-Ease.bounceOut(1-t);\n\t\t};\n\t\n\t\t/**\n\t\t * @method bounceOut\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.bounceOut = function(t) {\n\t\t\tif (t < 1/2.75) {\n\t\t\t\treturn (7.5625*t*t);\n\t\t\t} else if (t < 2/2.75) {\n\t\t\t\treturn (7.5625*(t-=1.5/2.75)*t+0.75);\n\t\t\t} else if (t < 2.5/2.75) {\n\t\t\t\treturn (7.5625*(t-=2.25/2.75)*t+0.9375);\n\t\t\t} else {\n\t\t\t\treturn (7.5625*(t-=2.625/2.75)*t +0.984375);\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * @method bounceInOut\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.bounceInOut = function(t) {\n\t\t\tif (t<0.5) return Ease.bounceIn (t*2) * .5;\n\t\t\treturn Ease.bounceOut(t*2-1)*0.5+0.5;\n\t\t};\n\t\n\t\t/**\n\t\t * Configurable elastic ease.\n\t\t * @method getElasticIn\n\t\t * @param {Number} amplitude\n\t\t * @param {Number} period\n\t\t * @static\n\t\t * @return {Function}\n\t\t **/\n\t\tEase.getElasticIn = function(amplitude,period) {\n\t\t\tvar pi2 = Math.PI*2;\n\t\t\treturn function(t) {\n\t\t\t\tif (t==0 || t==1) return t;\n\t\t\t\tvar s = period/pi2*Math.asin(1/amplitude);\n\t\t\t\treturn -(amplitude*Math.pow(2,10*(t-=1))*Math.sin((t-s)*pi2/period));\n\t\t\t};\n\t\t};\n\t\t/**\n\t\t * @method elasticIn\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.elasticIn = Ease.getElasticIn(1,0.3);\n\t\n\t\t/**\n\t\t * Configurable elastic ease.\n\t\t * @method getElasticOut\n\t\t * @param {Number} amplitude\n\t\t * @param {Number} period\n\t\t * @static\n\t\t * @return {Function}\n\t\t **/\n\t\tEase.getElasticOut = function(amplitude,period) {\n\t\t\tvar pi2 = Math.PI*2;\n\t\t\treturn function(t) {\n\t\t\t\tif (t==0 || t==1) return t;\n\t\t\t\tvar s = period/pi2 * Math.asin(1/amplitude);\n\t\t\t\treturn (amplitude*Math.pow(2,-10*t)*Math.sin((t-s)*pi2/period )+1);\n\t\t\t};\n\t\t};\n\t\t/**\n\t\t * @method elasticOut\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.elasticOut = Ease.getElasticOut(1,0.3);\n\t\n\t\t/**\n\t\t * Configurable elastic ease.\n\t\t * @method getElasticInOut\n\t\t * @param {Number} amplitude\n\t\t * @param {Number} period\n\t\t * @static\n\t\t * @return {Function}\n\t\t **/\n\t\tEase.getElasticInOut = function(amplitude,period) {\n\t\t\tvar pi2 = Math.PI*2;\n\t\t\treturn function(t) {\n\t\t\t\tvar s = period/pi2 * Math.asin(1/amplitude);\n\t\t\t\tif ((t*=2)<1) return -0.5*(amplitude*Math.pow(2,10*(t-=1))*Math.sin( (t-s)*pi2/period ));\n\t\t\t\treturn amplitude*Math.pow(2,-10*(t-=1))*Math.sin((t-s)*pi2/period)*0.5+1;\n\t\t\t};\n\t\t};\n\t\t/**\n\t\t * @method elasticInOut\n\t\t * @param {Number} t\n\t\t * @static\n\t\t * @return {Number}\n\t\t **/\n\t\tEase.elasticInOut = Ease.getElasticInOut(1,0.3*1.5);\n\t\n\t\tcreatejs.Ease = Ease;\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// MotionGuidePlugin.js\n\t//##############################################################################\n\t\n\t(function() {\n\t\t\"use strict\";\n\t\n\t\t/**\n\t\t * A TweenJS plugin for working with motion guides.\n\t\t *\n\t\t * To use, install the plugin after TweenJS has loaded. Next tween the 'guide' property with an object as detailed below.\n\t\t *\n\t\t *       createjs.MotionGuidePlugin.install();\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      // Using a Motion Guide\n\t\t *\t    createjs.Tween.get(target).to({guide:{ path:[0,0, 0,200,200,200, 200,0,0,0] }},7000);\n\t\t *\t    // Visualizing the line\n\t\t *\t    graphics.moveTo(0,0).curveTo(0,200,200,200).curveTo(200,0,0,0);\n\t\t *\n\t\t * Each path needs pre-computation to ensure there's fast performance. Because of the pre-computation there's no\n\t\t * built in support for path changes mid tween. These are the Guide Object's properties:<UL>\n\t\t *      <LI> path: Required, Array : The x/y points used to draw the path with a moveTo and 1 to n curveTo calls.</LI>\n\t\t *      <LI> start: Optional, 0-1 : Initial position, default 0 except for when continuing along the same path.</LI>\n\t\t *      <LI> end: Optional, 0-1 : Final position, default 1 if not specified.</LI>\n\t\t *      <LI> orient: Optional, string : \"fixed\"/\"auto\"/\"cw\"/\"ccw\"<UL>\n\t\t *\t\t\t\t<LI>\"fixed\" forces the object to face down the path all movement (relative to start rotation),</LI>\n\t\t *      \t\t<LI>\"auto\" rotates the object along the path relative to the line.</LI>\n\t\t *      \t\t<LI>\"cw\"/\"ccw\" force clockwise or counter clockwise rotations including Adobe Flash/Animate-like\n\t\t *      \t\tbehaviour</LI>\n\t\t * \t\t</UL></LI>\n\t\t * </UL>\n\t\t * Guide objects should not be shared between tweens even if all properties are identical, the library stores\n\t\t * information on these objects in the background and sharing them can cause unexpected behaviour. Values\n\t\t * outside 0-1 range of tweens will be a \"best guess\" from the appropriate part of the defined curve.\n\t\t *\n\t\t * @class MotionGuidePlugin\n\t\t * @constructor\n\t\t **/\n\t\tfunction MotionGuidePlugin() {\n\t\t\tthrow(\"MotionGuidePlugin cannot be instantiated.\")\n\t\t};\n\t\n\t\n\t// static properties:\n\t\t/**\n\t\t * @property priority\n\t\t * @protected\n\t\t * @static\n\t\t **/\n\t\tMotionGuidePlugin.priority = 0; // high priority, should run sooner\n\t\n\t\t/**\n\t\t * @property temporary variable storage\n\t\t * @private\n\t\t * @static\n\t\t */\n\t\tMotionGuidePlugin._rotOffS;\n\t\t/**\n\t\t * @property temporary variable storage\n\t\t * @private\n\t\t * @static\n\t\t */\n\t\tMotionGuidePlugin._rotOffE;\n\t\t/**\n\t\t * @property temporary variable storage\n\t\t * @private\n\t\t * @static\n\t\t */\n\t\tMotionGuidePlugin._rotNormS;\n\t\t/**\n\t\t * @property temporary variable storage\n\t\t * @private\n\t\t * @static\n\t\t */\n\t\tMotionGuidePlugin._rotNormE;\n\t\n\t\n\t// static methods\n\t\t/**\n\t\t * Installs this plugin for use with TweenJS. Call this once after TweenJS is loaded to enable this plugin.\n\t\t * @method install\n\t\t * @static\n\t\t **/\n\t\tMotionGuidePlugin.install = function() {\n\t\t\tcreatejs.Tween.installPlugin(MotionGuidePlugin, [\"guide\", \"x\", \"y\", \"rotation\"]);\n\t\t\treturn createjs.Tween.IGNORE;\n\t\t};\n\t\n\t\t/**\n\t\t * @method init\n\t\t * @protected\n\t\t * @static\n\t\t **/\n\t\tMotionGuidePlugin.init = function(tween, prop, value) {\n\t\t\tvar target = tween.target;\n\t\t\tif(!target.hasOwnProperty(\"x\")){ target.x = 0; }\n\t\t\tif(!target.hasOwnProperty(\"y\")){ target.y = 0; }\n\t\t\tif(!target.hasOwnProperty(\"rotation\")){ target.rotation = 0; }\n\t\n\t\t\tif(prop==\"rotation\"){ tween.__needsRot = true; }\n\t\t\treturn prop==\"guide\"?null:value;\n\t\t};\n\t\n\t\t/**\n\t\t * @method step\n\t\t * @protected\n\t\t * @static\n\t\t **/\n\t\tMotionGuidePlugin.step = function(tween, prop, startValue, endValue, injectProps) {\n\t\t\t// other props\n\t\t\tif(prop == \"rotation\"){\n\t\t\t\ttween.__rotGlobalS = startValue;\n\t\t\t\ttween.__rotGlobalE = endValue;\n\t\t\t\tMotionGuidePlugin.testRotData(tween, injectProps);\n\t\t\t}\n\t\t\tif(prop != \"guide\"){ return endValue; }\n\t\n\t\t\t// guide only information - Start -\n\t\t\tvar temp, data = endValue;\n\t\t\tif(!data.hasOwnProperty(\"path\")){ data.path = []; }\n\t\t\tvar path = data.path;\n\t\t\tif(!data.hasOwnProperty(\"end\")){ data.end = 1; }\n\t\t\tif(!data.hasOwnProperty(\"start\")){\n\t\t\t\tdata.start = (startValue&&startValue.hasOwnProperty(\"end\")&&startValue.path===path)?startValue.end:0;\n\t\t\t}\n\t\n\t\t\t// Figure out subline information\n\t\t\tif(data.hasOwnProperty(\"_segments\") && data._length){ return endValue; }\n\t\t\tvar l = path.length;\n\t\t\tvar accuracy = 10;\t\t// Adjust to improve line following precision but sacrifice performance (# of seg)\n\t\t\tif(l >= 6 && (l-2) % 4 == 0){\t// Enough points && contains correct number per entry ignoring start\n\t\t\t\tdata._segments = [];\n\t\t\t\tdata._length = 0;\n\t\t\t\tfor(var i=2; i<l; i+=4){\n\t\t\t\t\tvar sx = path[i-2], sy = path[i-1];\n\t\t\t\t\tvar cx = path[i+0], cy = path[i+1];\n\t\t\t\t\tvar ex = path[i+2], ey = path[i+3];\n\t\t\t\t\tvar oldX = sx, oldY = sy;\n\t\t\t\t\tvar tempX, tempY, total = 0;\n\t\t\t\t\tvar sublines = [];\n\t\t\t\t\tfor(var j=1; j<=accuracy; j++){\n\t\t\t\t\t\tvar t = j/accuracy;\n\t\t\t\t\t\tvar inv = 1 - t;\n\t\t\t\t\t\ttempX = inv*inv * sx + 2 * inv * t * cx + t*t * ex;\n\t\t\t\t\t\ttempY = inv*inv * sy + 2 * inv * t * cy + t*t * ey;\n\t\t\t\t\t\ttotal += sublines[sublines.push(Math.sqrt((temp=tempX-oldX)*temp + (temp=tempY-oldY)*temp))-1];\n\t\t\t\t\t\toldX = tempX;\n\t\t\t\t\t\toldY = tempY;\n\t\t\t\t\t}\n\t\t\t\t\tdata._segments.push(total);\n\t\t\t\t\tdata._segments.push(sublines);\n\t\t\t\t\tdata._length += total;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow(\"invalid 'path' data, please see documentation for valid paths\");\n\t\t\t}\n\t\n\t\t\t// Setup x/y tweens\n\t\t\ttemp = data.orient;\n\t\t\tdata.orient = true;\n\t\t\tvar o = {};\n\t\t\tMotionGuidePlugin.calc(data, data.start, o);\n\t\t\ttween.__rotPathS = Number(o.rotation.toFixed(5));\n\t\t\tMotionGuidePlugin.calc(data, data.end, o);\n\t\t\ttween.__rotPathE = Number(o.rotation.toFixed(5));\n\t\t\tdata.orient = false;\t//here and now we don't know if we need to\n\t\t\tMotionGuidePlugin.calc(data, data.end, injectProps);\n\t\t\tdata.orient = temp;\n\t\n\t\t\t// Setup rotation properties\n\t\t\tif(!data.orient){ return endValue; }\n\t\t\ttween.__guideData = data;\n\t\t\tMotionGuidePlugin.testRotData(tween, injectProps);\n\t\t\treturn endValue;\n\t\t};\n\t\n\t\t/**\n\t\t * @method testRotData\n\t\t * @protected\n\t\t * @static\n\t\t **/\n\t\tMotionGuidePlugin.testRotData = function(tween, injectProps){\n\t\n\t\t\t// no rotation informat? if we need it come back, if we don't use 0 & ensure we have guide data\n\t\t\tif(tween.__rotGlobalS === undefined || tween.__rotGlobalE === undefined){\n\t\t\t\tif(tween.__needsRot){ return; }\n\t\t\t\tif(tween._curQueueProps.rotation !== undefined){\n\t\t\t\t\ttween.__rotGlobalS = tween.__rotGlobalE = tween._curQueueProps.rotation;\n\t\t\t\t} else {\n\t\t\t\t\ttween.__rotGlobalS = tween.__rotGlobalE = injectProps.rotation = tween.target.rotation || 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(tween.__guideData === undefined){ return; }\n\t\n\t\t\t// Process rotation properties\n\t\t\tvar data = tween.__guideData;\n\t\t\tvar rotGlobalD = tween.__rotGlobalE - tween.__rotGlobalS;\n\t\t\tvar rotPathD = tween.__rotPathE - tween.__rotPathS;\n\t\t\tvar rot = rotGlobalD - rotPathD;\n\t\n\t\t\tif(data.orient == \"auto\"){\n\t\t\t\tif(rot > 180){\t\t\trot -= 360; }\n\t\t\t\telse if(rot < -180){\trot += 360; }\n\t\n\t\t\t} else if(data.orient == \"cw\"){\n\t\t\t\twhile(rot < 0){ rot += 360; }\n\t\t\t\tif(rot == 0 && rotGlobalD > 0 && rotGlobalD != 180){ rot += 360; }\n\t\n\t\t\t} else if(data.orient == \"ccw\"){\n\t\t\t\trot = rotGlobalD - ((rotPathD > 180)?(360-rotPathD):(rotPathD));\t// sign flipping on path\n\t\t\t\twhile(rot > 0){ rot -= 360; }\n\t\t\t\tif(rot == 0 && rotGlobalD < 0 && rotGlobalD != -180){ rot -= 360; }\n\t\t\t}\n\t\n\t\t\tdata.rotDelta = rot;\n\t\t\tdata.rotOffS = tween.__rotGlobalS - tween.__rotPathS;\n\t\n\t\t\t// reset\n\t\t\ttween.__rotGlobalS = tween.__rotGlobalE = tween.__guideData = tween.__needsRot = undefined;\n\t\t};\n\t\n\t\t/**\n\t\t * @method tween\n\t\t * @protected\n\t\t * @static\n\t\t **/\n\t\tMotionGuidePlugin.tween = function(tween, prop, value, startValues, endValues, ratio, wait, end) {\n\t\t\tvar data = endValues.guide;\n\t\t\tif(data == undefined || data === startValues.guide){ return value; }\n\t\t\tif(data.lastRatio != ratio){\n\t\t\t\t// first time through so calculate what I need to\n\t\t\t\tvar t = ((data.end-data.start)*(wait?data.end:ratio)+data.start);\n\t\t\t\tMotionGuidePlugin.calc(data, t, tween.target);\n\t\t\t\tswitch(data.orient){\n\t\t\t\t\tcase \"cw\":\t\t// mix in the original rotation\n\t\t\t\t\tcase \"ccw\":\n\t\t\t\t\tcase \"auto\": tween.target.rotation += data.rotOffS + data.rotDelta*ratio; break;\n\t\t\t\t\tcase \"fixed\":\t// follow fixed behaviour to solve potential issues\n\t\t\t\t\tdefault: tween.target.rotation += data.rotOffS; break;\n\t\t\t\t}\n\t\t\t\tdata.lastRatio = ratio;\n\t\t\t}\n\t\t\tif(prop == \"rotation\" && ((!data.orient) || data.orient == \"false\")){ return value; }\n\t\t\treturn tween.target[prop];\n\t\t};\n\t\n\t\t/**\n\t\t * Determine the appropriate x/y/rotation information about a path for a given ratio along the path.\n\t\t * Assumes a path object with all optional parameters specified.\n\t\t * @param data Data object you would pass to the \"guide:\" property in a Tween\n\t\t * @param ratio 0-1 Distance along path, values outside 0-1 are \"best guess\"\n\t\t * @param target Object to copy the results onto, will use a new object if not supplied.\n\t\t * @return {Object} The target object or a new object w/ the tweened properties\n\t\t * @static\n\t\t */\n\t\tMotionGuidePlugin.calc = function(data, ratio, target) {\n\t\t\tif(data._segments == undefined){ throw(\"Missing critical pre-calculated information, please file a bug\"); }\n\t\t\tif(target == undefined){ target = {x:0, y:0, rotation:0}; }\n\t\t\tvar seg = data._segments;\n\t\t\tvar path = data.path;\n\t\n\t\t\t// find segment\n\t\t\tvar pos = data._length * ratio;\n\t\t\tvar cap = seg.length - 2;\n\t\t\tvar n = 0;\n\t\t\twhile(pos > seg[n] && n < cap){\n\t\t\t\tpos -= seg[n];\n\t\t\t\tn+=2;\n\t\t\t}\n\t\n\t\t\t// find subline\n\t\t\tvar sublines = seg[n+1];\n\t\t\tvar i = 0;\n\t\t\tcap = sublines.length-1;\n\t\t\twhile(pos > sublines[i] && i < cap){\n\t\t\t\tpos -= sublines[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tvar t = (i/++cap)+(pos/(cap*sublines[i]));\n\t\n\t\t\t// find x/y\n\t\t\tn = (n*2)+2;\n\t\t\tvar inv = 1 - t;\n\t\t\ttarget.x = inv*inv * path[n-2] + 2 * inv * t * path[n+0] + t*t * path[n+2];\n\t\t\ttarget.y = inv*inv * path[n-1] + 2 * inv * t * path[n+1] + t*t * path[n+3];\n\t\n\t\t\t// orientation\n\t\t\tif(data.orient){\n\t\t\t\ttarget.rotation = 57.2957795 * Math.atan2(\n\t\t\t\t\t(path[n+1]-path[n-1])*inv + (path[n+3]-path[n+1])*t,\n\t\t\t\t\t(path[n+0]-path[n-2])*inv + (path[n+2]-path[n+0])*t);\n\t\t\t}\n\t\n\t\t\treturn target;\n\t\t};\n\t\n\t\tcreatejs.MotionGuidePlugin = MotionGuidePlugin;\n\t\n\t}());\n\t\n\t//##############################################################################\n\t// version.js\n\t//##############################################################################\n\t\n\t(function (createjs) {\n\t\t\"use strict\";\n\t\n\t\t/**\n\t\t * Static class holding library specific information such as the version and buildDate of\n\t\t * the library.\n\t\t * @class TweenJS\n\t\t **/\n\t\tvar s = createjs.TweenJS = createjs.TweenJS || {};\n\t\n\t\t/**\n\t\t * The version string for this release.\n\t\t * @property version\n\t\t * @type String\n\t\t * @static\n\t\t **/\n\t\ts.version = /*=version*/\"0.6.2\"; // injected by build process\n\t\n\t\t/**\n\t\t * The build date for this release in UTC format.\n\t\t * @property buildDate\n\t\t * @type String\n\t\t * @static\n\t\t **/\n\t\ts.buildDate = /*=date*/\"Sat, 12 Nov 2016 06:45:00 GMT\"; // injected by build process\n\t\n\t})(scope.createjs);\n\t\n\tmodule.exports = scope.createjs;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module), (function() { return this; }())))\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createjsBrowserify = __webpack_require__(4);\n\t\n\tvar _createjsBrowserify2 = _interopRequireDefault(_createjsBrowserify);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t(function (global, factory) {\n\t  if (( false ? 'undefined' : _typeof(module)) === 'object' && _typeof(module.exports) === 'object') {\n\t    // For CommonJS and CommonJS-like environments where a proper `window`\n\t    // is present, execute the factory and get ElementsJS.\n\t    // For environments that do not have a `window` with a `document`\n\t    // (such as Node.js), expose a factory as module.exports.\n\t    // This accentuates the need for the creation of a real `window`.\n\t    module.exports = global.document ? factory(global, true) : function (w) {\n\t      if (!w.document) {\n\t        throw new Error('ElementsJS requires a window with a document');\n\t      }\n\t      return factory(w);\n\t    };\n\t  } else {\n\t    factory(global);\n\t  }\n\t  // Pass this if window is not defined yet\n\t})(typeof window !== 'undefined' ? window : undefined, function (window) {\n\t  return {\n\t    AlphaMapFilter: _createjsBrowserify2.default.AlphaMapFilter,\n\t    AlphaMaskFilter: _createjsBrowserify2.default.AlphaMaskFilter,\n\t    Bitmap: _createjsBrowserify2.default.Bitmap,\n\t    BitmapText: _createjsBrowserify2.default.BitmapText,\n\t    BlurFilter: _createjsBrowserify2.default.BlurFilter,\n\t    ButtonHelper: _createjsBrowserify2.default.ButtonHelper,\n\t    ColorFilter: _createjsBrowserify2.default.ColorFilter,\n\t    ColorMatrix: _createjsBrowserify2.default.ColorMatrix,\n\t    ColorMatrixFilter: _createjsBrowserify2.default.ColorMatrixFilter,\n\t    Container: _createjsBrowserify2.default.Container,\n\t    DisplayObject: _createjsBrowserify2.default.DisplayObject,\n\t    DisplayProps: _createjsBrowserify2.default.DisplayProps,\n\t    DOMElement: _createjsBrowserify2.default.DOMElement,\n\t    EventDispatcher: _createjsBrowserify2.default.EventDispatcher,\n\t    Filter: _createjsBrowserify2.default.Filter,\n\t    Graphics: _createjsBrowserify2.default.Graphics,\n\t    Matrix2D: _createjsBrowserify2.default.Matrix2D,\n\t    MouseEvent: _createjsBrowserify2.default.MouseEvent,\n\t    MovieClip: _createjsBrowserify2.default.MovieClip,\n\t    MovieClipPlugin: _createjsBrowserify2.default.MovieClipPlugin,\n\t    Point: _createjsBrowserify2.default.Point,\n\t    Rectangle: _createjsBrowserify2.default.Rectangle,\n\t    Shadow: _createjsBrowserify2.default.Shadow,\n\t    Shape: _createjsBrowserify2.default.Shape,\n\t    Sprite: _createjsBrowserify2.default.Sprite,\n\t    SpriteContainer: _createjsBrowserify2.default.SpriteContainer,\n\t    SpriteSheet: _createjsBrowserify2.default.SpriteSheet,\n\t    SpriteSheetBuilder: _createjsBrowserify2.default.SpriteSheetBuilder,\n\t    SpriteSheetUtils: _createjsBrowserify2.default.SpriteSheetUtils,\n\t    SpriteStage: _createjsBrowserify2.default.SpriteStage,\n\t    Stage: _createjsBrowserify2.default.Stage,\n\t    Text: _createjsBrowserify2.default.Text,\n\t    Ticker: _createjsBrowserify2.default.Ticker,\n\t    Touch: _createjsBrowserify2.default.Touch,\n\t    UID: _createjsBrowserify2.default.UID,\n\t    extend: _createjsBrowserify2.default.extend,\n\t    indexOf: _createjsBrowserify2.default.indexOf,\n\t    promote: _createjsBrowserify2.default.promote,\n\t    buildDate: _createjsBrowserify2.default.EaselJS.buildDate,\n\t    version: _createjsBrowserify2.default.EaselJS.version\n\t  };\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module)))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createjsBrowserify = __webpack_require__(4);\n\t\n\tvar _createjsBrowserify2 = _interopRequireDefault(_createjsBrowserify);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t(function (global, factory) {\n\t  if (( false ? 'undefined' : _typeof(module)) === 'object' && _typeof(module.exports) === 'object') {\n\t    // For CommonJS and CommonJS-like environments where a proper `window`\n\t    // is present, execute the factory and get ElementsJS.\n\t    // For environments that do not have a `window` with a `document`\n\t    // (such as Node.js), expose a factory as module.exports.\n\t    // This accentuates the need for the creation of a real `window`.\n\t    module.exports = global.document ? factory(global, true) : function (w) {\n\t      if (!w.document) {\n\t        throw new Error('ElementsJS requires a window with a document');\n\t      }\n\t      return factory(w);\n\t    };\n\t  } else {\n\t    factory(global);\n\t  }\n\t  // Pass this if window is not defined yet\n\t})(typeof window !== 'undefined' ? window : undefined, function (window) {\n\t  return {\n\t    AbstractPlugin: _createjsBrowserify2.default.AbstractPlugin,\n\t    AbstractSoundInstance: _createjsBrowserify2.default.AbstractSoundInstance,\n\t    AudioSprite: _createjsBrowserify2.default.AudioSprite,\n\t    CordovaAudioLoader: _createjsBrowserify2.default.CordovaAudioLoader,\n\t    CordovaAudioPlugin: _createjsBrowserify2.default.CordovaAudioPlugin,\n\t    CordovaAudioSoundInstance: _createjsBrowserify2.default.CordovaAudioSoundInstance,\n\t    ErrorEvent: _createjsBrowserify2.default.ErrorEvent,\n\t    Event: _createjsBrowserify2.default.Event,\n\t    EventDispatcher: _createjsBrowserify2.default.EventDispatcher,\n\t    FlashAudioLoader: _createjsBrowserify2.default.FlashAudioLoader,\n\t    FlashAudioPlugin: _createjsBrowserify2.default.FlashAudioPlugin,\n\t    FlashAudioSoundInstance: _createjsBrowserify2.default.FlashAudioSoundInstance,\n\t    HTMLAudioPlugin: _createjsBrowserify2.default.HTMLAudioPlugin,\n\t    HTMLAudioSoundInstance: _createjsBrowserify2.default.HTMLAudioSoundInstance,\n\t    HTMLAudioTagPool: _createjsBrowserify2.default.HTMLAudioTagPool,\n\t    PlayPropsConfig: _createjsBrowserify2.default.PlayPropsConfig,\n\t    Sound: _createjsBrowserify2.default.Sound,\n\t    WebAudioLoader: _createjsBrowserify2.default.WebAudioLoader,\n\t    WebAudioPlugin: _createjsBrowserify2.default.WebAudioPlugin,\n\t    WebAudioSoundInstance: _createjsBrowserify2.default.WebAudioSoundInstance,\n\t    extend: _createjsBrowserify2.default.extend,\n\t    indexOf: _createjsBrowserify2.default.indexOf,\n\t    promote: _createjsBrowserify2.default.promote,\n\t    buildDate: _createjsBrowserify2.default.SoundJS.buildDate,\n\t    version: _createjsBrowserify2.default.SoundJS.version\n\t  };\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module)))\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _TextElement2 = __webpack_require__(11);\n\t\n\tvar _TextElement3 = _interopRequireDefault(_TextElement2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * constructs a LabelElement instance\n\t * @class LabelElement\n\t * @classdesc the LabelElement class extends TextElement, implementing padding, minWidth, etc etc ...\n\t * @extend TextElement\n\t * @public\n\t * @param {Object} options the options to be merged with defaults settings\n\t * @type {LabelElement}\n\t */\n\tvar LabelElement = function (_TextElement) {\n\t  _inherits(LabelElement, _TextElement);\n\t\n\t  function LabelElement() {\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, LabelElement);\n\t\n\t    return _possibleConstructorReturn(this, (LabelElement.__proto__ || Object.getPrototypeOf(LabelElement)).call(this, options));\n\t  }\n\t\n\t  /**\n\t   * Initialize default settings for Label Element\n\t   * @memberOf LabelElement\n\t   * @method initDefaults\n\t   * @instance\n\t   * @override\n\t   * @param {Object} defaults the defaults settings\n\t   */\n\t\n\t\n\t  _createClass(LabelElement, [{\n\t    key: 'initDefaults',\n\t    value: function initDefaults(defaults) {\n\t      _get(LabelElement.prototype.__proto__ || Object.getPrototypeOf(LabelElement.prototype), 'initDefaults', this).call(this, {\n\t        text: 'Label',\n\t        padding: 10,\n\t        minWidth: 0\n\t      }.inherit(defaults));\n\t    }\n\t\n\t    /**\n\t     * compute bounds before drawing all graphic elements of LabelElement instance\n\t     * @memberOf LabelElement\n\t     * @method computeBounds\n\t     * @instance\n\t     * @override\n\t     */\n\t\n\t  }, {\n\t    key: 'computeBounds',\n\t    value: function computeBounds() {\n\t      _get(LabelElement.prototype.__proto__ || Object.getPrototypeOf(LabelElement.prototype), 'computeBounds', this).call(this);\n\t\n\t      if (!!this.settings.minWidth) {\n\t        if (String.isPercentage(this.settings.minWidth) && !!this.parent) {\n\t          this.settings.minWidth = this.parent.getComputedBounds().width * this.settings.minWidth.parsePercentage();\n\t        }\n\t\n\t        if (this.settings.size.width < this.settings.minWidth) {\n\t          this.settings.size.width = this.settings.minWidth;\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * centers the text inside LabelElement container\n\t     * @memberOf LabelElement\n\t     * @method centerText\n\t     * @instance\n\t     * @override\n\t     */\n\t\n\t  }, {\n\t    key: 'centerText',\n\t    value: function centerText() {\n\t      if (!!this.settings.outline) {\n\t        this.textOutline.inherit({\n\t          x: this.settings.size.width * 0.5,\n\t          y: this.settings.size.height * 0.5\n\t        });\n\t      }\n\t\n\t      this.text.inherit({\n\t        x: this.settings.size.width * 0.5,\n\t        y: this.settings.size.height * 0.5\n\t      });\n\t    }\n\t\n\t    /**\n\t     * aligns the text inside the LabelElement container\n\t     * @memberOf LabelElement\n\t     * @method alignText\n\t     * @instance\n\t     * @override\n\t     * @param {String} mode can be a couple of word for horizontal or vertical align, in any order<br>\n\t     *   accepts the following modes<br>\n\t     *   <ul>\n\t     *     <li><b>Horizontal Modes</b>: left, center, right</li>\n\t     *     <li><b>Vertical Modes</b>: top, middle, bottom</li>\n\t     *   </ul>\n\t     * @return {LabelElement}\n\t     */\n\t\n\t  }, {\n\t    key: 'alignText',\n\t    value: function alignText() {\n\t      var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'center middle';\n\t\n\t      var modes = mode.toArray(' ');\n\t      var horizontalModes = ['left', 'center', 'right'];\n\t      var verticalModes = ['top', 'middle', 'bottom'];\n\t\n\t      var textOptions = {\n\t        x: this.settings.size.width * 0.5,\n\t        y: this.settings.size.height * 0.5,\n\t        textAlign: 'center',\n\t        textBaseline: 'middle'\n\t      };\n\t\n\t      if (horizontalModes.contains(modes)) {\n\t        if (modes.contains('left')) {\n\t          textOptions.inherit({\n\t            x: 0,\n\t            textAlign: 'left'\n\t          });\n\t        } else if (modes.contains('right')) {\n\t          textOptions.inherit({\n\t            x: this.settings.size.width,\n\t            textAlign: 'right'\n\t          });\n\t        }\n\t      }\n\t\n\t      if (verticalModes.contains(modes)) {\n\t        if (modes.contains('top')) {\n\t          textOptions.inherit({\n\t            y: 0,\n\t            textBaseline: 'top'\n\t          });\n\t        } else if (modes.contains('bottom')) {\n\t          textOptions.inherit({\n\t            y: this.settings.size.height,\n\t            textBaseline: 'bottom'\n\t          });\n\t        }\n\t      }\n\t\n\t      if (!!this.settings.outline) {\n\t        this.textOutline.inherit(textOptions);\n\t      }\n\t\n\t      this.text.inherit(textOptions);\n\t\n\t      return this;\n\t    }\n\t  }]);\n\t\n\t  return LabelElement;\n\t}(_TextElement3.default);\n\t\n\texports.default = LabelElement;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _LabelElement2 = __webpack_require__(7);\n\t\n\tvar _LabelElement3 = _interopRequireDefault(_LabelElement2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * constructs a ButtonElement instance\n\t * @class ButtonElement\n\t * @classdesc Button Element class, extending LabelElement with a click event handler\n\t * @extends LabelElement\n\t * @param {Object} options the options object to be merged with defaults\n\t * @type {ButtonElement}\n\t * @public\n\t */\n\tvar ButtonElement = function (_LabelElement) {\n\t  _inherits(ButtonElement, _LabelElement);\n\t\n\t  function ButtonElement() {\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, ButtonElement);\n\t\n\t    return _possibleConstructorReturn(this, (ButtonElement.__proto__ || Object.getPrototypeOf(ButtonElement)).call(this, options));\n\t  }\n\t\n\t  /**\n\t   * Initialize default settings for Button Element\n\t   * @memberOf ButtonElement\n\t   * @method initDefaults\n\t   * @instance\n\t   * @override\n\t   */\n\t\n\t\n\t  _createClass(ButtonElement, [{\n\t    key: 'initDefaults',\n\t    value: function initDefaults(defaults) {\n\t      _get(ButtonElement.prototype.__proto__ || Object.getPrototypeOf(ButtonElement.prototype), 'initDefaults', this).call(this, {\n\t        text: 'Button',\n\t        stroke: {\n\t          size: 4,\n\t          radius: 5,\n\t          color: '#fff'\n\t        },\n\t        events: {\n\t          click: function click() {}\n\t        }\n\t      }.inherit(defaults));\n\t    }\n\t\n\t    /**\n\t     * drawElements method implementation\n\t     * @memberOf BoxElement\n\t     * @method drawElements\n\t     * @instance\n\t     * @override\n\t     */\n\t\n\t  }, {\n\t    key: 'drawElements',\n\t    value: function drawElements() {\n\t      _get(ButtonElement.prototype.__proto__ || Object.getPrototypeOf(ButtonElement.prototype), 'drawElements', this).call(this);\n\t    }\n\t  }]);\n\t\n\t  return ButtonElement;\n\t}(_LabelElement3.default);\n\t\n\texports.default = ButtonElement;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _ElementHelpers = __webpack_require__(3);\n\t\n\tvar _ElementHelpers2 = _interopRequireDefault(_ElementHelpers);\n\t\n\tvar _Element2 = __webpack_require__(2);\n\t\n\tvar _Element3 = _interopRequireDefault(_Element2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * constructs an ImageElement instance\n\t * @class ImageElement\n\t * @classdesc ImageElement class, extending Element\n\t * @extends Element\n\t * @param {Object} options the options object to be merged with defaults\n\t * @type {ImageElement}\n\t * @public\n\t */\n\tvar ImageElement = function (_Element) {\n\t  _inherits(ImageElement, _Element);\n\t\n\t  function ImageElement() {\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, ImageElement);\n\t\n\t    return _possibleConstructorReturn(this, (ImageElement.__proto__ || Object.getPrototypeOf(ImageElement)).call(this, options));\n\t  }\n\t\n\t  /**\n\t   * Initialize default settings for ImageElement\n\t   * @memberOf ImageElement\n\t   * @method initDefaults\n\t   * @instance\n\t   * @override\n\t   */\n\t\n\t\n\t  _createClass(ImageElement, [{\n\t    key: 'initDefaults',\n\t    value: function initDefaults() {\n\t      _get(ImageElement.prototype.__proto__ || Object.getPrototypeOf(ImageElement.prototype), 'initDefaults', this).call(this, {\n\t        image: null\n\t      });\n\t    }\n\t\n\t    /**\n\t     * sets the scale factor for ImageElement instance\n\t     * @memberOf ImageElement\n\t     * @method setScale\n\t     * @instance\n\t     * @param {Number|Object} scaleOptions can be a Number (it will be used for both scaleX and scaleY attributes)<br>\n\t     *   can be an Object containing\n\t     * @param {Number} scaleOptions.x the scaleX factor for the ImageElement\n\t     * @param {Number} scaleOptions.y the scaleY factor for the ImageElement\n\t     * @return {ImageElement}\n\t     */\n\t\n\t  }, {\n\t    key: 'setScale',\n\t    value: function setScale() {\n\t      var scaleOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { x: 1, y: 1 };\n\t\n\t      _get(ImageElement.prototype.__proto__ || Object.getPrototypeOf(ImageElement.prototype), 'setScale', this).call(this, scaleOptions);\n\t\n\t      this.image.inherit({\n\t        scaleX: this.settings.scale.x,\n\t        scaleY: this.settings.scale.y\n\t      });\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * draws all graphic elements of the ImageElement instance\n\t     * @memberOf ImageElement\n\t     * @method drawElements\n\t     * @instance\n\t     * @override\n\t     */\n\t\n\t  }, {\n\t    key: 'drawElements',\n\t    value: function drawElements() {\n\t      this.image = _ElementHelpers2.default.createImage(this.settings.image);\n\t      this.imageBounds = this.image.getBounds();\n\t\n\t      if (!this.settings.size.force) {\n\t        this.settings.inherit({\n\t          size: {\n\t            width: this.imageBounds.width,\n\t            height: this.imageBounds.height\n\t          }\n\t        });\n\t      } else {\n\t        _ElementHelpers2.default.align(this.image, null, 'center middle', true);\n\t      }\n\t\n\t      if (!this.settings.debug) {\n\t        _get(ImageElement.prototype.__proto__ || Object.getPrototypeOf(ImageElement.prototype), 'drawElements', this).call(this);\n\t      }\n\t\n\t      this.addChild(this.image);\n\t\n\t      if (!!this.settings.debug) {\n\t        _get(ImageElement.prototype.__proto__ || Object.getPrototypeOf(ImageElement.prototype), 'drawElements', this).call(this);\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return ImageElement;\n\t}(_Element3.default);\n\t\n\texports.default = ImageElement;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _ButtonElement2 = __webpack_require__(8);\n\t\n\tvar _ButtonElement3 = _interopRequireDefault(_ButtonElement2);\n\t\n\tvar _ImageElement = __webpack_require__(9);\n\t\n\tvar _ImageElement2 = _interopRequireDefault(_ImageElement);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * constructs a ListItemElement instance\n\t * @class ListItemElement\n\t * @classdesc the ListItemElement extends ButtonElement allowing you to add a list item indicator and a text, with a click event handler\n\t * @extend ButtonElement\n\t * @param {Object} options the options object to be merged with defaults\n\t * @type {ListItemElement}\n\t * @public\n\t */\n\tvar ListItemElement = function (_ButtonElement) {\n\t  _inherits(ListItemElement, _ButtonElement);\n\t\n\t  function ListItemElement() {\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, ListItemElement);\n\t\n\t    return _possibleConstructorReturn(this, (ListItemElement.__proto__ || Object.getPrototypeOf(ListItemElement)).call(this, options));\n\t  }\n\t\n\t  /**\n\t   * Initialize default settings for ListItemElement instance\n\t   * @memberOf ListItemElement\n\t   * @method initDefaults\n\t   * @instance\n\t   * @override\n\t   */\n\t\n\t\n\t  _createClass(ListItemElement, [{\n\t    key: 'initDefaults',\n\t    value: function initDefaults() {\n\t      _get(ListItemElement.prototype.__proto__ || Object.getPrototypeOf(ListItemElement.prototype), 'initDefaults', this).call(this, {\n\t        text: 'List Item',\n\t        indicator: false, // options for an ImageElement to use as listItem indicator\n\t        stroke: {\n\t          size: 0,\n\t          radius: 0,\n\t          color: 'transparent'\n\t        },\n\t        events: {\n\t          click: function click() {}\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * draws all graphic elements of the ListItemElement instance\n\t     * @memberOf ListItemElement\n\t     * @method drawElements\n\t     * @instance\n\t     * @override\n\t     */\n\t\n\t  }, {\n\t    key: 'drawElements',\n\t    value: function drawElements() {\n\t      if (!!this.settings.indicator) {\n\t        this.indicator = new _ImageElement2.default(this.settings.indicator.inherit({\n\t          parent: this,\n\t          align: 'left middle'\n\t        })).setPosition({\n\t          x: 10\n\t        });\n\t\n\t        this.settings.lineHeight = this.indicator.getComputedBounds().height;\n\t      }\n\t\n\t      _get(ListItemElement.prototype.__proto__ || Object.getPrototypeOf(ListItemElement.prototype), 'drawElements', this).call(this);\n\t\n\t      this.alignText('left middle');\n\t      this.setTextPosition({\n\t        x: this.indicator.getComputedBounds().right + 10\n\t      }, true);\n\t    }\n\t  }]);\n\t\n\t  return ListItemElement;\n\t}(_ButtonElement3.default);\n\t\n\texports.default = ListItemElement;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _EaselJS = __webpack_require__(5);\n\t\n\tvar _ElementHelpers = __webpack_require__(3);\n\t\n\tvar _ElementHelpers2 = _interopRequireDefault(_ElementHelpers);\n\t\n\tvar _Element2 = __webpack_require__(2);\n\t\n\tvar _Element3 = _interopRequireDefault(_Element2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * constructs a TextElement instance\n\t * @class TextElement\n\t * @classdesc extends Element Class adding an EaselJS Text instance inside of it\n\t * @extend Element\n\t * @public\n\t * @param {Object} options the options to be merged with defaults settings\n\t * @type {TextElement}\n\t */\n\tvar TextElement = function (_Element) {\n\t  _inherits(TextElement, _Element);\n\t\n\t  function TextElement() {\n\t    _classCallCheck(this, TextElement);\n\t\n\t    return _possibleConstructorReturn(this, (TextElement.__proto__ || Object.getPrototypeOf(TextElement)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(TextElement, [{\n\t    key: 'initDefaults',\n\t\n\t    /**\n\t     * initializes defaults settings for TextElement\n\t     * @memberOf TextElement\n\t     * @method initDefaults\n\t     * @instance\n\t     * @override\n\t     */\n\t    value: function initDefaults(defaults) {\n\t      _get(TextElement.prototype.__proto__ || Object.getPrototypeOf(TextElement.prototype), 'initDefaults', this).call(this, {\n\t        text: 'Text Element',\n\t        font: '50px Arial',\n\t        color: '#000',\n\t        padding: 0,\n\t        lineHeight: false,\n\t        maxWidth: false,\n\t        shadow: false,\n\t        outline: false\n\t      }.inherit(defaults));\n\t    }\n\t\n\t    /**\n\t     * initializes the settings object for the TextElement instance\n\t     * @memberOf TextElement\n\t     * @method initSettings\n\t     * @instance\n\t     * @override\n\t     * @param {Object} options the options to be merged with the defaults settings\n\t     */\n\t\n\t  }, {\n\t    key: 'initSettings',\n\t    value: function initSettings(options) {\n\t      _get(TextElement.prototype.__proto__ || Object.getPrototypeOf(TextElement.prototype), 'initSettings', this).call(this, options);\n\t\n\t      if (!this.settings.lineHeight) {\n\t        this.settings.lineHeight = Number.parse(this.settings.font);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * computes the bounds based on specified text parameter\n\t     * @memberOf TextElement\n\t     * @method computeBounds\n\t     * @instance\n\t     */\n\t\n\t  }, {\n\t    key: 'computeBounds',\n\t    value: function computeBounds() {\n\t      this.textBounds = !!this.settings.outline ? this.textOutline.getBounds() : this.text.getBounds();\n\t\n\t      if (!!this.settings.padding) {\n\t        if (Array.isArray(this.settings.padding)) {\n\t          var horizontalPadding = this.settings.padding[0];\n\t          var verticalPadding = this.settings.padding[1];\n\t\n\t          if (horizontalPadding > 0) {\n\t            this.textBounds.inherit({\n\t              width: this.textBounds.width + horizontalPadding\n\t            });\n\t          }\n\t\n\t          if (verticalPadding > 0) {\n\t            this.textBounds.inherit({\n\t              height: this.textBounds.height + verticalPadding\n\t            });\n\t          }\n\t        } else if (Number.isNumber(this.settings.padding)) {\n\t          if (this.settings.padding > 0) {\n\t            this.textBounds.inherit({\n\t              width: this.textBounds.width + this.settings.padding,\n\t              height: this.textBounds.height + this.settings.padding\n\t            });\n\t          }\n\t        }\n\t      }\n\t\n\t      this.settings.inherit({\n\t        size: {\n\t          width: this.textBounds.width,\n\t          height: this.textBounds.height\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * centers the text inside the container\n\t     * @memberOf TextElement\n\t     * @method centerText\n\t     * @instance\n\t     */\n\t\n\t  }, {\n\t    key: 'centerText',\n\t    value: function centerText() {\n\t      if (!!this.settings.outline) {\n\t        this.textOutline.inherit({\n\t          x: this.settings.size.width * 0.5,\n\t          y: this.settings.lineHeight * 0.5\n\t        });\n\t      }\n\t\n\t      this.text.inherit({\n\t        x: this.settings.size.width * 0.5,\n\t        y: this.settings.lineHeight * 0.5\n\t      });\n\t    }\n\t\n\t    /**\n\t     * draws all graphic elements of the TextElement instance\n\t     * @memberOf TextElement\n\t     * @method drawElements\n\t     * @instance\n\t     * @override\n\t     */\n\t\n\t  }, {\n\t    key: 'drawElements',\n\t    value: function drawElements() {\n\t      if (!!this.settings.outline) {\n\t        this.textOutline = _ElementHelpers2.default.createText(this.settings.text, this.settings.font, this.settings.outline.color);\n\t        this.addChild(this.textOutline);\n\t        this.setChildIndex(this.textOutline, 1);\n\t      }\n\t\n\t      this.text = _ElementHelpers2.default.createText(this.settings.text, this.settings.font, this.settings.color);\n\t      this.addChild(this.text);\n\t      this.setChildIndex(this.text, !!this.settings.outline ? 2 : 1);\n\t\n\t      if (!!this.settings.outline) {\n\t        this.textOutline.inherit({\n\t          textAlign: 'center',\n\t          textBaseline: 'middle',\n\t          lineHeight: this.settings.lineHeight || null,\n\t          lineWidth: this.settings.maxWidth || null,\n\t          outline: this.settings.outline.size,\n\t          shadow: !!this.settings.shadow ? new (Function.prototype.bind.apply(_EaselJS.Shadow, [null].concat(_toConsumableArray(this.settings.shadow))))() : null\n\t        });\n\t      }\n\t\n\t      this.text.inherit({\n\t        textAlign: 'center',\n\t        textBaseline: 'middle',\n\t        lineHeight: this.settings.lineHeight || null,\n\t        lineWidth: this.settings.maxWidth || null,\n\t        shadow: !!this.settings.shadow ? new (Function.prototype.bind.apply(_EaselJS.Shadow, [null].concat(_toConsumableArray(this.settings.shadow))))() : null\n\t      });\n\t\n\t      this.computeBounds();\n\t      this.centerText();\n\t\n\t      _get(TextElement.prototype.__proto__ || Object.getPrototypeOf(TextElement.prototype), 'drawElements', this).call(this);\n\t    }\n\t\n\t    /**\n\t     * sets or updates the position of the TextElement instance\n\t     * @memberOf TextElement\n\t     * @method setPosition\n\t     * @instance\n\t     * @override\n\t     * @param {Object} position can contain x and y or only one or them\n\t     * @param {Number} [position.x=0] the x position\n\t     * @param {Number} [position.y=0] the y position\n\t     * @param {Boolean} [override=false] specify to override actual TextElement position\n\t     * @return {TextElement} to make chainable the method\n\t     */\n\t\n\t  }, {\n\t    key: 'setTextPosition',\n\t    value: function setTextPosition() {\n\t      var position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { x: 0, y: 0 };\n\t      var override = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\t\n\t      if (!!position.x) {\n\t        if (!!override) {\n\t          if (!!this.settings.outline) {\n\t            this.textOutline.x = position.x;\n\t          }\n\t\n\t          this.text.x = position.x;\n\t        } else {\n\t          if (!!this.settings.outline) {\n\t            this.textOutline.x += position.x;\n\t          }\n\t\n\t          this.text.x += position.x;\n\t        }\n\t      }\n\t\n\t      if (!!position.y) {\n\t        if (!!override) {\n\t          if (!!this.settings.outline) {\n\t            this.textOutline.y = position.y;\n\t          }\n\t\n\t          this.text.y = position.y;\n\t        } else {\n\t          if (!!this.settings.outline) {\n\t            this.textOutline.y += position.y;\n\t          }\n\t\n\t          this.text.y += position.y;\n\t        }\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * gets the actual text content\n\t     * @memberOf TextElement\n\t     * @method getText\n\t     * @instance\n\t     * @return {String}\n\t     */\n\t\n\t  }, {\n\t    key: 'getText',\n\t    value: function getText() {\n\t      return this.text.text;\n\t    }\n\t\n\t    /**\n\t     * sets the text content for the TextElement instance, considering also the textOutline\n\t     * @memberOf TextElement\n\t     * @method setText\n\t     * @instance\n\t     * @param {String} text the text content\n\t     * @return {TextElement} to make chainable the method\n\t     */\n\t\n\t  }, {\n\t    key: 'setText',\n\t    value: function setText(text) {\n\t      if (!!this.settings.outline) {\n\t        this.textOutline.text = text;\n\t      }\n\t\n\t      this.text.text = text;\n\t\n\t      return this;\n\t    }\n\t  }]);\n\t\n\t  return TextElement;\n\t}(_Element3.default);\n\t\n\texports.default = TextElement;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _SoundJS = __webpack_require__(6);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar SoundElement = function () {\n\t  function SoundElement(props) {\n\t    _classCallCheck(this, SoundElement);\n\t\n\t    this.defaults = {\n\t      interrupt: _SoundJS.Sound.INTERRUPT_ANY,\n\t      loop: 0,\n\t      delay: 0,\n\t      offset: 0,\n\t      volume: 1,\n\t      pan: 0\n\t    };\n\t    this.props = props;\n\t    this.playSound();\n\t  }\n\t\n\t  _createClass(SoundElement, [{\n\t    key: 'playSound',\n\t    value: function playSound() {\n\t      var _this = this;\n\t\n\t      var filteredProps = Object.assign({}, this.props);\n\t      delete filteredProps.sound;\n\t      delete filteredProps.fadeIn;\n\t      delete filteredProps.fadeOut;\n\t      delete filteredProps.events;\n\t      var soundProps = Object.assign({}, this.defaults, filteredProps);\n\t\n\t      if (Object.isObject(this.props.fade) && (this.props.fade.type === 'FADE_IN' || this.props.fade.type === 'FADE_ALL')) {\n\t        soundProps.volume = 0;\n\t      }\n\t\n\t      this.instance = _SoundJS.Sound.play(this.props.sound, soundProps);\n\t\n\t      var eventsDefined = !!this.props.events;\n\t\n\t      if (eventsDefined) {\n\t        this.props.events.each(function (value, key) {\n\t          if (Function.isFunction(value)) {\n\t            _this.instance.on(key, value);\n\t          }\n\t        });\n\t      }\n\t\n\t      return this.instance;\n\t    }\n\t  }]);\n\t\n\t  return SoundElement;\n\t}();\n\t\n\texports.default = SoundElement;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module, _) {/**\n\t * @license\n\t * Lodash <https://lodash.com/>\n\t * Copyright JS Foundation and other contributors <https://js.foundation/>\n\t * Released under MIT license <https://lodash.com/license>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '4.17.4';\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Error message constants. */\n\t  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n\t      FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used to stand-in for `undefined` hash values. */\n\t  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\t\n\t  /** Used as the maximum memoize cache size. */\n\t  var MAX_MEMOIZE_SIZE = 500;\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** Used to compose bitmasks for cloning. */\n\t  var CLONE_DEEP_FLAG = 1,\n\t      CLONE_FLAT_FLAG = 2,\n\t      CLONE_SYMBOLS_FLAG = 4;\n\t\n\t  /** Used to compose bitmasks for value comparisons. */\n\t  var COMPARE_PARTIAL_FLAG = 1,\n\t      COMPARE_UNORDERED_FLAG = 2;\n\t\n\t  /** Used to compose bitmasks for function metadata. */\n\t  var WRAP_BIND_FLAG = 1,\n\t      WRAP_BIND_KEY_FLAG = 2,\n\t      WRAP_CURRY_BOUND_FLAG = 4,\n\t      WRAP_CURRY_FLAG = 8,\n\t      WRAP_CURRY_RIGHT_FLAG = 16,\n\t      WRAP_PARTIAL_FLAG = 32,\n\t      WRAP_PARTIAL_RIGHT_FLAG = 64,\n\t      WRAP_ARY_FLAG = 128,\n\t      WRAP_REARG_FLAG = 256,\n\t      WRAP_FLIP_FLAG = 512;\n\t\n\t  /** Used as default options for `_.truncate`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n\t  var HOT_COUNT = 800,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2,\n\t      LAZY_WHILE_FLAG = 3;\n\t\n\t  /** Used as references for various `Number` constants. */\n\t  var INFINITY = 1 / 0,\n\t      MAX_SAFE_INTEGER = 9007199254740991,\n\t      MAX_INTEGER = 1.7976931348623157e+308,\n\t      NAN = 0 / 0;\n\t\n\t  /** Used as references for the maximum length and index of an array. */\n\t  var MAX_ARRAY_LENGTH = 4294967295,\n\t      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t  /** Used to associate wrap methods with their bit flags. */\n\t  var wrapFlags = [\n\t    ['ary', WRAP_ARY_FLAG],\n\t    ['bind', WRAP_BIND_FLAG],\n\t    ['bindKey', WRAP_BIND_KEY_FLAG],\n\t    ['curry', WRAP_CURRY_FLAG],\n\t    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n\t    ['flip', WRAP_FLIP_FLAG],\n\t    ['partial', WRAP_PARTIAL_FLAG],\n\t    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n\t    ['rearg', WRAP_REARG_FLAG]\n\t  ];\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      asyncTag = '[object AsyncFunction]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      domExcTag = '[object DOMException]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      genTag = '[object GeneratorFunction]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      nullTag = '[object Null]',\n\t      objectTag = '[object Object]',\n\t      promiseTag = '[object Promise]',\n\t      proxyTag = '[object Proxy]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      symbolTag = '[object Symbol]',\n\t      undefinedTag = '[object Undefined]',\n\t      weakMapTag = '[object WeakMap]',\n\t      weakSetTag = '[object WeakSet]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      dataViewTag = '[object DataView]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n\t      reUnescapedHtml = /[&<>\"']/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      reLeadingDot = /^\\./,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\t\n\t  /**\n\t   * Used to match `RegExp`\n\t   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n\t   */\n\t  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n\t      reHasRegExpChar = RegExp(reRegExpChar.source);\n\t\n\t  /** Used to match leading and trailing whitespace. */\n\t  var reTrim = /^\\s+|\\s+$/g,\n\t      reTrimStart = /^\\s+/,\n\t      reTrimEnd = /\\s+$/;\n\t\n\t  /** Used to match wrap detail comments. */\n\t  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n\t      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n\t      reSplitDetails = /,? & /;\n\t\n\t  /** Used to match words composed of alphanumeric characters. */\n\t  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /**\n\t   * Used to match\n\t   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n\t   */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect bad signed hexadecimal string values. */\n\t  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\t\n\t  /** Used to detect binary string values. */\n\t  var reIsBinary = /^0b[01]+$/i;\n\t\n\t  /** Used to detect host constructors (Safari). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect octal string values. */\n\t  var reIsOctal = /^0o[0-7]+$/i;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\t\n\t  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n\t  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to compose unicode character classes. */\n\t  var rsAstralRange = '\\\\ud800-\\\\udfff',\n\t      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n\t      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n\t      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n\t      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n\t      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n\t      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n\t      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n\t      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n\t      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n\t      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n\t      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n\t      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n\t      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\t\n\t  /** Used to compose unicode capture groups. */\n\t  var rsApos = \"['\\u2019]\",\n\t      rsAstral = '[' + rsAstralRange + ']',\n\t      rsBreak = '[' + rsBreakRange + ']',\n\t      rsCombo = '[' + rsComboRange + ']',\n\t      rsDigits = '\\\\d+',\n\t      rsDingbat = '[' + rsDingbatRange + ']',\n\t      rsLower = '[' + rsLowerRange + ']',\n\t      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n\t      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n\t      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n\t      rsNonAstral = '[^' + rsAstralRange + ']',\n\t      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n\t      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n\t      rsUpper = '[' + rsUpperRange + ']',\n\t      rsZWJ = '\\\\u200d';\n\t\n\t  /** Used to compose unicode regexes. */\n\t  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n\t      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n\t      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n\t      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n\t      reOptMod = rsModifier + '?',\n\t      rsOptVar = '[' + rsVarRange + ']?',\n\t      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n\t      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n\t      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n\t      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n\t      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n\t      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\t\n\t  /** Used to match apostrophes. */\n\t  var reApos = RegExp(rsApos, 'g');\n\t\n\t  /**\n\t   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n\t   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n\t   */\n\t  var reComboMark = RegExp(rsCombo, 'g');\n\t\n\t  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n\t  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\t\n\t  /** Used to match complex or compound words. */\n\t  var reUnicodeWord = RegExp([\n\t    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n\t    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n\t    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n\t    rsUpper + '+' + rsOptContrUpper,\n\t    rsOrdUpper,\n\t    rsOrdLower,\n\t    rsDigits,\n\t    rsEmoji\n\t  ].join('|'), 'g');\n\t\n\t  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n\t  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\t\n\t  /** Used to detect strings that need a more robust regexp to match words. */\n\t  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n\t    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n\t    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n\t    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n\t  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n\t  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n\t  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n\t  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n\t  typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n\t  cloneableTags[boolTag] = cloneableTags[dateTag] =\n\t  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n\t  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n\t  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n\t  cloneableTags[numberTag] = cloneableTags[objectTag] =\n\t  cloneableTags[regexpTag] = cloneableTags[setTag] =\n\t  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n\t  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\t  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map Latin Unicode letters to basic Latin letters. */\n\t  var deburredLetters = {\n\t    // Latin-1 Supplement block.\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss',\n\t    // Latin Extended-A block.\n\t    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n\t    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n\t    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n\t    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n\t    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n\t    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n\t    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n\t    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n\t    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n\t    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n\t    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n\t    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n\t    '\\u0134': 'J',  '\\u0135': 'j',\n\t    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n\t    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n\t    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n\t    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n\t    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n\t    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n\t    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n\t    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n\t    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n\t    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n\t    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n\t    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n\t    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n\t    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n\t    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n\t    '\\u0174': 'W',  '\\u0175': 'w',\n\t    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n\t    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n\t    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n\t    '\\u0132': 'IJ', '\\u0133': 'ij',\n\t    '\\u0152': 'Oe', '\\u0153': 'oe',\n\t    '\\u0149': \"'n\", '\\u017f': 's'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\"\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Built-in method references without a dependency on `root`. */\n\t  var freeParseFloat = parseFloat,\n\t      freeParseInt = parseInt;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\t\n\t  /** Used as a reference to the global object. */\n\t  var root = freeGlobal || freeSelf || Function('return this')();\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = freeModule && freeModule.exports === freeExports;\n\t\n\t  /** Detect free variable `process` from Node.js. */\n\t  var freeProcess = moduleExports && freeGlobal.process;\n\t\n\t  /** Used to access faster Node.js helpers. */\n\t  var nodeUtil = (function() {\n\t    try {\n\t      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n\t    } catch (e) {}\n\t  }());\n\t\n\t  /* Node.js helper references. */\n\t  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n\t      nodeIsDate = nodeUtil && nodeUtil.isDate,\n\t      nodeIsMap = nodeUtil && nodeUtil.isMap,\n\t      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n\t      nodeIsSet = nodeUtil && nodeUtil.isSet,\n\t      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Adds the key-value `pair` to `map`.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to modify.\n\t   * @param {Array} pair The key-value pair to add.\n\t   * @returns {Object} Returns `map`.\n\t   */\n\t  function addMapEntry(map, pair) {\n\t    // Don't return `map.set` because it's not chainable in IE 11.\n\t    map.set(pair[0], pair[1]);\n\t    return map;\n\t  }\n\t\n\t  /**\n\t   * Adds `value` to `set`.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to modify.\n\t   * @param {*} value The value to add.\n\t   * @returns {Object} Returns `set`.\n\t   */\n\t  function addSetEntry(set, value) {\n\t    // Don't return `set.add` because it's not chainable in IE 11.\n\t    set.add(value);\n\t    return set;\n\t  }\n\t\n\t  /**\n\t   * A faster alternative to `Function#apply`, this function invokes `func`\n\t   * with the `this` binding of `thisArg` and the arguments of `args`.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to invoke.\n\t   * @param {*} thisArg The `this` binding of `func`.\n\t   * @param {Array} args The arguments to invoke `func` with.\n\t   * @returns {*} Returns the result of `func`.\n\t   */\n\t  function apply(func, thisArg, args) {\n\t    switch (args.length) {\n\t      case 0: return func.call(thisArg);\n\t      case 1: return func.call(thisArg, args[0]);\n\t      case 2: return func.call(thisArg, args[0], args[1]);\n\t      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n\t    }\n\t    return func.apply(thisArg, args);\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `baseAggregator` for arrays.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} setter The function to set `accumulator` values.\n\t   * @param {Function} iteratee The iteratee to transform keys.\n\t   * @param {Object} accumulator The initial aggregated object.\n\t   * @returns {Function} Returns `accumulator`.\n\t   */\n\t  function arrayAggregator(array, setter, iteratee, accumulator) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      setter(accumulator, value, iteratee(value), array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEach` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEach(array, iteratee) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      if (iteratee(array[index], index, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEachRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEachRight(array, iteratee) {\n\t    var length = array == null ? 0 : array.length;\n\t\n\t    while (length--) {\n\t      if (iteratee(array[length], length, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.every` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arrayEvery(array, predicate) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      if (!predicate(array[index], index, array)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.filter` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {Array} Returns the new filtered array.\n\t   */\n\t  function arrayFilter(array, predicate) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (predicate(value, index, array)) {\n\t        result[resIndex++] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.includes` for arrays without support for\n\t   * specifying an index to search from.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to inspect.\n\t   * @param {*} target The value to search for.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludes(array, value) {\n\t    var length = array == null ? 0 : array.length;\n\t    return !!length && baseIndexOf(array, value, 0) > -1;\n\t  }\n\t\n\t  /**\n\t   * This function is like `arrayIncludes` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to inspect.\n\t   * @param {*} target The value to search for.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludesWith(array, value, comparator) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(value, array[index])) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.map` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the new mapped array.\n\t   */\n\t  function arrayMap(array, iteratee) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length,\n\t        result = Array(length);\n\t\n\t    while (++index < length) {\n\t      result[index] = iteratee(array[index], index, array);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Appends the elements of `values` to `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {Array} values The values to append.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayPush(array, values) {\n\t    var index = -1,\n\t        length = values.length,\n\t        offset = array.length;\n\t\n\t    while (++index < length) {\n\t      array[offset + index] = values[index];\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduce` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the first element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduce(array, iteratee, accumulator, initAccum) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    if (initAccum && length) {\n\t      accumulator = array[++index];\n\t    }\n\t    while (++index < length) {\n\t      accumulator = iteratee(accumulator, array[index], index, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduceRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the last element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n\t    var length = array == null ? 0 : array.length;\n\t    if (initAccum && length) {\n\t      accumulator = array[--length];\n\t    }\n\t    while (length--) {\n\t      accumulator = iteratee(accumulator, array[length], length, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.some` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arraySome(array, predicate) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      if (predicate(array[index], index, array)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * Gets the size of an ASCII `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  var asciiSize = baseProperty('length');\n\t\n\t  /**\n\t   * Converts an ASCII `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function asciiToArray(string) {\n\t    return string.split('');\n\t  }\n\t\n\t  /**\n\t   * Splits an ASCII `string` into an array of its words.\n\t   *\n\t   * @private\n\t   * @param {string} The string to inspect.\n\t   * @returns {Array} Returns the words of `string`.\n\t   */\n\t  function asciiWords(string) {\n\t    return string.match(reAsciiWord) || [];\n\t  }\n\t\n\t  /**\n\t   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n\t   * without support for iteratee shorthands, which iterates over `collection`\n\t   * using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to inspect.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the found element or its key, else `undefined`.\n\t   */\n\t  function baseFindKey(collection, predicate, eachFunc) {\n\t    var result;\n\t    eachFunc(collection, function(value, key, collection) {\n\t      if (predicate(value, key, collection)) {\n\t        result = key;\n\t        return false;\n\t      }\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 1 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    return value === value\n\t      ? strictIndexOf(array, value, fromIndex)\n\t      : baseFindIndex(array, baseIsNaN, fromIndex);\n\t  }\n\t\n\t  /**\n\t   * This function is like `baseIndexOf` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOfWith(array, value, fromIndex, comparator) {\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(array[index], value)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.isNaN` without support for number objects.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t   */\n\t  function baseIsNaN(value) {\n\t    return value !== value;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.mean` and `_.meanBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the mean.\n\t   */\n\t  function baseMean(array, iteratee) {\n\t    var length = array == null ? 0 : array.length;\n\t    return length ? (baseSum(array, iteratee) / length) : NAN;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.property` without support for deep paths.\n\t   *\n\t   * @private\n\t   * @param {string} key The key of the property to get.\n\t   * @returns {Function} Returns the new accessor function.\n\t   */\n\t  function baseProperty(key) {\n\t    return function(object) {\n\t      return object == null ? undefined : object[key];\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.propertyOf` without support for deep paths.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @returns {Function} Returns the new accessor function.\n\t   */\n\t  function basePropertyOf(object) {\n\t    return function(key) {\n\t      return object == null ? undefined : object[key];\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n\t   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} accumulator The initial value.\n\t   * @param {boolean} initAccum Specify using the first or last element of\n\t   *  `collection` as the initial value.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n\t    eachFunc(collection, function(value, index, collection) {\n\t      accumulator = initAccum\n\t        ? (initAccum = false, value)\n\t        : iteratee(accumulator, value, index, collection);\n\t    });\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sortBy` which uses `comparer` to define the\n\t   * sort order of `array` and replaces criteria objects with their corresponding\n\t   * values.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to sort.\n\t   * @param {Function} comparer The function to define sort order.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function baseSortBy(array, comparer) {\n\t    var length = array.length;\n\t\n\t    array.sort(comparer);\n\t    while (length--) {\n\t      array[length] = array[length].value;\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sum` and `_.sumBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the sum.\n\t   */\n\t  function baseSum(array, iteratee) {\n\t    var result,\n\t        index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var current = iteratee(array[index]);\n\t      if (current !== undefined) {\n\t        result = result === undefined ? current : (result + current);\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.times` without support for iteratee shorthands\n\t   * or max array length checks.\n\t   *\n\t   * @private\n\t   * @param {number} n The number of times to invoke `iteratee`.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the array of results.\n\t   */\n\t  function baseTimes(n, iteratee) {\n\t    var index = -1,\n\t        result = Array(n);\n\t\n\t    while (++index < n) {\n\t      result[index] = iteratee(index);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n\t   * of key-value pairs for `object` corresponding to the property names of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the key-value pairs.\n\t   */\n\t  function baseToPairs(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return [key, object[key]];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.unary` without support for storing metadata.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to cap arguments for.\n\t   * @returns {Function} Returns the new capped function.\n\t   */\n\t  function baseUnary(func) {\n\t    return function(value) {\n\t      return func(value);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t   * array of `object` property values corresponding to the property names\n\t   * of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the array of property values.\n\t   */\n\t  function baseValues(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return object[key];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Checks if a `cache` value for `key` exists.\n\t   *\n\t   * @private\n\t   * @param {Object} cache The cache to query.\n\t   * @param {string} key The key of the entry to check.\n\t   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t   */\n\t  function cacheHas(cache, key) {\n\t    return cache.has(key);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the first unmatched string symbol.\n\t   */\n\t  function charsStartIndex(strSymbols, chrSymbols) {\n\t    var index = -1,\n\t        length = strSymbols.length;\n\t\n\t    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the last unmatched string symbol.\n\t   */\n\t  function charsEndIndex(strSymbols, chrSymbols) {\n\t    var index = strSymbols.length;\n\t\n\t    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of `placeholder` occurrences in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} placeholder The placeholder to search for.\n\t   * @returns {number} Returns the placeholder count.\n\t   */\n\t  function countHolders(array, placeholder) {\n\t    var length = array.length,\n\t        result = 0;\n\t\n\t    while (length--) {\n\t      if (array[length] === placeholder) {\n\t        ++result;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n\t   * letters to basic Latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  var deburrLetter = basePropertyOf(deburredLetters);\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the value at `key` of `object`.\n\t   *\n\t   * @private\n\t   * @param {Object} [object] The object to query.\n\t   * @param {string} key The key of the property to get.\n\t   * @returns {*} Returns the property value.\n\t   */\n\t  function getValue(object, key) {\n\t    return object == null ? undefined : object[key];\n\t  }\n\t\n\t  /**\n\t   * Checks if `string` contains Unicode symbols.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n\t   */\n\t  function hasUnicode(string) {\n\t    return reHasUnicode.test(string);\n\t  }\n\t\n\t  /**\n\t   * Checks if `string` contains a word composed of Unicode symbols.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {boolean} Returns `true` if a word is found, else `false`.\n\t   */\n\t  function hasUnicodeWord(string) {\n\t    return reHasUnicodeWord.test(string);\n\t  }\n\t\n\t  /**\n\t   * Converts `iterator` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} iterator The iterator to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function iteratorToArray(iterator) {\n\t    var data,\n\t        result = [];\n\t\n\t    while (!(data = iterator.next()).done) {\n\t      result.push(data.value);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `map` to its key-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to convert.\n\t   * @returns {Array} Returns the key-value pairs.\n\t   */\n\t  function mapToArray(map) {\n\t    var index = -1,\n\t        result = Array(map.size);\n\t\n\t    map.forEach(function(value, key) {\n\t      result[++index] = [key, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Creates a unary function that invokes `func` with its argument transformed.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to wrap.\n\t   * @param {Function} transform The argument transform.\n\t   * @returns {Function} Returns the new function.\n\t   */\n\t  function overArg(func, transform) {\n\t    return function(arg) {\n\t      return func(transform(arg));\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (value === placeholder || value === PLACEHOLDER) {\n\t        array[index] = PLACEHOLDER;\n\t        result[resIndex++] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to an array of its values.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the values.\n\t   */\n\t  function setToArray(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = value;\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to its value-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the value-value pairs.\n\t   */\n\t  function setToPairs(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = [value, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.indexOf` which performs strict equality\n\t   * comparisons of values, i.e. `===`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function strictIndexOf(array, value, fromIndex) {\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.lastIndexOf` which performs strict equality\n\t   * comparisons of values, i.e. `===`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function strictLastIndexOf(array, value, fromIndex) {\n\t    var index = fromIndex + 1;\n\t    while (index--) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of symbols in `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  function stringSize(string) {\n\t    return hasUnicode(string)\n\t      ? unicodeSize(string)\n\t      : asciiSize(string);\n\t  }\n\t\n\t  /**\n\t   * Converts `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function stringToArray(string) {\n\t    return hasUnicode(string)\n\t      ? unicodeToArray(string)\n\t      : asciiToArray(string);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\t\n\t  /**\n\t   * Gets the size of a Unicode `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  function unicodeSize(string) {\n\t    var result = reUnicode.lastIndex = 0;\n\t    while (reUnicode.test(string)) {\n\t      ++result;\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts a Unicode `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function unicodeToArray(string) {\n\t    return string.match(reUnicode) || [];\n\t  }\n\t\n\t  /**\n\t   * Splits a Unicode `string` into an array of its words.\n\t   *\n\t   * @private\n\t   * @param {string} The string to inspect.\n\t   * @returns {Array} Returns the words of `string`.\n\t   */\n\t  function unicodeWords(string) {\n\t    return string.match(reUnicodeWord) || [];\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @since 1.1.0\n\t   * @category Util\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // Create a suped-up `defer` in Node.js.\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  var runInContext = (function runInContext(context) {\n\t    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\t\n\t    /** Built-in constructor references. */\n\t    var Array = context.Array,\n\t        Date = context.Date,\n\t        Error = context.Error,\n\t        Function = context.Function,\n\t        Math = context.Math,\n\t        Object = context.Object,\n\t        RegExp = context.RegExp,\n\t        String = context.String,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for built-in method references. */\n\t    var arrayProto = Array.prototype,\n\t        funcProto = Function.prototype,\n\t        objectProto = Object.prototype;\n\t\n\t    /** Used to detect overreaching core-js shims. */\n\t    var coreJsData = context['__core-js_shared__'];\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var funcToString = funcProto.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /** Used to detect methods masquerading as native. */\n\t    var maskSrcKey = (function() {\n\t      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n\t      return uid ? ('Symbol(src)_1.' + uid) : '';\n\t    }());\n\t\n\t    /**\n\t     * Used to resolve the\n\t     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var nativeObjectToString = objectProto.toString;\n\t\n\t    /** Used to infer the `Object` constructor. */\n\t    var objectCtorString = funcToString.call(Object);\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Built-in value references. */\n\t    var Buffer = moduleExports ? context.Buffer : undefined,\n\t        Symbol = context.Symbol,\n\t        Uint8Array = context.Uint8Array,\n\t        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n\t        getPrototype = overArg(Object.getPrototypeOf, Object),\n\t        objectCreate = Object.create,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        splice = arrayProto.splice,\n\t        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n\t        symIterator = Symbol ? Symbol.iterator : undefined,\n\t        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\t\n\t    var defineProperty = (function() {\n\t      try {\n\t        var func = getNative(Object, 'defineProperty');\n\t        func({}, '', {});\n\t        return func;\n\t      } catch (e) {}\n\t    }());\n\t\n\t    /** Mocked built-ins. */\n\t    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n\t        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n\t        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\t\n\t    /* Built-in method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeFloor = Math.floor,\n\t        nativeGetSymbols = Object.getOwnPropertySymbols,\n\t        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n\t        nativeIsFinite = context.isFinite,\n\t        nativeJoin = arrayProto.join,\n\t        nativeKeys = overArg(Object.keys, Object),\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeNow = Date.now,\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random,\n\t        nativeReverse = arrayProto.reverse;\n\t\n\t    /* Built-in method references that are verified to be native. */\n\t    var DataView = getNative(context, 'DataView'),\n\t        Map = getNative(context, 'Map'),\n\t        Promise = getNative(context, 'Promise'),\n\t        Set = getNative(context, 'Set'),\n\t        WeakMap = getNative(context, 'WeakMap'),\n\t        nativeCreate = getNative(Object, 'create');\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /** Used to detect maps, sets, and weakmaps. */\n\t    var dataViewCtorString = toSource(DataView),\n\t        mapCtorString = toSource(Map),\n\t        promiseCtorString = toSource(Promise),\n\t        setCtorString = toSource(Set),\n\t        weakMapCtorString = toSource(WeakMap);\n\t\n\t    /** Used to convert symbols to primitives and strings. */\n\t    var symbolProto = Symbol ? Symbol.prototype : undefined,\n\t        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n\t        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit method\n\t     * chain sequences. Methods that operate on and return arrays, collections,\n\t     * and functions can be chained together. Methods that retrieve a single value\n\t     * or may return a primitive value will automatically end the chain sequence\n\t     * and return the unwrapped value. Otherwise, the value must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n\t     * enabled using `_.chain`.\n\t     *\n\t     * The execution of chained methods is lazy, that is, it's deferred until\n\t     * `_#value` is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion.\n\t     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n\t     * the creation of intermediate arrays and can greatly reduce the number of\n\t     * iteratee executions. Sections of a chain sequence qualify for shortcut\n\t     * fusion if the section is applied to an array and iteratees accept only\n\t     * one argument. The heuristic for whether a section qualifies for shortcut\n\t     * fusion is subject to change.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n\t     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n\t     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n\t     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n\t     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n\t     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n\t     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n\t     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n\t     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n\t     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n\t     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n\t     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n\t     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n\t     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n\t     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n\t     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n\t     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n\t     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n\t     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n\t     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n\t     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n\t     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n\t     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n\t     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n\t     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n\t     * `zipObject`, `zipObjectDeep`, and `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n\t     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n\t     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n\t     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n\t     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n\t     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n\t     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n\t     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n\t     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n\t     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n\t     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n\t     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n\t     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n\t     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n\t     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n\t     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n\t     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n\t     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n\t     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n\t     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n\t     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n\t     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n\t     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n\t     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n\t     * `upperFirst`, `value`, and `words`\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Seq\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // Returns an unwrapped value.\n\t     * wrapped.reduce(_.add);\n\t     * // => 6\n\t     *\n\t     * // Returns a wrapped value.\n\t     * var squares = wrapped.map(square);\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} proto The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    var baseCreate = (function() {\n\t      function object() {}\n\t      return function(proto) {\n\t        if (!isObject(proto)) {\n\t          return {};\n\t        }\n\t        if (objectCreate) {\n\t          return objectCreate(proto);\n\t        }\n\t        object.prototype = proto;\n\t        var result = new object;\n\t        object.prototype = undefined;\n\t        return result;\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * The function whose prototype chain sequence wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n\t     */\n\t    function LodashWrapper(value, chainAll) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__chain__ = !!chainAll;\n\t      this.__index__ = 0;\n\t      this.__values__ = undefined;\n\t    }\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n\t     * following template settings to use alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {Object}\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {string}\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {Object}\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type {Function}\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t    lodash.prototype.constructor = lodash;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = MAX_ARRAY_LENGTH;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = copyArray(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = copyArray(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = copyArray(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue(array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a hash object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Hash(entries) {\n\t      var index = -1,\n\t          length = entries == null ? 0 : entries.length;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the hash.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Hash\n\t     */\n\t    function hashClear() {\n\t      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n\t      this.size = 0;\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the hash.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Hash\n\t     * @param {Object} hash The hash to modify.\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function hashDelete(key) {\n\t      var result = this.has(key) && delete this.__data__[key];\n\t      this.size -= result ? 1 : 0;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the hash value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function hashGet(key) {\n\t      var data = this.__data__;\n\t      if (nativeCreate) {\n\t        var result = data[key];\n\t        return result === HASH_UNDEFINED ? undefined : result;\n\t      }\n\t      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if a hash value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function hashHas(key) {\n\t      var data = this.__data__;\n\t      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n\t    }\n\t\n\t    /**\n\t     * Sets the hash `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the hash instance.\n\t     */\n\t    function hashSet(key, value) {\n\t      var data = this.__data__;\n\t      this.size += this.has(key) ? 0 : 1;\n\t      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Hash`.\n\t    Hash.prototype.clear = hashClear;\n\t    Hash.prototype['delete'] = hashDelete;\n\t    Hash.prototype.get = hashGet;\n\t    Hash.prototype.has = hashHas;\n\t    Hash.prototype.set = hashSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an list cache object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function ListCache(entries) {\n\t      var index = -1,\n\t          length = entries == null ? 0 : entries.length;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the list cache.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf ListCache\n\t     */\n\t    function listCacheClear() {\n\t      this.__data__ = [];\n\t      this.size = 0;\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the list cache.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function listCacheDelete(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        return false;\n\t      }\n\t      var lastIndex = data.length - 1;\n\t      if (index == lastIndex) {\n\t        data.pop();\n\t      } else {\n\t        splice.call(data, index, 1);\n\t      }\n\t      --this.size;\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the list cache value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function listCacheGet(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      return index < 0 ? undefined : data[index][1];\n\t    }\n\t\n\t    /**\n\t     * Checks if a list cache value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function listCacheHas(key) {\n\t      return assocIndexOf(this.__data__, key) > -1;\n\t    }\n\t\n\t    /**\n\t     * Sets the list cache `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the list cache instance.\n\t     */\n\t    function listCacheSet(key, value) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        ++this.size;\n\t        data.push([key, value]);\n\t      } else {\n\t        data[index][1] = value;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `ListCache`.\n\t    ListCache.prototype.clear = listCacheClear;\n\t    ListCache.prototype['delete'] = listCacheDelete;\n\t    ListCache.prototype.get = listCacheGet;\n\t    ListCache.prototype.has = listCacheHas;\n\t    ListCache.prototype.set = listCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a map cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function MapCache(entries) {\n\t      var index = -1,\n\t          length = entries == null ? 0 : entries.length;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the map.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf MapCache\n\t     */\n\t    function mapCacheClear() {\n\t      this.size = 0;\n\t      this.__data__ = {\n\t        'hash': new Hash,\n\t        'map': new (Map || ListCache),\n\t        'string': new Hash\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the map.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function mapCacheDelete(key) {\n\t      var result = getMapData(this, key)['delete'](key);\n\t      this.size -= result ? 1 : 0;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the map value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function mapCacheGet(key) {\n\t      return getMapData(this, key).get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a map value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapCacheHas(key) {\n\t      return getMapData(this, key).has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the map `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the map cache instance.\n\t     */\n\t    function mapCacheSet(key, value) {\n\t      var data = getMapData(this, key),\n\t          size = data.size;\n\t\n\t      data.set(key, value);\n\t      this.size += data.size == size ? 0 : 1;\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `MapCache`.\n\t    MapCache.prototype.clear = mapCacheClear;\n\t    MapCache.prototype['delete'] = mapCacheDelete;\n\t    MapCache.prototype.get = mapCacheGet;\n\t    MapCache.prototype.has = mapCacheHas;\n\t    MapCache.prototype.set = mapCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates an array cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var index = -1,\n\t          length = values == null ? 0 : values.length;\n\t\n\t      this.__data__ = new MapCache;\n\t      while (++index < length) {\n\t        this.add(values[index]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the array cache.\n\t     *\n\t     * @private\n\t     * @name add\n\t     * @memberOf SetCache\n\t     * @alias push\n\t     * @param {*} value The value to cache.\n\t     * @returns {Object} Returns the cache instance.\n\t     */\n\t    function setCacheAdd(value) {\n\t      this.__data__.set(value, HASH_UNDEFINED);\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in the array cache.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `true` if `value` is found, else `false`.\n\t     */\n\t    function setCacheHas(value) {\n\t      return this.__data__.has(value);\n\t    }\n\t\n\t    // Add methods to `SetCache`.\n\t    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n\t    SetCache.prototype.has = setCacheHas;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a stack cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Stack(entries) {\n\t      var data = this.__data__ = new ListCache(entries);\n\t      this.size = data.size;\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the stack.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Stack\n\t     */\n\t    function stackClear() {\n\t      this.__data__ = new ListCache;\n\t      this.size = 0;\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the stack.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function stackDelete(key) {\n\t      var data = this.__data__,\n\t          result = data['delete'](key);\n\t\n\t      this.size = data.size;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the stack value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function stackGet(key) {\n\t      return this.__data__.get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a stack value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function stackHas(key) {\n\t      return this.__data__.has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the stack `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the stack cache instance.\n\t     */\n\t    function stackSet(key, value) {\n\t      var data = this.__data__;\n\t      if (data instanceof ListCache) {\n\t        var pairs = data.__data__;\n\t        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n\t          pairs.push([key, value]);\n\t          this.size = ++data.size;\n\t          return this;\n\t        }\n\t        data = this.__data__ = new MapCache(pairs);\n\t      }\n\t      data.set(key, value);\n\t      this.size = data.size;\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Stack`.\n\t    Stack.prototype.clear = stackClear;\n\t    Stack.prototype['delete'] = stackDelete;\n\t    Stack.prototype.get = stackGet;\n\t    Stack.prototype.has = stackHas;\n\t    Stack.prototype.set = stackSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of the enumerable property names of the array-like `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @param {boolean} inherited Specify returning inherited property names.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function arrayLikeKeys(value, inherited) {\n\t      var isArr = isArray(value),\n\t          isArg = !isArr && isArguments(value),\n\t          isBuff = !isArr && !isArg && isBuffer(value),\n\t          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n\t          skipIndexes = isArr || isArg || isBuff || isType,\n\t          result = skipIndexes ? baseTimes(value.length, String) : [],\n\t          length = result.length;\n\t\n\t      for (var key in value) {\n\t        if ((inherited || hasOwnProperty.call(value, key)) &&\n\t            !(skipIndexes && (\n\t               // Safari 9 has enumerable `arguments.length` in strict mode.\n\t               key == 'length' ||\n\t               // Node.js 0.10 has enumerable non-index properties on buffers.\n\t               (isBuff && (key == 'offset' || key == 'parent')) ||\n\t               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n\t               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n\t               // Skip index properties.\n\t               isIndex(key, length)\n\t            ))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.sample` for arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to sample.\n\t     * @returns {*} Returns the random element.\n\t     */\n\t    function arraySample(array) {\n\t      var length = array.length;\n\t      return length ? array[baseRandom(0, length - 1)] : undefined;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.sampleSize` for arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to sample.\n\t     * @param {number} n The number of elements to sample.\n\t     * @returns {Array} Returns the random elements.\n\t     */\n\t    function arraySampleSize(array, n) {\n\t      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.shuffle` for arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     */\n\t    function arrayShuffle(array) {\n\t      return shuffleSelf(copyArray(array));\n\t    }\n\t\n\t    /**\n\t     * This function is like `assignValue` except that it doesn't assign\n\t     * `undefined` values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignMergeValue(object, key, value) {\n\t      if ((value !== undefined && !eq(object[key], value)) ||\n\t          (value === undefined && !(key in object))) {\n\t        baseAssignValue(object, key, value);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignValue(object, key, value) {\n\t      var objValue = object[key];\n\t      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n\t          (value === undefined && !(key in object))) {\n\t        baseAssignValue(object, key, value);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the `key` is found in `array` of key-value pairs.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} key The key to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     */\n\t    function assocIndexOf(array, key) {\n\t      var length = array.length;\n\t      while (length--) {\n\t        if (eq(array[length][0], key)) {\n\t          return length;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Aggregates elements of `collection` on `accumulator` with keys transformed\n\t     * by `iteratee` and values set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform keys.\n\t     * @param {Object} accumulator The initial aggregated object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseAggregator(collection, setter, iteratee, accumulator) {\n\t      baseEach(collection, function(value, key, collection) {\n\t        setter(accumulator, value, iteratee(value), collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for multiple sources\n\t     * or `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return object && copyObject(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assignIn` without support for multiple sources\n\t     * or `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssignIn(object, source) {\n\t      return object && copyObject(source, keysIn(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `assignValue` and `assignMergeValue` without\n\t     * value checks.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function baseAssignValue(object, key, value) {\n\t      if (key == '__proto__' && defineProperty) {\n\t        defineProperty(object, key, {\n\t          'configurable': true,\n\t          'enumerable': true,\n\t          'value': value,\n\t          'writable': true\n\t        });\n\t      } else {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for individual paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {string[]} paths The property paths to pick.\n\t     * @returns {Array} Returns the picked elements.\n\t     */\n\t    function baseAt(object, paths) {\n\t      var index = -1,\n\t          length = paths.length,\n\t          result = Array(length),\n\t          skip = object == null;\n\t\n\t      while (++index < length) {\n\t        result[index] = skip ? undefined : get(object, paths[index]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clamp` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     */\n\t    function baseClamp(number, lower, upper) {\n\t      if (number === number) {\n\t        if (upper !== undefined) {\n\t          number = number <= upper ? number : upper;\n\t        }\n\t        if (lower !== undefined) {\n\t          number = number >= lower ? number : lower;\n\t        }\n\t      }\n\t      return number;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n\t     * traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} bitmask The bitmask flags.\n\t     *  1 - Deep clone\n\t     *  2 - Flatten inherited properties\n\t     *  4 - Clone symbols\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The parent object of `value`.\n\t     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, bitmask, customizer, key, object, stack) {\n\t      var result,\n\t          isDeep = bitmask & CLONE_DEEP_FLAG,\n\t          isFlat = bitmask & CLONE_FLAT_FLAG,\n\t          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\t\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object, stack) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return copyArray(value, result);\n\t        }\n\t      } else {\n\t        var tag = getTag(value),\n\t            isFunc = tag == funcTag || tag == genTag;\n\t\n\t        if (isBuffer(value)) {\n\t          return cloneBuffer(value, isDeep);\n\t        }\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n\t          if (!isDeep) {\n\t            return isFlat\n\t              ? copySymbolsIn(value, baseAssignIn(result, value))\n\t              : copySymbols(value, baseAssign(result, value));\n\t          }\n\t        } else {\n\t          if (!cloneableTags[tag]) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneByTag(value, tag, baseClone, isDeep);\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stack || (stack = new Stack);\n\t      var stacked = stack.get(value);\n\t      if (stacked) {\n\t        return stacked;\n\t      }\n\t      stack.set(value, result);\n\t\n\t      var keysFunc = isFull\n\t        ? (isFlat ? getAllKeysIn : getAllKeys)\n\t        : (isFlat ? keysIn : keys);\n\t\n\t      var props = isArr ? undefined : keysFunc(value);\n\t      arrayEach(props || value, function(subValue, key) {\n\t        if (props) {\n\t          key = subValue;\n\t          subValue = value[key];\n\t        }\n\t        // Recursively populate clone (susceptible to call stack limits).\n\t        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conforms` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseConforms(source) {\n\t      var props = keys(source);\n\t      return function(object) {\n\t        return baseConformsTo(object, source, props);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conformsTo` which accepts `props` to check.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n\t     */\n\t    function baseConformsTo(object, source, props) {\n\t      var length = props.length;\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = Object(object);\n\t      while (length--) {\n\t        var key = props[length],\n\t            predicate = source[key],\n\t            value = object[key];\n\t\n\t        if ((value === undefined && !(key in object)) || !predicate(value)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n\t     * to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Array} args The arguments to provide to `func`.\n\t     * @returns {number|Object} Returns the timer id or timeout object.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.difference` without support\n\t     * for excluding multiple arrays or iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          isCommon = true,\n\t          length = array.length,\n\t          result = [],\n\t          valuesLength = values.length;\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      if (iteratee) {\n\t        values = arrayMap(values, baseUnary(iteratee));\n\t      }\n\t      if (comparator) {\n\t        includes = arrayIncludesWith;\n\t        isCommon = false;\n\t      }\n\t      else if (values.length >= LARGE_ARRAY_SIZE) {\n\t        includes = cacheHas;\n\t        isCommon = false;\n\t        values = new SetCache(values);\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee == null ? value : iteratee(value);\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(values, computed, comparator)) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.max` and `_.min` which accepts a\n\t     * `comparator` to determine the extremum value.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The iteratee invoked per iteration.\n\t     * @param {Function} comparator The comparator used to compare values.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function baseExtremum(array, iteratee, comparator) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            current = iteratee(value);\n\t\n\t        if (current != null && (computed === undefined\n\t              ? (current === current && !isSymbol(current))\n\t              : comparator(current, computed)\n\t            )) {\n\t          var computed = current,\n\t              result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = toInteger(start);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : toInteger(end);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      end = start > end ? 0 : toLength(end);\n\t      while (start < end) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with support for restricting flattening.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} depth The maximum recursion depth.\n\t     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n\t     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, depth, predicate, isStrict, result) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      predicate || (predicate = isFlattenable);\n\t      result || (result = []);\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (depth > 0 && predicate(value)) {\n\t          if (depth > 1) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, depth - 1, predicate, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForOwn` which iterates over `object`\n\t     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return object && baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return object && baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the function names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      return arrayFilter(props, function(key) {\n\t        return isFunction(object[key]);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.get` without support for default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path) {\n\t      path = castPath(path, object);\n\t\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[toKey(path[index++])];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n\t     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n\t      var result = keysFunc(object);\n\t      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `getTag` without fallbacks for buggy environments.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    function baseGetTag(value) {\n\t      if (value == null) {\n\t        return value === undefined ? undefinedTag : nullTag;\n\t      }\n\t      return (symToStringTag && symToStringTag in Object(value))\n\t        ? getRawTag(value)\n\t        : objectToString(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.gt` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseGt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.has` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} [object] The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHas(object, key) {\n\t      return object != null && hasOwnProperty.call(object, key);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.hasIn` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} [object] The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHasIn(object, key) {\n\t      return object != null && key in Object(object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.inRange` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to check.\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     */\n\t    function baseInRange(number, start, end) {\n\t      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.intersection`, without support\n\t     * for iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     */\n\t    function baseIntersection(arrays, iteratee, comparator) {\n\t      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n\t          length = arrays[0].length,\n\t          othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(othLength),\n\t          maxLength = Infinity,\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var array = arrays[othIndex];\n\t        if (othIndex && iteratee) {\n\t          array = arrayMap(array, baseUnary(iteratee));\n\t        }\n\t        maxLength = nativeMin(array.length, maxLength);\n\t        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n\t          ? new SetCache(othIndex && array)\n\t          : undefined;\n\t      }\n\t      array = arrays[0];\n\t\n\t      var index = -1,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length && result.length < maxLength) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (!(seen\n\t              ? cacheHas(seen, computed)\n\t              : includes(result, computed, comparator)\n\t            )) {\n\t          othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if (!(cache\n\t                  ? cacheHas(cache, computed)\n\t                  : includes(arrays[othIndex], computed, comparator))\n\t                ) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invert` and `_.invertBy` which inverts\n\t     * `object` with values transformed by `iteratee` and set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform values.\n\t     * @param {Object} accumulator The initial inverted object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseInverter(object, setter, iteratee, accumulator) {\n\t      baseForOwn(object, function(value, key, object) {\n\t        setter(accumulator, iteratee(value), key, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invoke` without support for individual\n\t     * method arguments.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function baseInvoke(object, path, args) {\n\t      path = castPath(path, object);\n\t      object = parent(object, path);\n\t      var func = object == null ? object : object[toKey(last(path))];\n\t      return func == null ? undefined : apply(func, object, args);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isArguments`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n\t     */\n\t    function baseIsArguments(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == argsTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n\t     */\n\t    function baseIsArrayBuffer(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isDate` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n\t     */\n\t    function baseIsDate(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` which supports partial comparisons\n\t     * and tracks traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {boolean} bitmask The bitmask flags.\n\t     *  1 - Unordered comparison\n\t     *  2 - Partial comparison\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, bitmask, customizer, stack) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = objIsArr ? arrayTag : getTag(object),\n\t          othTag = othIsArr ? arrayTag : getTag(other);\n\t\n\t      objTag = objTag == argsTag ? objectTag : objTag;\n\t      othTag = othTag == argsTag ? objectTag : othTag;\n\t\n\t      var objIsObj = objTag == objectTag,\n\t          othIsObj = othTag == objectTag,\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && isBuffer(object)) {\n\t        if (!isBuffer(other)) {\n\t          return false;\n\t        }\n\t        objIsArr = true;\n\t        objIsObj = false;\n\t      }\n\t      if (isSameTag && !objIsObj) {\n\t        stack || (stack = new Stack);\n\t        return (objIsArr || isTypedArray(object))\n\t          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n\t          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n\t      }\n\t      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          var objUnwrapped = objIsWrapped ? object.value() : object,\n\t              othUnwrapped = othIsWrapped ? other.value() : other;\n\t\n\t          stack || (stack = new Stack);\n\t          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      stack || (stack = new Stack);\n\t      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMap` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n\t     */\n\t    function baseIsMap(value) {\n\t      return isObjectLike(value) && getTag(value) == mapTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Array} matchData The property names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, source, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = Object(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var stack = new Stack;\n\t          if (customizer) {\n\t            var result = customizer(objValue, srcValue, key, object, source, stack);\n\t          }\n\t          if (!(result === undefined\n\t                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n\t                : result\n\t              )) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isNative` without bad shim checks.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     */\n\t    function baseIsNative(value) {\n\t      if (!isObject(value) || isMasked(value)) {\n\t        return false;\n\t      }\n\t      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n\t      return pattern.test(toSource(value));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isRegExp` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n\t     */\n\t    function baseIsRegExp(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isSet` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n\t     */\n\t    function baseIsSet(value) {\n\t      return isObjectLike(value) && getTag(value) == setTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t     */\n\t    function baseIsTypedArray(value) {\n\t      return isObjectLike(value) &&\n\t        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.iteratee`.\n\t     *\n\t     * @private\n\t     * @param {*} [value=_.identity] The value to convert to an iteratee.\n\t     * @returns {Function} Returns the iteratee.\n\t     */\n\t    function baseIteratee(value) {\n\t      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n\t      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n\t      if (typeof value == 'function') {\n\t        return value;\n\t      }\n\t      if (value == null) {\n\t        return identity;\n\t      }\n\t      if (typeof value == 'object') {\n\t        return isArray(value)\n\t          ? baseMatchesProperty(value[0], value[1])\n\t          : baseMatches(value);\n\t      }\n\t      return property(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeys(object) {\n\t      if (!isPrototype(object)) {\n\t        return nativeKeys(object);\n\t      }\n\t      var result = [];\n\t      for (var key in Object(object)) {\n\t        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeysIn(object) {\n\t      if (!isObject(object)) {\n\t        return nativeKeysIn(object);\n\t      }\n\t      var isProto = isPrototype(object),\n\t          result = [];\n\t\n\t      for (var key in object) {\n\t        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.lt` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseLt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n\t      }\n\t      return function(object) {\n\t        return object === source || baseIsMatch(object, source, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      if (isKey(path) && isStrictComparable(srcValue)) {\n\t        return matchesStrictComparable(toKey(path), srcValue);\n\t      }\n\t      return function(object) {\n\t        var objValue = get(object, path);\n\t        return (objValue === undefined && objValue === srcValue)\n\t          ? hasIn(object, path)\n\t          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for multiple sources.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMerge(object, source, srcIndex, customizer, stack) {\n\t      if (object === source) {\n\t        return;\n\t      }\n\t      baseFor(source, function(srcValue, key) {\n\t        if (isObject(srcValue)) {\n\t          stack || (stack = new Stack);\n\t          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n\t        }\n\t        else {\n\t          var newValue = customizer\n\t            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n\t            : undefined;\n\t\n\t          if (newValue === undefined) {\n\t            newValue = srcValue;\n\t          }\n\t          assignMergeValue(object, key, newValue);\n\t        }\n\t      }, keysIn);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n\t      var objValue = object[key],\n\t          srcValue = source[key],\n\t          stacked = stack.get(srcValue);\n\t\n\t      if (stacked) {\n\t        assignMergeValue(object, key, stacked);\n\t        return;\n\t      }\n\t      var newValue = customizer\n\t        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n\t        : undefined;\n\t\n\t      var isCommon = newValue === undefined;\n\t\n\t      if (isCommon) {\n\t        var isArr = isArray(srcValue),\n\t            isBuff = !isArr && isBuffer(srcValue),\n\t            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\t\n\t        newValue = srcValue;\n\t        if (isArr || isBuff || isTyped) {\n\t          if (isArray(objValue)) {\n\t            newValue = objValue;\n\t          }\n\t          else if (isArrayLikeObject(objValue)) {\n\t            newValue = copyArray(objValue);\n\t          }\n\t          else if (isBuff) {\n\t            isCommon = false;\n\t            newValue = cloneBuffer(srcValue, true);\n\t          }\n\t          else if (isTyped) {\n\t            isCommon = false;\n\t            newValue = cloneTypedArray(srcValue, true);\n\t          }\n\t          else {\n\t            newValue = [];\n\t          }\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          newValue = objValue;\n\t          if (isArguments(objValue)) {\n\t            newValue = toPlainObject(objValue);\n\t          }\n\t          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n\t            newValue = initCloneObject(srcValue);\n\t          }\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        stack.set(srcValue, newValue);\n\t        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n\t        stack['delete'](srcValue);\n\t      }\n\t      assignMergeValue(object, key, newValue);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.nth` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {number} n The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     */\n\t    function baseNth(array, n) {\n\t      var length = array.length;\n\t      if (!length) {\n\t        return;\n\t      }\n\t      n += n < 0 ? length : 0;\n\t      return isIndex(n, length) ? array[n] : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.orderBy` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {string[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseOrderBy(collection, iteratees, orders) {\n\t      var index = -1;\n\t      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) {\n\t          return iteratee(value);\n\t        });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pick` without support for individual\n\t     * property identifiers.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} paths The property paths to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePick(object, paths) {\n\t      return basePickBy(object, paths, function(value, path) {\n\t        return hasIn(object, path);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} paths The property paths to pick.\n\t     * @param {Function} predicate The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePickBy(object, paths, predicate) {\n\t      var index = -1,\n\t          length = paths.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var path = paths[index],\n\t            value = baseGet(object, path);\n\t\n\t        if (predicate(value, path)) {\n\t          baseSet(result, castPath(path, object), value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      return function(object) {\n\t        return baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAllBy` without support for iteratee\n\t     * shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAll(array, values, iteratee, comparator) {\n\t      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n\t          index = -1,\n\t          length = values.length,\n\t          seen = array;\n\t\n\t      if (array === values) {\n\t        values = copyArray(values);\n\t      }\n\t      if (iteratee) {\n\t        seen = arrayMap(array, baseUnary(iteratee));\n\t      }\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = values[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n\t          if (seen !== array) {\n\t            splice.call(seen, fromIndex, 1);\n\t          }\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * indexes or capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0,\n\t          lastIndex = length - 1;\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (length == lastIndex || index !== previous) {\n\t          var previous = index;\n\t          if (isIndex(index)) {\n\t            splice.call(array, index, 1);\n\t          } else {\n\t            baseUnset(array, index);\n\t          }\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for returning\n\t     * floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} lower The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(lower, upper) {\n\t      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n\t     * coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} step The value to increment or decrement by.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the range of numbers.\n\t     */\n\t    function baseRange(start, end, step, fromRight) {\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (length--) {\n\t        result[fromRight ? length : ++index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.repeat` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to repeat.\n\t     * @param {number} n The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     */\n\t    function baseRepeat(string, n) {\n\t      var result = '';\n\t      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        if (n) {\n\t          string += string;\n\t        }\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseRest(func, start) {\n\t      return setToString(overRest(func, start, identity), func + '');\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sample`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @returns {*} Returns the random element.\n\t     */\n\t    function baseSample(collection) {\n\t      return arraySample(values(collection));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sampleSize` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @param {number} n The number of elements to sample.\n\t     * @returns {Array} Returns the random elements.\n\t     */\n\t    function baseSampleSize(collection, n) {\n\t      var array = values(collection);\n\t      return shuffleSelf(array, baseClamp(n, 0, array.length));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.set`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseSet(object, path, value, customizer) {\n\t      if (!isObject(object)) {\n\t        return object;\n\t      }\n\t      path = castPath(path, object);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = toKey(path[index]),\n\t            newValue = value;\n\t\n\t        if (index != lastIndex) {\n\t          var objValue = nested[key];\n\t          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n\t          if (newValue === undefined) {\n\t            newValue = isObject(objValue)\n\t              ? objValue\n\t              : (isIndex(path[index + 1]) ? [] : {});\n\t          }\n\t        }\n\t        assignValue(nested, key, newValue);\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop shorting.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `setToString` without support for hot loop shorting.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to modify.\n\t     * @param {Function} string The `toString` result.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetToString = !defineProperty ? identity : function(func, string) {\n\t      return defineProperty(func, 'toString', {\n\t        'configurable': true,\n\t        'enumerable': false,\n\t        'value': constant(string),\n\t        'writable': true\n\t      });\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.shuffle`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     */\n\t    function baseShuffle(collection) {\n\t      return shuffleSelf(values(collection));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = end > length ? length : end;\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n\t     * performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array == null ? low : array.length;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if (computed !== null && !isSymbol(computed) &&\n\t              (retHighest ? (computed <= value) : (computed < value))) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return baseSortedIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n\t     * which invokes `iteratee` for `value` and each element of `array` to compute\n\t     * their sort ranking. The iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The iteratee invoked per element.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array == null ? 0 : array.length,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsSymbol = isSymbol(value),\n\t          valIsUndefined = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            othIsDefined = computed !== undefined,\n\t            othIsNull = computed === null,\n\t            othIsReflexive = computed === computed,\n\t            othIsSymbol = isSymbol(computed);\n\t\n\t        if (valIsNaN) {\n\t          var setLow = retHighest || othIsReflexive;\n\t        } else if (valIsUndefined) {\n\t          setLow = othIsReflexive && (retHighest || othIsDefined);\n\t        } else if (valIsNull) {\n\t          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n\t        } else if (valIsSymbol) {\n\t          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n\t        } else if (othIsNull || othIsSymbol) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n\t     * support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseSortedUniq(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (!index || !eq(computed, seen)) {\n\t          var seen = computed;\n\t          result[resIndex++] = value === 0 ? 0 : value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toNumber` which doesn't ensure correct\n\t     * conversions of binary, hexadecimal, or octal string values.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     */\n\t    function baseToNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      return +value;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toString` which doesn't convert nullish\n\t     * values to empty strings.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     */\n\t    function baseToString(value) {\n\t      // Exit early for strings to avoid a performance hit in some environments.\n\t      if (typeof value == 'string') {\n\t        return value;\n\t      }\n\t      if (isArray(value)) {\n\t        // Recursively convert values (susceptible to call stack limits).\n\t        return arrayMap(value, baseToString) + '';\n\t      }\n\t      if (isSymbol(value)) {\n\t        return symbolToString ? symbolToString.call(value) : '';\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseUniq(array, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          length = array.length,\n\t          isCommon = true,\n\t          result = [],\n\t          seen = result;\n\t\n\t      if (comparator) {\n\t        isCommon = false;\n\t        includes = arrayIncludesWith;\n\t      }\n\t      else if (length >= LARGE_ARRAY_SIZE) {\n\t        var set = iteratee ? null : createSet(array);\n\t        if (set) {\n\t          return setToArray(set);\n\t        }\n\t        isCommon = false;\n\t        includes = cacheHas;\n\t        seen = new SetCache;\n\t      }\n\t      else {\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(seen, computed, comparator)) {\n\t          if (seen !== result) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.unset`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The property path to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     */\n\t    function baseUnset(object, path) {\n\t      path = castPath(path, object);\n\t      object = parent(object, path);\n\t      return object == null || delete object[toKey(last(path))];\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.update`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to update.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseUpdate(object, path, updater, customizer) {\n\t      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n\t     * without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) &&\n\t        predicate(array[index], index, array)) {}\n\t\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      return arrayReduce(actions, function(result, action) {\n\t        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }, result);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.xor`, without support for\n\t     * iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     */\n\t    function baseXor(arrays, iteratee, comparator) {\n\t      var length = arrays.length;\n\t      if (length < 2) {\n\t        return length ? baseUniq(arrays[0]) : [];\n\t      }\n\t      var index = -1,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        var array = arrays[index],\n\t            othIndex = -1;\n\t\n\t        while (++othIndex < length) {\n\t          if (othIndex != index) {\n\t            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n\t          }\n\t        }\n\t      }\n\t      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n\t    }\n\t\n\t    /**\n\t     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array} props The property identifiers.\n\t     * @param {Array} values The property values.\n\t     * @param {Function} assignFunc The function to assign values.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseZipObject(props, values, assignFunc) {\n\t      var index = -1,\n\t          length = props.length,\n\t          valsLength = values.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var value = index < valsLength ? values[index] : undefined;\n\t        assignFunc(result, props[index], value);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to an empty array if it's not an array like object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array|Object} Returns the cast array-like object.\n\t     */\n\t    function castArrayLikeObject(value) {\n\t      return isArrayLikeObject(value) ? value : [];\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to `identity` if it's not a function.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Function} Returns cast function.\n\t     */\n\t    function castFunction(value) {\n\t      return typeof value == 'function' ? value : identity;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to a path array if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {Array} Returns the cast property path array.\n\t     */\n\t    function castPath(value, object) {\n\t      if (isArray(value)) {\n\t        return value;\n\t      }\n\t      return isKey(value, object) ? [value] : stringToPath(toString(value));\n\t    }\n\t\n\t    /**\n\t     * A `baseRest` alias which can be replaced with `identity` by module\n\t     * replacement plugins.\n\t     *\n\t     * @private\n\t     * @type {Function}\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    var castRest = baseRest;\n\t\n\t    /**\n\t     * Casts `array` to a slice if it's needed.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {number} start The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the cast slice.\n\t     */\n\t    function castSlice(array, start, end) {\n\t      var length = array.length;\n\t      end = end === undefined ? length : end;\n\t      return (!start && end >= length) ? array : baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n\t     *\n\t     * @private\n\t     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n\t     */\n\t    var clearTimeout = ctxClearTimeout || function(id) {\n\t      return root.clearTimeout(id);\n\t    };\n\t\n\t    /**\n\t     * Creates a clone of  `buffer`.\n\t     *\n\t     * @private\n\t     * @param {Buffer} buffer The buffer to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Buffer} Returns the cloned buffer.\n\t     */\n\t    function cloneBuffer(buffer, isDeep) {\n\t      if (isDeep) {\n\t        return buffer.slice();\n\t      }\n\t      var length = buffer.length,\n\t          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\t\n\t      buffer.copy(result);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `arrayBuffer`.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function cloneArrayBuffer(arrayBuffer) {\n\t      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n\t      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `dataView`.\n\t     *\n\t     * @private\n\t     * @param {Object} dataView The data view to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned data view.\n\t     */\n\t    function cloneDataView(dataView, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n\t      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned map.\n\t     */\n\t    function cloneMap(map, isDeep, cloneFunc) {\n\t      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n\t      return arrayReduce(array, addMapEntry, new map.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `regexp`.\n\t     *\n\t     * @private\n\t     * @param {Object} regexp The regexp to clone.\n\t     * @returns {Object} Returns the cloned regexp.\n\t     */\n\t    function cloneRegExp(regexp) {\n\t      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n\t      result.lastIndex = regexp.lastIndex;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `set`.\n\t     *\n\t     * @private\n\t     * @param {Object} set The set to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned set.\n\t     */\n\t    function cloneSet(set, isDeep, cloneFunc) {\n\t      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n\t      return arrayReduce(array, addSetEntry, new set.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the `symbol` object.\n\t     *\n\t     * @private\n\t     * @param {Object} symbol The symbol object to clone.\n\t     * @returns {Object} Returns the cloned symbol object.\n\t     */\n\t    function cloneSymbol(symbol) {\n\t      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `typedArray`.\n\t     *\n\t     * @private\n\t     * @param {Object} typedArray The typed array to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned typed array.\n\t     */\n\t    function cloneTypedArray(typedArray, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n\t      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n\t    }\n\t\n\t    /**\n\t     * Compares values to sort them in ascending order.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {number} Returns the sort order indicator for `value`.\n\t     */\n\t    function compareAscending(value, other) {\n\t      if (value !== other) {\n\t        var valIsDefined = value !== undefined,\n\t            valIsNull = value === null,\n\t            valIsReflexive = value === value,\n\t            valIsSymbol = isSymbol(value);\n\t\n\t        var othIsDefined = other !== undefined,\n\t            othIsNull = other === null,\n\t            othIsReflexive = other === other,\n\t            othIsSymbol = isSymbol(other);\n\t\n\t        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n\t            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n\t            (valIsNull && othIsDefined && othIsReflexive) ||\n\t            (!valIsDefined && othIsReflexive) ||\n\t            !valIsReflexive) {\n\t          return 1;\n\t        }\n\t        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n\t            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n\t            (othIsNull && valIsDefined && valIsReflexive) ||\n\t            (!othIsDefined && valIsReflexive) ||\n\t            !othIsReflexive) {\n\t          return -1;\n\t        }\n\t      }\n\t      return 0;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.orderBy` to compare multiple properties of a value to another\n\t     * and stable sort them.\n\t     *\n\t     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n\t     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n\t     * of corresponding values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {boolean[]|string[]} orders The order to sort by for each property.\n\t     * @returns {number} Returns the sort order indicator for `object`.\n\t     */\n\t    function compareMultiple(object, other, orders) {\n\t      var index = -1,\n\t          objCriteria = object.criteria,\n\t          othCriteria = other.criteria,\n\t          length = objCriteria.length,\n\t          ordersLength = orders.length;\n\t\n\t      while (++index < length) {\n\t        var result = compareAscending(objCriteria[index], othCriteria[index]);\n\t        if (result) {\n\t          if (index >= ordersLength) {\n\t            return result;\n\t          }\n\t          var order = orders[index];\n\t          return result * (order == 'desc' ? -1 : 1);\n\t        }\n\t      }\n\t      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t      // that causes it, under certain circumstances, to provide the same value for\n\t      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t      // for more details.\n\t      //\n\t      // This also ensures a stable sort in V8 and other engines.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n\t      return object.index - other.index;\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersLength = holders.length,\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(leftLength + rangeLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[holders[argsIndex]] = args[argsIndex];\n\t        }\n\t      }\n\t      while (rangeLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(rangeLength + rightLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++argsIndex < rangeLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function copyArray(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property identifiers to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @param {Function} [customizer] The function to customize copied values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copyObject(source, props, object, customizer) {\n\t      var isNew = !object;\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t\n\t        var newValue = customizer\n\t          ? customizer(object[key], source[key], key, object, source)\n\t          : undefined;\n\t\n\t        if (newValue === undefined) {\n\t          newValue = source[key];\n\t        }\n\t        if (isNew) {\n\t          baseAssignValue(object, key, newValue);\n\t        } else {\n\t          assignValue(object, key, newValue);\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Copies own symbols of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy symbols from.\n\t     * @param {Object} [object={}] The object to copy symbols to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copySymbols(source, object) {\n\t      return copyObject(source, getSymbols(source), object);\n\t    }\n\t\n\t    /**\n\t     * Copies own and inherited symbols of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy symbols from.\n\t     * @param {Object} [object={}] The object to copy symbols to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copySymbolsIn(source, object) {\n\t      return copyObject(source, getSymbolsIn(source), object);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.groupBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} [initializer] The accumulator object initializer.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee) {\n\t        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n\t            accumulator = initializer ? initializer() : {};\n\t\n\t        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.assign`.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return baseRest(function(object, sources) {\n\t        var index = -1,\n\t            length = sources.length,\n\t            customizer = length > 1 ? sources[length - 1] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined;\n\t\n\t        customizer = (assigner.length > 3 && typeof customizer == 'function')\n\t          ? (length--, customizer)\n\t          : undefined;\n\t\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        object = Object(object);\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, index, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        if (collection == null) {\n\t          return collection;\n\t        }\n\t        if (!isArrayLike(collection)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var length = collection.length,\n\t            index = fromRight ? length : -1,\n\t            iterable = Object(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var index = -1,\n\t            iterable = Object(object),\n\t            props = keysFunc(object),\n\t            length = props.length;\n\t\n\t        while (length--) {\n\t          var key = props[fromRight ? length : ++index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the optional `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createBind(func, bitmask, thisArg) {\n\t      var isBind = bitmask & WRAP_BIND_FLAG,\n\t          Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.lowerFirst`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `String` case method to use.\n\t     * @returns {Function} Returns the new case function.\n\t     */\n\t    function createCaseFirst(methodName) {\n\t      return function(string) {\n\t        string = toString(string);\n\t\n\t        var strSymbols = hasUnicode(string)\n\t          ? stringToArray(string)\n\t          : undefined;\n\t\n\t        var chr = strSymbols\n\t          ? strSymbols[0]\n\t          : string.charAt(0);\n\t\n\t        var trailing = strSymbols\n\t          ? castSlice(strSymbols, 1).join('')\n\t          : string.slice(1);\n\t\n\t        return chr[methodName]() + trailing;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.camelCase`.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtor(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors. See\n\t        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to enable currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {number} arity The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCurry(func, bitmask, arity) {\n\t      var Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length,\n\t            placeholder = getHolder(wrapper);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n\t          ? []\n\t          : replaceHolders(args, placeholder);\n\t\n\t        length -= holders.length;\n\t        if (length < arity) {\n\t          return createRecurry(\n\t            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n\t            args, holders, undefined, undefined, arity - length);\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return apply(fn, this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.find` or `_.findLast` function.\n\t     *\n\t     * @private\n\t     * @param {Function} findIndexFunc The function to find the collection index.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFind(findIndexFunc) {\n\t      return function(collection, predicate, fromIndex) {\n\t        var iterable = Object(collection);\n\t        if (!isArrayLike(collection)) {\n\t          var iteratee = getIteratee(predicate, 3);\n\t          collection = keys(collection);\n\t          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n\t        }\n\t        var index = findIndexFunc(collection, predicate, fromIndex);\n\t        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return flatRest(function(funcs) {\n\t        var length = funcs.length,\n\t            index = length,\n\t            prereq = LodashWrapper.prototype.thru;\n\t\n\t        if (fromRight) {\n\t          funcs.reverse();\n\t        }\n\t        while (index--) {\n\t          var func = funcs[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n\t            var wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? index : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) &&\n\t                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n\t                !data[4].length && data[9] == 1\n\t              ) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func))\n\t              ? wrapper[funcName]()\n\t              : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 && isArray(value)) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with optional `this`\n\t     * binding of `thisArg`, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided\n\t     *  to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & WRAP_ARY_FLAG,\n\t          isBind = bitmask & WRAP_BIND_FLAG,\n\t          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n\t          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n\t          isFlip = bitmask & WRAP_FLIP_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtor(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length;\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (isCurried) {\n\t          var placeholder = getHolder(wrapper),\n\t              holdersCount = countHolders(args, placeholder);\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders, isCurried);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n\t        }\n\t        length -= holdersCount;\n\t        if (isCurried && length < arity) {\n\t          var newHolders = replaceHolders(args, placeholder);\n\t          return createRecurry(\n\t            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n\t            args, newHolders, argPos, ary, arity - length\n\t          );\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        length = args.length;\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        } else if (isFlip && length > 1) {\n\t          args.reverse();\n\t        }\n\t        if (isAry && ary < length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtor(fn);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.invertBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} toIteratee The function to resolve iteratees.\n\t     * @returns {Function} Returns the new inverter function.\n\t     */\n\t    function createInverter(setter, toIteratee) {\n\t      return function(object, iteratee) {\n\t        return baseInverter(object, setter, toIteratee(iteratee), {});\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a mathematical operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @param {number} [defaultValue] The value used for `undefined` arguments.\n\t     * @returns {Function} Returns the new mathematical operation function.\n\t     */\n\t    function createMathOperation(operator, defaultValue) {\n\t      return function(value, other) {\n\t        var result;\n\t        if (value === undefined && other === undefined) {\n\t          return defaultValue;\n\t        }\n\t        if (value !== undefined) {\n\t          result = value;\n\t        }\n\t        if (other !== undefined) {\n\t          if (result === undefined) {\n\t            return other;\n\t          }\n\t          if (typeof value == 'string' || typeof other == 'string') {\n\t            value = baseToString(value);\n\t            other = baseToString(other);\n\t          } else {\n\t            value = baseToNumber(value);\n\t            other = baseToNumber(other);\n\t          }\n\t          result = operator(value, other);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.over`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over iteratees.\n\t     * @returns {Function} Returns the new over function.\n\t     */\n\t    function createOver(arrayFunc) {\n\t      return flatRest(function(iteratees) {\n\t        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\t        return baseRest(function(args) {\n\t          var thisArg = this;\n\t          return arrayFunc(iteratees, function(iteratee) {\n\t            return apply(iteratee, thisArg, args);\n\t          });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates the padding for `string` based on `length`. The `chars` string\n\t     * is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {number} length The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padding for `string`.\n\t     */\n\t    function createPadding(length, chars) {\n\t      chars = chars === undefined ? ' ' : baseToString(chars);\n\t\n\t      var charsLength = chars.length;\n\t      if (charsLength < 2) {\n\t        return charsLength ? baseRepeat(chars, length) : chars;\n\t      }\n\t      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n\t      return hasUnicode(chars)\n\t        ? castSlice(stringToArray(result), 0, length).join('')\n\t        : result.slice(0, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the `this` binding\n\t     * of `thisArg` and `partials` prepended to the arguments it receives.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createPartial(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & WRAP_BIND_FLAG,\n\t          Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength),\n\t            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        return apply(fn, isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.range` or `_.rangeRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new range function.\n\t     */\n\t    function createRange(fromRight) {\n\t      return function(start, end, step) {\n\t        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n\t          end = step = undefined;\n\t        }\n\t        // Ensure the sign of `-0` is preserved.\n\t        start = toFinite(start);\n\t        if (end === undefined) {\n\t          end = start;\n\t          start = 0;\n\t        } else {\n\t          end = toFinite(end);\n\t        }\n\t        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n\t        return baseRange(start, end, step, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a relational operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @returns {Function} Returns the new relational operation function.\n\t     */\n\t    function createRelationalOperation(operator) {\n\t      return function(value, other) {\n\t        if (!(typeof value == 'string' && typeof other == 'string')) {\n\t          value = toNumber(value);\n\t          other = toNumber(other);\n\t        }\n\t        return operator(value, other);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to continue currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {Function} wrapFunc The function to create the `func` wrapper.\n\t     * @param {*} placeholder The placeholder value.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isCurry = bitmask & WRAP_CURRY_FLAG,\n\t          newHolders = isCurry ? holders : undefined,\n\t          newHoldersRight = isCurry ? undefined : holders,\n\t          newPartials = isCurry ? partials : undefined,\n\t          newPartialsRight = isCurry ? undefined : partials;\n\t\n\t      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n\t      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\t\n\t      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n\t        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n\t      }\n\t      var newData = [\n\t        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n\t        newHoldersRight, argPos, ary, arity\n\t      ];\n\t\n\t      var result = wrapFunc.apply(undefined, newData);\n\t      if (isLaziable(func)) {\n\t        setData(result, newData);\n\t      }\n\t      result.placeholder = placeholder;\n\t      return setWrapToString(result, func, bitmask);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.round`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        number = toNumber(number);\n\t        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n\t        if (precision) {\n\t          // Shift with exponential notation to avoid floating-point issues.\n\t          // See [MDN](https://mdn.io/round#Examples) for more details.\n\t          var pair = (toString(number) + 'e').split('e'),\n\t              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\t\n\t          pair = (toString(value) + 'e').split('e');\n\t          return +(pair[0] + 'e' + (+pair[1] - precision));\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a set object of `values`.\n\t     *\n\t     * @private\n\t     * @param {Array} values The values to add to the set.\n\t     * @returns {Object} Returns the new set.\n\t     */\n\t    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n\t      return new Set(values);\n\t    };\n\t\n\t    /**\n\t     * Creates a `_.toPairs` or `_.toPairsIn` function.\n\t     *\n\t     * @private\n\t     * @param {Function} keysFunc The function to get the keys of a given object.\n\t     * @returns {Function} Returns the new pairs function.\n\t     */\n\t    function createToPairs(keysFunc) {\n\t      return function(object) {\n\t        var tag = getTag(object);\n\t        if (tag == mapTag) {\n\t          return mapToArray(object);\n\t        }\n\t        if (tag == setTag) {\n\t          return setToPairs(object);\n\t        }\n\t        return baseToPairs(object, keysFunc(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask flags.\n\t     *    1 - `_.bind`\n\t     *    2 - `_.bindKey`\n\t     *    4 - `_.curry` or `_.curryRight` of a bound function\n\t     *    8 - `_.curry`\n\t     *   16 - `_.curryRight`\n\t     *   32 - `_.partial`\n\t     *   64 - `_.partialRight`\n\t     *  128 - `_.rearg`\n\t     *  256 - `_.ary`\n\t     *  512 - `_.flip`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n\t      arity = arity === undefined ? arity : toInteger(arity);\n\t      length -= holders ? holders.length : 0;\n\t\n\t      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func);\n\t\n\t      var newData = [\n\t        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n\t        argPos, ary, arity\n\t      ];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t      }\n\t      func = newData[0];\n\t      bitmask = newData[1];\n\t      thisArg = newData[2];\n\t      partials = newData[3];\n\t      holders = newData[4];\n\t      arity = newData[9] = newData[9] === undefined\n\t        ? (isBindKey ? 0 : func.length)\n\t        : nativeMax(newData[9] - length, 0);\n\t\n\t      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n\t        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n\t      }\n\t      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n\t        var result = createBind(func, bitmask, thisArg);\n\t      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n\t        result = createCurry(func, bitmask, arity);\n\t      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n\t        result = createPartial(func, bitmask, thisArg, partials);\n\t      } else {\n\t        result = createHybrid.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setWrapToString(setter(result, newData), func, bitmask);\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n\t     * of source objects to the destination object for all destination properties\n\t     * that resolve to `undefined`.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n\t      if (objValue === undefined ||\n\t          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n\t        return srcValue;\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n\t     * objects into destination objects that are passed thru.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to merge.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @param {Object} source The parent object of `srcValue`.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n\t      if (isObject(objValue) && isObject(srcValue)) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        stack.set(srcValue, objValue);\n\t        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n\t        stack['delete'](srcValue);\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n\t     * objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @param {string} key The key of the property to inspect.\n\t     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n\t     */\n\t    function customOmitClone(value) {\n\t      return isPlainObject(value) ? undefined : value;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Object} stack Tracks traversed `array` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n\t      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(array);\n\t      if (stacked && stack.get(other)) {\n\t        return stacked == other;\n\t      }\n\t      var index = -1,\n\t          result = true,\n\t          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\t\n\t      stack.set(array, other);\n\t      stack.set(other, array);\n\t\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, arrValue, index, other, array, stack)\n\t            : customizer(arrValue, othValue, index, array, other, stack);\n\t        }\n\t        if (compared !== undefined) {\n\t          if (compared) {\n\t            continue;\n\t          }\n\t          result = false;\n\t          break;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (seen) {\n\t          if (!arraySome(other, function(othValue, othIndex) {\n\t                if (!cacheHas(seen, othIndex) &&\n\t                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n\t                  return seen.push(othIndex);\n\t                }\n\t              })) {\n\t            result = false;\n\t            break;\n\t          }\n\t        } else if (!(\n\t              arrValue === othValue ||\n\t                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t      }\n\t      stack['delete'](array);\n\t      stack['delete'](other);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n\t      switch (tag) {\n\t        case dataViewTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              (object.byteOffset != other.byteOffset)) {\n\t            return false;\n\t          }\n\t          object = object.buffer;\n\t          other = other.buffer;\n\t\n\t        case arrayBufferTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n\t            return false;\n\t          }\n\t          return true;\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t        case numberTag:\n\t          // Coerce booleans to `1` or `0` and dates to milliseconds.\n\t          // Invalid dates are coerced to `NaN`.\n\t          return eq(+object, +other);\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings, primitives and objects,\n\t          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n\t          // for more details.\n\t          return object == (other + '');\n\t\n\t        case mapTag:\n\t          var convert = mapToArray;\n\t\n\t        case setTag:\n\t          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n\t          convert || (convert = setToArray);\n\t\n\t          if (object.size != other.size && !isPartial) {\n\t            return false;\n\t          }\n\t          // Assume cyclic values are equal.\n\t          var stacked = stack.get(object);\n\t          if (stacked) {\n\t            return stacked == other;\n\t          }\n\t          bitmask |= COMPARE_UNORDERED_FLAG;\n\t\n\t          // Recursively compare objects (susceptible to call stack limits).\n\t          stack.set(object, other);\n\t          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n\t          stack['delete'](object);\n\t          return result;\n\t\n\t        case symbolTag:\n\t          if (symbolValueOf) {\n\t            return symbolValueOf.call(object) == symbolValueOf.call(other);\n\t          }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n\t      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n\t          objProps = getAllKeys(object),\n\t          objLength = objProps.length,\n\t          othProps = getAllKeys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isPartial) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(object);\n\t      if (stacked && stack.get(other)) {\n\t        return stacked == other;\n\t      }\n\t      var result = true;\n\t      stack.set(object, other);\n\t      stack.set(other, object);\n\t\n\t      var skipCtor = isPartial;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, objValue, key, other, object, stack)\n\t            : customizer(objValue, othValue, key, object, other, stack);\n\t        }\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(compared === undefined\n\t              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n\t              : compared\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (result && !skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          result = false;\n\t        }\n\t      }\n\t      stack['delete'](object);\n\t      stack['delete'](other);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseRest` which flattens the rest array.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function flatRest(func) {\n\t      return setToString(overRest(func, undefined, flatten), func + '');\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable property names and symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeys(object) {\n\t      return baseGetAllKeys(object, keys, getSymbols);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeysIn(object) {\n\t      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = (func.name + ''),\n\t          array = realNames[result],\n\t          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the argument placeholder value for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to inspect.\n\t     * @returns {*} Returns the placeholder value.\n\t     */\n\t    function getHolder(func) {\n\t      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n\t      return object.placeholder;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n\t     * this function returns the custom method, otherwise it returns `baseIteratee`.\n\t     * If arguments are provided, the chosen function is invoked with them and\n\t     * its result is returned.\n\t     *\n\t     * @private\n\t     * @param {*} [value] The value to convert to an iteratee.\n\t     * @param {number} [arity] The arity of the created iteratee.\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getIteratee() {\n\t      var result = lodash.iteratee || iteratee;\n\t      result = result === iteratee ? baseIteratee : result;\n\t      return arguments.length ? result(arguments[0], arguments[1]) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the data for `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to query.\n\t     * @param {string} key The reference key.\n\t     * @returns {*} Returns the map data.\n\t     */\n\t    function getMapData(map, key) {\n\t      var data = map.__data__;\n\t      return isKeyable(key)\n\t        ? data[typeof key == 'string' ? 'string' : 'hash']\n\t        : data.map;\n\t    }\n\t\n\t    /**\n\t     * Gets the property names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = keys(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        var key = result[length],\n\t            value = object[key];\n\t\n\t        result[length] = [key, value, isStrictComparable(value)];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = getValue(object, key);\n\t      return baseIsNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the raw `toStringTag`.\n\t     */\n\t    function getRawTag(value) {\n\t      var isOwn = hasOwnProperty.call(value, symToStringTag),\n\t          tag = value[symToStringTag];\n\t\n\t      try {\n\t        value[symToStringTag] = undefined;\n\t        var unmasked = true;\n\t      } catch (e) {}\n\t\n\t      var result = nativeObjectToString.call(value);\n\t      if (unmasked) {\n\t        if (isOwn) {\n\t          value[symToStringTag] = tag;\n\t        } else {\n\t          delete value[symToStringTag];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n\t      if (object == null) {\n\t        return [];\n\t      }\n\t      object = Object(object);\n\t      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n\t        return propertyIsEnumerable.call(object, symbol);\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n\t      var result = [];\n\t      while (object) {\n\t        arrayPush(result, getSymbols(object));\n\t        object = getPrototype(object);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    /**\n\t     * Gets the `toStringTag` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    var getTag = baseGetTag;\n\t\n\t    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\t    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n\t        (Map && getTag(new Map) != mapTag) ||\n\t        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n\t        (Set && getTag(new Set) != setTag) ||\n\t        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n\t      getTag = function(value) {\n\t        var result = baseGetTag(value),\n\t            Ctor = result == objectTag ? value.constructor : undefined,\n\t            ctorString = Ctor ? toSource(Ctor) : '';\n\t\n\t        if (ctorString) {\n\t          switch (ctorString) {\n\t            case dataViewCtorString: return dataViewTag;\n\t            case mapCtorString: return mapTag;\n\t            case promiseCtorString: return promiseTag;\n\t            case setCtorString: return setTag;\n\t            case weakMapCtorString: return weakMapTag;\n\t          }\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Extracts wrapper details from the `source` body comment.\n\t     *\n\t     * @private\n\t     * @param {string} source The source to inspect.\n\t     * @returns {Array} Returns the wrapper details.\n\t     */\n\t    function getWrapDetails(source) {\n\t      var match = source.match(reWrapDetails);\n\t      return match ? match[1].split(reSplitDetails) : [];\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` exists on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @param {Function} hasFunc The function to check properties.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     */\n\t    function hasPath(object, path, hasFunc) {\n\t      path = castPath(path, object);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          result = false;\n\t\n\t      while (++index < length) {\n\t        var key = toKey(path[index]);\n\t        if (!(result = object != null && hasFunc(object, key))) {\n\t          break;\n\t        }\n\t        object = object[key];\n\t      }\n\t      if (result || ++index != length) {\n\t        return result;\n\t      }\n\t      length = object == null ? 0 : object.length;\n\t      return !!length && isLength(length) && isIndex(key, length) &&\n\t        (isArray(object) || isArguments(object));\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = array.constructor(length);\n\t\n\t      // Add properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      return (typeof object.constructor == 'function' && !isPrototype(object))\n\t        ? baseCreate(getPrototype(object))\n\t        : {};\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return cloneArrayBuffer(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case dataViewTag:\n\t          return cloneDataView(object, isDeep);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          return cloneTypedArray(object, isDeep);\n\t\n\t        case mapTag:\n\t          return cloneMap(object, isDeep, cloneFunc);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          return cloneRegExp(object);\n\t\n\t        case setTag:\n\t          return cloneSet(object, isDeep, cloneFunc);\n\t\n\t        case symbolTag:\n\t          return cloneSymbol(object);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Inserts wrapper `details` in a comment at the top of the `source` body.\n\t     *\n\t     * @private\n\t     * @param {string} source The source to modify.\n\t     * @returns {Array} details The details to insert.\n\t     * @returns {string} Returns the modified source.\n\t     */\n\t    function insertWrapDetails(source, details) {\n\t      var length = details.length;\n\t      if (!length) {\n\t        return source;\n\t      }\n\t      var lastIndex = length - 1;\n\t      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n\t      details = details.join(length > 2 ? ', ' : ' ');\n\t      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a flattenable `arguments` object or array.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n\t     */\n\t    function isFlattenable(value) {\n\t      return isArray(value) || isArguments(value) ||\n\t        !!(spreadableSymbol && value && value[spreadableSymbol]);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like index.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      length = length == null ? MAX_SAFE_INTEGER : length;\n\t      return !!length &&\n\t        (typeof value == 'number' || reIsUint.test(value)) &&\n\t        (value > -1 && value % 1 == 0 && value < length);\n\t    }\n\t\n\t    /**\n\t     * Checks if the given arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n\t     *  else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t            ? (isArrayLike(object) && isIndex(index, object.length))\n\t            : (type == 'string' && index in object)\n\t          ) {\n\t        return eq(object[index], value);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      if (isArray(value)) {\n\t        return false;\n\t      }\n\t      var type = typeof value;\n\t      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n\t          value == null || isSymbol(value)) {\n\t        return true;\n\t      }\n\t      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n\t        (object != null && value in Object(object));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for use as unique object key.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n\t     */\n\t    function isKeyable(value) {\n\t      var type = typeof value;\n\t      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n\t        ? (value !== '__proto__')\n\t        : (value === null);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n\t     *  else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func),\n\t          other = lodash[funcName];\n\t\n\t      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has its source masked.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n\t     */\n\t    function isMasked(func) {\n\t      return !!maskSrcKey && (maskSrcKey in func);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` is capable of being masked.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n\t     */\n\t    var isMaskable = coreJsData ? isFunction : stubFalse;\n\t\n\t    /**\n\t     * Checks if `value` is likely a prototype object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n\t     */\n\t    function isPrototype(value) {\n\t      var Ctor = value && value.constructor,\n\t          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\t\n\t      return value === proto;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `matchesProperty` for source values suitable\n\t     * for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function matchesStrictComparable(key, srcValue) {\n\t      return function(object) {\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        return object[key] === srcValue &&\n\t          (srcValue !== undefined || (key in Object(object)));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.memoize` which clears the memoized function's\n\t     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @returns {Function} Returns the new memoized function.\n\t     */\n\t    function memoizeCapped(func) {\n\t      var result = memoize(func, function(key) {\n\t        if (cache.size === MAX_MEMOIZE_SIZE) {\n\t          cache.clear();\n\t        }\n\t        return key;\n\t      });\n\t\n\t      var cache = result.cache;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers used to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and\n\t     * `_.rearg` modify function arguments, making the order in which they are\n\t     * executed important, preventing the merging of metadata. However, we make\n\t     * an exception for a safe combined case where curried functions have `_.ary`\n\t     * and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\t\n\t      var isCombo =\n\t        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n\t        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n\t        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & WRAP_BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = value;\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & WRAP_ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * This function is like\n\t     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n\t     * except that it includes inherited enumerable properties.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function nativeKeysIn(object) {\n\t      var result = [];\n\t      if (object != null) {\n\t        for (var key in Object(object)) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a string using `Object.prototype.toString`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to convert.\n\t     * @returns {string} Returns the converted string.\n\t     */\n\t    function objectToString(value) {\n\t      return nativeObjectToString.call(value);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseRest` which transforms the rest array.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @param {Function} transform The rest array transform.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function overRest(func, start, transform) {\n\t      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            array = Array(length);\n\t\n\t        while (++index < length) {\n\t          array[index] = args[start + index];\n\t        }\n\t        index = -1;\n\t        var otherArgs = Array(start + 1);\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = transform(array);\n\t        return apply(func, this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Gets the parent value at `path` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path to get the parent value of.\n\t     * @returns {*} Returns the parent value.\n\t     */\n\t    function parent(object, path) {\n\t      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = copyArray(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity\n\t     * function to avoid garbage collection pauses in V8. See\n\t     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = shortOut(baseSetData);\n\t\n\t    /**\n\t     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @returns {number|Object} Returns the timer id or timeout object.\n\t     */\n\t    var setTimeout = ctxSetTimeout || function(func, wait) {\n\t      return root.setTimeout(func, wait);\n\t    };\n\t\n\t    /**\n\t     * Sets the `toString` method of `func` to return `string`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to modify.\n\t     * @param {Function} string The `toString` result.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setToString = shortOut(baseSetToString);\n\t\n\t    /**\n\t     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n\t     * with wrapper details in a comment at the top of the source body.\n\t     *\n\t     * @private\n\t     * @param {Function} wrapper The function to modify.\n\t     * @param {Function} reference The reference function.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @returns {Function} Returns `wrapper`.\n\t     */\n\t    function setWrapToString(wrapper, reference, bitmask) {\n\t      var source = (reference + '');\n\t      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that'll short out and invoke `identity` instead\n\t     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n\t     * milliseconds.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new shortable function.\n\t     */\n\t    function shortOut(func) {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function() {\n\t        var stamp = nativeNow(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return arguments[0];\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return func.apply(undefined, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to shuffle.\n\t     * @param {number} [size=array.length] The size of `array`.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function shuffleSelf(array, size) {\n\t      var index = -1,\n\t          length = array.length,\n\t          lastIndex = length - 1;\n\t\n\t      size = size === undefined ? length : size;\n\t      while (++index < size) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = array[rand];\n\t\n\t        array[rand] = array[index];\n\t        array[index] = value;\n\t      }\n\t      array.length = size;\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to a property path array.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to convert.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    var stringToPath = memoizeCapped(function(string) {\n\t      var result = [];\n\t      if (reLeadingDot.test(string)) {\n\t        result.push('');\n\t      }\n\t      string.replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to a string key if it's not a string or symbol.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {string|symbol} Returns the key.\n\t     */\n\t    function toKey(value) {\n\t      if (typeof value == 'string' || isSymbol(value)) {\n\t        return value;\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * Converts `func` to its source code.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to convert.\n\t     * @returns {string} Returns the source code.\n\t     */\n\t    function toSource(func) {\n\t      if (func != null) {\n\t        try {\n\t          return funcToString.call(func);\n\t        } catch (e) {}\n\t        try {\n\t          return (func + '');\n\t        } catch (e) {}\n\t      }\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * Updates wrapper `details` based on `bitmask` flags.\n\t     *\n\t     * @private\n\t     * @returns {Array} details The details to modify.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @returns {Array} Returns `details`.\n\t     */\n\t    function updateWrapDetails(details, bitmask) {\n\t      arrayEach(wrapFlags, function(pair) {\n\t        var value = '_.' + pair[0];\n\t        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n\t          details.push(value);\n\t        }\n\t      });\n\t      return details.sort();\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      if (wrapper instanceof LazyWrapper) {\n\t        return wrapper.clone();\n\t      }\n\t      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n\t      result.__actions__ = copyArray(wrapper.__actions__);\n\t      result.__index__  = wrapper.__index__;\n\t      result.__values__ = wrapper.__values__;\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `array` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=1] The length of each chunk\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the new array of chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size, guard) {\n\t      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n\t        size = 1;\n\t      } else {\n\t        size = nativeMax(toInteger(size), 0);\n\t      }\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length || size < 1) {\n\t        return [];\n\t      }\n\t      var index = 0,\n\t          resIndex = 0,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[resIndex++] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array == null ? 0 : array.length,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[resIndex++] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a new array concatenating `array` with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to concatenate.\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var other = _.concat(array, 2, [3], [[4]]);\n\t     *\n\t     * console.log(other);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    function concat() {\n\t      var length = arguments.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      var args = Array(length - 1),\n\t          array = arguments[0],\n\t          index = length;\n\t\n\t      while (index--) {\n\t        args[index - 1] = arguments[index];\n\t      }\n\t      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of `array` values not included in the other given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order and references of result values are\n\t     * determined by the first array.\n\t     *\n\t     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.without, _.xor\n\t     * @example\n\t     *\n\t     * _.difference([2, 1], [2, 3]);\n\t     * // => [1]\n\t     */\n\t    var difference = baseRest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `iteratee` which\n\t     * is invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. The order and references of result values are\n\t     * determined by the first array. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var differenceBy = baseRest(function(array, values) {\n\t      var iteratee = last(values);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `array` to `values`. The order and\n\t     * references of result values are determined by the first array. The comparator\n\t     * is invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     *\n\t     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }]\n\t     */\n\t    var differenceWith = baseRest(function(array, values) {\n\t      var comparator = last(values);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.dropRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropRightWhile(users, ['active', false]);\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropRightWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.dropWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropWhile(users, ['active', false]);\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8, 10], '*', 1, 3);\n\t     * // => [4, '*', '*', 10]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n\t     * // => 0\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findIndex(users, ['active', false]);\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    function findIndex(array, predicate, fromIndex) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t      if (index < 0) {\n\t        index = nativeMax(length + index, 0);\n\t      }\n\t      return baseFindIndex(array, getIteratee(predicate, 3), index);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n\t     * // => 2\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastIndex(users, ['active', false]);\n\t     * // => 2\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    function findLastIndex(array, predicate, fromIndex) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length - 1;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = fromIndex < 0\n\t          ? nativeMax(length + index, 0)\n\t          : nativeMin(index, length - 1);\n\t      }\n\t      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n\t    }\n\t\n\t    /**\n\t     * Flattens `array` a single level deep.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     */\n\t    function flatten(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? baseFlatten(array, 1) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, 3, 4, 5]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? baseFlatten(array, INFINITY) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flatten `array` up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * var array = [1, [2, [3, [4]], 5]];\n\t     *\n\t     * _.flattenDepth(array, 1);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     *\n\t     * _.flattenDepth(array, 2);\n\t     * // => [1, 2, 3, [4], 5]\n\t     */\n\t    function flattenDepth(array, depth) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(array, depth);\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.toPairs`; this method returns an object composed\n\t     * from key-value `pairs`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} pairs The key-value pairs.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.fromPairs([['a', 1], ['b', 2]]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function fromPairs(pairs) {\n\t      var index = -1,\n\t          length = pairs == null ? 0 : pairs.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var pair = pairs[index];\n\t        result[pair[0]] = pair[1];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias first\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.head([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.head([]);\n\t     * // => undefined\n\t     */\n\t    function head(array) {\n\t      return (array && array.length) ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it's used as the\n\t     * offset from the end of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t      if (index < 0) {\n\t        index = nativeMax(length + index, 0);\n\t      }\n\t      return baseIndexOf(array, value, index);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? baseSlice(array, 0, -1) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order and references of result values are\n\t     * determined by the first array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersection([2, 1], [2, 3]);\n\t     * // => [2]\n\t     */\n\t    var intersection = baseRest(function(arrays) {\n\t      var mapped = arrayMap(arrays, castArrayLikeObject);\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `iteratee`\n\t     * which is invoked for each element of each `arrays` to generate the criterion\n\t     * by which they're compared. The order and references of result values are\n\t     * determined by the first array. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [2.1]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }]\n\t     */\n\t    var intersectionBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      if (iteratee === last(mapped)) {\n\t        iteratee = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `arrays`. The order and references\n\t     * of result values are determined by the first array. The comparator is\n\t     * invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.intersectionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }]\n\t     */\n\t    var intersectionWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      comparator = typeof comparator == 'function' ? comparator : undefined;\n\t      if (comparator) {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Converts all elements in `array` into a string separated by `separator`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to convert.\n\t     * @param {string} [separator=','] The element separator.\n\t     * @returns {string} Returns the joined string.\n\t     * @example\n\t     *\n\t     * _.join(['a', 'b', 'c'], '~');\n\t     * // => 'a~b~c'\n\t     */\n\t    function join(array, separator) {\n\t      return array == null ? '' : nativeJoin.call(array, separator);\n\t    }\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n\t      }\n\t      return value === value\n\t        ? strictLastIndexOf(array, value, index)\n\t        : baseFindIndex(array, baseIsNaN, index, true);\n\t    }\n\t\n\t    /**\n\t     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n\t     * element from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.11.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=0] The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     *\n\t     * _.nth(array, 1);\n\t     * // => 'b'\n\t     *\n\t     * _.nth(array, -2);\n\t     * // => 'c';\n\t     */\n\t    function nth(array, n) {\n\t      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n\t    }\n\t\n\t    /**\n\t     * Removes all given values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n\t     * to remove elements from an array by predicate.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\t     *\n\t     * _.pull(array, 'a', 'c');\n\t     * console.log(array);\n\t     * // => ['b', 'b']\n\t     */\n\t    var pull = baseRest(pullAll);\n\t\n\t    /**\n\t     * This method is like `_.pull` except that it accepts an array of values to remove.\n\t     *\n\t     * **Note:** Unlike `_.difference`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\t     *\n\t     * _.pullAll(array, ['a', 'c']);\n\t     * console.log(array);\n\t     * // => ['b', 'b']\n\t     */\n\t    function pullAll(array, values) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n\t     * invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n\t     *\n\t     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n\t     * console.log(array);\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    function pullAllBy(array, values, iteratee) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, getIteratee(iteratee, 2))\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array` to `values`. The comparator is\n\t     * invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n\t     *\n\t     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n\t     * console.log(array);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n\t     */\n\t    function pullAllWith(array, values, comparator) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, undefined, comparator)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to `indexes` and returns an\n\t     * array of removed elements.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     * var pulled = _.pullAt(array, [1, 3]);\n\t     *\n\t     * console.log(array);\n\t     * // => ['a', 'c']\n\t     *\n\t     * console.log(pulled);\n\t     * // => ['b', 'd']\n\t     */\n\t    var pullAt = flatRest(function(array, indexes) {\n\t      var length = array == null ? 0 : array.length,\n\t          result = baseAt(array, indexes);\n\t\n\t      basePullAt(array, arrayMap(indexes, function(index) {\n\t        return isIndex(index, length) ? +index : index;\n\t      }).sort(compareAscending));\n\t\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is invoked\n\t     * with three arguments: (value, index, array).\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n\t     * to pull elements from an array by value.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getIteratee(predicate, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses `array` so that the first element becomes the last, the second\n\t     * element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates `array` and is based on\n\t     * [`Array#reverse`](https://mdn.io/Array/reverse).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.reverse(array);\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function reverse(array) {\n\t      return array == null ? array : nativeReverse.call(array);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of\n\t     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n\t     * returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      else {\n\t        start = start == null ? 0 : toInteger(start);\n\t        end = end === undefined ? length : toInteger(end);\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     */\n\t    function sortedIndex(array, value) {\n\t      return baseSortedIndex(array, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n\t     *\n\t     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n\t     * // => 0\n\t     */\n\t    function sortedIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n\t     * // => 1\n\t     */\n\t    function sortedIndexOf(array, value) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value);\n\t        if (index < length && eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n\t     * // => 4\n\t     */\n\t    function sortedLastIndex(array, value) {\n\t      return baseSortedIndex(array, value, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n\t     *\n\t     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n\t     * // => 1\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n\t     * // => 1\n\t     */\n\t    function sortedLastIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.lastIndexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n\t     * // => 3\n\t     */\n\t    function sortedLastIndexOf(array, value) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value, true) - 1;\n\t        if (eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniq([1, 1, 2]);\n\t     * // => [1, 2]\n\t     */\n\t    function sortedUniq(array) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniqBy` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n\t     * // => [1.1, 2.3]\n\t     */\n\t    function sortedUniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.tail([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function tail(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? baseSlice(array, 1, length) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.takeRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeRightWhile(users, ['active', false]);\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeRightWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.takeWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeWhile(users, ['active', false]);\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all given arrays using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([2], [1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    var union = baseRest(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which uniqueness is computed. Result values are chosen from the first\n\t     * array in which the value occurs. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    var unionBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `arrays`. Result values are chosen from\n\t     * the first array in which the value occurs. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.unionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var unionWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      comparator = typeof comparator == 'function' ? comparator : undefined;\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurrence of each element\n\t     * is kept. The order of result values is determined by the order they occur\n\t     * in the array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    function uniq(array) {\n\t      return (array && array.length) ? baseUniq(array) : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * uniqueness is computed. The order of result values is determined by the\n\t     * order they occur in the array. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniqBy(array, iteratee) {\n\t      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array`. The order of result values is\n\t     * determined by the order they occur in the array.The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.uniqWith(objects, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n\t     */\n\t    function uniqWith(array, comparator) {\n\t      comparator = typeof comparator == 'function' ? comparator : undefined;\n\t      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.2.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n\t     * // => [['a', 1, true], ['b', 2, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['a', 'b'], [1, 2], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var length = 0;\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLikeObject(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      return baseTimes(length, function(index) {\n\t        return arrayMap(array, baseProperty(index));\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n\t     * how regrouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine\n\t     *  regrouped values.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      return arrayMap(result, function(group) {\n\t        return apply(iteratee, undefined, group);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all given values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.pull`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.xor\n\t     * @example\n\t     *\n\t     * _.without([2, 1, 2, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = baseRest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the\n\t     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the given arrays. The order of result values is determined by the order\n\t     * they occur in the arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.without\n\t     * @example\n\t     *\n\t     * _.xor([2, 1], [2, 3]);\n\t     * // => [1, 3]\n\t     */\n\t    var xor = baseRest(function(arrays) {\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which by which they're compared. The order of result values is determined\n\t     * by the order they occur in the arrays. The iteratee is invoked with one\n\t     * argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [1.2, 3.4]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var xorBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `comparator` which is\n\t     * invoked to compare elements of `arrays`. The order of result values is\n\t     * determined by the order they occur in the arrays. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.xorWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var xorWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      comparator = typeof comparator == 'function' ? comparator : undefined;\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the\n\t     * first elements of the given arrays, the second of which contains the\n\t     * second elements of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['a', 'b'], [1, 2], [true, false]);\n\t     * // => [['a', 1, true], ['b', 2, false]]\n\t     */\n\t    var zip = baseRest(unzip);\n\t\n\t    /**\n\t     * This method is like `_.fromPairs` except that it accepts two arrays,\n\t     * one of property identifiers and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.4.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject(['a', 'b'], [1, 2]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function zipObject(props, values) {\n\t      return baseZipObject(props || [], values || [], assignValue);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zipObject` except that it supports property paths.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n\t     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n\t     */\n\t    function zipObjectDeep(props, values) {\n\t      return baseZipObject(props || [], values || [], baseSet);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts `iteratee` to specify\n\t     * how grouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine\n\t     *  grouped values.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n\t     *   return a + b + c;\n\t     * });\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = baseRest(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n\t      return unzipWith(arrays, iteratee);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n\t     * chain sequences enabled. The result of such sequences must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Seq\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _\n\t     *   .chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(o) {\n\t     *     return o.user + ' is ' + o.age;\n\t     *   })\n\t     *   .head()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor\n\t     * is invoked with one argument; (value). The purpose of this method is to\n\t     * \"tap into\" a method chain sequence in order to modify intermediate results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    // Mutate input array.\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor) {\n\t      interceptor(value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     * The purpose of this method is to \"pass thru\" values replacing intermediate\n\t     * results in a method chain sequence.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor) {\n\t      return interceptor(value);\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.at`.\n\t     *\n\t     * @name at\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Seq\n\t     * @param {...(string|string[])} [paths] The property paths to pick.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _(object).at(['a[0].b.c', 'a[1]']).value();\n\t     * // => [3, 4]\n\t     */\n\t    var wrapperAt = flatRest(function(paths) {\n\t      var length = paths.length,\n\t          start = length ? paths[0] : 0,\n\t          value = this.__wrapped__,\n\t          interceptor = function(object) { return baseAt(object, paths); };\n\t\n\t      if (length > 1 || this.__actions__.length ||\n\t          !(value instanceof LazyWrapper) || !isIndex(start)) {\n\t        return this.thru(interceptor);\n\t      }\n\t      value = value.slice(start, +start + (length ? 1 : 0));\n\t      value.__actions__.push({\n\t        'func': thru,\n\t        'args': [interceptor],\n\t        'thisArg': undefined\n\t      });\n\t      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n\t        if (length && !array.length) {\n\t          array.push(undefined);\n\t        }\n\t        return array;\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // A sequence without explicit chaining.\n\t     * _(users).head();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // A sequence with explicit chaining.\n\t     * _(users)\n\t     *   .chain()\n\t     *   .head()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * Gets the next value on a wrapped object following the\n\t     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n\t     *\n\t     * @name next\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the next iterator value.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 1 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 2 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': true, 'value': undefined }\n\t     */\n\t    function wrapperNext() {\n\t      if (this.__values__ === undefined) {\n\t        this.__values__ = toArray(this.value());\n\t      }\n\t      var done = this.__index__ >= this.__values__.length,\n\t          value = done ? undefined : this.__values__[this.__index__++];\n\t\n\t      return { 'done': done, 'value': value };\n\t    }\n\t\n\t    /**\n\t     * Enables the wrapper to be iterable.\n\t     *\n\t     * @name Symbol.iterator\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the wrapper object.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped[Symbol.iterator]() === wrapped;\n\t     * // => true\n\t     *\n\t     * Array.from(wrapped);\n\t     * // => [1, 2]\n\t     */\n\t    function wrapperToIterator() {\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @param {*} value The value to plant.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2]).map(square);\n\t     * var other = wrapped.plant([3, 4]);\n\t     *\n\t     * other.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        clone.__index__ = 0;\n\t        clone.__values__ = undefined;\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.reverse`.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({\n\t          'func': thru,\n\t          'args': [reverse],\n\t          'thisArg': undefined\n\t        });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(reverse);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence to resolve the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias toJSON, valueOf\n\t     * @category Seq\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the number of times the key was returned by `iteratee`. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        ++result[key];\n\t      } else {\n\t        baseAssignValue(result, key, 1);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * Iteration is stopped once `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * **Note:** This method returns `true` for\n\t     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n\t     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n\t     * elements of empty collections.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.every(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * **Note:** Unlike `_.remove`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.reject\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, { 'age': 36, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.filter(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function filter(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.find(users, function(o) { return o.age < 40; });\n\t     * // => object for 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.find(users, { 'age': 1, 'active': true });\n\t     * // => object for 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.find(users, ['active', false]);\n\t     * // => object for 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.find(users, 'active');\n\t     * // => object for 'barney'\n\t     */\n\t    var find = createFind(findIndex);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param {number} [fromIndex=collection.length-1] The index to search from.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    var findLast = createFind(findLastIndex);\n\t\n\t    /**\n\t     * Creates a flattened array of values by running each element in `collection`\n\t     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n\t     * with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [n, n];\n\t     * }\n\t     *\n\t     * _.flatMap([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMap(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), 1);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDeep([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMapDeep(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), INFINITY);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDepth([1, 2], duplicate, 2);\n\t     * // => [[1, 1], [2, 2]]\n\t     */\n\t    function flatMapDepth(collection, iteratee, depth) {\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(map(collection, iteratee), depth);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n\t     * The iteratee is invoked with three arguments: (value, index|key, collection).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n\t     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n\t     * or `_.forOwn` for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEachRight\n\t     * @example\n\t     *\n\t     * _.forEach([1, 2], function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `1` then `2`.\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forEach(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEach : baseEach;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEach\n\t     * @example\n\t     *\n\t     * _.forEachRight([1, 2], function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `2` then `1`.\n\t     */\n\t    function forEachRight(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The order of grouped values\n\t     * is determined by the order they occur in `collection`. The corresponding\n\t     * value of each key is an array of elements responsible for generating the\n\t     * key. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': [4.2], '6': [6.1, 6.3] }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        baseAssignValue(result, key, [value]);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection`. If `collection` is a string, it's\n\t     * checked for a substring of `value`, otherwise\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n\t     * the offset from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'a': 1, 'b': 2 }, 1);\n\t     * // => true\n\t     *\n\t     * _.includes('abcd', 'bc');\n\t     * // => true\n\t     */\n\t    function includes(collection, value, fromIndex, guard) {\n\t      collection = isArrayLike(collection) ? collection : values(collection);\n\t      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\t\n\t      var length = collection.length;\n\t      if (fromIndex < 0) {\n\t        fromIndex = nativeMax(length + fromIndex, 0);\n\t      }\n\t      return isString(collection)\n\t        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n\t        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `path` is a function, it's invoked\n\t     * for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke each method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invokeMap([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invokeMap = baseRest(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the last element responsible for generating the key. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var array = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.keyBy(array, function(o) {\n\t     *   return String.fromCharCode(o.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.keyBy(array, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var keyBy = createAggregator(function(result, value, key) {\n\t      baseAssignValue(result, key, value);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n\t     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n\t     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n\t     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * _.map([4, 8], square);\n\t     * // => [16, 64]\n\t     *\n\t     * _.map({ 'a': 4, 'b': 8 }, square);\n\t     * // => [16, 64] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it allows specifying the sort\n\t     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n\t     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n\t     * descending or \"asc\" for ascending sort order of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by.\n\t     * @param {string[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // Sort by `user` in ascending order and by `age` in descending order.\n\t     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     */\n\t    function orderBy(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      orders = guard ? undefined : orders;\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseOrderBy(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is\n\t     * invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * _.partition(users, function(o) { return o.active; });\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.partition(users, { 'age': 1, 'active': false });\n\t     * // => objects for [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.partition(users, ['active', false]);\n\t     * // => objects for [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.partition(users, 'active');\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` thru `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not given, the first element of `collection` is used as the initial\n\t     * value. The iteratee is invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n\t     * and `sortBy`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduceRight\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(sum, n) {\n\t     *   return sum + n;\n\t     * }, 0);\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     *   return result;\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n\t     */\n\t    function reduce(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduce : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduce\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    function reduceRight(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.filter\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * _.reject(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.reject(users, { 'age': 40, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.reject(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.reject(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function reject(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, negate(getIteratee(predicate, 3)));\n\t    }\n\t\n\t    /**\n\t     * Gets a random element from `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @returns {*} Returns the random element.\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     */\n\t    function sample(collection) {\n\t      var func = isArray(collection) ? arraySample : baseSample;\n\t      return func(collection);\n\t    }\n\t\n\t    /**\n\t     * Gets `n` random elements at unique keys from `collection` up to the\n\t     * size of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @param {number} [n=1] The number of elements to sample.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the random elements.\n\t     * @example\n\t     *\n\t     * _.sampleSize([1, 2, 3], 2);\n\t     * // => [3, 1]\n\t     *\n\t     * _.sampleSize([1, 2, 3], 4);\n\t     * // => [2, 3, 1]\n\t     */\n\t    function sampleSize(collection, n, guard) {\n\t      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = toInteger(n);\n\t      }\n\t      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n\t      return func(collection, n);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n\t      return func(collection);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable string keyed properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to inspect.\n\t     * @returns {number} Returns the collection size.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      if (collection == null) {\n\t        return 0;\n\t      }\n\t      if (isArrayLike(collection)) {\n\t        return isString(collection) ? stringSize(collection) : collection.length;\n\t      }\n\t      var tag = getTag(collection);\n\t      if (tag == mapTag || tag == setTag) {\n\t        return collection.size;\n\t      }\n\t      return baseKeys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * Iteration is stopped once `predicate` returns truthy. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.some(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection thru each iteratee. This method\n\t     * performs a stable sort, that is, it preserves the original sort order of\n\t     * equal elements. The iteratees are invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.sortBy(users, [function(o) { return o.user; }]);\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     *\n\t     * _.sortBy(users, ['user', 'age']);\n\t     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n\t     */\n\t    var sortBy = baseRest(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var length = iteratees.length;\n\t      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n\t        iteratees = [];\n\t      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n\t        iteratees = [iteratees[0]];\n\t      }\n\t      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the timestamp of the number of milliseconds that have elapsed since\n\t     * the Unix epoch (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Date\n\t     * @returns {number} Returns the timestamp.\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => Logs the number of milliseconds it took for the deferred invocation.\n\t     */\n\t    var now = ctxNow || function() {\n\t      return root.Date.now();\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it's called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => Logs 'done saving!' after the two async saves have completed.\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with up to `n` arguments,\n\t     * ignoring any additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      n = guard ? undefined : n;\n\t      n = (func && n == null) ? func.length : n;\n\t      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it's called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery(element).on('click', _.before(5, addContactToList));\n\t     * // => Allows adding up to 4 contacts to the list.\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and `partials` prepended to the arguments it receives.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * }\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = baseRest(function(func, thisArg, partials) {\n\t      var bitmask = WRAP_BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bind));\n\t        bitmask |= WRAP_PARTIAL_FLAG;\n\t      }\n\t      return createWrap(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` with `partials`\n\t     * prepended to the arguments it receives.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist. See\n\t     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Function\n\t     * @param {Object} object The object to invoke the method on.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = baseRest(function(object, key, partials) {\n\t      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bindKey));\n\t        bitmask |= WRAP_PARTIAL_FLAG;\n\t      }\n\t      return createWrap(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts arguments of `func` and either invokes\n\t     * `func` returning its result, if at least `arity` number of arguments have\n\t     * been provided, or returns a function that accepts the remaining `func`\n\t     * arguments, and so on. The arity of `func` may be specified if `func.length`\n\t     * is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curry(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curry.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curryRight(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curryRight.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed `func` invocations and a `flush` method to immediately invoke them.\n\t     * Provide `options` to indicate whether `func` should be invoked on the\n\t     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n\t     * with the last arguments provided to the debounced function. Subsequent\n\t     * calls to the debounced function return the result of the last `func`\n\t     * invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t     * invoked on the trailing edge of the timeout only if the debounced function\n\t     * is invoked more than once during the `wait` timeout.\n\t     *\n\t     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n\t     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=false]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {number} [options.maxWait]\n\t     *  The maximum time `func` is allowed to be delayed before it's invoked.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // Avoid costly calculations while the window size is in flux.\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n\t     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n\t     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', debounced);\n\t     *\n\t     * // Cancel the trailing debounced invocation.\n\t     * jQuery(window).on('popstate', debounced.cancel);\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var lastArgs,\n\t          lastThis,\n\t          maxWait,\n\t          result,\n\t          timerId,\n\t          lastCallTime,\n\t          lastInvokeTime = 0,\n\t          leading = false,\n\t          maxing = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = toNumber(wait) || 0;\n\t      if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxing = 'maxWait' in options;\n\t        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function invokeFunc(time) {\n\t        var args = lastArgs,\n\t            thisArg = lastThis;\n\t\n\t        lastArgs = lastThis = undefined;\n\t        lastInvokeTime = time;\n\t        result = func.apply(thisArg, args);\n\t        return result;\n\t      }\n\t\n\t      function leadingEdge(time) {\n\t        // Reset any `maxWait` timer.\n\t        lastInvokeTime = time;\n\t        // Start the timer for the trailing edge.\n\t        timerId = setTimeout(timerExpired, wait);\n\t        // Invoke the leading edge.\n\t        return leading ? invokeFunc(time) : result;\n\t      }\n\t\n\t      function remainingWait(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime,\n\t            result = wait - timeSinceLastCall;\n\t\n\t        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n\t      }\n\t\n\t      function shouldInvoke(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime;\n\t\n\t        // Either this is the first call, activity has stopped and we're at the\n\t        // trailing edge, the system time has gone backwards and we're treating\n\t        // it as the trailing edge, or we've hit the `maxWait` limit.\n\t        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n\t          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n\t      }\n\t\n\t      function timerExpired() {\n\t        var time = now();\n\t        if (shouldInvoke(time)) {\n\t          return trailingEdge(time);\n\t        }\n\t        // Restart the timer.\n\t        timerId = setTimeout(timerExpired, remainingWait(time));\n\t      }\n\t\n\t      function trailingEdge(time) {\n\t        timerId = undefined;\n\t\n\t        // Only invoke if we have `lastArgs` which means `func` has been\n\t        // debounced at least once.\n\t        if (trailing && lastArgs) {\n\t          return invokeFunc(time);\n\t        }\n\t        lastArgs = lastThis = undefined;\n\t        return result;\n\t      }\n\t\n\t      function cancel() {\n\t        if (timerId !== undefined) {\n\t          clearTimeout(timerId);\n\t        }\n\t        lastInvokeTime = 0;\n\t        lastArgs = lastCallTime = lastThis = timerId = undefined;\n\t      }\n\t\n\t      function flush() {\n\t        return timerId === undefined ? result : trailingEdge(now());\n\t      }\n\t\n\t      function debounced() {\n\t        var time = now(),\n\t            isInvoking = shouldInvoke(time);\n\t\n\t        lastArgs = arguments;\n\t        lastThis = this;\n\t        lastCallTime = time;\n\t\n\t        if (isInvoking) {\n\t          if (timerId === undefined) {\n\t            return leadingEdge(lastCallTime);\n\t          }\n\t          if (maxing) {\n\t            // Handle invocations in a tight loop.\n\t            timerId = setTimeout(timerExpired, wait);\n\t            return invokeFunc(lastCallTime);\n\t          }\n\t        }\n\t        if (timerId === undefined) {\n\t          timerId = setTimeout(timerExpired, wait);\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      debounced.flush = flush;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // => Logs 'deferred' after one millisecond.\n\t     */\n\t    var defer = baseRest(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => Logs 'later' after one second.\n\t     */\n\t    var delay = baseRest(function(func, wait, args) {\n\t      return baseDelay(func, toNumber(wait) || 0, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments reversed.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to flip arguments for.\n\t     * @returns {Function} Returns the new flipped function.\n\t     * @example\n\t     *\n\t     * var flipped = _.flip(function() {\n\t     *   return _.toArray(arguments);\n\t     * });\n\t     *\n\t     * flipped('a', 'b', 'c', 'd');\n\t     * // => ['d', 'c', 'b', 'a']\n\t     */\n\t    function flip(func) {\n\t      return createWrap(func, WRAP_FLIP_FLAG);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided, it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is used as the map cache key. The `func`\n\t     * is invoked with the `this` binding of the memoized function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the\n\t     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoized function.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     * var other = { 'c': 3, 'd': 4 };\n\t     *\n\t     * var values = _.memoize(_.values);\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * values(other);\n\t     * // => [3, 4]\n\t     *\n\t     * object.a = 2;\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * // Modify the result cache.\n\t     * values.cache.set(object, ['a', 'b']);\n\t     * values(object);\n\t     * // => ['a', 'b']\n\t     *\n\t     * // Replace `_.memoize.Cache`.\n\t     * _.memoize.Cache = WeakMap;\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result) || cache;\n\t        return result;\n\t      };\n\t      memoized.cache = new (memoize.Cache || MapCache);\n\t      return memoized;\n\t    }\n\t\n\t    // Expose `MapCache`.\n\t    memoize.Cache = MapCache;\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new negated function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return !predicate.call(this);\n\t          case 1: return !predicate.call(this, args[0]);\n\t          case 2: return !predicate.call(this, args[0], args[1]);\n\t          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n\t        }\n\t        return !predicate.apply(this, args);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first invocation. The `func` is\n\t     * invoked with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // => `createApplication` is invoked once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with its arguments transformed.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Function|Function[])} [transforms=[_.identity]]\n\t     *  The argument transforms.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var func = _.overArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, [square, doubled]);\n\t     *\n\t     * func(9, 3);\n\t     * // => [81, 6]\n\t     *\n\t     * func(10, 5);\n\t     * // => [100, 10]\n\t     */\n\t    var overArgs = castRest(function(func, transforms) {\n\t      transforms = (transforms.length == 1 && isArray(transforms[0]))\n\t        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n\t        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\t\n\t      var funcsLength = transforms.length;\n\t      return baseRest(function(args) {\n\t        var index = -1,\n\t            length = nativeMin(args.length, funcsLength);\n\t\n\t        while (++index < length) {\n\t          args[index] = transforms[index].call(this, args[index]);\n\t        }\n\t        return apply(func, this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partials` prepended to the\n\t     * arguments it receives. This method is like `_.bind` except it does **not**\n\t     * alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * }\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = baseRest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partial));\n\t      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to the arguments it receives.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * }\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = baseRest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partialRight));\n\t      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified `indexes` where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, [2, 0, 1]);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    var rearg = flatRest(function(func, indexes) {\n\t      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as\n\t     * an array.\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [rest parameter](https://mdn.io/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.rest(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function rest(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start === undefined ? start : toInteger(start);\n\t      return baseRest(func, start);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * create function and an array of arguments much like\n\t     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [spread operator](https://mdn.io/spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @param {number} [start=0] The start position of the spread.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n\t      return baseRest(function(args) {\n\t        var array = args[start],\n\t            otherArgs = castSlice(args, 0, start);\n\t\n\t        if (array) {\n\t          arrayPush(otherArgs, array);\n\t        }\n\t        return apply(func, this, otherArgs);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed `func` invocations and a `flush` method to\n\t     * immediately invoke them. Provide `options` to indicate whether `func`\n\t     * should be invoked on the leading and/or trailing edge of the `wait`\n\t     * timeout. The `func` is invoked with the last arguments provided to the\n\t     * throttled function. Subsequent calls to the throttled function return the\n\t     * result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t     * invoked on the trailing edge of the timeout only if the throttled function\n\t     * is invoked more than once during the `wait` timeout.\n\t     *\n\t     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n\t     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=true]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // Avoid excessively updating the position while scrolling.\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n\t     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n\t     * jQuery(element).on('click', throttled);\n\t     *\n\t     * // Cancel the trailing throttled invocation.\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, {\n\t        'leading': leading,\n\t        'maxWait': wait,\n\t        'trailing': trailing\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to one argument, ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.unary(parseInt));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function unary(func) {\n\t      return ary(func, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to `wrapper` as its first\n\t     * argument. Any additional arguments provided to the function are appended\n\t     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n\t     * binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} [wrapper=identity] The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      return partial(castFunction(wrapper), value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Casts `value` as an array if it's not one.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Lang\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast array.\n\t     * @example\n\t     *\n\t     * _.castArray(1);\n\t     * // => [1]\n\t     *\n\t     * _.castArray({ 'a': 1 });\n\t     * // => [{ 'a': 1 }]\n\t     *\n\t     * _.castArray('abc');\n\t     * // => ['abc']\n\t     *\n\t     * _.castArray(null);\n\t     * // => [null]\n\t     *\n\t     * _.castArray(undefined);\n\t     * // => [undefined]\n\t     *\n\t     * _.castArray();\n\t     * // => []\n\t     *\n\t     * var array = [1, 2, 3];\n\t     * console.log(_.castArray(array) === array);\n\t     * // => true\n\t     */\n\t    function castArray() {\n\t      if (!arguments.length) {\n\t        return [];\n\t      }\n\t      var value = arguments[0];\n\t      return isArray(value) ? value : [value];\n\t    }\n\t\n\t    /**\n\t     * Creates a shallow clone of `value`.\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n\t     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n\t     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n\t     * arrays. The own enumerable properties of `arguments` objects are cloned\n\t     * as plain objects. An empty object is returned for uncloneable values such\n\t     * as error objects, functions, DOM nodes, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeep\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var shallow = _.clone(objects);\n\t     * console.log(shallow[0] === objects[0]);\n\t     * // => true\n\t     */\n\t    function clone(value) {\n\t      return baseClone(value, CLONE_SYMBOLS_FLAG);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it accepts `customizer` which\n\t     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n\t     * cloning is handled by the method instead. The `customizer` is invoked with\n\t     * up to four arguments; (value [, index|key, object, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeepWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 0\n\t     */\n\t    function cloneWith(value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.clone\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var deep = _.cloneDeep(objects);\n\t     * console.log(deep[0] === objects[0]);\n\t     * // => false\n\t     */\n\t    function cloneDeep(value) {\n\t      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.cloneWith` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.cloneWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneDeepWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 20\n\t     */\n\t    function cloneDeepWith(value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `object` conforms to `source` by invoking the predicate\n\t     * properties of `source` with the corresponding property values of `object`.\n\t     *\n\t     * **Note:** This method is equivalent to `_.conforms` when `source` is\n\t     * partially applied.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.14.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     *\n\t     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n\t     * // => true\n\t     *\n\t     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n\t     * // => false\n\t     */\n\t    function conformsTo(object, source) {\n\t      return source == null || baseConformsTo(object, source, keys(source));\n\t    }\n\t\n\t    /**\n\t     * Performs a\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * comparison between two values to determine if they are equivalent.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     * var other = { 'a': 1 };\n\t     *\n\t     * _.eq(object, object);\n\t     * // => true\n\t     *\n\t     * _.eq(object, other);\n\t     * // => false\n\t     *\n\t     * _.eq('a', 'a');\n\t     * // => true\n\t     *\n\t     * _.eq('a', Object('a'));\n\t     * // => false\n\t     *\n\t     * _.eq(NaN, NaN);\n\t     * // => true\n\t     */\n\t    function eq(value, other) {\n\t      return value === other || (value !== value && other !== other);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     * @see _.lt\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    var gt = createRelationalOperation(baseGt);\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.lte\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    var gte = createRelationalOperation(function(value, other) {\n\t      return value >= other;\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is likely an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n\t      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n\t        !propertyIsEnumerable.call(value, 'callee');\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(document.body.children);\n\t     * // => false\n\t     *\n\t     * _.isArray('abc');\n\t     * // => false\n\t     *\n\t     * _.isArray(_.noop);\n\t     * // => false\n\t     */\n\t    var isArray = Array.isArray;\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `ArrayBuffer` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayBuffer(new ArrayBuffer(2));\n\t     * // => true\n\t     *\n\t     * _.isArrayBuffer(new Array(2));\n\t     * // => false\n\t     */\n\t    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\t\n\t    /**\n\t     * Checks if `value` is array-like. A value is considered array-like if it's\n\t     * not a function and has a `value.length` that's an integer greater than or\n\t     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike('abc');\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null && isLength(value.length) && !isFunction(value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isArrayLike` except that it also checks if `value`\n\t     * is an object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array-like object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLikeObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject('abc');\n\t     * // => false\n\t     *\n\t     * _.isArrayLikeObject(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLikeObject(value) {\n\t      return isObjectLike(value) && isArrayLike(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false ||\n\t        (isObjectLike(value) && baseGetTag(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a buffer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBuffer(new Buffer(2));\n\t     * // => true\n\t     *\n\t     * _.isBuffer(new Uint8Array(2));\n\t     * // => false\n\t     */\n\t    var isBuffer = nativeIsBuffer || stubFalse;\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\t\n\t    /**\n\t     * Checks if `value` is likely a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an empty object, collection, map, or set.\n\t     *\n\t     * Objects are considered empty if they have no own enumerable string keyed\n\t     * properties.\n\t     *\n\t     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n\t     * jQuery-like collections are considered empty if they have a `length` of `0`.\n\t     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (value == null) {\n\t        return true;\n\t      }\n\t      if (isArrayLike(value) &&\n\t          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n\t            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n\t        return !value.length;\n\t      }\n\t      var tag = getTag(value);\n\t      if (tag == mapTag || tag == setTag) {\n\t        return !value.size;\n\t      }\n\t      if (isPrototype(value)) {\n\t        return !baseKeys(value).length;\n\t      }\n\t      for (var key in value) {\n\t        if (hasOwnProperty.call(value, key)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent.\n\t     *\n\t     * **Note:** This method supports comparing arrays, array buffers, booleans,\n\t     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n\t     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n\t     * by their own, not inherited, enumerable properties. Functions and DOM\n\t     * nodes are compared by strict equality, i.e. `===`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     * var other = { 'a': 1 };\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * object === other;\n\t     * // => false\n\t     */\n\t    function isEqual(value, other) {\n\t      return baseIsEqual(value, other);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isEqual` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with up to\n\t     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, othValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqualWith(array, other, customizer);\n\t     * // => true\n\t     */\n\t    function isEqualWith(value, other, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      if (!isObjectLike(value)) {\n\t        return false;\n\t      }\n\t      var tag = baseGetTag(value);\n\t      return tag == errorTag || tag == domExcTag ||\n\t        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(3);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isFinite('3');\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      if (!isObject(value)) {\n\t        return false;\n\t      }\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\t      var tag = baseGetTag(value);\n\t      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isInteger('3');\n\t     * // => false\n\t     */\n\t    function isInteger(value) {\n\t      return typeof value == 'number' && value == toInteger(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This method is loosely based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t     * @example\n\t     *\n\t     * _.isLength(3);\n\t     * // => true\n\t     *\n\t     * _.isLength(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isLength(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isLength('3');\n\t     * // => false\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' &&\n\t        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the\n\t     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n\t     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(_.noop);\n\t     * // => true\n\t     *\n\t     * _.isObject(null);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      var type = typeof value;\n\t      return value != null && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t     * and has a `typeof` result of \"object\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObjectLike({});\n\t     * // => true\n\t     *\n\t     * _.isObjectLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObjectLike(_.noop);\n\t     * // => false\n\t     *\n\t     * _.isObjectLike(null);\n\t     * // => false\n\t     */\n\t    function isObjectLike(value) {\n\t      return value != null && typeof value == 'object';\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Map` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n\t     * @example\n\t     *\n\t     * _.isMap(new Map);\n\t     * // => true\n\t     *\n\t     * _.isMap(new WeakMap);\n\t     * // => false\n\t     */\n\t    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\t\n\t    /**\n\t     * Performs a partial deep comparison between `object` and `source` to\n\t     * determine if `object` contains equivalent property values.\n\t     *\n\t     * **Note:** This method is equivalent to `_.matches` when `source` is\n\t     * partially applied.\n\t     *\n\t     * Partial comparisons will match empty array and empty object `source`\n\t     * values against any array or object value, respectively. See `_.isEqual`\n\t     * for a list of supported value comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     *\n\t     * _.isMatch(object, { 'b': 2 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'b': 1 });\n\t     * // => false\n\t     */\n\t    function isMatch(object, source) {\n\t      return object === source || baseIsMatch(object, source, getMatchData(source));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isMatch` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with five\n\t     * arguments: (objValue, srcValue, index|key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatchWith(object, source, customizer);\n\t     * // => true\n\t     */\n\t    function isMatchWith(object, source, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseIsMatch(object, source, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n\t     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n\t     * `undefined` and other non-number values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some\n\t      // ActiveX objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a pristine native function.\n\t     *\n\t     * **Note:** This method can't reliably detect native functions in the presence\n\t     * of the core-js package because core-js circumvents this kind of detection.\n\t     * Despite multiple requests, the core-js maintainer has made it clear: any\n\t     * attempt to fix the detection will be obstructed. As a result, we're left\n\t     * with little choice but to throw an error. Unfortunately, this also affects\n\t     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n\t     * which rely on core-js.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (isMaskable(value)) {\n\t        throw new Error(CORE_ERROR_TEXT);\n\t      }\n\t      return baseIsNative(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null` or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNil(null);\n\t     * // => true\n\t     *\n\t     * _.isNil(void 0);\n\t     * // => true\n\t     *\n\t     * _.isNil(NaN);\n\t     * // => false\n\t     */\n\t    function isNil(value) {\n\t      return value == null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n\t     * classified as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(3);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Infinity);\n\t     * // => true\n\t     *\n\t     * _.isNumber('3');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' ||\n\t        (isObjectLike(value) && baseGetTag(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.8.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n\t        return false;\n\t      }\n\t      var proto = getPrototype(value);\n\t      if (proto === null) {\n\t        return true;\n\t      }\n\t      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n\t      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n\t        funcToString.call(Ctor) == objectCtorString;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\t\n\t    /**\n\t     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n\t     * double precision number which isn't the result of a rounded unsafe integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSafeInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isSafeInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger('3');\n\t     * // => false\n\t     */\n\t    function isSafeInteger(value) {\n\t      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Set` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSet(new Set);\n\t     * // => true\n\t     *\n\t     * _.isSet(new WeakSet);\n\t     * // => false\n\t     */\n\t    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' ||\n\t        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Symbol` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSymbol(Symbol.iterator);\n\t     * // => true\n\t     *\n\t     * _.isSymbol('abc');\n\t     * // => false\n\t     */\n\t    function isSymbol(value) {\n\t      return typeof value == 'symbol' ||\n\t        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakMap` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakMap(new WeakMap);\n\t     * // => true\n\t     *\n\t     * _.isWeakMap(new Map);\n\t     * // => false\n\t     */\n\t    function isWeakMap(value) {\n\t      return isObjectLike(value) && getTag(value) == weakMapTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakSet` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakSet(new WeakSet);\n\t     * // => true\n\t     *\n\t     * _.isWeakSet(new Set);\n\t     * // => false\n\t     */\n\t    function isWeakSet(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     * @see _.gt\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    var lt = createRelationalOperation(baseLt);\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.gte\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    var lte = createRelationalOperation(function(value, other) {\n\t      return value <= other;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * _.toArray({ 'a': 1, 'b': 2 });\n\t     * // => [1, 2]\n\t     *\n\t     * _.toArray('abc');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toArray(1);\n\t     * // => []\n\t     *\n\t     * _.toArray(null);\n\t     * // => []\n\t     */\n\t    function toArray(value) {\n\t      if (!value) {\n\t        return [];\n\t      }\n\t      if (isArrayLike(value)) {\n\t        return isString(value) ? stringToArray(value) : copyArray(value);\n\t      }\n\t      if (symIterator && value[symIterator]) {\n\t        return iteratorToArray(value[symIterator]());\n\t      }\n\t      var tag = getTag(value),\n\t          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\t\n\t      return func(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a finite number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.12.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted number.\n\t     * @example\n\t     *\n\t     * _.toFinite(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toFinite(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toFinite(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toFinite('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toFinite(value) {\n\t      if (!value) {\n\t        return value === 0 ? value : 0;\n\t      }\n\t      value = toNumber(value);\n\t      if (value === INFINITY || value === -INFINITY) {\n\t        var sign = (value < 0 ? -1 : 1);\n\t        return sign * MAX_INTEGER;\n\t      }\n\t      return value === value ? value : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer.\n\t     *\n\t     * **Note:** This method is loosely based on\n\t     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toInteger(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toInteger(value) {\n\t      var result = toFinite(value),\n\t          remainder = result % 1;\n\t\n\t      return result === result ? (remainder ? result - remainder : result) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer suitable for use as the length of an\n\t     * array-like object.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toLength(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toLength(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toLength(Infinity);\n\t     * // => 4294967295\n\t     *\n\t     * _.toLength('3.2');\n\t     * // => 3\n\t     */\n\t    function toLength(value) {\n\t      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     * @example\n\t     *\n\t     * _.toNumber(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toNumber(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toNumber(Infinity);\n\t     * // => Infinity\n\t     *\n\t     * _.toNumber('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      if (isObject(value)) {\n\t        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n\t        value = isObject(other) ? (other + '') : other;\n\t      }\n\t      if (typeof value != 'string') {\n\t        return value === 0 ? value : +value;\n\t      }\n\t      value = value.replace(reTrim, '');\n\t      var isBinary = reIsBinary.test(value);\n\t      return (isBinary || reIsOctal.test(value))\n\t        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t        : (reIsBadHex.test(value) ? NAN : +value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable string\n\t     * keyed properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return copyObject(value, keysIn(value));\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a safe integer. A safe integer can be compared and\n\t     * represented correctly.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toSafeInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toSafeInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toSafeInteger(Infinity);\n\t     * // => 9007199254740991\n\t     *\n\t     * _.toSafeInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toSafeInteger(value) {\n\t      return value\n\t        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n\t        : (value === 0 ? value : 0);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a string. An empty string is returned for `null`\n\t     * and `undefined` values. The sign of `-0` is preserved.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.toString(null);\n\t     * // => ''\n\t     *\n\t     * _.toString(-0);\n\t     * // => '-0'\n\t     *\n\t     * _.toString([1, 2, 3]);\n\t     * // => '1,2,3'\n\t     */\n\t    function toString(value) {\n\t      return value == null ? '' : baseToString(value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Assigns own enumerable string keyed properties of source objects to the\n\t     * destination object. Source objects are applied from left to right.\n\t     * Subsequent sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object` and is loosely based on\n\t     * [`Object.assign`](https://mdn.io/Object/assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * Foo.prototype.b = 2;\n\t     * Bar.prototype.d = 4;\n\t     *\n\t     * _.assign({ 'a': 0 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var assign = createAssigner(function(object, source) {\n\t      if (isPrototype(source) || isArrayLike(source)) {\n\t        copyObject(source, keys(source), object);\n\t        return;\n\t      }\n\t      for (var key in source) {\n\t        if (hasOwnProperty.call(source, key)) {\n\t          assignValue(object, key, source[key]);\n\t        }\n\t      }\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it iterates over own and\n\t     * inherited source properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assign\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * Foo.prototype.b = 2;\n\t     * Bar.prototype.d = 4;\n\t     *\n\t     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n\t     */\n\t    var assignIn = createAssigner(function(object, source) {\n\t      copyObject(source, keysIn(source), object);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assignIn` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extendWith\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignInWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keysIn(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignInWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keys(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values corresponding to `paths` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {...(string|string[])} [paths] The property paths to pick.\n\t     * @returns {Array} Returns the picked values.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _.at(object, ['a[0].b.c', 'a[1]']);\n\t     * // => [3, 4]\n\t     */\n\t    var at = flatRest(baseAt);\n\t\n\t    /**\n\t     * Creates an object that inherits from the `prototype` object. If a\n\t     * `properties` object is given, its own enumerable string keyed properties\n\t     * are assigned to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties) {\n\t      var result = baseCreate(prototype);\n\t      return properties == null ? result : baseAssign(result, properties);\n\t    }\n\t\n\t    /**\n\t     * Assigns own and inherited enumerable string keyed properties of source\n\t     * objects to the destination object for all destination properties that\n\t     * resolve to `undefined`. Source objects are applied from left to right.\n\t     * Once a property is set, additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaultsDeep\n\t     * @example\n\t     *\n\t     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var defaults = baseRest(function(args) {\n\t      args.push(undefined, customDefaultsAssignIn);\n\t      return apply(assignInWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaults\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n\t     * // => { 'a': { 'b': 2, 'c': 3 } }\n\t     */\n\t    var defaultsDeep = baseRest(function(args) {\n\t      args.push(undefined, customDefaultsMerge);\n\t      return apply(mergeWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(o) { return o.age < 40; });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    function findKey(object, predicate) {\n\t      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(o) { return o.age < 40; });\n\t     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    function findLastKey(object, predicate) {\n\t      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable string keyed properties of an\n\t     * object and invokes `iteratee` for each property. The iteratee is invoked\n\t     * with three arguments: (value, key, object). Iteratee functions may exit\n\t     * iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forInRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n\t     */\n\t    function forIn(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n\t     */\n\t    function forInRight(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own enumerable string keyed properties of an object and\n\t     * invokes `iteratee` for each property. The iteratee is invoked with three\n\t     * arguments: (value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwnRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forOwn(object, iteratee) {\n\t      return object && baseForOwn(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n\t     */\n\t    function forOwnRight(object, iteratee) {\n\t      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own enumerable properties\n\t     * of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functionsIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functions(new Foo);\n\t     * // => ['a', 'b']\n\t     */\n\t    function functions(object) {\n\t      return object == null ? [] : baseFunctions(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own and inherited\n\t     * enumerable properties of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functions\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functionsIn(new Foo);\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    function functionsIn(object) {\n\t      return object == null ? [] : baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the value at `path` of `object`. If the resolved value is\n\t     * `undefined`, the `defaultValue` is returned in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, path);\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': 2 } };\n\t     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.has(other, 'a');\n\t     * // => false\n\t     */\n\t    function has(object, path) {\n\t      return object != null && hasPath(object, path, baseHas);\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct or inherited property of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.hasIn(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'b');\n\t     * // => false\n\t     */\n\t    function hasIn(object, path) {\n\t      return object != null && hasPath(object, path, baseHasIn);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite\n\t     * property assignments of previous values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     */\n\t    var invert = createInverter(function(result, value, key) {\n\t      result[value] = key;\n\t    }, constant(identity));\n\t\n\t    /**\n\t     * This method is like `_.invert` except that the inverted object is generated\n\t     * from the results of running each element of `object` thru `iteratee`. The\n\t     * corresponding inverted value of each inverted key is an array of keys\n\t     * responsible for generating the inverted value. The iteratee is invoked\n\t     * with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invertBy(object);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     *\n\t     * _.invertBy(object, function(value) {\n\t     *   return 'group' + value;\n\t     * });\n\t     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n\t     */\n\t    var invertBy = createInverter(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, value)) {\n\t        result[value].push(key);\n\t      } else {\n\t        result[value] = [key];\n\t      }\n\t    }, getIteratee);\n\t\n\t    /**\n\t     * Invokes the method at `path` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n\t     *\n\t     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n\t     * // => [2, 3]\n\t     */\n\t    var invoke = baseRest(baseInvoke);\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    function keys(object) {\n\t      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n\t     * with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapValues\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    function mapKeys(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        baseAssignValue(result, iteratee(value, key, object), value);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated\n\t     * by running each own enumerable string keyed property of `object` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapKeys\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * _.mapValues(users, function(o) { return o.age; });\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    function mapValues(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        baseAssignValue(result, key, iteratee(value, key, object));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it recursively merges own and\n\t     * inherited enumerable string keyed properties of source objects into the\n\t     * destination object. Source properties that resolve to `undefined` are\n\t     * skipped if a destination value exists. Array and plain object properties\n\t     * are merged recursively. Other objects and value types are overridden by\n\t     * assignment. Source objects are applied from left to right. Subsequent\n\t     * sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n\t     * };\n\t     *\n\t     * _.merge(object, other);\n\t     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n\t     */\n\t    var merge = createAssigner(function(object, source, srcIndex) {\n\t      baseMerge(object, source, srcIndex);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.merge` except that it accepts `customizer` which\n\t     * is invoked to produce the merged values of the destination and source\n\t     * properties. If `customizer` returns `undefined`, merging is handled by the\n\t     * method instead. The `customizer` is invoked with six arguments:\n\t     * (objValue, srcValue, key, object, source, stack).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (_.isArray(objValue)) {\n\t     *     return objValue.concat(srcValue);\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'a': [1], 'b': [2] };\n\t     * var other = { 'a': [3], 'b': [4] };\n\t     *\n\t     * _.mergeWith(object, other, customizer);\n\t     * // => { 'a': [1, 3], 'b': [2, 4] }\n\t     */\n\t    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      baseMerge(object, source, srcIndex, customizer);\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable property paths of `object` that are not omitted.\n\t     *\n\t     * **Note:** This method is considerably slower than `_.pick`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [paths] The property paths to omit.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omit(object, ['a', 'c']);\n\t     * // => { 'b': '2' }\n\t     */\n\t    var omit = flatRest(function(object, paths) {\n\t      var result = {};\n\t      if (object == null) {\n\t        return result;\n\t      }\n\t      var isDeep = false;\n\t      paths = arrayMap(paths, function(path) {\n\t        path = castPath(path, object);\n\t        isDeep || (isDeep = path.length > 1);\n\t        return path;\n\t      });\n\t      copyObject(object, getAllKeysIn(object), result);\n\t      if (isDeep) {\n\t        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n\t      }\n\t      var length = paths.length;\n\t      while (length--) {\n\t        baseUnset(result, paths[length]);\n\t      }\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pickBy`; this method creates an object composed of\n\t     * the own and inherited enumerable string keyed properties of `object` that\n\t     * `predicate` doesn't return truthy for. The predicate is invoked with two\n\t     * arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omitBy(object, _.isNumber);\n\t     * // => { 'b': '2' }\n\t     */\n\t    function omitBy(object, predicate) {\n\t      return pickBy(object, negate(getIteratee(predicate)));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [paths] The property paths to pick.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pick(object, ['a', 'c']);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var pick = flatRest(function(object, paths) {\n\t      return object == null ? {} : basePick(object, paths);\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of the `object` properties `predicate` returns\n\t     * truthy for. The predicate is invoked with two arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pickBy(object, _.isNumber);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    function pickBy(object, predicate) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      var props = arrayMap(getAllKeysIn(object), function(prop) {\n\t        return [prop];\n\t      });\n\t      predicate = getIteratee(predicate);\n\t      return basePickBy(object, props, function(value, path) {\n\t        return predicate(value, path[0]);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a\n\t     * function it's invoked with the `this` binding of its parent object and\n\t     * its result is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a[0].b.c3', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a[0].b.c3', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      path = castPath(path, object);\n\t\n\t      var index = -1,\n\t          length = path.length;\n\t\n\t      // Ensure the loop is entered when path is empty.\n\t      if (!length) {\n\t        length = 1;\n\t        object = undefined;\n\t      }\n\t      while (++index < length) {\n\t        var value = object == null ? undefined : object[toKey(path[index])];\n\t        if (value === undefined) {\n\t          index = length;\n\t          value = defaultValue;\n\t        }\n\t        object = isFunction(value) ? value.call(object) : value;\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n\t     * it's created. Arrays are created for missing index properties while objects\n\t     * are created for all other missing properties. Use `_.setWith` to customize\n\t     * `path` creation.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, ['x', '0', 'y', 'z'], 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      return object == null ? object : baseSet(object, path, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.setWith(object, '[0][1]', 'a', Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function setWith(object, path, value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseSet(object, path, value, customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable string keyed-value pairs for `object`\n\t     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n\t     * entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entries\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairs(new Foo);\n\t     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairs = createToPairs(keys);\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable string keyed-value pairs\n\t     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n\t     * or set, its entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entriesIn\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairsIn(new Foo);\n\t     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairsIn = createToPairs(keysIn);\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own\n\t     * enumerable string keyed properties thru `iteratee`, with each invocation\n\t     * potentially mutating the `accumulator` object. If `accumulator` is not\n\t     * provided, a new object with the same `[[Prototype]]` will be used. The\n\t     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * }, []);\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function transform(object, iteratee, accumulator) {\n\t      var isArr = isArray(object),\n\t          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\t\n\t      iteratee = getIteratee(iteratee, 4);\n\t      if (accumulator == null) {\n\t        var Ctor = object && object.constructor;\n\t        if (isArrLike) {\n\t          accumulator = isArr ? new Ctor : [];\n\t        }\n\t        else if (isObject(object)) {\n\t          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n\t        }\n\t        else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Removes the property at `path` of `object`.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n\t     * _.unset(object, 'a[0].b.c');\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     *\n\t     * _.unset(object, ['a', '0', 'b', 'c']);\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     */\n\t    function unset(object, path) {\n\t      return object == null ? true : baseUnset(object, path);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that accepts `updater` to produce the\n\t     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n\t     * is invoked with one argument: (value).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n\t     * console.log(object.a[0].b.c);\n\t     * // => 9\n\t     *\n\t     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n\t     * console.log(object.x[0].y.z);\n\t     * // => 0\n\t     */\n\t    function update(object, path, updater) {\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.update` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function updateWith(object, path, updater, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable string keyed property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return object == null ? [] : baseValues(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable string keyed property\n\t     * values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return object == null ? [] : baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Number\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     * @example\n\t     *\n\t     * _.clamp(-10, -5, 5);\n\t     * // => -5\n\t     *\n\t     * _.clamp(10, -5, 5);\n\t     * // => 5\n\t     */\n\t    function clamp(number, lower, upper) {\n\t      if (upper === undefined) {\n\t        upper = lower;\n\t        lower = undefined;\n\t      }\n\t      if (upper !== undefined) {\n\t        upper = toNumber(upper);\n\t        upper = upper === upper ? upper : 0;\n\t      }\n\t      if (lower !== undefined) {\n\t        lower = toNumber(lower);\n\t        lower = lower === lower ? lower : 0;\n\t      }\n\t      return baseClamp(toNumber(number), lower, upper);\n\t    }\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to, but not including, `end`. If\n\t     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n\t     * If `start` is greater than `end` the params are swapped to support\n\t     * negative ranges.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.3.0\n\t     * @category Number\n\t     * @param {number} number The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     * @see _.range, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     *\n\t     * _.inRange(-3, -2, -6);\n\t     * // => true\n\t     */\n\t    function inRange(number, start, end) {\n\t      start = toFinite(start);\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = toFinite(end);\n\t      }\n\t      number = toNumber(number);\n\t      return baseInRange(number, start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between the inclusive `lower` and `upper` bounds.\n\t     * If only one argument is provided a number between `0` and the given number\n\t     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n\t     * floats, a floating-point number is returned instead of an integer.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Number\n\t     * @param {number} [lower=0] The lower bound.\n\t     * @param {number} [upper=1] The upper bound.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(lower, upper, floating) {\n\t      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n\t        upper = floating = undefined;\n\t      }\n\t      if (floating === undefined) {\n\t        if (typeof upper == 'boolean') {\n\t          floating = upper;\n\t          upper = undefined;\n\t        }\n\t        else if (typeof lower == 'boolean') {\n\t          floating = lower;\n\t          lower = undefined;\n\t        }\n\t      }\n\t      if (lower === undefined && upper === undefined) {\n\t        lower = 0;\n\t        upper = 1;\n\t      }\n\t      else {\n\t        lower = toFinite(lower);\n\t        if (upper === undefined) {\n\t          upper = lower;\n\t          lower = 0;\n\t        } else {\n\t          upper = toFinite(upper);\n\t        }\n\t      }\n\t      if (lower > upper) {\n\t        var temp = lower;\n\t        lower = upper;\n\t        upper = temp;\n\t      }\n\t      if (floating || lower % 1 || upper % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n\t      }\n\t      return baseRandom(lower, upper);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar--');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__FOO_BAR__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? capitalize(word) : word);\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case and the remaining\n\t     * to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('FRED');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      return upperFirst(toString(string).toLowerCase());\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting\n\t     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n\t     * letters to basic Latin letters and removing\n\t     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = toString(string);\n\t      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search up to.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = toString(string);\n\t      target = baseToString(target);\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : baseClamp(toInteger(position), 0, length);\n\t\n\t      var end = position;\n\t      position -= target.length;\n\t      return position >= 0 && string.slice(position, end) == target;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n\t     * corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional\n\t     * characters use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value. See\n\t     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * When working with HTML you should always\n\t     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n\t     * XSS vectors.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      string = toString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n\t     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = toString(string);\n\t      return (string && reHasRegExpChar.test(string))\n\t        ? string.replace(reRegExpChar, '\\\\$&')\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__FOO_BAR__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.lowerCase('--Foo-Bar--');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('fooBar');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('__FOO_BAR__');\n\t     * // => 'foo bar'\n\t     */\n\t    var lowerCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.lowerFirst('Fred');\n\t     * // => 'fred'\n\t     *\n\t     * _.lowerFirst('FRED');\n\t     * // => 'fRED'\n\t     */\n\t    var lowerFirst = createCaseFirst('toLowerCase');\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      if (!length || strLength >= length) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2;\n\t      return (\n\t        createPadding(nativeFloor(mid), chars) +\n\t        string +\n\t        createPadding(nativeCeil(mid), chars)\n\t      );\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padEnd('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padEnd('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padEnd('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padEnd(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (string + createPadding(length - strLength, chars))\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padStart('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padStart('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padStart('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padStart(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (createPadding(length - strLength, chars) + string)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n\t     * hexadecimal, in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the\n\t     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix=10] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      if (guard || radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=1] The number of times to repeat the string.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n, guard) {\n\t      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = toInteger(n);\n\t      }\n\t      return baseRepeat(toString(string), n);\n\t    }\n\t\n\t    /**\n\t     * Replaces matches for `pattern` in `string` with `replacement`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#replace`](https://mdn.io/String/replace).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to modify.\n\t     * @param {RegExp|string} pattern The pattern to replace.\n\t     * @param {Function|string} replacement The match replacement.\n\t     * @returns {string} Returns the modified string.\n\t     * @example\n\t     *\n\t     * _.replace('Hi Fred', 'Fred', 'Barney');\n\t     * // => 'Hi Barney'\n\t     */\n\t    function replace() {\n\t      var args = arguments,\n\t          string = toString(args[0]);\n\t\n\t      return args.length < 3 ? string : string.replace(args[1], args[2]);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--FOO-BAR--');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Splits `string` by `separator`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#split`](https://mdn.io/String/split).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to split.\n\t     * @param {RegExp|string} separator The separator pattern to split by.\n\t     * @param {number} [limit] The length to truncate results to.\n\t     * @returns {Array} Returns the string segments.\n\t     * @example\n\t     *\n\t     * _.split('a-b-c', '-', 2);\n\t     * // => ['a', 'b']\n\t     */\n\t    function split(string, separator, limit) {\n\t      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n\t        separator = limit = undefined;\n\t      }\n\t      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n\t      if (!limit) {\n\t        return [];\n\t      }\n\t      string = toString(string);\n\t      if (string && (\n\t            typeof separator == 'string' ||\n\t            (separator != null && !isRegExp(separator))\n\t          )) {\n\t        separator = baseToString(separator);\n\t        if (!separator && hasUnicode(string)) {\n\t          return castSlice(stringToArray(string), 0, limit);\n\t        }\n\t      }\n\t      return string.split(separator, limit);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.1.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar--');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__FOO_BAR__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + upperFirst(word);\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = toString(string);\n\t      position = position == null\n\t        ? 0\n\t        : baseClamp(toInteger(position), 0, string.length);\n\t\n\t      target = baseToString(target);\n\t      return string.slice(position, position + target.length) == target;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is given, it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {RegExp} [options.escape=_.templateSettings.escape]\n\t     *  The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n\t     *  The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports=_.templateSettings.imports]\n\t     *  An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n\t     *  The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n\t     *  The sourceURL of the compiled template.\n\t     * @param {string} [options.variable='obj']\n\t     *  The data object variable name.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // Use the \"interpolate\" delimiter to create a compiled template.\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // Use the HTML \"escape\" delimiter to escape data property values.\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the internal `print` function in \"evaluate\" delimiters.\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n\t     * // Disable support by replacing the \"interpolate\" delimiter.\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // Use backslashes to treat delimiters as plain text.\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // Use the `imports` option to import `jQuery` as `jq`.\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n\t     *\n\t     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // Use custom template delimiters.\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // Use the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and stack traces.\n\t     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, guard) {\n\t      // Based on John Resig's `tmpl` implementation\n\t      // (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      string = toString(string);\n\t      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\t\n\t      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products needs `match` returned in\n\t        // order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source)\n\t          .apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to lower case just like\n\t     * [String#toLowerCase](https://mdn.io/toLowerCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.toLower('--Foo-Bar--');\n\t     * // => '--foo-bar--'\n\t     *\n\t     * _.toLower('fooBar');\n\t     * // => 'foobar'\n\t     *\n\t     * _.toLower('__FOO_BAR__');\n\t     * // => '__foo_bar__'\n\t     */\n\t    function toLower(value) {\n\t      return toString(value).toLowerCase();\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to upper case just like\n\t     * [String#toUpperCase](https://mdn.io/toUpperCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.toUpper('--foo-bar--');\n\t     * // => '--FOO-BAR--'\n\t     *\n\t     * _.toUpper('fooBar');\n\t     * // => 'FOOBAR'\n\t     *\n\t     * _.toUpper('__foo_bar__');\n\t     * // => '__FOO_BAR__'\n\t     */\n\t    function toUpper(value) {\n\t      return toString(value).toUpperCase();\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrim, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          chrSymbols = stringToArray(chars),\n\t          start = charsStartIndex(strSymbols, chrSymbols),\n\t          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\t\n\t      return castSlice(strSymbols, start, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimEnd('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimEnd('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimEnd(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimEnd, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\t\n\t      return castSlice(strSymbols, 0, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimStart('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimStart('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimStart(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimStart, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          start = charsStartIndex(strSymbols, stringToArray(chars));\n\t\n\t      return castSlice(strSymbols, start).join('');\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function truncate(string, options) {\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (isObject(options)) {\n\t        var separator = 'separator' in options ? options.separator : separator;\n\t        length = 'length' in options ? toInteger(options.length) : length;\n\t        omission = 'omission' in options ? baseToString(options.omission) : omission;\n\t      }\n\t      string = toString(string);\n\t\n\t      var strLength = string.length;\n\t      if (hasUnicode(string)) {\n\t        var strSymbols = stringToArray(string);\n\t        strLength = strSymbols.length;\n\t      }\n\t      if (length >= strLength) {\n\t        return string;\n\t      }\n\t      var end = length - stringSize(omission);\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = strSymbols\n\t        ? castSlice(strSymbols, 0, end).join('')\n\t        : string.slice(0, end);\n\t\n\t      if (separator === undefined) {\n\t        return result + omission;\n\t      }\n\t      if (strSymbols) {\n\t        end += (result.length - end);\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              substring = result;\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            var newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd === undefined ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(baseToString(separator), end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n\t     * their corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional\n\t     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.6.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = toString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.upperCase('--foo-bar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('fooBar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('__foo_bar__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var upperCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toUpperCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.upperFirst('fred');\n\t     * // => 'Fred'\n\t     *\n\t     * _.upperFirst('FRED');\n\t     * // => 'FRED'\n\t     */\n\t    var upperFirst = createCaseFirst('toUpperCase');\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      string = toString(string);\n\t      pattern = guard ? undefined : pattern;\n\t\n\t      if (pattern === undefined) {\n\t        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n\t      }\n\t      return string.match(pattern) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Function} func The function to attempt.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // Avoid throwing errors for invalid selectors.\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = baseRest(function(func, args) {\n\t      try {\n\t        return apply(func, undefined, args);\n\t      } catch (e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} methodNames The object method names to bind.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'click': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view, ['click']);\n\t     * jQuery(element).on('click', view.click);\n\t     * // => Logs 'clicked docs' when clicked.\n\t     */\n\t    var bindAll = flatRest(function(object, methodNames) {\n\t      arrayEach(methodNames, function(key) {\n\t        key = toKey(key);\n\t        baseAssignValue(object, key, bind(object[key], object));\n\t      });\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that iterates over `pairs` and invokes the corresponding\n\t     * function of the first predicate to return truthy. The predicate-function\n\t     * pairs are invoked with the `this` binding and arguments of the created\n\t     * function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Array} pairs The predicate-function pairs.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @example\n\t     *\n\t     * var func = _.cond([\n\t     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n\t     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n\t     *   [_.stubTrue,                      _.constant('no match')]\n\t     * ]);\n\t     *\n\t     * func({ 'a': 1, 'b': 2 });\n\t     * // => 'matches A'\n\t     *\n\t     * func({ 'a': 0, 'b': 1 });\n\t     * // => 'matches B'\n\t     *\n\t     * func({ 'a': '1', 'b': '2' });\n\t     * // => 'no match'\n\t     */\n\t    function cond(pairs) {\n\t      var length = pairs == null ? 0 : pairs.length,\n\t          toIteratee = getIteratee();\n\t\n\t      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n\t        if (typeof pair[1] != 'function') {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t        return [toIteratee(pair[0]), pair[1]];\n\t      });\n\t\n\t      return baseRest(function(args) {\n\t        var index = -1;\n\t        while (++index < length) {\n\t          var pair = pairs[index];\n\t          if (apply(pair[0], this, args)) {\n\t            return apply(pair[1], this, args);\n\t          }\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the predicate properties of `source` with\n\t     * the corresponding property values of a given object, returning `true` if\n\t     * all predicates return truthy, else `false`.\n\t     *\n\t     * **Note:** The created function is equivalent to `_.conformsTo` with\n\t     * `source` partially applied.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 2, 'b': 1 },\n\t     *   { 'a': 1, 'b': 2 }\n\t     * ];\n\t     *\n\t     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n\t     * // => [{ 'a': 1, 'b': 2 }]\n\t     */\n\t    function conforms(source) {\n\t      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new constant function.\n\t     * @example\n\t     *\n\t     * var objects = _.times(2, _.constant({ 'a': 1 }));\n\t     *\n\t     * console.log(objects);\n\t     * // => [{ 'a': 1 }, { 'a': 1 }]\n\t     *\n\t     * console.log(objects[0] === objects[1]);\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Checks `value` to determine whether a default value should be returned in\n\t     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n\t     * or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.14.0\n\t     * @category Util\n\t     * @param {*} value The value to check.\n\t     * @param {*} defaultValue The default value.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * _.defaultTo(1, 10);\n\t     * // => 1\n\t     *\n\t     * _.defaultTo(undefined, 10);\n\t     * // => 10\n\t     */\n\t    function defaultTo(value, defaultValue) {\n\t      return (value == null || value !== value) ? defaultValue : value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the given functions\n\t     * with the `this` binding of the created function, where each successive\n\t     * invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flowRight\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow([_.add, square]);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the given functions from right to left.\n\t     *\n\t     * @static\n\t     * @since 3.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flow\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight([square, _.add]);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * This method returns the first argument it receives.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     *\n\t     * console.log(_.identity(object) === object);\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the arguments of the created\n\t     * function. If `func` is a property name, the created function returns the\n\t     * property value for a given element. If `func` is an array or object, the\n\t     * created function returns `true` for elements that contain the equivalent\n\t     * source properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n\t     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, _.iteratee(['user', 'fred']));\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, _.iteratee('user'));\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // Create custom iteratee shorthands.\n\t     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n\t     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n\t     *     return func.test(string);\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(['abc', 'def'], /ef/);\n\t     * // => ['def']\n\t     */\n\t    function iteratee(func) {\n\t      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between a given\n\t     * object and `source`, returning `true` if the given object has equivalent\n\t     * property values, else `false`.\n\t     *\n\t     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n\t     * partially applied.\n\t     *\n\t     * Partial comparisons will match empty array and empty object `source`\n\t     * values against any array or object value, respectively. See `_.isEqual`\n\t     * for a list of supported value comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 1, 'b': 2, 'c': 3 },\n\t     *   { 'a': 4, 'b': 5, 'c': 6 }\n\t     * ];\n\t     *\n\t     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n\t     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between the\n\t     * value at `path` of a given object to `srcValue`, returning `true` if the\n\t     * object value is equivalent, else `false`.\n\t     *\n\t     * **Note:** Partial comparisons will match empty array and empty object\n\t     * `srcValue` values against any array or object value, respectively. See\n\t     * `_.isEqual` for a list of supported value comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 1, 'b': 2, 'c': 3 },\n\t     *   { 'a': 4, 'b': 5, 'c': 6 }\n\t     * ];\n\t     *\n\t     * _.find(objects, _.matchesProperty('a', 4));\n\t     * // => { 'a': 4, 'b': 5, 'c': 6 }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` of a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': _.constant(2) } },\n\t     *   { 'a': { 'b': _.constant(1) } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(objects, _.method(['a', 'b']));\n\t     * // => [2, 1]\n\t     */\n\t    var method = baseRest(function(path, args) {\n\t      return function(object) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path of `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = baseRest(function(object, args) {\n\t      return function(path) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable string keyed function properties of a source\n\t     * object to the destination object. If `object` is a function, then methods\n\t     * are added to its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      var props = keys(source),\n\t          methodNames = baseFunctions(source, props);\n\t\n\t      if (options == null &&\n\t          !(isObject(source) && (methodNames.length || !props.length))) {\n\t        options = source;\n\t        source = object;\n\t        object = this;\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n\t          isFunc = isFunction(object);\n\t\n\t      arrayEach(methodNames, function(methodName) {\n\t        var func = source[methodName];\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = function() {\n\t            var chainAll = this.__chain__;\n\t            if (chain || chainAll) {\n\t              var result = object(this.__wrapped__),\n\t                  actions = result.__actions__ = copyArray(this.__actions__);\n\t\n\t              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t              result.__chain__ = chainAll;\n\t              return result;\n\t            }\n\t            return func.apply(object, arrayPush([this.value()], arguments));\n\t          };\n\t        }\n\t      });\n\t\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      if (root._ === this) {\n\t        root._ = oldDash;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * This method returns `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Util\n\t     * @example\n\t     *\n\t     * _.times(2, _.noop);\n\t     * // => [undefined, undefined]\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that gets the argument at index `n`. If `n` is negative,\n\t     * the nth argument from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [n=0] The index of the argument to return.\n\t     * @returns {Function} Returns the new pass-thru function.\n\t     * @example\n\t     *\n\t     * var func = _.nthArg(1);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'b'\n\t     *\n\t     * var func = _.nthArg(-2);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'c'\n\t     */\n\t    function nthArg(n) {\n\t      n = toInteger(n);\n\t      return baseRest(function(args) {\n\t        return baseNth(args, n);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `iteratees` with the arguments it receives\n\t     * and returns their results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n\t     *  The iteratees to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.over([Math.max, Math.min]);\n\t     *\n\t     * func(1, 2, 3, 4);\n\t     * // => [4, 1]\n\t     */\n\t    var over = createOver(arrayMap);\n\t\n\t    /**\n\t     * Creates a function that checks if **all** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [predicates=[_.identity]]\n\t     *  The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overEvery([Boolean, isFinite]);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => false\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overEvery = createOver(arrayEvery);\n\t\n\t    /**\n\t     * Creates a function that checks if **any** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [predicates=[_.identity]]\n\t     *  The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overSome([Boolean, isFinite]);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => true\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overSome = createOver(arraySome);\n\t\n\t    /**\n\t     * Creates a function that returns the value at `path` of a given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': 2 } },\n\t     *   { 'a': { 'b': 1 } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the value at a given path of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return object == null ? undefined : baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n\t     * `start` is specified without an `end` or `step`. If `end` is not specified,\n\t     * it's set to `start` with `start` then set to `0`.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(-4);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    var range = createRange();\n\t\n\t    /**\n\t     * This method is like `_.range` except that it populates values in\n\t     * descending order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.range\n\t     * @example\n\t     *\n\t     * _.rangeRight(4);\n\t     * // => [3, 2, 1, 0]\n\t     *\n\t     * _.rangeRight(-4);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 5);\n\t     * // => [4, 3, 2, 1]\n\t     *\n\t     * _.rangeRight(0, 20, 5);\n\t     * // => [15, 10, 5, 0]\n\t     *\n\t     * _.rangeRight(0, -4, -1);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.rangeRight(0);\n\t     * // => []\n\t     */\n\t    var rangeRight = createRange(true);\n\t\n\t    /**\n\t     * This method returns a new empty array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {Array} Returns the new empty array.\n\t     * @example\n\t     *\n\t     * var arrays = _.times(2, _.stubArray);\n\t     *\n\t     * console.log(arrays);\n\t     * // => [[], []]\n\t     *\n\t     * console.log(arrays[0] === arrays[1]);\n\t     * // => false\n\t     */\n\t    function stubArray() {\n\t      return [];\n\t    }\n\t\n\t    /**\n\t     * This method returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {boolean} Returns `false`.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubFalse);\n\t     * // => [false, false]\n\t     */\n\t    function stubFalse() {\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * This method returns a new empty object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {Object} Returns the new empty object.\n\t     * @example\n\t     *\n\t     * var objects = _.times(2, _.stubObject);\n\t     *\n\t     * console.log(objects);\n\t     * // => [{}, {}]\n\t     *\n\t     * console.log(objects[0] === objects[1]);\n\t     * // => false\n\t     */\n\t    function stubObject() {\n\t      return {};\n\t    }\n\t\n\t    /**\n\t     * This method returns an empty string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {string} Returns the empty string.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubString);\n\t     * // => ['', '']\n\t     */\n\t    function stubString() {\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * This method returns `true`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {boolean} Returns `true`.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubTrue);\n\t     * // => [true, true]\n\t     */\n\t    function stubTrue() {\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Invokes the iteratee `n` times, returning an array of the results of\n\t     * each invocation. The iteratee is invoked with one argument; (index).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.times(3, String);\n\t     * // => ['0', '1', '2']\n\t     *\n\t     *  _.times(4, _.constant(0));\n\t     * // => [0, 0, 0, 0]\n\t     */\n\t    function times(n, iteratee) {\n\t      n = toInteger(n);\n\t      if (n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return [];\n\t      }\n\t      var index = MAX_ARRAY_LENGTH,\n\t          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\t\n\t      iteratee = getIteratee(iteratee);\n\t      n -= MAX_ARRAY_LENGTH;\n\t\n\t      var result = baseTimes(length, iteratee);\n\t      while (++index < n) {\n\t        iteratee(index);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a property path array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the new property path array.\n\t     * @example\n\t     *\n\t     * _.toPath('a.b.c');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toPath('a[0].b.c');\n\t     * // => ['a', '0', 'b', 'c']\n\t     */\n\t    function toPath(value) {\n\t      if (isArray(value)) {\n\t        return arrayMap(value, toKey);\n\t      }\n\t      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {string} [prefix=''] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return toString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {number} augend The first number in an addition.\n\t     * @param {number} addend The second number in an addition.\n\t     * @returns {number} Returns the total.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    var add = createMathOperation(function(augend, addend) {\n\t      return augend + addend;\n\t    }, 0);\n\t\n\t    /**\n\t     * Computes `number` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Divide two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} dividend The first number in a division.\n\t     * @param {number} divisor The second number in a division.\n\t     * @returns {number} Returns the quotient.\n\t     * @example\n\t     *\n\t     * _.divide(6, 4);\n\t     * // => 1.5\n\t     */\n\t    var divide = createMathOperation(function(dividend, divisor) {\n\t      return dividend / divisor;\n\t    }, 1);\n\t\n\t    /**\n\t     * Computes `number` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Computes the maximum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => undefined\n\t     */\n\t    function max(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.max` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.maxBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.maxBy(objects, 'n');\n\t     * // => { 'n': 2 }\n\t     */\n\t    function maxBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Computes the mean of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * _.mean([4, 2, 8, 6]);\n\t     * // => 5\n\t     */\n\t    function mean(array) {\n\t      return baseMean(array, identity);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.mean` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be averaged.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.meanBy(objects, function(o) { return o.n; });\n\t     * // => 5\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.meanBy(objects, 'n');\n\t     * // => 5\n\t     */\n\t    function meanBy(array, iteratee) {\n\t      return baseMean(array, getIteratee(iteratee, 2));\n\t    }\n\t\n\t    /**\n\t     * Computes the minimum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => undefined\n\t     */\n\t    function min(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.min` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.minBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 1 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.minBy(objects, 'n');\n\t     * // => { 'n': 1 }\n\t     */\n\t    function minBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Multiply two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} multiplier The first number in a multiplication.\n\t     * @param {number} multiplicand The second number in a multiplication.\n\t     * @returns {number} Returns the product.\n\t     * @example\n\t     *\n\t     * _.multiply(6, 4);\n\t     * // => 24\n\t     */\n\t    var multiply = createMathOperation(function(multiplier, multiplicand) {\n\t      return multiplier * multiplicand;\n\t    }, 1);\n\t\n\t    /**\n\t     * Computes `number` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Subtract two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {number} minuend The first number in a subtraction.\n\t     * @param {number} subtrahend The second number in a subtraction.\n\t     * @returns {number} Returns the difference.\n\t     * @example\n\t     *\n\t     * _.subtract(6, 4);\n\t     * // => 2\n\t     */\n\t    var subtract = createMathOperation(function(minuend, subtrahend) {\n\t      return minuend - subtrahend;\n\t    }, 0);\n\t\n\t    /**\n\t     * Computes the sum of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 2, 8, 6]);\n\t     * // => 20\n\t     */\n\t    function sum(array) {\n\t      return (array && array.length)\n\t        ? baseSum(array, identity)\n\t        : 0;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sum` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be summed.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.sumBy(objects, function(o) { return o.n; });\n\t     * // => 20\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sumBy(objects, 'n');\n\t     * // => 20\n\t     */\n\t    function sumBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSum(array, getIteratee(iteratee, 2))\n\t        : 0;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return wrapped values in chain sequences.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.assignIn = assignIn;\n\t    lodash.assignInWith = assignInWith;\n\t    lodash.assignWith = assignWith;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.castArray = castArray;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.concat = concat;\n\t    lodash.cond = cond;\n\t    lodash.conforms = conforms;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.differenceBy = differenceBy;\n\t    lodash.differenceWith = differenceWith;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatMap = flatMap;\n\t    lodash.flatMapDeep = flatMapDeep;\n\t    lodash.flatMapDepth = flatMapDepth;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flattenDepth = flattenDepth;\n\t    lodash.flip = flip;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.fromPairs = fromPairs;\n\t    lodash.functions = functions;\n\t    lodash.functionsIn = functionsIn;\n\t    lodash.groupBy = groupBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.intersectionBy = intersectionBy;\n\t    lodash.intersectionWith = intersectionWith;\n\t    lodash.invert = invert;\n\t    lodash.invertBy = invertBy;\n\t    lodash.invokeMap = invokeMap;\n\t    lodash.iteratee = iteratee;\n\t    lodash.keyBy = keyBy;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.mergeWith = mergeWith;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.negate = negate;\n\t    lodash.nthArg = nthArg;\n\t    lodash.omit = omit;\n\t    lodash.omitBy = omitBy;\n\t    lodash.once = once;\n\t    lodash.orderBy = orderBy;\n\t    lodash.over = over;\n\t    lodash.overArgs = overArgs;\n\t    lodash.overEvery = overEvery;\n\t    lodash.overSome = overSome;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pickBy = pickBy;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAll = pullAll;\n\t    lodash.pullAllBy = pullAllBy;\n\t    lodash.pullAllWith = pullAllWith;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rangeRight = rangeRight;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.reverse = reverse;\n\t    lodash.sampleSize = sampleSize;\n\t    lodash.set = set;\n\t    lodash.setWith = setWith;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortedUniq = sortedUniq;\n\t    lodash.sortedUniqBy = sortedUniqBy;\n\t    lodash.split = split;\n\t    lodash.spread = spread;\n\t    lodash.tail = tail;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.toArray = toArray;\n\t    lodash.toPairs = toPairs;\n\t    lodash.toPairsIn = toPairsIn;\n\t    lodash.toPath = toPath;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.unary = unary;\n\t    lodash.union = union;\n\t    lodash.unionBy = unionBy;\n\t    lodash.unionWith = unionWith;\n\t    lodash.uniq = uniq;\n\t    lodash.uniqBy = uniqBy;\n\t    lodash.uniqWith = uniqWith;\n\t    lodash.unset = unset;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.update = update;\n\t    lodash.updateWith = updateWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.without = without;\n\t    lodash.words = words;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.xorBy = xorBy;\n\t    lodash.xorWith = xorWith;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipObjectDeep = zipObjectDeep;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.entries = toPairs;\n\t    lodash.entriesIn = toPairsIn;\n\t    lodash.extend = assignIn;\n\t    lodash.extendWith = assignInWith;\n\t\n\t    // Add methods to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return unwrapped values in chain sequences.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clamp = clamp;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.cloneDeepWith = cloneDeepWith;\n\t    lodash.cloneWith = cloneWith;\n\t    lodash.conformsTo = conformsTo;\n\t    lodash.deburr = deburr;\n\t    lodash.defaultTo = defaultTo;\n\t    lodash.divide = divide;\n\t    lodash.endsWith = endsWith;\n\t    lodash.eq = eq;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.floor = floor;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.hasIn = hasIn;\n\t    lodash.head = head;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.invoke = invoke;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isArrayBuffer = isArrayBuffer;\n\t    lodash.isArrayLike = isArrayLike;\n\t    lodash.isArrayLikeObject = isArrayLikeObject;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isBuffer = isBuffer;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isEqualWith = isEqualWith;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isInteger = isInteger;\n\t    lodash.isLength = isLength;\n\t    lodash.isMap = isMap;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isMatchWith = isMatchWith;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNil = isNil;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isObjectLike = isObjectLike;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isSafeInteger = isSafeInteger;\n\t    lodash.isSet = isSet;\n\t    lodash.isString = isString;\n\t    lodash.isSymbol = isSymbol;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.isWeakMap = isWeakMap;\n\t    lodash.isWeakSet = isWeakSet;\n\t    lodash.join = join;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lowerCase = lowerCase;\n\t    lodash.lowerFirst = lowerFirst;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.maxBy = maxBy;\n\t    lodash.mean = mean;\n\t    lodash.meanBy = meanBy;\n\t    lodash.min = min;\n\t    lodash.minBy = minBy;\n\t    lodash.stubArray = stubArray;\n\t    lodash.stubFalse = stubFalse;\n\t    lodash.stubObject = stubObject;\n\t    lodash.stubString = stubString;\n\t    lodash.stubTrue = stubTrue;\n\t    lodash.multiply = multiply;\n\t    lodash.nth = nth;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padEnd = padEnd;\n\t    lodash.padStart = padStart;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.replace = replace;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.sample = sample;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedIndexBy = sortedIndexBy;\n\t    lodash.sortedIndexOf = sortedIndexOf;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.sortedLastIndexBy = sortedLastIndexBy;\n\t    lodash.sortedLastIndexOf = sortedLastIndexOf;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.subtract = subtract;\n\t    lodash.sum = sum;\n\t    lodash.sumBy = sumBy;\n\t    lodash.template = template;\n\t    lodash.times = times;\n\t    lodash.toFinite = toFinite;\n\t    lodash.toInteger = toInteger;\n\t    lodash.toLength = toLength;\n\t    lodash.toLower = toLower;\n\t    lodash.toNumber = toNumber;\n\t    lodash.toSafeInteger = toSafeInteger;\n\t    lodash.toString = toString;\n\t    lodash.toUpper = toUpper;\n\t    lodash.trim = trim;\n\t    lodash.trimEnd = trimEnd;\n\t    lodash.trimStart = trimStart;\n\t    lodash.truncate = truncate;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.upperCase = upperCase;\n\t    lodash.upperFirst = upperFirst;\n\t\n\t    // Add aliases.\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.first = head;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), { 'chain': false });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {string}\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\t\n\t        var result = (this.__filtered__ && !index)\n\t          ? new LazyWrapper(this)\n\t          : this.clone();\n\t\n\t        if (result.__filtered__) {\n\t          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n\t        } else {\n\t          result.__views__.push({\n\t            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n\t            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({\n\t          'iteratee': getIteratee(iteratee, 3),\n\t          'type': type\n\t        });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n\t    arrayEach(['head', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n\t    arrayEach(['initial', 'tail'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.find = function(predicate) {\n\t      return this.filter(predicate).head();\n\t    };\n\t\n\t    LazyWrapper.prototype.findLast = function(predicate) {\n\t      return this.reverse().find(predicate);\n\t    };\n\t\n\t    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n\t      if (typeof path == 'function') {\n\t        return new LazyWrapper(this);\n\t      }\n\t      return this.map(function(value) {\n\t        return baseInvoke(value, path, args);\n\t      });\n\t    });\n\t\n\t    LazyWrapper.prototype.reject = function(predicate) {\n\t      return this.filter(negate(getIteratee(predicate)));\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = toInteger(start);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = toInteger(end);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n\t      return this.reverse().takeWhile(predicate).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(MAX_ARRAY_LENGTH);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n\t          isTaker = /^(?:head|last)$/.test(methodName),\n\t          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n\t          retUnwrapped = isTaker || /^find/.test(methodName);\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var value = this.__wrapped__,\n\t            args = isTaker ? [1] : arguments,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        var interceptor = function(value) {\n\t          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n\t          return (isTaker && chainAll) ? result[0] : result;\n\t        };\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var chainAll = this.__chain__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isUnwrapped = retUnwrapped && !chainAll,\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        if (isUnwrapped && onlyLazy) {\n\t          return func.apply(this, args);\n\t        }\n\t        result = this.thru(interceptor);\n\t        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n\t      };\n\t    });\n\t\n\t    // Add `Array` methods to `lodash.prototype`.\n\t    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n\t      var func = arrayProto[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          var value = this.value();\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified method names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = (lodashFunc.name + ''),\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n\t      'name': 'wrapper',\n\t      'func': undefined\n\t    }];\n\t\n\t    // Add methods to `LazyWrapper`.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chain sequence methods to the `lodash` wrapper.\n\t    lodash.prototype.at = wrapperAt;\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.next = wrapperNext;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    // Add lazy aliases.\n\t    lodash.prototype.first = lodash.prototype.head;\n\t\n\t    if (symIterator) {\n\t      lodash.prototype[symIterator] = wrapperToIterator;\n\t    }\n\t    return lodash;\n\t  });\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Some AMD build optimizers, like r.js, check for condition patterns like:\n\t  if (true) {\n\t    // Expose Lodash on the global object to prevent errors when Lodash is\n\t    // loaded by a script tag in the presence of an AMD loader.\n\t    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n\t    // Use `_.noConflict` to remove Lodash from the global object.\n\t    root._ = _;\n\t\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds it.\n\t  else if (freeModule) {\n\t    // Export for Node.js.\n\t    (freeModule.exports = _)._ = _;\n\t    // Export for CommonJS support.\n\t    freeExports._ = _;\n\t  }\n\t  else {\n\t    // Export to the global object.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(1)(module), __webpack_require__(13)))\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t  version: '0.2.0',\n\t  build: new Date()\n\t};\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createjsBrowserify = __webpack_require__(4);\n\t\n\tvar _createjsBrowserify2 = _interopRequireDefault(_createjsBrowserify);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t(function (global, factory) {\n\t  if (( false ? 'undefined' : _typeof(module)) === 'object' && _typeof(module.exports) === 'object') {\n\t    // For CommonJS and CommonJS-like environments where a proper `window`\n\t    // is present, execute the factory and get ElementsJS.\n\t    // For environments that do not have a `window` with a `document`\n\t    // (such as Node.js), expose a factory as module.exports.\n\t    // This accentuates the need for the creation of a real `window`.\n\t    module.exports = global.document ? factory(global, true) : function (w) {\n\t      if (!w.document) {\n\t        throw new Error('ElementsJS requires a window with a document');\n\t      }\n\t      return factory(w);\n\t    };\n\t  } else {\n\t    factory(global);\n\t  }\n\t  // Pass this if window is not defined yet\n\t})(typeof window !== 'undefined' ? window : undefined, function (window) {\n\t  return {\n\t    AbstractLoader: _createjsBrowserify2.default.AbstractLoader,\n\t    AbstractMediaLoader: _createjsBrowserify2.default.AbstractMediaLoader,\n\t    AbstractRequest: _createjsBrowserify2.default.AbstractRequest,\n\t    BinaryLoader: _createjsBrowserify2.default.BinaryLoader,\n\t    CSSLoader: _createjsBrowserify2.default.CSSLoader,\n\t    DataUtils: _createjsBrowserify2.default.DataUtils,\n\t    DomUtils: _createjsBrowserify2.default.DomUtils,\n\t    ErrorEvent: _createjsBrowserify2.default.ErrorEvent,\n\t    Event: _createjsBrowserify2.default.Event,\n\t    EventDispatcher: _createjsBrowserify2.default.EventDispatcher,\n\t    ImageLoader: _createjsBrowserify2.default.ImageLoader,\n\t    JavaScriptLoader: _createjsBrowserify2.default.JavaScriptLoader,\n\t    JSONLoader: _createjsBrowserify2.default.JSONLoader,\n\t    JSONPLoader: _createjsBrowserify2.default.JSONPLoader,\n\t    LoadItem: _createjsBrowserify2.default.LoadItem,\n\t    LoadQueue: _createjsBrowserify2.default.LoadQueue,\n\t    ManifestLoader: _createjsBrowserify2.default.ManifestLoader,\n\t    MediaTagRequest: _createjsBrowserify2.default.MediaTagRequest,\n\t    ProgressEvent: _createjsBrowserify2.default.ProgressEvent,\n\t    RequestUtils: _createjsBrowserify2.default.ProgressEvent,\n\t    SamplePlugin: _createjsBrowserify2.default.SamplePlugin,\n\t    SoundLoader: _createjsBrowserify2.default.SoundLoader,\n\t    SpriteSheetLoader: _createjsBrowserify2.default.SpriteSheetLoader,\n\t    SVGLoader: _createjsBrowserify2.default.SVGLoader,\n\t    TagRequest: _createjsBrowserify2.default.TagRequest,\n\t    TextLoader: _createjsBrowserify2.default.TextLoader,\n\t    VideoLoader: _createjsBrowserify2.default.VideoLoader,\n\t    XHRRequest: _createjsBrowserify2.default.XHRRequest,\n\t    XMLLoader: _createjsBrowserify2.default.XMLLoader,\n\t    extend: _createjsBrowserify2.default.extend,\n\t    indexOf: _createjsBrowserify2.default.indexOf,\n\t    promote: _createjsBrowserify2.default.promote,\n\t    buildDate: _createjsBrowserify2.default.PreloadJS.buildDate,\n\t    version: _createjsBrowserify2.default.PreloadJS.version\n\t  };\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module)))\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createjsBrowserify = __webpack_require__(4);\n\t\n\tvar _createjsBrowserify2 = _interopRequireDefault(_createjsBrowserify);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t(function (global, factory) {\n\t  if (( false ? 'undefined' : _typeof(module)) === 'object' && _typeof(module.exports) === 'object') {\n\t    // For CommonJS and CommonJS-like environments where a proper `window`\n\t    // is present, execute the factory and get ElementsJS.\n\t    // For environments that do not have a `window` with a `document`\n\t    // (such as Node.js), expose a factory as module.exports.\n\t    // This accentuates the need for the creation of a real `window`.\n\t    module.exports = global.document ? factory(global, true) : function (w) {\n\t      if (!w.document) {\n\t        throw new Error('ElementsJS requires a window with a document');\n\t      }\n\t      return factory(w);\n\t    };\n\t  } else {\n\t    factory(global);\n\t  }\n\t  // Pass this if window is not defined yet\n\t})(typeof window !== 'undefined' ? window : undefined, function (window) {\n\t  return {\n\t    CSSPlugin: _createjsBrowserify2.default.CSSPlugin,\n\t    Ease: _createjsBrowserify2.default.Ease,\n\t    Event: _createjsBrowserify2.default.Event,\n\t    EventDispatcher: _createjsBrowserify2.default.EventDispatcher,\n\t    MotionGuidePlugin: _createjsBrowserify2.default.MotionGuidePlugin,\n\t    SamplePlugin: _createjsBrowserify2.default.SamplePlugin,\n\t    Ticker: _createjsBrowserify2.default.Ticker,\n\t    Timeline: _createjsBrowserify2.default.Timeline,\n\t    Tween: _createjsBrowserify2.default.Tween,\n\t    extend: _createjsBrowserify2.default.extend,\n\t    indexOf: _createjsBrowserify2.default.indexOf,\n\t    promote: _createjsBrowserify2.default.promote,\n\t    buildDate: _createjsBrowserify2.default.TweenJS.buildDate,\n\t    version: _createjsBrowserify2.default.TweenJS.version\n\t  };\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module)))\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _Element2 = __webpack_require__(2);\n\t\n\tvar _Element3 = _interopRequireDefault(_Element2);\n\t\n\tvar _LabelElement = __webpack_require__(7);\n\t\n\tvar _LabelElement2 = _interopRequireDefault(_LabelElement);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * constructs a BoxElement instance\n\t * @class BoxElement\n\t * @classdesc Box Element class, useful to create boxes with a title options (LabelElement)\n\t * @extends Element\n\t * @param {Object} options the options object to be merged with defaults\n\t * @type {BoxElement}\n\t * @public\n\t */\n\tvar BoxElement = function (_Element) {\n\t  _inherits(BoxElement, _Element);\n\t\n\t  function BoxElement() {\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, BoxElement);\n\t\n\t    return _possibleConstructorReturn(this, (BoxElement.__proto__ || Object.getPrototypeOf(BoxElement)).call(this, options));\n\t  }\n\t\n\t  /**\n\t   * Initialize default settings for Box Element\n\t   * @memberOf BoxElement\n\t   * @method initDefaults\n\t   * @instance\n\t   * @override\n\t   */\n\t\n\t\n\t  _createClass(BoxElement, [{\n\t    key: 'initDefaults',\n\t    value: function initDefaults() {\n\t      _get(BoxElement.prototype.__proto__ || Object.getPrototypeOf(BoxElement.prototype), 'initDefaults', this).call(this, {\n\t        title: { // options for a LabelElement\n\t          text: 'Text Element',\n\t          font: '50px Arial',\n\t          color: '#000',\n\t          padding: 10,\n\t          lineHeight: 50,\n\t          maxWidth: false,\n\t          shadow: false,\n\t          outline: false,\n\t          stroke: false,\n\t          align: 'center top'\n\t        },\n\t        content: { // options for a Element\n\t          fill: 'transparent',\n\t          align: 'center bottom'\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * drawElements method implementation\n\t     * @memberOf BoxElement\n\t     * @method drawElements\n\t     * @instance\n\t     * @inheritdoc\n\t     * @override\n\t     */\n\t\n\t  }, {\n\t    key: 'drawElements',\n\t    value: function drawElements() {\n\t      if (!this.settings.debug) {\n\t        _get(BoxElement.prototype.__proto__ || Object.getPrototypeOf(BoxElement.prototype), 'drawElements', this).call(this);\n\t      }\n\t\n\t      if (!!this.settings.title) {\n\t        this.titleElement = new _LabelElement2.default(this.settings.title.inherit({\n\t          parent: this,\n\t          minWidth: this.settings.size.width\n\t        }));\n\t      }\n\t\n\t      this.contentElement = new _Element3.default(this.settings.content.inherit({\n\t        parent: this,\n\t        size: {\n\t          width: this.settings.size.width,\n\t          height: this.settings.size.height - (!!this.settings.title ? this.titleElement.getComputedBounds().height : 0)\n\t        }\n\t      }));\n\t\n\t      if (!!this.settings.debug) {\n\t        _get(BoxElement.prototype.__proto__ || Object.getPrototypeOf(BoxElement.prototype), 'drawElements', this).call(this);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * gets the title LabelElement instance\n\t     * @memberOf BoxElement\n\t     * @method getTitleElement\n\t     * @instance\n\t     * @return {LabelElement} the instance used to draw the title\n\t     */\n\t\n\t  }, {\n\t    key: 'getTitleElement',\n\t    value: function getTitleElement() {\n\t      return this.titleElement;\n\t    }\n\t\n\t    /**\n\t     * gets the content Element instance\n\t     * @memberOf BoxElement\n\t     * @method getContentElement\n\t     * @instance\n\t     * @return {Element} the instance used to draw the content element\n\t     */\n\t\n\t  }, {\n\t    key: 'getContentElement',\n\t    value: function getContentElement() {\n\t      return this.contentElement;\n\t    }\n\t  }]);\n\t\n\t  return BoxElement;\n\t}(_Element3.default);\n\t\n\texports.default = BoxElement;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _Element2 = __webpack_require__(2);\n\t\n\tvar _Element3 = _interopRequireDefault(_Element2);\n\t\n\tvar _ListItemElement = __webpack_require__(10);\n\t\n\tvar _ListItemElement2 = _interopRequireDefault(_ListItemElement);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * constructs a ListElement instance\n\t * @class ListElement\n\t * @classdesc the ListElement class allows to create a list of any type of elements\n\t * @extend Element\n\t * @public\n\t * @param {Object} options the options to be merged with defaults settings\n\t * @type {ListElement}\n\t */\n\tvar ListElement = function (_Element) {\n\t  _inherits(ListElement, _Element);\n\t\n\t  function ListElement() {\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, ListElement);\n\t\n\t    return _possibleConstructorReturn(this, (ListElement.__proto__ || Object.getPrototypeOf(ListElement)).call(this, options));\n\t  }\n\t\n\t  /**\n\t   * Initialize default settings for List Element\n\t   * @memberOf ListElement\n\t   * @method initDefaults\n\t   * @instance\n\t   * @override\n\t   */\n\t\n\t\n\t  _createClass(ListElement, [{\n\t    key: 'initDefaults',\n\t    value: function initDefaults() {\n\t      _get(ListElement.prototype.__proto__ || Object.getPrototypeOf(ListElement.prototype), 'initDefaults', this).call(this, {\n\t        items: [],\n\t        item: { // options for a ListItemElement to use as default listItem options\n\t          minWidth: '100%',\n\t          color: '#fff'\n\t        },\n\t        itemEvents: { // event handlers to use as default listItem event handlers\n\t          click: function click() {}\n\t        },\n\t        indicator: false, // options for an ImageElement to use as default listItem indicator\n\t        stroke: {\n\t          size: 0,\n\t          radius: 0,\n\t          color: 'transparent'\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * initializes data object for the ListElement instance\n\t     * @memberOf ListElement\n\t     * @method initData\n\t     * @instance\n\t     * @override\n\t     */\n\t\n\t  }, {\n\t    key: 'initData',\n\t    value: function initData() {\n\t      this.items = [];\n\t    }\n\t\n\t    /**\n\t     * compute bounds before drawing all graphic elements of ListElement instance\n\t     * @memberOf ListElement\n\t     * @method computeBounds\n\t     * @instance\n\t     * @override\n\t     */\n\t\n\t  }, {\n\t    key: 'computeBounds',\n\t    value: function computeBounds() {\n\t      if (!!this.settings.minWidth) {\n\t        if (this.settings.minWidth.isPercentage() && !!this.parent) {\n\t          this.settings.minWidth = this.parent.getComputedBounds().width * this.settings.minWidth.parsePercentage();\n\t        }\n\t\n\t        if (this.settings.size.width < this.settings.minWidth) {\n\t          this.settings.size.width = this.settings.minWidth;\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * draws all graphic elements of the ListElement instance, cycles the items, draw them and computes positions\n\t     * @memberOf ListElement\n\t     * @method drawElements\n\t     * @instance\n\t     * @override\n\t     */\n\t\n\t  }, {\n\t    key: 'drawElements',\n\t    value: function drawElements() {\n\t      var _this2 = this;\n\t\n\t      this.computeBounds();\n\t\n\t      _get(ListElement.prototype.__proto__ || Object.getPrototypeOf(ListElement.prototype), 'drawElements', this).call(this);\n\t\n\t      this.settings.path('items', []).each(function (item, i) {\n\t        var listItem = new _ListItemElement2.default(_this2.settings.item.inherit(true, {\n\t          indicator: _this2.settings.indicator,\n\t          events: _this2.settings.itemEvents\n\t        }, item, {\n\t          parent: _this2,\n\t          align: 'left top'\n\t        }));\n\t\n\t        _this2.items.push(listItem);\n\t\n\t        if (i > 0) {\n\t          listItem.setPosition({\n\t            y: _this2.items[i - 1].getComputedBounds().bottom\n\t          });\n\t        }\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return ListElement;\n\t}(_Element3.default);\n\t\n\texports.default = ListElement;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _ElementHelpers = __webpack_require__(3);\n\t\n\tvar _ElementHelpers2 = _interopRequireDefault(_ElementHelpers);\n\t\n\tvar _Element2 = __webpack_require__(2);\n\t\n\tvar _Element3 = _interopRequireDefault(_Element2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * constructs an SpriteElement instance\n\t * @class SpriteElement\n\t * @classdesc SpriteElement class, extending Element\n\t * @extends Element\n\t * @param {Object} options the options object to be merged with defaults\n\t * @type {SpriteElement}\n\t * @public\n\t */\n\tvar SpriteElement = function (_Element) {\n\t  _inherits(SpriteElement, _Element);\n\t\n\t  function SpriteElement() {\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    _classCallCheck(this, SpriteElement);\n\t\n\t    return _possibleConstructorReturn(this, (SpriteElement.__proto__ || Object.getPrototypeOf(SpriteElement)).call(this, options));\n\t  }\n\t\n\t  /**\n\t   * Initialize default settings for SpriteElement\n\t   * @memberOf SpriteElement\n\t   * @method initDefaults\n\t   * @instance\n\t   * @override\n\t   */\n\t\n\t\n\t  _createClass(SpriteElement, [{\n\t    key: 'initDefaults',\n\t    value: function initDefaults() {\n\t      _get(SpriteElement.prototype.__proto__ || Object.getPrototypeOf(SpriteElement.prototype), 'initDefaults', this).call(this, {\n\t        spritesheet: null\n\t      });\n\t    }\n\t\n\t    /**\n\t     * sets the scale factor for SpriteElement instance\n\t     * @memberOf SpriteElement\n\t     * @method setScale\n\t     * @instance\n\t     * @param {Number|Object} scaleOptions can be a Number (it will be used for both scaleX and scaleY attributes)<br>\n\t     *   can be an Object containing\n\t     * @param {Number} scaleOptions.x the scaleX factor for the SpriteElement\n\t     * @param {Number} scaleOptions.y the scaleY factor for the SpriteElement\n\t     * @return {SpriteElement}\n\t     */\n\t\n\t  }, {\n\t    key: 'setScale',\n\t    value: function setScale() {\n\t      var scaleOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { x: 1, y: 1 };\n\t\n\t      _get(SpriteElement.prototype.__proto__ || Object.getPrototypeOf(SpriteElement.prototype), 'setScale', this).call(this, scaleOptions);\n\t\n\t      this.sprite.inherit({\n\t        scaleX: this.settings.scale.x,\n\t        scaleY: this.settings.scale.y\n\t      });\n\t    }\n\t\n\t    /**\n\t     * draws all graphic elements of the SpriteElement instance\n\t     * @memberOf SpriteElement\n\t     * @method drawElements\n\t     * @instance\n\t     * @override\n\t     */\n\t\n\t  }, {\n\t    key: 'drawElements',\n\t    value: function drawElements() {\n\t      this.sprite = _ElementHelpers2.default.createSprite(this.settings.spritesheet);\n\t      this.spriteBounds = this.sprite.getBounds();\n\t\n\t      if (!this.settings.size.force) {\n\t        this.settings.inherit({\n\t          size: {\n\t            width: this.spriteBounds.width,\n\t            height: this.spriteBounds.height\n\t          }\n\t        });\n\t      } else {\n\t        _ElementHelpers2.default.align(this.sprite, null, 'center middle', true);\n\t      }\n\t\n\t      if (!this.settings.debug) {\n\t        _get(SpriteElement.prototype.__proto__ || Object.getPrototypeOf(SpriteElement.prototype), 'drawElements', this).call(this);\n\t      }\n\t\n\t      this.addChild(this.sprite);\n\t\n\t      if (!!this.settings.debug) {\n\t        _get(SpriteElement.prototype.__proto__ || Object.getPrototypeOf(SpriteElement.prototype), 'drawElements', this).call(this);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * animates the sprite\n\t     * @memberOf SpriteElement\n\t     * @method animate\n\t     * @instance\n\t     * @param {Object} options the animate options including<br>\n\t     * @param {String} options.animationName the animation name in the spritesheet json to start\n\t     * @param {Function}\n\t     * @return {SpriteElement}\n\t     */\n\t\n\t  }, {\n\t    key: 'animate',\n\t    value: function animate() {\n\t      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\n\t      if (Object.isObject(options)) {\n\t        if (!!options.animationName) {\n\t          if (!!options.onAnimationEnd) {\n\t            if (Function.isFunction(options.onAnimationEnd)) {\n\t              this.sprite.on('animationend', options.onAnimationEnd);\n\t            }\n\t          }\n\t\n\t          this.sprite.gotoAndPlay(options.animationName);\n\t        }\n\t      }\n\t\n\t      return this;\n\t    }\n\t  }]);\n\t\n\t  return SpriteElement;\n\t}(_Element3.default);\n\t\n\texports.default = SpriteElement;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _ElementHelpers = __webpack_require__(3);\n\t\n\tvar _ElementHelpers2 = _interopRequireDefault(_ElementHelpers);\n\t\n\tvar _Element = __webpack_require__(2);\n\t\n\tvar _Element2 = _interopRequireDefault(_Element);\n\t\n\tvar _TextElement = __webpack_require__(11);\n\t\n\tvar _TextElement2 = _interopRequireDefault(_TextElement);\n\t\n\tvar _LabelElement = __webpack_require__(7);\n\t\n\tvar _LabelElement2 = _interopRequireDefault(_LabelElement);\n\t\n\tvar _ButtonElement = __webpack_require__(8);\n\t\n\tvar _ButtonElement2 = _interopRequireDefault(_ButtonElement);\n\t\n\tvar _ListItemElement = __webpack_require__(10);\n\t\n\tvar _ListItemElement2 = _interopRequireDefault(_ListItemElement);\n\t\n\tvar _ListElement = __webpack_require__(18);\n\t\n\tvar _ListElement2 = _interopRequireDefault(_ListElement);\n\t\n\tvar _ImageElement = __webpack_require__(9);\n\t\n\tvar _ImageElement2 = _interopRequireDefault(_ImageElement);\n\t\n\tvar _SpriteElement = __webpack_require__(19);\n\t\n\tvar _SpriteElement2 = _interopRequireDefault(_SpriteElement);\n\t\n\tvar _BoxElement = __webpack_require__(17);\n\t\n\tvar _BoxElement2 = _interopRequireDefault(_BoxElement);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * @module Elements\n\t * @description The Elements module of CreateJS Core Framework\n\t * @property {ElementHelpers} ElementHelpers all the helpers we need to draw the elements\n\t * @property {Element} Element\n\t * @property {TextElement} TextElement\n\t * @property {LabelElement} LabelElement\n\t * @property {ButtonElement} ButtonElement\n\t * @property {ListItemElement} ListItemElement\n\t * @property {ListElement} ListElement\n\t * @property {ImageElement} ImageElement\n\t * @property {SpriteElement} SpriteElement\n\t * @property {BoxElement} BoxElement\n\t */\n\t(function (global, factory) {\n\t  if (( false ? 'undefined' : _typeof(module)) === 'object' && _typeof(module.exports) === 'object') {\n\t    // For CommonJS and CommonJS-like environments where a proper `window`\n\t    // is present, execute the factory and get ElementsJS.\n\t    // For environments that do not have a `window` with a `document`\n\t    // (such as Node.js), expose a factory as module.exports.\n\t    // This accentuates the need for the creation of a real `window`.\n\t    module.exports = global.document ? factory(global, true) : function (w) {\n\t      if (!w.document) {\n\t        throw new Error('ElementsJS requires a window with a document');\n\t      }\n\t      return factory(w);\n\t    };\n\t  } else {\n\t    factory(global);\n\t  }\n\t  // Pass this if window is not defined yet\n\t})(typeof window !== 'undefined' ? window : undefined, function (window) {\n\t  return {\n\t    ElementHelpers: _ElementHelpers2.default,\n\t    Element: _Element2.default,\n\t    TextElement: _TextElement2.default,\n\t    LabelElement: _LabelElement2.default,\n\t    ButtonElement: _ButtonElement2.default,\n\t    ListItemElement: _ListItemElement2.default,\n\t    ListElement: _ListElement2.default,\n\t    ImageElement: _ImageElement2.default,\n\t    SpriteElement: _SpriteElement2.default,\n\t    BoxElement: _BoxElement2.default\n\t  };\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module)))\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _SoundJS = __webpack_require__(6);\n\t\n\tvar _SoundElement = __webpack_require__(12);\n\t\n\tvar _SoundElement2 = _interopRequireDefault(_SoundElement);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar SoundManager = function () {\n\t  function SoundManager() {\n\t    _classCallCheck(this, SoundManager);\n\t\n\t    console.log('constructor exectued');\n\t  }\n\t\n\t  _createClass(SoundManager, null, [{\n\t    key: 'play',\n\t    value: function play(props) {\n\t      console.log('adding layer ', props);\n\t      var instance = new _SoundElement2.default(props);\n\t      SoundManager._instances = [];\n\t      _SoundJS.Ticker.addEventListener('tick', SoundManager.handleSoundTick);\n\t      SoundManager.addLayer(instance);\n\t\n\t      instance.instance.on('complete', function () {\n\t        SoundManager.removeLayer(instance);\n\t      });\n\t\n\t      return instance;\n\t    }\n\t  }, {\n\t    key: 'addLayer',\n\t    value: function addLayer(instance) {\n\t      SoundManager._instances.push({\n\t        instance: instance,\n\t        playing: true\n\t      });\n\t    }\n\t  }, {\n\t    key: 'removeLayer',\n\t    value: function removeLayer(instance) {\n\t      SoundManager._instances.remove(instance);\n\t    }\n\t  }, {\n\t    key: 'handleSoundTick',\n\t    value: function handleSoundTick() {\n\t      if (SoundManager._instances.length > 0) {\n\t        var toFade = SoundManager._instances.findBy(function (o) {\n\t          return Object.isObject(o.instance.props.fade) && o.instance.props.fade.type;\n\t        });\n\t\n\t        toFade.each(function (i) {\n\t          if (!!i.instance) {\n\t            if (i.props.fade.type === 'FADE_IN' || i.props.fade.type === 'FADE_ALL') {\n\t              if (i.instance.position === 0) {\n\t                i.instance.volume = 0;\n\t              } else if (i.instance.position < i.props.fade.duration) {\n\t                i.instance.volume = 1 / i.props.fade.duration * i.instance.position;\n\t              }\n\t            }\n\t\n\t            if (i.props.fade.type === 'FADE_OUT' || i.props.fade.type === 'FADE_ALL') {\n\t              if (i.instance.position > i.instance.duration - i.props.fade.duration) {\n\t                var fadeOutStart = i.instance.duration - i.props.fade.duration;\n\t                var backPosition = i.instance.position - fadeOutStart;\n\t\n\t                i.instance.volume = 1 - 1 / i.props.fade.duration * backPosition;\n\t              }\n\t            }\n\t          }\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'mute',\n\t    value: function mute() {\n\t      _SoundJS.Sound.muted = true;\n\t    }\n\t  }, {\n\t    key: 'unmute',\n\t    value: function unmute() {\n\t      _SoundJS.Sound.muted = false;\n\t    }\n\t  }]);\n\t\n\t  return SoundManager;\n\t}();\n\t\n\texports.default = SoundManager;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _SoundElement = __webpack_require__(12);\n\t\n\tvar _SoundElement2 = _interopRequireDefault(_SoundElement);\n\t\n\tvar _SoundManager = __webpack_require__(21);\n\t\n\tvar _SoundManager2 = _interopRequireDefault(_SoundManager);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t(function (global, factory) {\n\t  if (( false ? 'undefined' : _typeof(module)) === 'object' && _typeof(module.exports) === 'object') {\n\t    // For CommonJS and CommonJS-like environments where a proper `window`\n\t    // is present, execute the factory and get ElementsJS.\n\t    // For environments that do not have a `window` with a `document`\n\t    // (such as Node.js), expose a factory as module.exports.\n\t    // This accentuates the need for the creation of a real `window`.\n\t    module.exports = global.document ? factory(global, true) : function (w) {\n\t      if (!w.document) {\n\t        throw new Error('ElementsJS requires a window with a document');\n\t      }\n\t      return factory(w);\n\t    };\n\t  } else {\n\t    factory(global);\n\t  }\n\t  // Pass this if window is not defined yet\n\t})(typeof window !== 'undefined' ? window : undefined, function (window) {\n\t  return {\n\t    SoundManager: _SoundManager2.default,\n\t    SoundElement: _SoundElement2.default\n\t  };\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module)))\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _lodash = __webpack_require__(13);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar TranslateUtils = function () {\n\t  function TranslateUtils() {\n\t    _classCallCheck(this, TranslateUtils);\n\t  }\n\t\n\t  _createClass(TranslateUtils, null, [{\n\t    key: 'init',\n\t\n\t    /**\n\t     * Method for initing the Translation Engine\n\t     * @param translationSource\n\t     * @param language\n\t     * @static\n\t     */\n\t    value: function init(translationsSource, language) {\n\t      TranslateUtils._language = language;\n\t      TranslateUtils.TRANSLATIONS = translationsSource[language];\n\t    }\n\t\n\t    /**\n\t     * Useful Method for getting property through dot notation\n\t     * @param propertyName\n\t     * @param object\n\t     * @static\n\t     */\n\t\n\t  }, {\n\t    key: 'getProperty',\n\t    value: function getProperty(propertyName, object) {\n\t      var parts = propertyName.split('.');\n\t      var length = parts.length;\n\t      var i = void 0;\n\t      var property = object || this;\n\t\n\t      for (i = 0; i < length; i++) {\n\t        property = property[parts[i]];\n\t      }\n\t\n\t      return property;\n\t    }\n\t\n\t    /**\n\t     * Method for getting translation, with params management\n\t     * @param tag\n\t     * @param params\n\t     * @static\n\t     */\n\t\n\t  }, {\n\t    key: '_t',\n\t    value: function _t(tag) {\n\t      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      var p = TranslateUtils.getProperty(tag, TranslateUtils.TRANSLATIONS);\n\t      var t = _lodash2.default.isUndefined(p) ? tag : p;\n\t      var paramsMatch = t.match(/\\{{([^}}]+)\\}}/);\n\t\n\t      if (paramsMatch) {\n\t        var paramEnclosed = paramsMatch[0];\n\t        var paramKey = paramsMatch[1];\n\t\n\t        if (!_lodash2.default.isUndefined(params[paramKey])) {\n\t          console.log('substituing', paramEnclosed, ' with ', params[paramKey]);\n\t          t = _lodash2.default.replace(t, new RegExp(paramEnclosed), params[paramKey]);\n\t        }\n\t      }\n\t      return t;\n\t    }\n\t  }]);\n\t\n\t  return TranslateUtils;\n\t}();\n\t\n\texports.default = TranslateUtils;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _TranslateUtils = __webpack_require__(23);\n\t\n\tvar _TranslateUtils2 = _interopRequireDefault(_TranslateUtils);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t(function (global, factory) {\n\t  if (( false ? 'undefined' : _typeof(module)) === 'object' && _typeof(module.exports) === 'object') {\n\t    // For CommonJS and CommonJS-like environments where a proper `window`\n\t    // is present, execute the factory and get ElementsJS.\n\t    // For environments that do not have a `window` with a `document`\n\t    // (such as Node.js), expose a factory as module.exports.\n\t    // This accentuates the need for the creation of a real `window`.\n\t    module.exports = global.document ? factory(global, true) : function (w) {\n\t      if (!w.document) {\n\t        throw new Error('ElementsJS requires a window with a document');\n\t      }\n\t      return factory(w);\n\t    };\n\t  } else {\n\t    factory(global);\n\t  }\n\t  // Pass this if window is not defined yet\n\t})(typeof window !== 'undefined' ? window : undefined, function (window) {\n\t  return {\n\t    TranslateUtils: _TranslateUtils2.default\n\t  };\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module)))\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, {}))\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// elements-js.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1dd09aea96a70c8e7311","import createjs from 'createjs-browserify';\n\nimport EaselJS from './CreateJS/EaselJS';\nimport PreloadJS from './CreateJS/PreloadJS';\nimport SoundJS from './CreateJS/SoundJS';\nimport TweenJS from './CreateJS/TweenJS';\nimport Elements from './Elements';\nimport Translations from './Translations';\nimport Sounds from './Sounds';\n\nimport config from '../config';\n\n((global, factory) => {\n  if(typeof module === 'object' && typeof module.exports === 'object') {\n    // For CommonJS and CommonJS-like environments where a proper `window`\n    // is present, execute the factory and get ElementsJS.\n    // For environments that do not have a `window` with a `document`\n    // (such as Node.js), expose a factory as module.exports.\n    // This accentuates the need for the creation of a real `window`.\n    module.exports = global.document ?\n      factory(global, true) :\n      (w) => {\n        if(!w.document) {\n          throw new Error('ElementsJS requires a window with a document');\n        }\n        return factory(w);\n      };\n  } else {\n    factory(global);\n  }\n  // Pass this if window is not defined yet\n})(typeof window !== 'undefined' ? window : this, (window) => {\n  const elementsJSStatus = {\n    initialized: true,\n    version: config.version,\n    build: config.build,\n    EaselJS: 'EaselJS v' + createjs.EaselJS.version + ' - build ' + createjs.EaselJS.buildDate,\n    TweenJS: 'TweenJS v' + createjs.TweenJS.version + ' - build ' + createjs.TweenJS.buildDate,\n    PreloadJS: 'PreloadJS v' + createjs.PreloadJS.version + ' - build ' + createjs.PreloadJS.buildDate,\n    SoundJS: 'SoundJS v' + createjs.SoundJS.version + ' - build ' + createjs.SoundJS.buildDate,\n  };\n\n  console.log('ElementsJS initialized', elementsJSStatus);\n\n  return {\n    EaselJS,\n    PreloadJS,\n    SoundJS,\n    TweenJS,\n    Elements,\n    Translations,\n    Sounds,\n    status: elementsJSStatus,\n  };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/webpack/buildin/module.js\n// module id = 1\n// module chunks = 0","import { Container, Shadow, Shape, DisplayObject } from '../CreateJS/EaselJS';\nimport ElementHelpers from './ElementHelpers';\n\n/**\n * constructs an Element instance\n * @class Element\n * @classdesc Element Class\n //* @extends Container\n * @param {Object} options the options object to be merged with defaults\n * @type {Element}\n * @public\n */\nexport default class Element extends Container {\n  constructor(options = {}) {\n    super();\n\n    this.initDefaults();\n    this.initSettings(options);\n\n    this.initData();\n\n    if (this.settings.parent) {\n      this.settings.parent.addChild(this);\n    }\n\n    this.draw();\n\n    if (!!this.settings.align) {\n      this.align(null, this.settings.align);\n    }\n\n    this.bindEvents();\n\n    this.init();\n  }\n\n  /**\n   * initializes default settings for Element instance\n   * @memberOf Element\n   * @method initDefaults\n   * @instance\n   * @param {Object} defaults the defaults object for Element instance\n   */\n  initDefaults(defaults) {\n    this.inherit({\n      debug: {\n        fill: 'rgba(0,0,0,0.4)',\n        stroke: {\n          size: 1,\n          color: '#f00',\n        },\n        regPoint: {\n          radius: 3,\n          fill: '#f00',\n        },\n      },\n      defaults: {\n        debug: false,\n        parent: null,\n        position: {\n          x: 0,\n          y: 0,\n        },\n        scale: {\n          x: 1,\n          y: 1,\n        },\n        size: {\n          width: 0,\n          height: 0,\n        },\n        cache: false,\n        mask: false,\n        fill: 'rgba(255,255,255,0.001)',\n        stroke: {\n          size: 0,\n          radius: 0,\n          color: 'rgba(0,0,0,0.001)',\n        },\n        shadow: false,\n        align: null,\n        regPoint: false,\n        events: {},\n      }.inherit(defaults),\n    });\n  }\n\n  /**\n   * initializes settings object for the Element instance\n   * @memberOf Element\n   * @method initSettings\n   * @instance\n   * @param {Object} options the options object to be merged with defaults\n   */\n  initSettings(options) {\n    this.inherit({\n      settings: this.defaults.inherit(true, options),\n    });\n\n    !!this.settings.debug && this.settings.inherit(this.debug);\n  }\n\n  /**\n   * initializes data object for the Element instance\n   * @memberOf Element\n   * @method initData\n   * @instance\n   */\n  initData() {\n    this.data = {};\n  }\n\n  preDrawElements() {\n    this.setScale(this.settings.scale);\n    this.setComputedBounds(this.settings.size);\n  }\n\n  drawBackgroundElements() {\n    this.background = ElementHelpers.createRect(this.settings.pick(['fill', 'stroke']), ...this.bounds);\n    this.addChild(this.background);\n  }\n\n  drawElements() {\n    //TODO:\n  }\n\n  drawBehaviorElements() {\n    this.setMask(this.settings.mask);\n    this.setShadow(this.settings.shadow);\n    this.setCache(this.settings.cache);\n  }\n\n  drawOverlayElements() {\n    if (!!this.settings.regPoint) {\n      this.regPoint = ElementHelpers.createCircle(this.settings.regPoint, ...this.bounds);\n      this.addChild(this.regPoint);\n\n      ElementHelpers.align(this.regPoint, null, 'center middle', false);\n    }\n  }\n\n  postDrawElements() {\n    this.setBounds(...this.bounds);\n    this.setReg();\n    this.setPosition(this.settings.position);\n  }\n\n  /**\n   * draws all graphic elements of the Element instance\n   * @memberOf Element\n   * @method draw\n   * @instance\n   */\n  draw() {\n    super.draw();\n\n    this.preDrawElements();\n\n    this.drawBackgroundElements();\n    this.drawElements();\n    this.drawBehaviorElements();\n    this.drawOverlayElements();\n\n    this.postDrawElements();\n  }\n\n\n  /**\n   * sets to center/middle the regPoint of the Element instance\n   * @memberOf Element\n   * @method setReg\n   * @instance\n   */\n  setReg() {\n    this.inherit({\n      regX: this.settings.size.width * 0.5 * this.settings.scale.x,\n      regY: this.settings.size.height * 0.5 * this.settings.scale.y,\n    });\n\n    return this;\n  }\n\n  /**\n   * sets or updates the position of the Element instance\n   * @memberOf Element\n   * @method setPosition\n   * @instance\n   * @param {Object} [positionOptions=null] can contain x and y or only one or them\n   * @param {Number} [positionOptions.x=0] the x position\n   * @param {Number} [positionOptions.y=0] the y position\n   * @param {Boolean} [override=false] specify to override actual Element position\n   * @param {Boolean} [force=true] ...\n   * @return {Element} to make chainable the method\n   */\n  setPosition(positionOptions = null, override = false, force = true) {\n    if (!!positionOptions) {\n      if (force) {\n        this.settings.position = positionOptions;\n      } else {\n        this.settings.position.inherit(positionOptions);\n      }\n    }\n\n    if (!!this.settings.position) {\n      if (!!this.settings.position.x) {\n        if (!!override) {\n          this.x = this.settings.position.x;\n        } else {\n          this.x += this.settings.position.x;\n        }\n      }\n\n      if (!!this.settings.position.y) {\n        if (!!override) {\n          this.y = this.settings.position.y;\n        } else {\n          this.y += this.settings.position.y;\n        }\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * sets or updates the scaling of the Element instance\n   * @memberOf Element\n   * @method setScale\n   * @instance\n   * @param {Object|Number} scaleOptions can be an object with x and y couple or only a number to be used for both\n   * @return {Element} to make chainable the method\n   */\n  setScale(scaleOptions = null, force = false) {\n    if (!!scaleOptions) {\n      if (force) {\n        this.settings.scale = scaleOptions;\n      } else {\n        this.settings.scale.inherit(scaleOptions);\n      }\n    }\n\n    if (!!this.settings.scale) {\n      const scale = {\n        scaleX: 1,\n        scaleY: 1,\n      };\n\n      if (Number.isNumber(this.settings.scale)) {\n        scale.inherit({\n          scaleX: this.settings.scale,\n          scaleY: this.settings.scale,\n        });\n      } else if (Object.isObject(this.settings.scale)) {\n        scale.inherit({\n          scaleX: this.settings.scale.x,\n          scaleY: this.settings.scale.y,\n        });\n      }\n\n      this.inherit(scale);\n    }\n\n    return this;\n  }\n\n  /**\n   * sets or updates the bounds of the Element instance\n   * @memberOf Element\n   * @method setComputedBounds\n   * @instance\n   * @param {Object|Number} boundsOptions ...\n   * @return {Element} to make chainable the method\n   */\n  setComputedBounds(boundsOptions = null, force = false) {\n    if (!!boundsOptions) {\n      if (force) {\n        this.settings.size = boundsOptions;\n      } else {\n        this.settings.size.inherit(boundsOptions);\n      }\n    }\n\n    if (!this.bounds && !!this.settings.size) {\n      if (String.isPercentage(this.settings.size)) {\n        this.settings.size = {\n          width: '100%',\n          height: '100%',\n        };\n      } else if (Number.isNumber(this.settings.size)) {\n        this.settings.size = {\n          width: this.settings.size,\n          height: this.settings.size,\n        };\n      }\n\n      if (String.isPercentage(this.settings.size.width) && !!this.parent) {\n        this.settings.size.width = this.parent.getComputedBounds().width * this.settings.size.width.parsePercentage();\n      }\n\n      if (String.isPercentage(this.settings.size.height) && !!this.parent) {\n        this.settings.size.height = this.parent.getComputedBounds().height * this.settings.size.height.parsePercentage();\n      }\n\n      this.bounds = [0, 0, this.settings.size.width * this.settings.scale.x, this.settings.size.height * this.settings.scale.y];\n    }\n\n    return this;\n  }\n\n  /**\n   * sets or updates the Mask of the Element instance\n   * @memberOf Element\n   * @method setMask\n   * @instance\n   * @param {Object|Shadow} maskOptions can be an object with {color, x, y, blur}<br>or directly an instance of Shadow (EaselJS)\n   * @param {Boolean} force ....\n   * @return {Element} to make chainable the method\n   */\n  setMask(maskOptions = null, force = false) {\n    if (!!maskOptions) {\n      if (force) {\n        this.settings.mask = maskOptions;\n      } else {\n        this.settings.mask.inherit(maskOptions);\n      }\n    }\n\n    if (!!this.settings.mask) {\n      this.maskShape = this.settings.mask;\n\n      if (!(this.settings.mask instanceof Shape) && !(this.settings.mask instanceof DisplayObject)) {\n        this.maskBounds = [0, 0, this.settings.size.width * this.settings.scale.x, this.settings.size.height * this.settings.scale.y];\n\n        if (Object.isObject(this.settings.mask)) {\n          this.maskBounds = [0, 0, this.settings.size.width * this.settings.scale.x * this.settings.mask.scale, this.settings.size.height * this.settings.scale.y * this.settings.mask.scale];\n          this.maskShape = ElementHelpers.createRect(this.settings.mask.pick(['fill', 'stroke']), ...this.maskBounds);\n        } else if (Number.isNumber(this.settings.mask)) {\n          this.maskBounds = [0, 0, this.settings.size.width * this.settings.scale.x * this.settings.mask, this.settings.size.height * this.settings.scale.y * this.settings.mask];\n          this.maskShape = ElementHelpers.createRect(this.settings.pick(['fill', 'stroke']), ...this.maskBounds);\n        }\n\n        this.maskShape.inherit({\n          x: this.bounds[2] * 0.5 - this.maskBounds[2] * 0.5,\n          y: this.bounds[3] * 0.5 - this.maskBounds[3] * 0.5,\n        });\n      }\n\n      if (!!this.settings.debug) {\n        this.addChild(this.maskShape);\n      }\n\n      this.mask = this.maskShape;\n    }\n\n    return this;\n  }\n\n  /**\n   * sets or updates the Shadow of the Element instance\n   * @memberOf Element\n   * @method setShadow\n   * @instance\n   * @param {Object|Shadow} shadowOptions can be an object with {color, x, y, blur}<br>or directly an instance of Shadow (EaselJS)\n   * @param {Boolean} force ....\n   * @return {Element} to make chainable the method\n   */\n  setShadow(shadowOptions = null, force = false) {\n    if (!!shadowOptions) {\n      if (force) {\n        this.settings.shadow = shadowOptions;\n      } else {\n        this.settings.shadow.inherit(shadowOptions);\n      }\n\n      if (!!this.settings.shadow) {\n        let shadow = null;\n\n        if (Object.isObject(this.settings.shadow)) {\n          const shadowSettings = [\n            this.settings.shadow.color,\n            this.settings.shadow.x,\n            this.settings.shadow.y,\n            this.settings.shadow.blur,\n          ];\n\n          shadow = new Shadow(...shadowSettings);\n        } else if (this.settings.shadow instanceof Shadow) {\n          shadow = this.settings.shadow;\n        }\n\n        this.inherit({\n          shadow,\n        });\n      }\n    } else {\n      this.settings.shadow = null;\n      this.inherit({\n        shadow: null,\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * sets or updates the Cache of the Element instance\n   * @memberOf Element\n   * @method setCache\n   * @instance\n   * @param {Object|Shadow} cacheOptions ..\n   * @param {Boolean} force ....\n   * @return {Element} to make chainable the method\n   */\n  setCache(cacheOptions = null, force = false) {\n    if (!!cacheOptions) {\n      if (force) {\n        this.settings.cache = cacheOptions;\n      } else {\n        this.settings.cache.inherit(cacheOptions);\n      }\n\n      if (!!this.settings.cache) {\n        this.cache(...[this.bounds.x - 5, this.bounds.y - 5, this.getComputedBounds().width, this.getComputedBounds().height]);\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * Aligns the Element instance, based on it's parent bounds or specified parentElement bounds and mode parameter\n   * @memberOf Element\n   * @method align\n   * @instance\n   * @param {Object|null} parentElement if null, it considers the actual Element instance parent, otherwise it aligns in base of the specified parentElement\n   * @param {String} mode can be a set of one or two strings (blank separated) in any order, for horizontalModes (left, center, right), for verticalModes (top, middle, bottom)\n   * @return {Element} to make chainable the method\n   */\n  align(parentElement = null, mode = 'left top') {\n    if (!parentElement) {\n      parentElement = this.parent;\n    }\n\n    const parentBounds = parentElement.getBounds();\n    const bounds = this.getBounds();\n    const modes = mode.toArray(' ');\n    const horizontalModes = ['left', 'center', 'right'];\n    const verticalModes = ['top', 'middle', 'bottom'];\n\n    const position = {\n      x: 0,\n      y: 0,\n    };\n\n    if (horizontalModes.contains(modes)) {\n      if (modes.contains('left')) {\n        position.inherit({\n          x: bounds.width * 0.5,\n        });\n      } else if (modes.contains('center')) {\n        position.inherit({\n          x: parentBounds.width * 0.5,\n        });\n      } else if (modes.contains('right')) {\n        position.inherit({\n          x: parentBounds.width - bounds.width * 0.5,\n        });\n      }\n    }\n\n    if (verticalModes.contains(modes)) {\n      if (modes.contains('top')) {\n        position.inherit({\n          y: bounds.height * 0.5,\n        });\n      } else if (modes.contains('middle')) {\n        position.inherit({\n          y: parentBounds.height * 0.5,\n        });\n      } else if (modes.contains('bottom')) {\n        position.inherit({\n          y: parentBounds.height - bounds.height * 0.5,\n        });\n      }\n    }\n\n    this.settings.inherit({\n      position,\n    });\n\n    this.inherit(position);\n\n    return this;\n  }\n\n  /**\n   * returns the actual computed bounds of the Element instance, including scale factor and top, right, bottom, left coordinates\n   * @memberOf Element\n   * @method getComputedBounds\n   * @instance\n   * @return {Object} the actual Element instance computed bounds object<br>\n   * <pre>\n   *   {\n   *     {\n   *       top: number,\n   *       right: number,\n   *       bottom: number,\n   *       left: number,\n   *       x: number,\n   *       y: number,\n   *       width: number,\n   *       height: number\n   *     }\n   *   }\n   * </pre>\n   */\n  getComputedBounds() {\n    const bounds = this.getBounds();\n\n    return {\n      top: this.y - bounds.height * 0.5 * this.settings.scale.y,\n      right: this.x + bounds.width * 0.5 * this.settings.scale.x,\n      bottom: this.y + bounds.height * 0.5 * this.settings.scale.y,\n      left: this.x - bounds.width * 0.5 * this.settings.scale.x,\n      x: this.x,\n      y: this.y,\n      width: bounds.width * this.settings.scale.x,\n      height: bounds.height * this.settings.scale.y,\n    };\n  }\n\n  /**\n   * binds all events specified in the settings object for the Element instance, it supports all EaselJS classes events (eg. click, mouseover, etc...)\n   * @memberOf Element\n   * @method bindEvents\n   * @instance\n   */\n  bindEvents() {\n    if (!!this.settings.events) {\n      this.settings.events.each((value, key) => {\n        if (Function.isFunction(value)) {\n          this.on(key, value);\n        }\n      });\n    }\n  }\n\n  /**\n   * empty init method, to be overriden in classes that extends Element, to use for all those initializations you might need after having rendered the Element\n   * @memberOf Element\n   * @method init\n   * @instance\n   */\n  init() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Elements/Element.js","import {Container, Graphics, Shadow, Shape, Bitmap, Text, Sprite} from '../CreateJS/EaselJS';\n\n/**\n * @class ElementHelpers\n * @classdesc all the helpers we need to draw the elements\n */\nexport default class ElementHelpers {\n\n  /**\n   * sets the box size of an EaselJS element\n   * @memberOf ElementHelpers\n   * @method setBoxSize\n   * @static\n   * @param {Object|Container|Element} element can be an Object, an EaselJS instance, a CreateJS Core Elements instance\n   * @param {Number} width the width\n   * @param {Number} height the height\n   * @param {Boolean} css specity if you want to override also the css box size properties\n   * @return {Object|Container|Element}\n   */\n  static setBoxSize(element, width = 0, height = 0, css = false) {\n    if(!!css) {\n      element.style.width = width + 'px';\n      element.style.height = height + 'px';\n    }\n\n    return element.inherit({\n      width,\n      height,\n    });\n  }\n\n  /**\n   * sets the scale factor of an EaselJS element\n   * @memberOf ElementHelpers\n   * @method scale\n   * @static\n   * @param {Object|Container|Element} element can be an Object, an EaselJS instance, a CreateJS Core Elements instance\n   * @param {Number|Object} scale the scale factor to be used for both scaleX and scaleY\n   * @return {Object|Container|Element}\n   */\n  static scale(element, scale) {\n    return element.inherit({\n      scaleX: scale,\n      scaleY: scale,\n    });\n  }\n\n  /**\n   * aligns the reg point or an element\n   * @memberOf ElementHelpers\n   * @method alignRegPoint\n   * @static\n   * @param {Object|Container|Element} element can be an Object, an EaselJS instance, a CreateJS Core Elements instance\n   * @param {String} mode can be a couple of word for horizontal or vertical align, in any order<br>\n   *   accepts the following modes<br>\n   *   <ul>\n   *     <li><b>Horizontal Modes</b>: left, center, right</li>\n   *     <li><b>Vertical Modes</b>: top, middle, bottom</li>\n   *   </ul>\n   * @return {Object|Container|Element}\n   */\n  static alignRegPoint(element, mode = 'left top') {\n    const bounds = element.getBounds();\n    const modes = mode.toArray(' ');\n    const horizontalModes = ['left', 'center', 'right'];\n    const verticalModes = ['top', 'middle', 'bottom'];\n\n    return element.inherit({\n      regX: (horizontalModes.contains(modes)) ? bounds.width * 0.5 : 0,\n      regY: (verticalModes.contains(modes)) ? bounds.height * 0.5 : 0,\n    });\n  }\n\n  /**\n   * Aligns an element (horizontally, vertically or both) based on it's parent bounds.\n   * @memberOf ElementHelpers\n   * @method align\n   * @static\n   * @param {Object|Container|Element} element can be an Object, an EaselJS instance, a CreateJS Core Elements instance\n   * @param {null|Object|Container|Element} parent can be an Object, an EaselJS instance, a CreateJS Core Elements instance<br>\n   *   if null, it takes automatically the parent property of element parameter\n   * @param {String} mode can be a couple of word for horizontal or vertical align, in any order<br>\n   *   accepts the following modes<br>\n   *   <ul>\n   *     <li><b>Horizontal Modes</b>: left, center, right</li>\n   *     <li><b>Vertical Modes</b>: top, middle, bottom</li>\n   *   </ul>\n   * @param {Boolean} regPoint enabled alignment also on registration point\n   * @param {null|String} regPointMode can be a couple of word for horizontal or vertical align, in any order<br>\n   *   accepts the following modes<br>\n   *   <ul>\n   *     <li><b>Horizontal Modes</b>: left, center, right</li>\n   *     <li><b>Vertical Modes</b>: top, middle, bottom</li>\n   *   </ul><br>\n   *   if null it considers mode parameter as fallback\n   * @return {Object|Container|Element}\n   */\n  static align(element, parent = null, mode = 'left top', regPoint = false, regPointMode = null) {\n    if(!parent) {\n      parent = element.parent;\n    }\n\n    const parentBounds = parent.getBounds();\n    const elementBounds = element.getBounds();\n    const modes = mode.toArray(' ');\n    const horizontalModes = ['left', 'center', 'right'];\n    const verticalModes = ['top', 'middle', 'bottom'];\n\n    if(!!regPoint) {\n      this.alignRegPoint(element, regPointMode || mode);\n    }\n\n    const position = {\n      x: 0,\n      y: 0,\n    };\n\n    if(horizontalModes.contains(modes)) {\n      if(modes.contains('center')) {\n        position.inherit({\n          x: parentBounds.width * 0.5 + (!!regPoint && !(element instanceof Bitmap) ? elementBounds.width * 0.5 : 0),\n        });\n      } else if(modes.contains('left')) {\n        position.inherit({\n          x: (!!regPoint ? elementBounds.width * 0.5 : 0),\n        });\n      } else if(modes.contains('right')) {\n        position.inherit({\n          x: parentBounds.width - elementBounds.width + (!!regPoint ? elementBounds.width * 0.5 : 0),\n        });\n      }\n    }\n\n    if(verticalModes.contains(modes)) {\n      if(modes.contains('middle')) {\n        position.inherit({\n          y: parentBounds.height * 0.5 + (!!regPoint && !(element instanceof Bitmap) ? elementBounds.width * 0.5 : 0),\n        });\n      } else if(modes.contains('top')) {\n        position.inherit({\n          y: (!!regPoint ? elementBounds.height * 0.5 : 0),\n        });\n      } else if(modes.contains('bottom')) {\n        position.inherit({\n          y: parentBounds.height - elementBounds.height,\n        });\n      }\n    }\n\n    return element.inherit(position);\n  }\n\n  /**\n   * creates an EaselJS Container instance based on bounds parameters\n   * @memberOf ElementHelpers\n   * @method createContainer\n   * @statuc\n   * @param {Arguments} bounds the bounds parameter will be passed to setBounds method of EaselJS Container class<br>\n   *   so it has to be an array with this sequence<br>\n   *   <ul>\n   *     <li>{Number} x</li>\n   *     <li>{Number} y</li>\n   *     <li>{Number} width</li>\n   *     <li>{Number} height</li>\n   *   </ul>\n   * @return {Container}\n   */\n  static createContainer(...bounds) {\n    const container = (new Container()).inherit({\n      x: bounds[0],\n      y: bounds[1],\n    });\n\n    container.setBounds(...bounds);\n\n    return container;\n  }\n\n  /**\n   * creates an EaselJS Graphics instance\n   * @memberOf ElementHelpers\n   * @method createGraphics\n   * @static\n   * @param {Object} options the options can contain\n   * @param {String|Object} options.fill color for filling graphics<br>\n   * @param {Array} options.fill.colors colors to create a linear gradient fill\n   * @param {Array} options.fill.ratios color ratios to create a linear gradient fill\n   * @param {Array} options.fill.points start & stop points to create a linear gradient fill\n   * @param {String|Object} options.stroke stroke options, if string it creates a stroke with size 1\n   * @param {Number} options.stroke.size the size\n   * @param {String} options.stroke.color the color\n   * @param {Arguments} bounds the bounds parameter will be passed to setBounds method of EaselJS Container class<br>\n   *   so it has to be an array with this sequence<br>\n   *   <ul>\n   *     <li>{Number} x</li>\n   *     <li>{Number} y</li>\n   *     <li>{Number} width</li>\n   *     <li>{Number} height</li>\n   *   </ul>\n   * @return {Graphics}\n   */\n  static createGraphics(options = {}, ...bounds) {\n    const defaults = {\n      fill: false,\n      stroke: false,\n    };\n\n    const settings = defaults.inherit(true, options);\n\n    const graphics = new Graphics();\n\n    if(!!settings.fill) {\n      if(Object.isObject(settings.fill)) {\n        if(!!settings.fill.colors && !!settings.fill.ratios && !!settings.fill.points) {\n          graphics.beginLinearGradientFill(...[[...settings.fill.colors], [...settings.fill.ratios], ...settings.fill.points]);\n        }\n      } else {\n        graphics.beginFill(settings.fill);\n      }\n    }\n\n    if(!!settings.stroke) {\n      if(String.isString(settings.stroke)) {\n        settings.inherit({\n          stroke: {\n            size: 1,\n            color: settings.stroke,\n          },\n        });\n      }\n\n      graphics.setStrokeStyle(settings.stroke.size);\n      graphics.beginStroke(settings.stroke.color);\n    }\n\n    return graphics;\n  }\n\n  /**\n   * creates an EaselJS Rect Shape instance\n   * @memberOf ElementHelpers\n   * @method createRect\n   * @static\n   * @param {Object} options the options can contain\n   * @param {String|Object} options.fill color for filling graphics<br>\n   * @param {Array} options.fill.colors colors to create a linear gradient fill\n   * @param {Array} options.fill.ratios color ratios to create a linear gradient fill\n   * @param {Array} options.fill.points start & stop points to create a linear gradient fill\n   * @param {String|Object} options.stroke stroke options, if string it creates a stroke with size 1\n   * @param {Number} options.stroke.size the size\n   * @param {String} options.stroke.color the color\n   * @param {Boolean|Number|Array} options.stroke.radius\n   *   <br>if false it draws a rect\n   *   <br>if Number it draws a round rect\n   *   <br>if Array it draws a round rect complex (array has to respect the arguments sequence of drawRoundRectComplex method of EaselJS Graphics class\n   * @param {Arguments} bounds the bounds parameter will be passed to setBounds method of EaselJS Container class<br>\n   *   so it has to be an array with this sequence<br>\n   *   <ul>\n   *     <li>{Number} x</li>\n   *     <li>{Number} y</li>\n   *     <li>{Number} width</li>\n   *     <li>{Number} height</li>\n   *   </ul>\n   * @return {Shape}\n   */\n  static createRect(options = {}, ...bounds) {\n    const graphics = this.createGraphics(options, ...bounds);\n\n    if(!!options.stroke.radius) {\n      if(Array.isArray(options.stroke.radius)) {\n        graphics.drawRoundRectComplex(...bounds, ...options.stroke.radius);\n      } else if(Number.isNumber(options.stroke.radius)) {\n        graphics.drawRoundRect(...bounds, options.stroke.radius);\n      }\n    } else {\n      graphics.drawRect(...bounds);\n    }\n\n    graphics.endFill();\n    graphics.endStroke();\n\n    const rect = new Shape(graphics);\n    rect.setBounds(...bounds);\n\n    return rect;\n  }\n\n  /**\n   * creates an EaselJS Circle Shape instance\n   * @memberOf ElementHelpers\n   * @method createCircle\n   * @static\n   * @param {Object} options the options can contain\n   * @param {String|Object} options.fill color for filling graphics\n   * @param {Array} options.fill.colors colors to create a linear gradient fill\n   * @param {Array} options.fill.ratios color ratios to create a linear gradient fill\n   * @param {Array} options.fill.points start & stop points to create a linear gradient fill\n   * @param {String|Object} options.stroke stroke options, if string it creates a stroke with size 1\n   * @param {Number} options.stroke.size the size\n   * @param {String} options.stroke.color the color\n   * @param {Number} options.radius the radius of the circle\n   * @param {Arguments} bounds the bounds parameter will be passed to setBounds method of EaselJS Container class<br>\n   *   so it has to be an array with this sequence<br>\n   *   <ul>\n   *     <li>{Number} x</li>\n   *     <li>{Number} y</li>\n   *     <li>{Number} width</li>\n   *     <li>{Number} height</li>\n   *   </ul>\n   * @return {Shape}\n   */\n  static createCircle(options = {}, ...bounds) {\n    const defaults = {\n      radius: 1,\n    };\n\n    const settings = defaults.inherit(true, options);\n\n    const graphics = this.createGraphics(settings, ...bounds);\n    graphics.drawCircle(0, 0, settings.radius);\n\n    const circle = new Shape(graphics);\n    circle.setBounds(...bounds);\n\n    return circle;\n  }\n\n  /**\n   * creates an EaselJS Text instance\n   * @memberOf ElementHelpers\n   * @method createText\n   * @static\n   * @param {String} text the text to be rendered\n   * @param {String} font font options as expected by the EaselJS Text class\n   * @param {String} color the color of the text\n   * @return {Text}\n   */\n  static createText(text, font, color) {\n    return new Text(text, font, color);\n  }\n\n  /**\n   * creates an EaselJS Bitmap instance\n   * @memberOf ElementHelpers\n   * @method createImage\n   * @static\n   * @param {HTMLElement} image the preloaded DOM element representing the image\n   * @return {Bitmap}\n   */\n  static createImage(image) {\n    return new Bitmap(image);\n  }\n\n  /**\n   * creates an EaselJS Sprite instance\n   * @memberOf ElementHelpers\n   * @method createSprite\n   * @static\n   * @param {HTMLElement} spritesheet the preloaded DOM element representing the sprite\n   * @return {Sprite}\n   */\n  static createSprite(spritesheet) {\n    return new Sprite(spritesheet);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Elements/ElementHelpers.js","/*!\n* CreateJS\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar scope = (typeof window == 'undefined')?this:window;\nscope.createjs = scope.createjs || {};\n\n\n//##############################################################################\n// extend.js\n//##############################################################################\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Sets up the prototype chain and constructor property for a new class.\n *\n * This should be called right after creating the class constructor.\n *\n * \tfunction MySubClass() {}\n * \tcreatejs.extend(MySubClass, MySuperClass);\n * \tMySubClass.prototype.doSomething = function() { }\n *\n * \tvar foo = new MySubClass();\n * \tconsole.log(foo instanceof MySuperClass); // true\n * \tconsole.log(foo.prototype.constructor === MySubClass); // true\n *\n * @method extend\n * @param {Function} subclass The subclass.\n * @param {Function} superclass The superclass to extend.\n * @return {Function} Returns the subclass's new prototype.\n */\ncreatejs.extend = function(subclass, superclass) {\n\t\"use strict\";\n\n\tfunction o() { this.constructor = subclass; }\n\to.prototype = superclass.prototype;\n\treturn (subclass.prototype = new o());\n};\n\n//##############################################################################\n// promote.js\n//##############################################################################\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Promotes any methods on the super class that were overridden, by creating an alias in the format `prefix_methodName`.\n * It is recommended to use the super class's name as the prefix.\n * An alias to the super class's constructor is always added in the format `prefix_constructor`.\n * This allows the subclass to call super class methods without using `function.call`, providing better performance.\n *\n * For example, if `MySubClass` extends `MySuperClass`, and both define a `draw` method, then calling `promote(MySubClass, \"MySuperClass\")`\n * would add a `MySuperClass_constructor` method to MySubClass and promote the `draw` method on `MySuperClass` to the\n * prototype of `MySubClass` as `MySuperClass_draw`.\n *\n * This should be called after the class's prototype is fully defined.\n *\n * \tfunction ClassA(name) {\n * \t\tthis.name = name;\n * \t}\n * \tClassA.prototype.greet = function() {\n * \t\treturn \"Hello \"+this.name;\n * \t}\n *\n * \tfunction ClassB(name, punctuation) {\n * \t\tthis.ClassA_constructor(name);\n * \t\tthis.punctuation = punctuation;\n * \t}\n * \tcreatejs.extend(ClassB, ClassA);\n * \tClassB.prototype.greet = function() {\n * \t\treturn this.ClassA_greet()+this.punctuation;\n * \t}\n * \tcreatejs.promote(ClassB, \"ClassA\");\n *\n * \tvar foo = new ClassB(\"World\", \"!?!\");\n * \tconsole.log(foo.greet()); // Hello World!?!\n *\n * @method promote\n * @param {Function} subclass The class to promote super class methods on.\n * @param {String} prefix The prefix to add to the promoted method names. Usually the name of the superclass.\n * @return {Function} Returns the subclass.\n */\ncreatejs.promote = function(subclass, prefix) {\n\t\"use strict\";\n\n\tvar subP = subclass.prototype, supP = (Object.getPrototypeOf&&Object.getPrototypeOf(subP))||subP.__proto__;\n\tif (supP) {\n\t\tsubP[(prefix+=\"_\") + \"constructor\"] = supP.constructor; // constructor is not always innumerable\n\t\tfor (var n in supP) {\n\t\t\tif (subP.hasOwnProperty(n) && (typeof supP[n] == \"function\")) { subP[prefix + n] = supP[n]; }\n\t\t}\n\t}\n\treturn subclass;\n};\n\n//##############################################################################\n// indexOf.js\n//##############################################################################\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Finds the first occurrence of a specified value searchElement in the passed in array, and returns the index of\n * that value.  Returns -1 if value is not found.\n *\n *      var i = createjs.indexOf(myArray, myElementToFind);\n *\n * @method indexOf\n * @param {Array} array Array to search for searchElement\n * @param searchElement Element to find in array.\n * @return {Number} The first index of searchElement in array.\n */\ncreatejs.indexOf = function (array, searchElement){\n\t\"use strict\";\n\n\tfor (var i = 0,l=array.length; i < l; i++) {\n\t\tif (searchElement === array[i]) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\n\n//##############################################################################\n// Event.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n// constructor:\n\t/**\n\t * Contains properties and methods shared by all events for use with\n\t * {{#crossLink \"EventDispatcher\"}}{{/crossLink}}.\n\t * \n\t * Note that Event objects are often reused, so you should never\n\t * rely on an event object's state outside of the call stack it was received in.\n\t * @class Event\n\t * @param {String} type The event type.\n\t * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n\t * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n\t * @constructor\n\t **/\n\tfunction Event(type, bubbles, cancelable) {\n\t\t\n\t\n\t// public properties:\n\t\t/**\n\t\t * The type of event.\n\t\t * @property type\n\t\t * @type String\n\t\t **/\n\t\tthis.type = type;\n\t\n\t\t/**\n\t\t * The object that generated an event.\n\t\t * @property target\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t*/\n\t\tthis.target = null;\n\t\n\t\t/**\n\t\t * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n\t\t * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n\t\t * is generated from childObj, then a listener on parentObj would receive the event with\n\t\t * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n\t\t * @property currentTarget\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t*/\n\t\tthis.currentTarget = null;\n\t\n\t\t/**\n\t\t * For bubbling events, this indicates the current event phase:<OL>\n\t\t * \t<LI> capture phase: starting from the top parent to the target</LI>\n\t\t * \t<LI> at target phase: currently being dispatched from the target</LI>\n\t\t * \t<LI> bubbling phase: from the target to the top parent</LI>\n\t\t * </OL>\n\t\t * @property eventPhase\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t*/\n\t\tthis.eventPhase = 0;\n\t\n\t\t/**\n\t\t * Indicates whether the event will bubble through the display list.\n\t\t * @property bubbles\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.bubbles = !!bubbles;\n\t\n\t\t/**\n\t\t * Indicates whether the default behaviour of this event can be cancelled via\n\t\t * {{#crossLink \"Event/preventDefault\"}}{{/crossLink}}. This is set via the Event constructor.\n\t\t * @property cancelable\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.cancelable = !!cancelable;\n\t\n\t\t/**\n\t\t * The epoch time at which this event was created.\n\t\t * @property timeStamp\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t*/\n\t\tthis.timeStamp = (new Date()).getTime();\n\t\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} has been called\n\t\t * on this event.\n\t\t * @property defaultPrevented\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.defaultPrevented = false;\n\t\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/stopPropagation\"}}{{/crossLink}} or\n\t\t * {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called on this event.\n\t\t * @property propagationStopped\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.propagationStopped = false;\n\t\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called\n\t\t * on this event.\n\t\t * @property immediatePropagationStopped\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.immediatePropagationStopped = false;\n\t\t\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/remove\"}}{{/crossLink}} has been called on this event.\n\t\t * @property removed\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t*/\n\t\tthis.removed = false;\n\t}\n\tvar p = Event.prototype;\n\n\t/**\n\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t * for details.\n\t *\n\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t *\n\t * @method initialize\n\t * @protected\n\t * @deprecated\n\t */\n\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\n// public methods:\n\t/**\n\t * Sets {{#crossLink \"Event/defaultPrevented\"}}{{/crossLink}} to true if the event is cancelable.\n\t * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n\t * cancel the default behaviour associated with the event.\n\t * @method preventDefault\n\t **/\n\tp.preventDefault = function() {\n\t\tthis.defaultPrevented = this.cancelable&&true;\n\t};\n\n\t/**\n\t * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} to true.\n\t * Mirrors the DOM event standard.\n\t * @method stopPropagation\n\t **/\n\tp.stopPropagation = function() {\n\t\tthis.propagationStopped = true;\n\t};\n\n\t/**\n\t * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} and\n\t * {{#crossLink \"Event/immediatePropagationStopped\"}}{{/crossLink}} to true.\n\t * Mirrors the DOM event standard.\n\t * @method stopImmediatePropagation\n\t **/\n\tp.stopImmediatePropagation = function() {\n\t\tthis.immediatePropagationStopped = this.propagationStopped = true;\n\t};\n\t\n\t/**\n\t * Causes the active listener to be removed via removeEventListener();\n\t * \n\t * \t\tmyBtn.addEventListener(\"click\", function(evt) {\n\t * \t\t\t// do stuff...\n\t * \t\t\tevt.remove(); // removes this listener.\n\t * \t\t});\n\t * \n\t * @method remove\n\t **/\n\tp.remove = function() {\n\t\tthis.removed = true;\n\t};\n\t\n\t/**\n\t * Returns a clone of the Event instance.\n\t * @method clone\n\t * @return {Event} a clone of the Event instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new Event(this.type, this.bubbles, this.cancelable);\n\t};\n\t\n\t/**\n\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * @method set\n\t * @param {Object} props A generic object containing properties to copy to the instance.\n\t * @return {Event} Returns the instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t*/\n\tp.set = function(props) {\n\t\tfor (var n in props) { this[n] = props[n]; }\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Event (type=\"+this.type+\")]\";\n\t};\n\n\tcreatejs.Event = Event;\n}());\n\n//##############################################################################\n// EventDispatcher.js\n//##############################################################################\n\n(function() {\r\n\t\"use strict\";\r\n\r\n\r\n// constructor:\r\n\t/**\r\n\t * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\r\n\t *\r\n\t * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\r\n\t * EventDispatcher {{#crossLink \"EventDispatcher/initialize\"}}{{/crossLink}} method.\r\n\t * \r\n\t * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\r\n\t * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\r\n\t * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\r\n\t * \r\n\t * EventDispatcher also exposes a {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} method, which makes it easier\r\n\t * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The \r\n\t * {{#crossLink \"EventDispatcher/off\"}}{{/crossLink}} method is merely an alias to\r\n\t * {{#crossLink \"EventDispatcher/removeEventListener\"}}{{/crossLink}}.\r\n\t * \r\n\t * Another addition to the DOM Level 2 model is the {{#crossLink \"EventDispatcher/removeAllEventListeners\"}}{{/crossLink}}\r\n\t * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also \r\n\t * includes a {{#crossLink \"Event/remove\"}}{{/crossLink}} method which removes the active listener.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t * Add EventDispatcher capabilities to the \"MyClass\" class.\r\n\t *\r\n\t *      EventDispatcher.initialize(MyClass.prototype);\r\n\t *\r\n\t * Add an event (see {{#crossLink \"EventDispatcher/addEventListener\"}}{{/crossLink}}).\r\n\t *\r\n\t *      instance.addEventListener(\"eventName\", handlerMethod);\r\n\t *      function handlerMethod(event) {\r\n\t *          console.log(event.target + \" Was Clicked\");\r\n\t *      }\r\n\t *\r\n\t * <b>Maintaining proper scope</b><br />\r\n\t * Scope (ie. \"this\") can be be a challenge with events. Using the {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}}\r\n\t * method to subscribe to events simplifies this.\r\n\t *\r\n\t *      instance.addEventListener(\"click\", function(event) {\r\n\t *          console.log(instance == this); // false, scope is ambiguous.\r\n\t *      });\r\n\t *      \r\n\t *      instance.on(\"click\", function(event) {\r\n\t *          console.log(instance == this); // true, \"on\" uses dispatcher scope by default.\r\n\t *      });\r\n\t * \r\n\t * If you want to use addEventListener instead, you may want to use function.bind() or a similar proxy to manage\r\n\t * scope.\r\n\t *\r\n\t * <b>Browser support</b>\r\n\t * The event model in CreateJS can be used separately from the suite in any project, however the inheritance model\r\n\t * requires modern browsers (IE9+).\r\n\t *      \r\n\t *\r\n\t * @class EventDispatcher\r\n\t * @constructor\r\n\t **/\r\n\tfunction EventDispatcher() {\r\n\t\r\n\t\r\n\t// private properties:\r\n\t\t/**\r\n\t\t * @protected\r\n\t\t * @property _listeners\r\n\t\t * @type Object\r\n\t\t **/\r\n\t\tthis._listeners = null;\r\n\t\t\r\n\t\t/**\r\n\t\t * @protected\r\n\t\t * @property _captureListeners\r\n\t\t * @type Object\r\n\t\t **/\r\n\t\tthis._captureListeners = null;\r\n\t}\r\n\tvar p = EventDispatcher.prototype;\r\n\r\n\t/**\r\n\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\r\n\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\r\n\t * for details.\r\n\t *\r\n\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\r\n\t *\r\n\t * @method initialize\r\n\t * @protected\r\n\t * @deprecated\r\n\t */\r\n\t// p.initialize = function() {}; // searchable for devs wondering where it is.\r\n\r\n\r\n// static public methods:\r\n\t/**\r\n\t * Static initializer to mix EventDispatcher methods into a target object or prototype.\r\n\t * \r\n\t * \t\tEventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\r\n\t * \t\tEventDispatcher.initialize(myObject); // add to a specific instance\r\n\t * \r\n\t * @method initialize\r\n\t * @static\r\n\t * @param {Object} target The target object to inject EventDispatcher methods into. This can be an instance or a\r\n\t * prototype.\r\n\t **/\r\n\tEventDispatcher.initialize = function(target) {\r\n\t\ttarget.addEventListener = p.addEventListener;\r\n\t\ttarget.on = p.on;\r\n\t\ttarget.removeEventListener = target.off =  p.removeEventListener;\r\n\t\ttarget.removeAllEventListeners = p.removeAllEventListeners;\r\n\t\ttarget.hasEventListener = p.hasEventListener;\r\n\t\ttarget.dispatchEvent = p.dispatchEvent;\r\n\t\ttarget._dispatchEvent = p._dispatchEvent;\r\n\t\ttarget.willTrigger = p.willTrigger;\r\n\t};\r\n\t\r\n\r\n// public methods:\r\n\t/**\r\n\t * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\r\n\t * multiple callbacks getting fired.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      displayObject.addEventListener(\"click\", handleClick);\r\n\t *      function handleClick(event) {\r\n\t *         // Click happened.\r\n\t *      }\r\n\t *\r\n\t * @method addEventListener\r\n\t * @param {String} type The string type of the event.\r\n\t * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\r\n\t * the event is dispatched.\r\n\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t * @return {Function | Object} Returns the listener for chaining or assignment.\r\n\t **/\r\n\tp.addEventListener = function(type, listener, useCapture) {\r\n\t\tvar listeners;\r\n\t\tif (useCapture) {\r\n\t\t\tlisteners = this._captureListeners = this._captureListeners||{};\r\n\t\t} else {\r\n\t\t\tlisteners = this._listeners = this._listeners||{};\r\n\t\t}\r\n\t\tvar arr = listeners[type];\r\n\t\tif (arr) { this.removeEventListener(type, listener, useCapture); }\r\n\t\tarr = listeners[type]; // remove may have deleted the array\r\n\t\tif (!arr) { listeners[type] = [listener];  }\r\n\t\telse { arr.push(listener); }\r\n\t\treturn listener;\r\n\t};\r\n\t\r\n\t/**\r\n\t * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\r\n\t * only run once, associate arbitrary data with the listener, and remove the listener.\r\n\t * \r\n\t * This method works by creating an anonymous wrapper function and subscribing it with addEventListener.\r\n\t * The wrapper function is returned for use with `removeEventListener` (or `off`).\r\n\t * \r\n\t * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\r\n\t * {{#crossLink \"Event/remove\"}}{{/crossLink}}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\r\n\t * to `on` with the same params will create multiple listeners.\r\n\t * \r\n\t * <h4>Example</h4>\r\n\t * \r\n\t * \t\tvar listener = myBtn.on(\"click\", handleClick, null, false, {count:3});\r\n\t * \t\tfunction handleClick(evt, data) {\r\n\t * \t\t\tdata.count -= 1;\r\n\t * \t\t\tconsole.log(this == myBtn); // true - scope defaults to the dispatcher\r\n\t * \t\t\tif (data.count == 0) {\r\n\t * \t\t\t\talert(\"clicked 3 times!\");\r\n\t * \t\t\t\tmyBtn.off(\"click\", listener);\r\n\t * \t\t\t\t// alternately: evt.remove();\r\n\t * \t\t\t}\r\n\t * \t\t}\r\n\t * \r\n\t * @method on\r\n\t * @param {String} type The string type of the event.\r\n\t * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\r\n\t * the event is dispatched.\r\n\t * @param {Object} [scope] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\r\n\t * @param {Boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\r\n\t * @param {*} [data] Arbitrary data that will be included as the second parameter when the listener is called.\r\n\t * @param {Boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\r\n\t **/\r\n\tp.on = function(type, listener, scope, once, data, useCapture) {\r\n\t\tif (listener.handleEvent) {\r\n\t\t\tscope = scope||listener;\r\n\t\t\tlistener = listener.handleEvent;\r\n\t\t}\r\n\t\tscope = scope||this;\r\n\t\treturn this.addEventListener(type, function(evt) {\r\n\t\t\t\tlistener.call(scope, evt, data);\r\n\t\t\t\tonce&&evt.remove();\r\n\t\t\t}, useCapture);\r\n\t};\r\n\r\n\t/**\r\n\t * Removes the specified event listener.\r\n\t *\r\n\t * <b>Important Note:</b> that you must pass the exact function reference used when the event was added. If a proxy\r\n\t * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\r\n\t * closure will not work.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      displayObject.removeEventListener(\"click\", handleClick);\r\n\t *\r\n\t * @method removeEventListener\r\n\t * @param {String} type The string type of the event.\r\n\t * @param {Function | Object} listener The listener function or object.\r\n\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t **/\r\n\tp.removeEventListener = function(type, listener, useCapture) {\r\n\t\tvar listeners = useCapture ? this._captureListeners : this._listeners;\r\n\t\tif (!listeners) { return; }\r\n\t\tvar arr = listeners[type];\r\n\t\tif (!arr) { return; }\r\n\t\tfor (var i=0,l=arr.length; i<l; i++) {\r\n\t\t\tif (arr[i] == listener) {\r\n\t\t\t\tif (l==1) { delete(listeners[type]); } // allows for faster checks.\r\n\t\t\t\telse { arr.splice(i,1); }\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\t/**\r\n\t * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\r\n\t * .on method.\r\n\t * \r\n\t * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See \r\n\t * {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} for an example.\r\n\t *\r\n\t * @method off\r\n\t * @param {String} type The string type of the event.\r\n\t * @param {Function | Object} listener The listener function or object.\r\n\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t **/\r\n\tp.off = p.removeEventListener;\r\n\r\n\t/**\r\n\t * Removes all listeners for the specified type, or all listeners of all types.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      // Remove all listeners\r\n\t *      displayObject.removeAllEventListeners();\r\n\t *\r\n\t *      // Remove all click listeners\r\n\t *      displayObject.removeAllEventListeners(\"click\");\r\n\t *\r\n\t * @method removeAllEventListeners\r\n\t * @param {String} [type] The string type of the event. If omitted, all listeners for all types will be removed.\r\n\t **/\r\n\tp.removeAllEventListeners = function(type) {\r\n\t\tif (!type) { this._listeners = this._captureListeners = null; }\r\n\t\telse {\r\n\t\t\tif (this._listeners) { delete(this._listeners[type]); }\r\n\t\t\tif (this._captureListeners) { delete(this._captureListeners[type]); }\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Dispatches the specified event to all listeners.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      // Use a string event\r\n\t *      this.dispatchEvent(\"complete\");\r\n\t *\r\n\t *      // Use an Event instance\r\n\t *      var event = new createjs.Event(\"progress\");\r\n\t *      this.dispatchEvent(event);\r\n\t *\r\n\t * @method dispatchEvent\r\n\t * @param {Object | String | Event} eventObj An object with a \"type\" property, or a string type.\r\n\t * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\r\n\t * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\r\n\t * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\r\n\t * @param {Boolean} [bubbles] Specifies the `bubbles` value when a string was passed to eventObj.\r\n\t * @param {Boolean} [cancelable] Specifies the `cancelable` value when a string was passed to eventObj.\r\n\t * @return {Boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\r\n\t **/\r\n\tp.dispatchEvent = function(eventObj, bubbles, cancelable) {\r\n\t\tif (typeof eventObj == \"string\") {\r\n\t\t\t// skip everything if there's no listeners and it doesn't bubble:\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tif (!bubbles && (!listeners || !listeners[eventObj])) { return true; }\r\n\t\t\teventObj = new createjs.Event(eventObj, bubbles, cancelable);\r\n\t\t} else if (eventObj.target && eventObj.clone) {\r\n\t\t\t// redispatching an active event object, so clone it:\r\n\t\t\teventObj = eventObj.clone();\r\n\t\t}\r\n\t\t\r\n\t\t// TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\r\n\t\ttry { eventObj.target = this; } catch (e) {} // try/catch allows redispatching of native events\r\n\r\n\t\tif (!eventObj.bubbles || !this.parent) {\r\n\t\t\tthis._dispatchEvent(eventObj, 2);\r\n\t\t} else {\r\n\t\t\tvar top=this, list=[top];\r\n\t\t\twhile (top.parent) { list.push(top = top.parent); }\r\n\t\t\tvar i, l=list.length;\r\n\r\n\t\t\t// capture & atTarget\r\n\t\t\tfor (i=l-1; i>=0 && !eventObj.propagationStopped; i--) {\r\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 1+(i==0));\r\n\t\t\t}\r\n\t\t\t// bubbling\r\n\t\t\tfor (i=1; i<l && !eventObj.propagationStopped; i++) {\r\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 3);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn !eventObj.defaultPrevented;\r\n\t};\r\n\r\n\t/**\r\n\t * Indicates whether there is at least one listener for the specified event type.\r\n\t * @method hasEventListener\r\n\t * @param {String} type The string type of the event.\r\n\t * @return {Boolean} Returns true if there is at least one listener for the specified event.\r\n\t **/\r\n\tp.hasEventListener = function(type) {\r\n\t\tvar listeners = this._listeners, captureListeners = this._captureListeners;\r\n\t\treturn !!((listeners && listeners[type]) || (captureListeners && captureListeners[type]));\r\n\t};\r\n\t\r\n\t/**\r\n\t * Indicates whether there is at least one listener for the specified event type on this object or any of its\r\n\t * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\r\n\t * specified type is dispatched from this object, it will trigger at least one listener.\r\n\t * \r\n\t * This is similar to {{#crossLink \"EventDispatcher/hasEventListener\"}}{{/crossLink}}, but it searches the entire\r\n\t * event flow for a listener, not just this object.\r\n\t * @method willTrigger\r\n\t * @param {String} type The string type of the event.\r\n\t * @return {Boolean} Returns `true` if there is at least one listener for the specified event.\r\n\t **/\r\n\tp.willTrigger = function(type) {\r\n\t\tvar o = this;\r\n\t\twhile (o) {\r\n\t\t\tif (o.hasEventListener(type)) { return true; }\r\n\t\t\to = o.parent;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\t/**\r\n\t * @method toString\r\n\t * @return {String} a string representation of the instance.\r\n\t **/\r\n\tp.toString = function() {\r\n\t\treturn \"[EventDispatcher]\";\r\n\t};\r\n\r\n\r\n// private methods:\r\n\t/**\r\n\t * @method _dispatchEvent\r\n\t * @param {Object | String | Event} eventObj\r\n\t * @param {Object} eventPhase\r\n\t * @protected\r\n\t **/\r\n\tp._dispatchEvent = function(eventObj, eventPhase) {\r\n\t\tvar l, listeners = (eventPhase==1) ? this._captureListeners : this._listeners;\r\n\t\tif (eventObj && listeners) {\r\n\t\t\tvar arr = listeners[eventObj.type];\r\n\t\t\tif (!arr||!(l=arr.length)) { return; }\r\n\t\t\ttry { eventObj.currentTarget = this; } catch (e) {}\r\n\t\t\ttry { eventObj.eventPhase = eventPhase; } catch (e) {}\r\n\t\t\teventObj.removed = false;\r\n\t\t\t\r\n\t\t\tarr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\r\n\t\t\tfor (var i=0; i<l && !eventObj.immediatePropagationStopped; i++) {\r\n\t\t\t\tvar o = arr[i];\r\n\t\t\t\tif (o.handleEvent) { o.handleEvent(eventObj); }\r\n\t\t\t\telse { o(eventObj); }\r\n\t\t\t\tif (eventObj.removed) {\r\n\t\t\t\t\tthis.off(eventObj.type, o, eventPhase==1);\r\n\t\t\t\t\teventObj.removed = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tcreatejs.EventDispatcher = EventDispatcher;\r\n}());\n\n//##############################################################################\n// Ticker.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * The Ticker provides a centralized tick or heartbeat broadcast at a set interval. Listeners can subscribe to the tick\n\t * event to be notified when a set time interval has elapsed.\n\t *\n\t * Note that the interval that the tick event is called is a target interval, and may be broadcast at a slower interval\n\t * when under high CPU load. The Ticker class uses a static interface (ex. `Ticker.framerate = 30;`) and\n\t * can not be instantiated.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n\t *      function handleTick(event) {\n\t *          // Actions carried out each tick (aka frame)\n\t *          if (!event.paused) {\n\t *              // Actions carried out when the Ticker is not paused.\n\t *          }\n\t *      }\n\t *\n\t * @class Ticker\n\t * @uses EventDispatcher\n\t * @static\n\t **/\n\tfunction Ticker() {\n\t\tthrow \"Ticker cannot be instantiated.\";\n\t}\n\n\n// constants:\n\t/**\n\t * In this mode, Ticker uses the requestAnimationFrame API, but attempts to synch the ticks to target framerate. It\n\t * uses a simple heuristic that compares the time of the RAF return to the target time for the current frame and\n\t * dispatches the tick when the time is within a certain threshold.\n\t *\n\t * This mode has a higher variance for time between frames than {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}},\n\t * but does not require that content be time based as with {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}} while\n\t * gaining the benefits of that API (screen synch, background throttling).\n\t *\n\t * Variance is usually lowest for framerates that are a divisor of the RAF frequency. This is usually 60, so\n\t * framerates of 10, 12, 15, 20, and 30 work well.\n\t *\n\t * Falls back to {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\n\t * supported.\n\t * @property RAF_SYNCHED\n\t * @static\n\t * @type {String}\n\t * @default \"synched\"\n\t * @readonly\n\t **/\n\tTicker.RAF_SYNCHED = \"synched\";\n\n\t/**\n\t * In this mode, Ticker passes through the requestAnimationFrame heartbeat, ignoring the target framerate completely.\n\t * Because requestAnimationFrame frequency is not deterministic, any content using this mode should be time based.\n\t * You can leverage {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} and the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n\t * event object's \"delta\" properties to make this easier.\n\t *\n\t * Falls back on {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\n\t * supported.\n\t * @property RAF\n\t * @static\n\t * @type {String}\n\t * @default \"raf\"\n\t * @readonly\n\t **/\n\tTicker.RAF = \"raf\";\n\n\t/**\n\t * In this mode, Ticker uses the setTimeout API. This provides predictable, adaptive frame timing, but does not\n\t * provide the benefits of requestAnimationFrame (screen synch, background throttling).\n\t * @property TIMEOUT\n\t * @static\n\t * @type {String}\n\t * @default \"timeout\"\n\t * @readonly\n\t **/\n\tTicker.TIMEOUT = \"timeout\";\n\n\n// static events:\n\t/**\n\t * Dispatched each tick. The event will be dispatched to each listener even when the Ticker has been paused using\n\t * {{#crossLink \"Ticker/setPaused\"}}{{/crossLink}}.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n\t *      function handleTick(event) {\n\t *          console.log(\"Paused:\", event.paused, event.delta);\n\t *      }\n\t *\n\t * @event tick\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {Boolean} paused Indicates whether the ticker is currently paused.\n\t * @param {Number} delta The time elapsed in ms since the last tick.\n\t * @param {Number} time The total time in ms since Ticker was initialized.\n\t * @param {Number} runTime The total time in ms that Ticker was not paused since it was initialized. For example,\n\t * \tyou could determine the amount of time that the Ticker has been paused since initialization with `time-runTime`.\n\t * @since 0.6.0\n\t */\n\n\n// public static properties:\n\t/**\n\t * Deprecated in favour of {{#crossLink \"Ticker/timingMode\"}}{{/crossLink}}, and will be removed in a future version. If true, timingMode will\n\t * use {{#crossLink \"Ticker/RAF_SYNCHED\"}}{{/crossLink}} by default.\n\t * @deprecated Deprecated in favour of {{#crossLink \"Ticker/timingMode\"}}{{/crossLink}}.\n\t * @property useRAF\n\t * @static\n\t * @type {Boolean}\n\t * @default false\n\t **/\n\tTicker.useRAF = false;\n\n\t/**\n\t * Specifies the timing api (setTimeout or requestAnimationFrame) and mode to use. See\n\t * {{#crossLink \"Ticker/TIMEOUT\"}}{{/crossLink}}, {{#crossLink \"Ticker/RAF\"}}{{/crossLink}}, and\n\t * {{#crossLink \"Ticker/RAF_SYNCHED\"}}{{/crossLink}} for mode details.\n\t * @property timingMode\n\t * @static\n\t * @type {String}\n\t * @default Ticker.TIMEOUT\n\t **/\n\tTicker.timingMode = null;\n\n\t/**\n\t * Specifies a maximum value for the delta property in the tick event object. This is useful when building time\n\t * based animations and systems to prevent issues caused by large time gaps caused by background tabs, system sleep,\n\t * alert dialogs, or other blocking routines. Double the expected frame duration is often an effective value\n\t * (ex. maxDelta=50 when running at 40fps).\n\t * \n\t * This does not impact any other values (ex. time, runTime, etc), so you may experience issues if you enable maxDelta\n\t * when using both delta and other values.\n\t * \n\t * If 0, there is no maximum.\n\t * @property maxDelta\n\t * @static\n\t * @type {number}\n\t * @default 0\n\t */\n\tTicker.maxDelta = 0;\n\t\n\t/**\n\t * When the ticker is paused, all listeners will still receive a tick event, but the <code>paused</code> property\n\t * of the event will be `true`. Also, while paused the `runTime` will not increase. See {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}},\n\t * {{#crossLink \"Ticker/getTime\"}}{{/crossLink}}, and {{#crossLink \"Ticker/getEventTime\"}}{{/crossLink}} for more\n\t * info.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n\t *      createjs.Ticker.paused = true;\n\t *      function handleTick(event) {\n\t *          console.log(event.paused,\n\t *          \tcreatejs.Ticker.getTime(false),\n\t *          \tcreatejs.Ticker.getTime(true));\n\t *      }\n\t *\n\t * @property paused\n\t * @static\n\t * @type {Boolean}\n\t * @default false\n\t **/\n\tTicker.paused = false;\n\n\n// mix-ins:\n\t// EventDispatcher methods:\n\tTicker.removeEventListener = null;\n\tTicker.removeAllEventListeners = null;\n\tTicker.dispatchEvent = null;\n\tTicker.hasEventListener = null;\n\tTicker._listeners = null;\n\tcreatejs.EventDispatcher.initialize(Ticker); // inject EventDispatcher methods.\n\tTicker._addEventListener = Ticker.addEventListener;\n\tTicker.addEventListener = function() {\n\t\t!Ticker._inited&&Ticker.init();\n\t\treturn Ticker._addEventListener.apply(Ticker, arguments);\n\t};\n\n\n// private static properties:\n\t/**\n\t * @property _inited\n\t * @static\n\t * @type {Boolean}\n\t * @protected\n\t **/\n\tTicker._inited = false;\n\n\t/**\n\t * @property _startTime\n\t * @static\n\t * @type {Number}\n\t * @protected\n\t **/\n\tTicker._startTime = 0;\n\n\t/**\n\t * @property _pausedTime\n\t * @static\n\t * @type {Number}\n\t * @protected\n\t **/\n\tTicker._pausedTime=0;\n\n\t/**\n\t * The number of ticks that have passed\n\t * @property _ticks\n\t * @static\n\t * @type {Number}\n\t * @protected\n\t **/\n\tTicker._ticks = 0;\n\n\t/**\n\t * The number of ticks that have passed while Ticker has been paused\n\t * @property _pausedTicks\n\t * @static\n\t * @type {Number}\n\t * @protected\n\t **/\n\tTicker._pausedTicks = 0;\n\n\t/**\n\t * @property _interval\n\t * @static\n\t * @type {Number}\n\t * @protected\n\t **/\n\tTicker._interval = 50;\n\n\t/**\n\t * @property _lastTime\n\t * @static\n\t * @type {Number}\n\t * @protected\n\t **/\n\tTicker._lastTime = 0;\n\n\t/**\n\t * @property _times\n\t * @static\n\t * @type {Array}\n\t * @protected\n\t **/\n\tTicker._times = null;\n\n\t/**\n\t * @property _tickTimes\n\t * @static\n\t * @type {Array}\n\t * @protected\n\t **/\n\tTicker._tickTimes = null;\n\n\t/**\n\t * Stores the timeout or requestAnimationFrame id.\n\t * @property _timerId\n\t * @static\n\t * @type {Number}\n\t * @protected\n\t **/\n\tTicker._timerId = null;\n\t\n\t/**\n\t * True if currently using requestAnimationFrame, false if using setTimeout. This may be different than timingMode\n\t * if that property changed and a tick hasn't fired.\n\t * @property _raf\n\t * @static\n\t * @type {Boolean}\n\t * @protected\n\t **/\n\tTicker._raf = true;\n\t\n\n// static getter / setters:\n\t/**\n\t * Use the {{#crossLink \"Ticker/interval:property\"}}{{/crossLink}} property instead.\n\t * @method setInterval\n\t * @static\n\t * @param {Number} interval\n\t * @deprecated\n\t **/\n\tTicker.setInterval = function(interval) {\n\t\tTicker._interval = interval;\n\t\tif (!Ticker._inited) { return; }\n\t\tTicker._setupTick();\n\t};\n\n\t/**\n\t * Use the {{#crossLink \"Ticker/interval:property\"}}{{/crossLink}} property instead.\n\t * @method getInterval\n\t * @static\n\t * @return {Number}\n\t * @deprecated\n\t **/\n\tTicker.getInterval = function() {\n\t\treturn Ticker._interval;\n\t};\n\n\t/**\n\t * Use the {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} property instead.\n\t * @method setFPS\n\t * @static\n\t * @param {Number} value\n\t * @deprecated\n\t **/\n\tTicker.setFPS = function(value) {\n\t\tTicker.setInterval(1000/value);\n\t};\n\n\t/**\n\t * Use the {{#crossLink \"Ticker/framerate:property\"}}{{/crossLink}} property instead.\n\t * @method getFPS\n\t * @static\n\t * @return {Number}\n\t * @deprecated\n\t **/\n\tTicker.getFPS = function() {\n\t\treturn 1000/Ticker._interval;\n\t};\n\n\t/**\n\t * Indicates the target time (in milliseconds) between ticks. Default is 50 (20 FPS).\n\t * Note that actual time between ticks may be more than specified depending on CPU load.\n\t * This property is ignored if the ticker is using the `RAF` timing mode.\n\t * @property interval\n\t * @static\n\t * @type {Number}\n\t **/\n\t \n\t/**\n\t * Indicates the target frame rate in frames per second (FPS). Effectively just a shortcut to `interval`, where\n\t * `framerate == 1000/interval`.\n\t * @property framerate\n\t * @static\n\t * @type {Number}\n\t **/\n\ttry {\n\t\tObject.defineProperties(Ticker, {\n\t\t\tinterval: { get: Ticker.getInterval, set: Ticker.setInterval },\n\t\t\tframerate: { get: Ticker.getFPS, set: Ticker.setFPS }\n\t\t});\n\t} catch (e) { console.log(e); }\n\n\n// public static methods:\n\t/**\n\t * Starts the tick. This is called automatically when the first listener is added.\n\t * @method init\n\t * @static\n\t **/\n\tTicker.init = function() {\n\t\tif (Ticker._inited) { return; }\n\t\tTicker._inited = true;\n\t\tTicker._times = [];\n\t\tTicker._tickTimes = [];\n\t\tTicker._startTime = Ticker._getTime();\n\t\tTicker._times.push(Ticker._lastTime = 0);\n\t\tTicker.interval = Ticker._interval;\n\t};\n\t\n\t/**\n\t * Stops the Ticker and removes all listeners. Use init() to restart the Ticker.\n\t * @method reset\n\t * @static\n\t **/\n\tTicker.reset = function() {\n\t\tif (Ticker._raf) {\n\t\t\tvar f = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame;\n\t\t\tf&&f(Ticker._timerId);\n\t\t} else {\n\t\t\tclearTimeout(Ticker._timerId);\n\t\t}\n\t\tTicker.removeAllEventListeners(\"tick\");\n\t\tTicker._timerId = Ticker._times = Ticker._tickTimes = null;\n\t\tTicker._startTime = Ticker._lastTime = Ticker._ticks = Ticker._pausedTime = 0;\n\t\tTicker._inited = false;\n\t};\n\n\t/**\n\t * Returns the average time spent within a tick. This can vary significantly from the value provided by getMeasuredFPS\n\t * because it only measures the time spent within the tick execution stack. \n\t * \n\t * Example 1: With a target FPS of 20, getMeasuredFPS() returns 20fps, which indicates an average of 50ms between \n\t * the end of one tick and the end of the next. However, getMeasuredTickTime() returns 15ms. This indicates that \n\t * there may be up to 35ms of \"idle\" time between the end of one tick and the start of the next.\n\t *\n\t * Example 2: With a target FPS of 30, getFPS() returns 10fps, which indicates an average of 100ms between the end of\n\t * one tick and the end of the next. However, getMeasuredTickTime() returns 20ms. This would indicate that something\n\t * other than the tick is using ~80ms (another script, DOM rendering, etc).\n\t * @method getMeasuredTickTime\n\t * @static\n\t * @param {Number} [ticks] The number of previous ticks over which to measure the average time spent in a tick.\n\t * Defaults to the number of ticks per second. To get only the last tick's time, pass in 1.\n\t * @return {Number} The average time spent in a tick in milliseconds.\n\t **/\n\tTicker.getMeasuredTickTime = function(ticks) {\n\t\tvar ttl=0, times=Ticker._tickTimes;\n\t\tif (!times || times.length < 1) { return -1; }\n\n\t\t// by default, calculate average for the past ~1 second:\n\t\tticks = Math.min(times.length, ticks||(Ticker.getFPS()|0));\n\t\tfor (var i=0; i<ticks; i++) { ttl += times[i]; }\n\t\treturn ttl/ticks;\n\t};\n\n\t/**\n\t * Returns the actual frames / ticks per second.\n\t * @method getMeasuredFPS\n\t * @static\n\t * @param {Number} [ticks] The number of previous ticks over which to measure the actual frames / ticks per second.\n\t * Defaults to the number of ticks per second.\n\t * @return {Number} The actual frames / ticks per second. Depending on performance, this may differ\n\t * from the target frames per second.\n\t **/\n\tTicker.getMeasuredFPS = function(ticks) {\n\t\tvar times = Ticker._times;\n\t\tif (!times || times.length < 2) { return -1; }\n\n\t\t// by default, calculate fps for the past ~1 second:\n\t\tticks = Math.min(times.length-1, ticks||(Ticker.getFPS()|0));\n\t\treturn 1000/((times[0]-times[ticks])/ticks);\n\t};\n\n\t/**\n\t * Use the {{#crossLink \"Ticker/paused:property\"}}{{/crossLink}} property instead.\n\t * @method setPaused\n\t * @static\n\t * @param {Boolean} value\n\t * @deprecated\n\t **/\n\tTicker.setPaused = function(value) {\n\t\t// TODO: deprecated.\n\t\tTicker.paused = value;\n\t};\n\n\t/**\n\t * Use the {{#crossLink \"Ticker/paused:property\"}}{{/crossLink}} property instead.\n\t * @method getPaused\n\t * @static\n\t * @return {Boolean}\n\t * @deprecated\n\t **/\n\tTicker.getPaused = function() {\n\t\t// TODO: deprecated.\n\t\treturn Ticker.paused;\n\t};\n\n\t/**\n\t * Returns the number of milliseconds that have elapsed since Ticker was initialized via {{#crossLink \"Ticker/init\"}}.\n\t * Returns -1 if Ticker has not been initialized. For example, you could use\n\t * this in a time synchronized animation to determine the exact amount of time that has elapsed.\n\t * @method getTime\n\t * @static\n\t * @param {Boolean} [runTime=false] If true only time elapsed while Ticker was not paused will be returned.\n\t * If false, the value returned will be total time elapsed since the first tick event listener was added.\n\t * @return {Number} Number of milliseconds that have elapsed since Ticker was initialized or -1.\n\t **/\n\tTicker.getTime = function(runTime) {\n\t\treturn Ticker._startTime ? Ticker._getTime() - (runTime ? Ticker._pausedTime : 0) : -1;\n\t};\n\n\t/**\n\t * Similar to the {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} method, but returns the time on the most recent {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n\t * event object.\n\t * @method getEventTime\n\t * @static\n\t * @param runTime {Boolean} [runTime=false] If true, the runTime property will be returned instead of time.\n\t * @returns {number} The time or runTime property from the most recent tick event or -1.\n\t */\n\tTicker.getEventTime = function(runTime) {\n\t\treturn Ticker._startTime ? (Ticker._lastTime || Ticker._startTime) - (runTime ? Ticker._pausedTime : 0) : -1;\n\t};\n\t\n\t/**\n\t * Returns the number of ticks that have been broadcast by Ticker.\n\t * @method getTicks\n\t * @static\n\t * @param {Boolean} pauseable Indicates whether to include ticks that would have been broadcast\n\t * while Ticker was paused. If true only tick events broadcast while Ticker is not paused will be returned.\n\t * If false, tick events that would have been broadcast while Ticker was paused will be included in the return\n\t * value. The default value is false.\n\t * @return {Number} of ticks that have been broadcast.\n\t **/\n\tTicker.getTicks = function(pauseable) {\n\t\treturn  Ticker._ticks - (pauseable ? Ticker._pausedTicks : 0);\n\t};\n\n\n// private static methods:\n\t/**\n\t * @method _handleSynch\n\t * @static\n\t * @protected\n\t **/\n\tTicker._handleSynch = function() {\n\t\tTicker._timerId = null;\n\t\tTicker._setupTick();\n\n\t\t// run if enough time has elapsed, with a little bit of flexibility to be early:\n\t\tif (Ticker._getTime() - Ticker._lastTime >= (Ticker._interval-1)*0.97) {\n\t\t\tTicker._tick();\n\t\t}\n\t};\n\n\t/**\n\t * @method _handleRAF\n\t * @static\n\t * @protected\n\t **/\n\tTicker._handleRAF = function() {\n\t\tTicker._timerId = null;\n\t\tTicker._setupTick();\n\t\tTicker._tick();\n\t};\n\n\t/**\n\t * @method _handleTimeout\n\t * @static\n\t * @protected\n\t **/\n\tTicker._handleTimeout = function() {\n\t\tTicker._timerId = null;\n\t\tTicker._setupTick();\n\t\tTicker._tick();\n\t};\n\n\t/**\n\t * @method _setupTick\n\t * @static\n\t * @protected\n\t **/\n\tTicker._setupTick = function() {\n\t\tif (Ticker._timerId != null) { return; } // avoid duplicates\n\n\t\tvar mode = Ticker.timingMode||(Ticker.useRAF&&Ticker.RAF_SYNCHED);\n\t\tif (mode == Ticker.RAF_SYNCHED || mode == Ticker.RAF) {\n\t\t\tvar f = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;\n\t\t\tif (f) {\n\t\t\t\tTicker._timerId = f(mode == Ticker.RAF ? Ticker._handleRAF : Ticker._handleSynch);\n\t\t\t\tTicker._raf = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tTicker._raf = false;\n\t\tTicker._timerId = setTimeout(Ticker._handleTimeout, Ticker._interval);\n\t};\n\n\t/**\n\t * @method _tick\n\t * @static\n\t * @protected\n\t **/\n\tTicker._tick = function() {\n\t\tvar paused = Ticker.paused;\n\t\tvar time = Ticker._getTime();\n\t\tvar elapsedTime = time-Ticker._lastTime;\n\t\tTicker._lastTime = time;\n\t\tTicker._ticks++;\n\t\t\n\t\tif (paused) {\n\t\t\tTicker._pausedTicks++;\n\t\t\tTicker._pausedTime += elapsedTime;\n\t\t}\n\t\t\n\t\tif (Ticker.hasEventListener(\"tick\")) {\n\t\t\tvar event = new createjs.Event(\"tick\");\n\t\t\tvar maxDelta = Ticker.maxDelta;\n\t\t\tevent.delta = (maxDelta && elapsedTime > maxDelta) ? maxDelta : elapsedTime;\n\t\t\tevent.paused = paused;\n\t\t\tevent.time = time;\n\t\t\tevent.runTime = time-Ticker._pausedTime;\n\t\t\tTicker.dispatchEvent(event);\n\t\t}\n\t\t\n\t\tTicker._tickTimes.unshift(Ticker._getTime()-time);\n\t\twhile (Ticker._tickTimes.length > 100) { Ticker._tickTimes.pop(); }\n\n\t\tTicker._times.unshift(time);\n\t\twhile (Ticker._times.length > 100) { Ticker._times.pop(); }\n\t};\n\n\t/**\n\t * @method _getTime\n\t * @static\n\t * @protected\n\t **/\n\tvar now = window.performance && (performance.now || performance.mozNow || performance.msNow || performance.oNow || performance.webkitNow);\n\tTicker._getTime = function() {\n\t\treturn ((now&&now.call(performance))||(new Date().getTime())) - Ticker._startTime;\n\t};\n\n\n\tcreatejs.Ticker = Ticker;\n}());\n\n//##############################################################################\n// UID.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Global utility for generating sequential unique ID numbers. The UID class uses a static interface (ex. <code>UID.get()</code>)\n\t * and should not be instantiated.\n\t * @class UID\n\t * @static\n\t **/\n\tfunction UID() {\n\t\tthrow \"UID cannot be instantiated\";\n\t}\n\n\n// private static properties:\n\t/**\n\t * @property _nextID\n\t * @type Number\n\t * @protected\n\t **/\n\tUID._nextID = 0;\n\n\n// public static methods:\n\t/**\n\t * Returns the next unique id.\n\t * @method get\n\t * @return {Number} The next unique id\n\t * @static\n\t **/\n\tUID.get = function() {\n\t\treturn UID._nextID++;\n\t};\n\n\n\tcreatejs.UID = UID;\n}());\n\n//##############################################################################\n// MouseEvent.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Passed as the parameter to all mouse/pointer/touch related events. For a listing of mouse events and their properties,\n\t * see the {{#crossLink \"DisplayObject\"}}{{/crossLink}} and {{#crossLink \"Stage\"}}{{/crossLink}} event listings.\n\t * @class MouseEvent\n\t * @param {String} type The event type.\n\t * @param {Boolean} bubbles Indicates whether the event will bubble through the display list.\n\t * @param {Boolean} cancelable Indicates whether the default behaviour of this event can be cancelled.\n\t * @param {Number} stageX The normalized x position relative to the stage.\n\t * @param {Number} stageY The normalized y position relative to the stage.\n\t * @param {MouseEvent} nativeEvent The native DOM event related to this mouse event.\n\t * @param {Number} pointerID The unique id for the pointer.\n\t * @param {Boolean} primary Indicates whether this is the primary pointer in a multitouch environment.\n\t * @param {Number} rawX The raw x position relative to the stage.\n\t * @param {Number} rawY The raw y position relative to the stage.\n\t * @param {DisplayObject} relatedTarget The secondary target for the event.\n\t * @extends Event\n\t * @constructor\n\t **/\n\tfunction MouseEvent(type, bubbles, cancelable, stageX, stageY, nativeEvent, pointerID, primary, rawX, rawY, relatedTarget) {\n\t\tthis.Event_constructor(type, bubbles, cancelable);\n\t\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The normalized x position on the stage. This will always be within the range 0 to stage width.\n\t\t * @property stageX\n\t\t * @type Number\n\t\t*/\n\t\tthis.stageX = stageX;\n\t\n\t\t/**\n\t\t * The normalized y position on the stage. This will always be within the range 0 to stage height.\n\t\t * @property stageY\n\t\t * @type Number\n\t\t **/\n\t\tthis.stageY = stageY;\n\t\n\t\t/**\n\t\t * The raw x position relative to the stage. Normally this will be the same as the stageX value, unless\n\t\t * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n\t\t * @property rawX\n\t\t * @type Number\n\t\t*/\n\t\tthis.rawX = (rawX==null)?stageX:rawX;\n\t\n\t\t/**\n\t\t * The raw y position relative to the stage. Normally this will be the same as the stageY value, unless\n\t\t * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.\n\t\t * @property rawY\n\t\t * @type Number\n\t\t*/\n\t\tthis.rawY = (rawY==null)?stageY:rawY;\n\t\n\t\t/**\n\t\t * The native MouseEvent generated by the browser. The properties and API for this\n\t\t * event may differ between browsers. This property will be null if the\n\t\t * EaselJS property was not directly generated from a native MouseEvent.\n\t\t * @property nativeEvent\n\t\t * @type HtmlMouseEvent\n\t\t * @default null\n\t\t **/\n\t\tthis.nativeEvent = nativeEvent;\n\t\n\t\t/**\n\t\t * The unique id for the pointer (touch point or cursor). This will be either -1 for the mouse, or the system\n\t\t * supplied id value.\n\t\t * @property pointerID\n\t\t * @type {Number}\n\t\t */\n\t\tthis.pointerID = pointerID;\n\t\n\t\t/**\n\t\t * Indicates whether this is the primary pointer in a multitouch environment. This will always be true for the mouse.\n\t\t * For touch pointers, the first pointer in the current stack will be considered the primary pointer.\n\t\t * @property primary\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.primary = !!primary;\n\t\t\n\t\t/**\n\t\t * The secondary target for the event, if applicable. This is used for mouseout/rollout\n\t\t * events to indicate the object that the mouse entered from, mouseover/rollover for the object the mouse exited,\n\t\t * and stagemousedown/stagemouseup events for the object that was the under the cursor, if any.\n\t\t * \n\t\t * Only valid interaction targets will be returned (ie. objects with mouse listeners or a cursor set).\n\t\t * @property relatedTarget\n\t\t * @type {DisplayObject}\n\t\t */\n\t\tthis.relatedTarget = relatedTarget;\n\t}\n\tvar p = createjs.extend(MouseEvent, createjs.Event);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\n\t\n// getter / setters:\n\t/**\n\t * Returns the x position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n\t * @property localX\n\t * @type {Number}\n\t * @readonly\n\t */\n\tp._get_localX = function() {\n\t\treturn this.currentTarget.globalToLocal(this.rawX, this.rawY).x;\n\t};\n\t\n\t/**\n\t * Returns the y position of the mouse in the local coordinate system of the current target (ie. the dispatcher).\n\t * @property localY\n\t * @type {Number}\n\t * @readonly\n\t */\n\tp._get_localY = function() {\n\t\treturn this.currentTarget.globalToLocal(this.rawX, this.rawY).y;\n\t};\n\t\n\t/**\n\t * Indicates whether the event was generated by a touch input (versus a mouse input).\n\t * @property isTouch\n\t * @type {Boolean}\n\t * @readonly\n\t */\n\tp._get_isTouch = function() {\n\t\treturn this.pointerID !== -1;\n\t};\n\t\n\t\n\ttry {\n\t\tObject.defineProperties(p, {\n\t\t\tlocalX: { get: p._get_localX },\n\t\t\tlocalY: { get: p._get_localY },\n\t\t\tisTouch: { get: p._get_isTouch }\n\t\t});\n\t} catch (e) {} // TODO: use Log\n\n\n// public methods:\n\t/**\n\t * Returns a clone of the MouseEvent instance.\n\t * @method clone\n\t * @return {MouseEvent} a clone of the MouseEvent instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new MouseEvent(this.type, this.bubbles, this.cancelable, this.stageX, this.stageY, this.nativeEvent, this.pointerID, this.primary, this.rawX, this.rawY);\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[MouseEvent (type=\"+this.type+\" stageX=\"+this.stageX+\" stageY=\"+this.stageY+\")]\";\n\t};\n\n\n\tcreatejs.MouseEvent = createjs.promote(MouseEvent, \"Event\");\n}());\n\n//##############################################################################\n// Matrix2D.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Represents an affine transformation matrix, and provides tools for constructing and concatenating matrices.\n\t *\n\t * This matrix can be visualized as:\n\t *\n\t * \t[ a  c  tx\n\t * \t  b  d  ty\n\t * \t  0  0  1  ]\n\t *\n\t * Note the locations of b and c.\n\t *\n\t * @class Matrix2D\n\t * @param {Number} [a=1] Specifies the a property for the new matrix.\n\t * @param {Number} [b=0] Specifies the b property for the new matrix.\n\t * @param {Number} [c=0] Specifies the c property for the new matrix.\n\t * @param {Number} [d=1] Specifies the d property for the new matrix.\n\t * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n\t * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n\t * @constructor\n\t **/\n\tfunction Matrix2D(a, b, c, d, tx, ty) {\n\t\tthis.setValues(a,b,c,d,tx,ty);\n\t\t\n\t// public properties:\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * Position (0, 0) in a 3x3 affine transformation matrix.\n\t\t * @property a\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Position (0, 1) in a 3x3 affine transformation matrix.\n\t\t * @property b\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Position (1, 0) in a 3x3 affine transformation matrix.\n\t\t * @property c\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Position (1, 1) in a 3x3 affine transformation matrix.\n\t\t * @property d\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Position (2, 0) in a 3x3 affine transformation matrix.\n\t\t * @property tx\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Position (2, 1) in a 3x3 affine transformation matrix.\n\t\t * @property ty\n\t\t * @type Number\n\t\t **/\n\t}\n\tvar p = Matrix2D.prototype;\n\n\t/**\n\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t * for details.\n\t *\n\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t *\n\t * @method initialize\n\t * @protected\n\t * @deprecated\n\t */\n\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\n\n// constants:\n\t/**\n\t * Multiplier for converting degrees to radians. Used internally by Matrix2D.\n\t * @property DEG_TO_RAD\n\t * @static\n\t * @final\n\t * @type Number\n\t * @readonly\n\t **/\n\tMatrix2D.DEG_TO_RAD = Math.PI/180;\n\n\n// static public properties:\n\t/**\n\t * An identity matrix, representing a null transformation.\n\t * @property identity\n\t * @static\n\t * @type Matrix2D\n\t * @readonly\n\t **/\n\tMatrix2D.identity = null; // set at bottom of class definition.\n\t\n\n// public methods:\n\t/**\n\t * Sets the specified values on this instance. \n\t * @method setValues\n\t * @param {Number} [a=1] Specifies the a property for the new matrix.\n\t * @param {Number} [b=0] Specifies the b property for the new matrix.\n\t * @param {Number} [c=0] Specifies the c property for the new matrix.\n\t * @param {Number} [d=1] Specifies the d property for the new matrix.\n\t * @param {Number} [tx=0] Specifies the tx property for the new matrix.\n\t * @param {Number} [ty=0] Specifies the ty property for the new matrix.\n\t * @return {Matrix2D} This instance. Useful for chaining method calls.\n\t*/\n\tp.setValues = function(a, b, c, d, tx, ty) {\n\t\t// don't forget to update docs in the constructor if these change:\n\t\tthis.a = (a == null) ? 1 : a;\n\t\tthis.b = b || 0;\n\t\tthis.c = c || 0;\n\t\tthis.d = (d == null) ? 1 : d;\n\t\tthis.tx = tx || 0;\n\t\tthis.ty = ty || 0;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Appends the specified matrix properties to this matrix. All parameters are required.\n\t * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n\t * @method append\n\t * @param {Number} a\n\t * @param {Number} b\n\t * @param {Number} c\n\t * @param {Number} d\n\t * @param {Number} tx\n\t * @param {Number} ty\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.append = function(a, b, c, d, tx, ty) {\n\t\tvar a1 = this.a;\n\t\tvar b1 = this.b;\n\t\tvar c1 = this.c;\n\t\tvar d1 = this.d;\n\t\tif (a != 1 || b != 0 || c != 0 || d != 1) {\n\t\t\tthis.a  = a1*a+c1*b;\n\t\t\tthis.b  = b1*a+d1*b;\n\t\t\tthis.c  = a1*c+c1*d;\n\t\t\tthis.d  = b1*c+d1*d;\n\t\t}\n\t\tthis.tx = a1*tx+c1*ty+this.tx;\n\t\tthis.ty = b1*tx+d1*ty+this.ty;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Prepends the specified matrix properties to this matrix.\n\t * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n\t * All parameters are required.\n\t * @method prepend\n\t * @param {Number} a\n\t * @param {Number} b\n\t * @param {Number} c\n\t * @param {Number} d\n\t * @param {Number} tx\n\t * @param {Number} ty\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.prepend = function(a, b, c, d, tx, ty) {\n\t\tvar a1 = this.a;\n\t\tvar c1 = this.c;\n\t\tvar tx1 = this.tx;\n\n\t\tthis.a  = a*a1+c*this.b;\n\t\tthis.b  = b*a1+d*this.b;\n\t\tthis.c  = a*c1+c*this.d;\n\t\tthis.d  = b*c1+d*this.d;\n\t\tthis.tx = a*tx1+c*this.ty+tx;\n\t\tthis.ty = b*tx1+d*this.ty+ty;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Appends the specified matrix to this matrix.\n\t * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n\t * @method appendMatrix\n\t * @param {Matrix2D} matrix\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.appendMatrix = function(matrix) {\n\t\treturn this.append(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t};\n\n\t/**\n\t * Prepends the specified matrix to this matrix.\n\t * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n\t * For example, you could calculate the combined transformation for a child object using:\n\t * \n\t * \tvar o = myDisplayObject;\n\t * \tvar mtx = o.getMatrix();\n\t * \twhile (o = o.parent) {\n\t * \t\t// prepend each parent's transformation in turn:\n\t * \t\to.prependMatrix(o.getMatrix());\n\t * \t}\n\t * @method prependMatrix\n\t * @param {Matrix2D} matrix\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.prependMatrix = function(matrix) {\n\t\treturn this.prepend(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t};\n\n\t/**\n\t * Generates matrix properties from the specified display object transform properties, and appends them to this matrix.\n\t * For example, you can use this to generate a matrix representing the transformations of a display object:\n\t * \n\t * \tvar mtx = new createjs.Matrix2D();\n\t * \tmtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);\n\t * @method appendTransform\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} scaleX\n\t * @param {Number} scaleY\n\t * @param {Number} rotation\n\t * @param {Number} skewX\n\t * @param {Number} skewY\n\t * @param {Number} regX Optional.\n\t * @param {Number} regY Optional.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.appendTransform = function(x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n\t\tif (rotation%360) {\n\t\t\tvar r = rotation*Matrix2D.DEG_TO_RAD;\n\t\t\tvar cos = Math.cos(r);\n\t\t\tvar sin = Math.sin(r);\n\t\t} else {\n\t\t\tcos = 1;\n\t\t\tsin = 0;\n\t\t}\n\n\t\tif (skewX || skewY) {\n\t\t\t// TODO: can this be combined into a single append operation?\n\t\t\tskewX *= Matrix2D.DEG_TO_RAD;\n\t\t\tskewY *= Matrix2D.DEG_TO_RAD;\n\t\t\tthis.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n\t\t\tthis.append(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, 0, 0);\n\t\t} else {\n\t\t\tthis.append(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, x, y);\n\t\t}\n\t\t\n\t\tif (regX || regY) {\n\t\t\t// append the registration offset:\n\t\t\tthis.tx -= regX*this.a+regY*this.c; \n\t\t\tthis.ty -= regX*this.b+regY*this.d;\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Generates matrix properties from the specified display object transform properties, and prepends them to this matrix.\n\t * For example, you could calculate the combined transformation for a child object using:\n\t * \n\t * \tvar o = myDisplayObject;\n\t * \tvar mtx = new createjs.Matrix2D();\n\t * \tdo  {\n\t * \t\t// prepend each parent's transformation in turn:\n\t * \t\tmtx.prependTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\n\t * \t} while (o = o.parent);\n\t * \t\n\t * \tNote that the above example would not account for {{#crossLink \"DisplayObject/transformMatrix:property\"}}{{/crossLink}}\n\t * \tvalues. See {{#crossLink \"Matrix2D/prependMatrix\"}}{{/crossLink}} for an example that does.\n\t * @method prependTransform\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} scaleX\n\t * @param {Number} scaleY\n\t * @param {Number} rotation\n\t * @param {Number} skewX\n\t * @param {Number} skewY\n\t * @param {Number} regX Optional.\n\t * @param {Number} regY Optional.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.prependTransform = function(x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\n\t\tif (rotation%360) {\n\t\t\tvar r = rotation*Matrix2D.DEG_TO_RAD;\n\t\t\tvar cos = Math.cos(r);\n\t\t\tvar sin = Math.sin(r);\n\t\t} else {\n\t\t\tcos = 1;\n\t\t\tsin = 0;\n\t\t}\n\n\t\tif (regX || regY) {\n\t\t\t// prepend the registration offset:\n\t\t\tthis.tx -= regX; this.ty -= regY;\n\t\t}\n\t\tif (skewX || skewY) {\n\t\t\t// TODO: can this be combined into a single prepend operation?\n\t\t\tskewX *= Matrix2D.DEG_TO_RAD;\n\t\t\tskewY *= Matrix2D.DEG_TO_RAD;\n\t\t\tthis.prepend(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, 0, 0);\n\t\t\tthis.prepend(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n\t\t} else {\n\t\t\tthis.prepend(cos*scaleX, sin*scaleX, -sin*scaleY, cos*scaleY, x, y);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Applies a clockwise rotation transformation to the matrix.\n\t * @method rotate\n\t * @param {Number} angle The angle to rotate by, in degrees. To use a value in radians, multiply it by `180/Math.PI`.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.rotate = function(angle) {\n\t\tangle = angle*Matrix2D.DEG_TO_RAD;\n\t\tvar cos = Math.cos(angle);\n\t\tvar sin = Math.sin(angle);\n\n\t\tvar a1 = this.a;\n\t\tvar b1 = this.b;\n\n\t\tthis.a = a1*cos+this.c*sin;\n\t\tthis.b = b1*cos+this.d*sin;\n\t\tthis.c = -a1*sin+this.c*cos;\n\t\tthis.d = -b1*sin+this.d*cos;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Applies a skew transformation to the matrix.\n\t * @method skew\n\t * @param {Number} skewX The amount to skew horizontally in degrees. To use a value in radians, multiply it by `180/Math.PI`.\n\t * @param {Number} skewY The amount to skew vertically in degrees.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t*/\n\tp.skew = function(skewX, skewY) {\n\t\tskewX = skewX*Matrix2D.DEG_TO_RAD;\n\t\tskewY = skewY*Matrix2D.DEG_TO_RAD;\n\t\tthis.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), 0, 0);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Applies a scale transformation to the matrix.\n\t * @method scale\n\t * @param {Number} x The amount to scale horizontally. E.G. a value of 2 will double the size in the X direction, and 0.5 will halve it.\n\t * @param {Number} y The amount to scale vertically.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.scale = function(x, y) {\n\t\tthis.a *= x;\n\t\tthis.b *= x;\n\t\tthis.c *= y;\n\t\tthis.d *= y;\n\t\t//this.tx *= x;\n\t\t//this.ty *= y;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Translates the matrix on the x and y axes.\n\t * @method translate\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.translate = function(x, y) {\n\t\tthis.tx += this.a*x + this.c*y;\n\t\tthis.ty += this.b*x + this.d*y;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Sets the properties of the matrix to those of an identity matrix (one that applies a null transformation).\n\t * @method identity\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.identity = function() {\n\t\tthis.a = this.d = 1;\n\t\tthis.b = this.c = this.tx = this.ty = 0;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Inverts the matrix, causing it to perform the opposite transformation.\n\t * @method invert\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t **/\n\tp.invert = function() {\n\t\tvar a1 = this.a;\n\t\tvar b1 = this.b;\n\t\tvar c1 = this.c;\n\t\tvar d1 = this.d;\n\t\tvar tx1 = this.tx;\n\t\tvar n = a1*d1-b1*c1;\n\n\t\tthis.a = d1/n;\n\t\tthis.b = -b1/n;\n\t\tthis.c = -c1/n;\n\t\tthis.d = a1/n;\n\t\tthis.tx = (c1*this.ty-d1*tx1)/n;\n\t\tthis.ty = -(a1*this.ty-b1*tx1)/n;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns true if the matrix is an identity matrix.\n\t * @method isIdentity\n\t * @return {Boolean}\n\t **/\n\tp.isIdentity = function() {\n\t\treturn this.tx === 0 && this.ty === 0 && this.a === 1 && this.b === 0 && this.c === 0 && this.d === 1;\n\t};\n\t\n\t/**\n\t * Returns true if this matrix is equal to the specified matrix (all property values are equal).\n\t * @method equals\n\t * @param {Matrix2D} matrix The matrix to compare.\n\t * @return {Boolean}\n\t **/\n\tp.equals = function(matrix) {\n\t\treturn this.tx === matrix.tx && this.ty === matrix.ty && this.a === matrix.a && this.b === matrix.b && this.c === matrix.c && this.d === matrix.d;\n\t};\n\n\t/**\n\t * Transforms a point according to this matrix.\n\t * @method transformPoint\n\t * @param {Number} x The x component of the point to transform.\n\t * @param {Number} y The y component of the point to transform.\n\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a generic object with x/y properties will be returned.\n\t * @return {Point} This matrix. Useful for chaining method calls.\n\t **/\n\tp.transformPoint = function(x, y, pt) {\n\t\tpt = pt||{};\n\t\tpt.x = x*this.a+y*this.c+this.tx;\n\t\tpt.y = x*this.b+y*this.d+this.ty;\n\t\treturn pt;\n\t};\n\n\t/**\n\t * Decomposes the matrix into transform properties (x, y, scaleX, scaleY, and rotation). Note that these values\n\t * may not match the transform properties you used to generate the matrix, though they will produce the same visual\n\t * results.\n\t * @method decompose\n\t * @param {Object} target The object to apply the transform properties to. If null, then a new object will be returned.\n\t * @return {Object} The target, or a new generic object with the transform properties applied.\n\t*/\n\tp.decompose = function(target) {\n\t\t// TODO: it would be nice to be able to solve for whether the matrix can be decomposed into only scale/rotation even when scale is negative\n\t\tif (target == null) { target = {}; }\n\t\ttarget.x = this.tx;\n\t\ttarget.y = this.ty;\n\t\ttarget.scaleX = Math.sqrt(this.a * this.a + this.b * this.b);\n\t\ttarget.scaleY = Math.sqrt(this.c * this.c + this.d * this.d);\n\n\t\tvar skewX = Math.atan2(-this.c, this.d);\n\t\tvar skewY = Math.atan2(this.b, this.a);\n\n\t\tvar delta = Math.abs(1-skewX/skewY);\n\t\tif (delta < 0.00001) { // effectively identical, can use rotation:\n\t\t\ttarget.rotation = skewY/Matrix2D.DEG_TO_RAD;\n\t\t\tif (this.a < 0 && this.d >= 0) {\n\t\t\t\ttarget.rotation += (target.rotation <= 0) ? 180 : -180;\n\t\t\t}\n\t\t\ttarget.skewX = target.skewY = 0;\n\t\t} else {\n\t\t\ttarget.skewX = skewX/Matrix2D.DEG_TO_RAD;\n\t\t\ttarget.skewY = skewY/Matrix2D.DEG_TO_RAD;\n\t\t}\n\t\treturn target;\n\t};\n\t\n\t/**\n\t * Copies all properties from the specified matrix to this matrix.\n\t * @method copy\n\t * @param {Matrix2D} matrix The matrix to copy properties from.\n\t * @return {Matrix2D} This matrix. Useful for chaining method calls.\n\t*/\n\tp.copy = function(matrix) {\n\t\treturn this.setValues(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n\t};\n\n\t/**\n\t * Returns a clone of the Matrix2D instance.\n\t * @method clone\n\t * @return {Matrix2D} a clone of the Matrix2D instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new Matrix2D(this.a, this.b, this.c, this.d, this.tx, this.ty);\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Matrix2D (a=\"+this.a+\" b=\"+this.b+\" c=\"+this.c+\" d=\"+this.d+\" tx=\"+this.tx+\" ty=\"+this.ty+\")]\";\n\t};\n\n\t// this has to be populated after the class is defined:\n\tMatrix2D.identity = new Matrix2D();\n\n\n\tcreatejs.Matrix2D = Matrix2D;\n}());\n\n//##############################################################################\n// DisplayProps.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\t/**\n\t * Used for calculating and encapsulating display related properties.\n\t * @class DisplayProps\n\t * @param {Number} [visible=true] Visible value.\n\t * @param {Number} [alpha=1] Alpha value.\n\t * @param {Number} [shadow=null] A Shadow instance or null.\n\t * @param {Number} [compositeOperation=null] A compositeOperation value or null.\n\t * @param {Number} [matrix] A transformation matrix. Defaults to a new identity matrix.\n\t * @constructor\n\t **/\n\tfunction DisplayProps(visible, alpha, shadow, compositeOperation, matrix) {\n\t\tthis.setValues(visible, alpha, shadow, compositeOperation, matrix);\n\t\t\n\t// public properties:\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * Property representing the alpha that will be applied to a display object.\n\t\t * @property alpha\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Property representing the shadow that will be applied to a display object.\n\t\t * @property shadow\n\t\t * @type Shadow\n\t\t **/\n\t\n\t\t/**\n\t\t * Property representing the compositeOperation that will be applied to a display object.\n\t\t * You can find a list of valid composite operations at:\n\t\t * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing\">https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing</a>\n\t\t * @property compositeOperation\n\t\t * @type String\n\t\t **/\n\t\t\n\t\t/**\n\t\t * Property representing the value for visible that will be applied to a display object.\n\t\t * @property visible\n\t\t * @type Boolean\n\t\t **/\n\t\t\n\t\t/**\n\t\t * The transformation matrix that will be applied to a display object.\n\t\t * @property matrix\n\t\t * @type Matrix2D\n\t\t **/\n\t}\n\tvar p = DisplayProps.prototype;\n\n// initialization:\n\t/**\n\t * Reinitializes the instance with the specified values.\n\t * @method setValues\n\t * @param {Number} [visible=true] Visible value.\n\t * @param {Number} [alpha=1] Alpha value.\n\t * @param {Number} [shadow=null] A Shadow instance or null.\n\t * @param {Number} [compositeOperation=null] A compositeOperation value or null.\n\t * @param {Number} [matrix] A transformation matrix. Defaults to an identity matrix.\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.setValues = function (visible, alpha, shadow, compositeOperation, matrix) {\n\t\tthis.visible = visible == null ? true : !!visible;\n\t\tthis.alpha = alpha == null ? 1 : alpha;\n\t\tthis.shadow = shadow;\n\t\tthis.compositeOperation = compositeOperation;\n\t\tthis.matrix = matrix || (this.matrix&&this.matrix.identity()) || new createjs.Matrix2D();\n\t\treturn this;\n\t};\n\n// public methods:\n\t/**\n\t * Appends the specified display properties. This is generally used to apply a child's properties its parent's.\n\t * @method append\n\t * @param {Boolean} visible desired visible value\n\t * @param {Number} alpha desired alpha value\n\t * @param {Shadow} shadow desired shadow value\n\t * @param {String} compositeOperation desired composite operation value\n\t * @param {Matrix2D} [matrix] a Matrix2D instance\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.append = function(visible, alpha, shadow, compositeOperation, matrix) {\n\t\tthis.alpha *= alpha;\n\t\tthis.shadow = shadow || this.shadow;\n\t\tthis.compositeOperation = compositeOperation || this.compositeOperation;\n\t\tthis.visible = this.visible && visible;\n\t\tmatrix&&this.matrix.appendMatrix(matrix);\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Prepends the specified display properties. This is generally used to apply a parent's properties to a child's.\n\t * For example, to get the combined display properties that would be applied to a child, you could use:\n\t * \n\t * \tvar o = myDisplayObject;\n\t * \tvar props = new createjs.DisplayProps();\n\t * \tdo {\n\t * \t\t// prepend each parent's props in turn:\n\t * \t\tprops.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation, o.getMatrix());\n\t * \t} while (o = o.parent);\n\t * \t\n\t * @method prepend\n\t * @param {Boolean} visible desired visible value\n\t * @param {Number} alpha desired alpha value\n\t * @param {Shadow} shadow desired shadow value\n\t * @param {String} compositeOperation desired composite operation value\n\t * @param {Matrix2D} [matrix] a Matrix2D instance\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.prepend = function(visible, alpha, shadow, compositeOperation, matrix) {\n\t\tthis.alpha *= alpha;\n\t\tthis.shadow = this.shadow || shadow;\n\t\tthis.compositeOperation = this.compositeOperation || compositeOperation;\n\t\tthis.visible = this.visible && visible;\n\t\tmatrix&&this.matrix.prependMatrix(matrix);\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Resets this instance and its matrix to default values.\n\t * @method identity\n\t * @return {DisplayProps} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.identity = function() {\n\t\tthis.visible = true;\n\t\tthis.alpha = 1;\n\t\tthis.shadow = this.compositeOperation = null;\n\t\tthis.matrix.identity();\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Returns a clone of the DisplayProps instance. Clones the associated matrix.\n\t * @method clone\n\t * @return {DisplayProps} a clone of the DisplayProps instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new DisplayProps(this.alpha, this.shadow, this.compositeOperation, this.visible, this.matrix.clone());\n\t};\n\n// private methods:\n\n\tcreatejs.DisplayProps = DisplayProps;\n})();\n\n//##############################################################################\n// Point.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Represents a point on a 2 dimensional x / y coordinate system.\n\t *\n\t * <h4>Example</h4>\n\t * \n\t *      var point = new createjs.Point(0, 100);\n\t * \n\t * @class Point\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @constructor\n\t **/\n\tfunction Point(x, y) {\n\t \tthis.setValues(x, y);\n\t \t\n\t \t\n\t// public properties:\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * X position.\n\t\t * @property x\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Y position.\n\t\t * @property y\n\t\t * @type Number\n\t\t **/\n\t}\n\tvar p = Point.prototype;\n\n\t/**\n\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t * for details.\n\t *\n\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t *\n\t * @method initialize\n\t * @protected\n\t * @deprecated\n\t */\n\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\n\t\n// public methods:\n\t/** \n\t * Sets the specified values on this instance.\n\t * @method setValues\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @return {Point} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.setValues = function(x, y) {\n\t\tthis.x = x||0;\n\t\tthis.y = y||0;\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Copies all properties from the specified point to this point.\n\t * @method copy\n\t * @param {Point} point The point to copy properties from.\n\t * @return {Point} This point. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.copy = function(point) {\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Returns a clone of the Point instance.\n\t * @method clone\n\t * @return {Point} a clone of the Point instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new Point(this.x, this.y);\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Point (x=\"+this.x+\" y=\"+this.y+\")]\";\n\t};\n\t\n\t\n\tcreatejs.Point = Point;\n}());\n\n//##############################################################################\n// Rectangle.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Represents a rectangle as defined by the points (x, y) and (x+width, y+height).\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var rect = new createjs.Rectangle(0, 0, 100, 100);\n\t *\n\t * @class Rectangle\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @param {Number} [width=0] The width of the Rectangle.\n\t * @param {Number} [height=0] The height of the Rectangle.\n\t * @constructor\n\t **/\n\tfunction Rectangle(x, y, width, height) {\n\t\tthis.setValues(x, y, width, height);\n\t\t\n\t\t\n\t// public properties:\n\t\t// assigned in the setValues method.\n\t\t/**\n\t\t * X position.\n\t\t * @property x\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Y position.\n\t\t * @property y\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Width.\n\t\t * @property width\n\t\t * @type Number\n\t\t **/\n\t\n\t\t/**\n\t\t * Height.\n\t\t * @property height\n\t\t * @type Number\n\t\t **/\n\t}\n\tvar p = Rectangle.prototype;\n\n\t/**\n\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t * for details.\n\t *\n\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t *\n\t * @method initialize\n\t * @protected\n\t * @deprecated\n\t */\n\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\n\n// public methods:\n\t/** \n\t * Sets the specified values on this instance.\n\t * @method setValues\n\t * @param {Number} [x=0] X position.\n\t * @param {Number} [y=0] Y position.\n\t * @param {Number} [width=0] The width of the Rectangle.\n\t * @param {Number} [height=0] The height of the Rectangle.\n\t * @return {Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.setValues = function(x, y, width, height) {\n\t\t// don't forget to update docs in the constructor if these change:\n\t\tthis.x = x||0;\n\t\tthis.y = y||0;\n\t\tthis.width = width||0;\n\t\tthis.height = height||0;\n\t\treturn this;\n\t};\n\t\n\t/** \n\t * Extends the rectangle's bounds to include the described point or rectangle.\n\t * @method extend\n\t * @param {Number} x X position of the point or rectangle.\n\t * @param {Number} y Y position of the point or rectangle.\n\t * @param {Number} [width=0] The width of the rectangle.\n\t * @param {Number} [height=0] The height of the rectangle.\n\t * @return {Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.extend = function(x, y, width, height) {\n\t\twidth = width||0;\n\t\theight = height||0;\n\t\tif (x+width > this.x+this.width) { this.width = x+width-this.x; }\n\t\tif (y+height > this.y+this.height) { this.height = y+height-this.y; }\n\t\tif (x < this.x) { this.width += this.x-x; this.x = x; }\n\t\tif (y < this.y) { this.height += this.y-y; this.y = y; }\n\t\treturn this;\n\t};\n\t\n\t/** \n\t * Adds the specified padding to the rectangle's bounds.\n\t * @method pad\n\t * @param {Number} top\n\t * @param {Number} left\n\t * @param {Number} bottom\n\t * @param {Number} right\n\t * @return {Rectangle} This instance. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.pad = function(top, left, bottom, right) {\n\t\tthis.x -= left;\n\t\tthis.y -= top;\n\t\tthis.width += left+right;\n\t\tthis.height += top+bottom;\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Copies all properties from the specified rectangle to this rectangle.\n\t * @method copy\n\t * @param {Rectangle} rectangle The rectangle to copy properties from.\n\t * @return {Rectangle} This rectangle. Useful for chaining method calls.\n\t * @chainable\n\t*/\n\tp.copy = function(rectangle) {\n\t\treturn this.setValues(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n\t};\n\t\n\t/** \n\t * Returns true if this rectangle fully encloses the described point or rectangle.\n\t * @method contains\n\t * @param {Number} x X position of the point or rectangle.\n\t * @param {Number} y Y position of the point or rectangle.\n\t * @param {Number} [width=0] The width of the rectangle.\n\t * @param {Number} [height=0] The height of the rectangle.\n\t * @return {Boolean} True if the described point or rectangle is contained within this rectangle.\n\t*/\n\tp.contains = function(x, y, width, height) {\n\t\twidth = width||0;\n\t\theight = height||0;\n\t\treturn (x >= this.x && x+width <= this.x+this.width && y >= this.y && y+height <= this.y+this.height);\n\t};\n\t\n\t/** \n\t * Returns a new rectangle which contains this rectangle and the specified rectangle.\n\t * @method union\n\t * @param {Rectangle} rect The rectangle to calculate a union with.\n\t * @return {Rectangle} A new rectangle describing the union.\n\t*/\n\tp.union = function(rect) {\n\t\treturn this.clone().extend(rect.x, rect.y, rect.width, rect.height);\n\t};\n\t\n\t/** \n\t * Returns a new rectangle which describes the intersection (overlap) of this rectangle and the specified rectangle,\n\t * or null if they do not intersect.\n\t * @method intersection\n\t * @param {Rectangle} rect The rectangle to calculate an intersection with.\n\t * @return {Rectangle} A new rectangle describing the intersection or null.\n\t*/\n\tp.intersection = function(rect) {\n\t\tvar x1 = rect.x, y1 = rect.y, x2 = x1+rect.width, y2 = y1+rect.height;\n\t\tif (this.x > x1) { x1 = this.x; }\n\t\tif (this.y > y1) { y1 = this.y; }\n\t\tif (this.x + this.width < x2) { x2 = this.x + this.width; }\n\t\tif (this.y + this.height < y2) { y2 = this.y + this.height; }\n\t\treturn (x2 <= x1 || y2 <= y1) ? null : new Rectangle(x1, y1, x2-x1, y2-y1);\n\t};\n\t\n\t/** \n\t * Returns true if the specified rectangle intersects (has any overlap) with this rectangle.\n\t * @method intersects\n\t * @param {Rectangle} rect The rectangle to compare.\n\t * @return {Boolean} True if the rectangles intersect.\n\t*/\n\tp.intersects = function(rect) {\n\t\treturn (rect.x <= this.x+this.width && this.x <= rect.x+rect.width && rect.y <= this.y+this.height && this.y <= rect.y + rect.height);\n\t};\n\t\n\t/** \n\t * Returns true if the width or height are equal or less than 0.\n\t * @method isEmpty\n\t * @return {Boolean} True if the rectangle is empty.\n\t*/\n\tp.isEmpty = function() {\n\t\treturn this.width <= 0 || this.height <= 0;\n\t};\n\t\n\t/**\n\t * Returns a clone of the Rectangle instance.\n\t * @method clone\n\t * @return {Rectangle} a clone of the Rectangle instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Rectangle (x=\"+this.x+\" y=\"+this.y+\" width=\"+this.width+\" height=\"+this.height+\")]\";\n\t};\n\t\n\t\n\tcreatejs.Rectangle = Rectangle;\n}());\n\n//##############################################################################\n// ButtonHelper.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * The ButtonHelper is a helper class to create interactive buttons from {{#crossLink \"MovieClip\"}}{{/crossLink}} or\n\t * {{#crossLink \"Sprite\"}}{{/crossLink}} instances. This class will intercept mouse events from an object, and\n\t * automatically call {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} or {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}},\n\t * to the respective animation labels, add a pointer cursor, and allows the user to define a hit state frame.\n\t *\n\t * The ButtonHelper instance does not need to be added to the stage, but a reference should be maintained to prevent\n\t * garbage collection.\n\t * \n\t * Note that over states will not work unless you call {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var helper = new createjs.ButtonHelper(myInstance, \"out\", \"over\", \"down\", false, myInstance, \"hit\");\n\t *      myInstance.addEventListener(\"click\", handleClick);\n\t *      function handleClick(event) {\n\t *          // Click Happened.\n\t *      }\n\t *\n\t * @class ButtonHelper\n\t * @param {Sprite|MovieClip} target The instance to manage.\n\t * @param {String} [outLabel=\"out\"] The label or animation to go to when the user rolls out of the button.\n\t * @param {String} [overLabel=\"over\"] The label or animation to go to when the user rolls over the button.\n\t * @param {String} [downLabel=\"down\"] The label or animation to go to when the user presses the button.\n\t * @param {Boolean} [play=false] If the helper should call \"gotoAndPlay\" or \"gotoAndStop\" on the button when changing\n\t * states.\n\t * @param {DisplayObject} [hitArea] An optional item to use as the hit state for the button. If this is not defined,\n\t * then the button's visible states will be used instead. Note that the same instance as the \"target\" argument can be\n\t * used for the hitState.\n\t * @param {String} [hitLabel] The label or animation on the hitArea instance that defines the hitArea bounds. If this is\n\t * null, then the default state of the hitArea will be used. *\n\t * @constructor\n\t */\n\tfunction ButtonHelper(target, outLabel, overLabel, downLabel, play, hitArea, hitLabel) {\n\t\tif (!target.addEventListener) { return; }\n\t\n\t\n\t// public properties:\n\t\t/**\n\t\t * The target for this button helper.\n\t\t * @property target\n\t\t * @type MovieClip | Sprite\n\t\t * @readonly\n\t\t **/\n\t\tthis.target = target;\n\t\n\t\t/**\n\t\t * The label name or frame number to display when the user mouses out of the target. Defaults to \"over\".\n\t\t * @property overLabel\n\t\t * @type String | Number\n\t\t **/\n\t\tthis.overLabel = overLabel == null ? \"over\" : overLabel;\n\t\n\t\t/**\n\t\t * The label name or frame number to display when the user mouses over the target. Defaults to \"out\".\n\t\t * @property outLabel\n\t\t * @type String | Number\n\t\t **/\n\t\tthis.outLabel = outLabel == null ? \"out\" : outLabel;\n\t\n\t\t/**\n\t\t * The label name or frame number to display when the user presses on the target. Defaults to \"down\".\n\t\t * @property downLabel\n\t\t * @type String | Number\n\t\t **/\n\t\tthis.downLabel = downLabel == null ? \"down\" : downLabel;\n\t\n\t\t/**\n\t\t * If true, then ButtonHelper will call gotoAndPlay, if false, it will use gotoAndStop. Default is false.\n\t\t * @property play\n\t\t * @default false\n\t\t * @type Boolean\n\t\t **/\n\t\tthis.play = play;\n\t\t\n\t\t\n\t//  private properties\n\t\t/**\n\t\t * @property _isPressed\n\t\t * @type Boolean\n\t\t * @protected\n\t\t **/\n\t\tthis._isPressed = false;\n\t\n\t\t/**\n\t\t * @property _isOver\n\t\t * @type Boolean\n\t\t * @protected\n\t\t **/\n\t\tthis._isOver = false;\n\t\n\t\t/**\n\t\t * @property _enabled\n\t\t * @type Boolean\n\t\t * @protected\n\t\t **/\n\t\tthis._enabled = false;\n\t\t\n\t// setup:\n\t\ttarget.mouseChildren = false; // prevents issues when children are removed from the display list when state changes.\n\t\tthis.enabled = true;\n\t\tthis.handleEvent({});\n\t\tif (hitArea) {\n\t\t\tif (hitLabel) {\n\t\t\t\thitArea.actionsEnabled = false;\n\t\t\t\thitArea.gotoAndStop&&hitArea.gotoAndStop(hitLabel);\n\t\t\t}\n\t\t\ttarget.hitArea = hitArea;\n\t\t}\n\t}\n\tvar p = ButtonHelper.prototype;\n\n\t/**\n\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t * for details.\n\t *\n\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t *\n\t * @method initialize\n\t * @protected\n\t * @deprecated\n\t */\n\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\n\t\n// getter / setters:\n\t/**\n\t * Use the {{#crossLink \"ButtonHelper/enabled:property\"}}{{/crossLink}} property instead.\n\t * @method setEnabled\n\t * @param {Boolean} value\n\t * @deprecated\n\t **/\n\tp.setEnabled = function(value) { // TODO: deprecated.\n\t\tif (value == this._enabled) { return; }\n\t\tvar o = this.target;\n\t\tthis._enabled = value;\n\t\tif (value) {\n\t\t\to.cursor = \"pointer\";\n\t\t\to.addEventListener(\"rollover\", this);\n\t\t\to.addEventListener(\"rollout\", this);\n\t\t\to.addEventListener(\"mousedown\", this);\n\t\t\to.addEventListener(\"pressup\", this);\n\t\t\tif (o._reset) { o.__reset = o._reset; o._reset = this._reset;}\n\t\t} else {\n\t\t\to.cursor = null;\n\t\t\to.removeEventListener(\"rollover\", this);\n\t\t\to.removeEventListener(\"rollout\", this);\n\t\t\to.removeEventListener(\"mousedown\", this);\n\t\t\to.removeEventListener(\"pressup\", this);\n\t\t\tif (o.__reset) { o._reset = o.__reset; delete(o.__reset); }\n\t\t}\n\t};\n\t/**\n\t * Use the {{#crossLink \"ButtonHelper/enabled:property\"}}{{/crossLink}} property instead.\n\t * @method getEnabled\n\t * @return {Boolean}\n\t * @deprecated\n\t **/\n\tp.getEnabled = function() {\n\t\treturn this._enabled;\n\t};\n\n\t/**\n\t * Enables or disables the button functionality on the target.\n\t * @property enabled\n\t * @type {Boolean}\n\t **/\n\ttry {\n\t\tObject.defineProperties(p, {\n\t\t\tenabled: { get: p.getEnabled, set: p.setEnabled }\n\t\t});\n\t} catch (e) {} // TODO: use Log\n\n\n// public methods:\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[ButtonHelper]\";\n\t};\n\n\n// private methods:\n\t/**\n\t * @method handleEvent\n\t * @param {Object} evt The mouse event to handle.\n\t * @protected\n\t **/\n\tp.handleEvent = function(evt) {\n\t\tvar label, t = this.target, type = evt.type;\n\t\tif (type == \"mousedown\") {\n\t\t\tthis._isPressed = true;\n\t\t\tlabel = this.downLabel;\n\t\t} else if (type == \"pressup\") {\n\t\t\tthis._isPressed = false;\n\t\t\tlabel = this._isOver ? this.overLabel : this.outLabel;\n\t\t} else if (type == \"rollover\") {\n\t\t\tthis._isOver = true;\n\t\t\tlabel = this._isPressed ? this.downLabel : this.overLabel;\n\t\t} else { // rollout and default\n\t\t\tthis._isOver = false;\n\t\t\tlabel = this._isPressed ? this.overLabel : this.outLabel;\n\t\t}\n\t\tif (this.play) {\n\t\t\tt.gotoAndPlay&&t.gotoAndPlay(label);\n\t\t} else {\n\t\t\tt.gotoAndStop&&t.gotoAndStop(label);\n\t\t}\n\t};\n\t\n\t/**\n\t * Injected into target. Preserves the paused state through a reset.\n\t * @method _reset\n\t * @protected\n\t **/\n\tp._reset = function() {\n\t\t// TODO: explore better ways to handle this issue. This is hacky & disrupts object signatures.\n\t\tvar p = this.paused;\n\t\tthis.__reset();\n\t\tthis.paused = p;\n\t};\n\n\n\tcreatejs.ButtonHelper = ButtonHelper;\n}());\n\n//##############################################################################\n// Shadow.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * This class encapsulates the properties required to define a shadow to apply to a {{#crossLink \"DisplayObject\"}}{{/crossLink}}\n\t * via its <code>shadow</code> property.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      myImage.shadow = new createjs.Shadow(\"#000000\", 5, 5, 10);\n\t *\n\t * @class Shadow\n\t * @constructor\n\t * @param {String} color The color of the shadow. This can be any valid CSS color value.\n\t * @param {Number} offsetX The x offset of the shadow in pixels.\n\t * @param {Number} offsetY The y offset of the shadow in pixels.\n\t * @param {Number} blur The size of the blurring effect.\n\t **/\n\tfunction Shadow(color, offsetX, offsetY, blur) {\n\t\t\n\t\t\n\t// public properties:\n\t\t/** \n\t\t * The color of the shadow. This can be any valid CSS color value.\n\t\t * @property color\n\t\t * @type String\n\t\t * @default null\n\t\t */\n\t\tthis.color = color||\"black\";\n\t\n\t\t/** The x offset of the shadow.\n\t\t * @property offsetX\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.offsetX = offsetX||0;\n\t\n\t\t/** The y offset of the shadow.\n\t\t * @property offsetY\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.offsetY = offsetY||0;\n\t\n\t\t/** The blur of the shadow.\n\t\t * @property blur\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.blur = blur||0;\n\t}\n\tvar p = Shadow.prototype;\n\n\t/**\n\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t * for details.\n\t *\n\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t *\n\t * @method initialize\n\t * @protected\n\t * @deprecated\n\t */\n\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\n\n// static public properties:\n\t/**\n\t * An identity shadow object (all properties are set to 0).\n\t * @property identity\n\t * @type Shadow\n\t * @static\n\t * @final\n\t * @readonly\n\t **/\n\tShadow.identity = new Shadow(\"transparent\", 0, 0, 0);\n\n\n// public methods:\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Shadow]\";\n\t};\n\n\t/**\n\t * Returns a clone of this Shadow instance.\n\t * @method clone\n\t * @return {Shadow} A clone of the current Shadow instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new Shadow(this.color, this.offsetX, this.offsetY, this.blur);\n\t};\n\t\n\n\tcreatejs.Shadow = Shadow;\n}());\n\n//##############################################################################\n// SpriteSheet.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Encapsulates the properties and methods associated with a sprite sheet. A sprite sheet is a series of images (usually\n\t * animation frames) combined into a larger image (or images). For example, an animation consisting of eight 100x100\n\t * images could be combined into a single 400x200 sprite sheet (4 frames across by 2 high).\n\t *\n\t * The data passed to the SpriteSheet constructor defines:\n\t * <ol>\n\t * \t<li> The source image or images to use.</li>\n\t * \t<li> The positions of individual image frames.</li>\n\t * \t<li> Sequences of frames that form named animations. Optional.</li>\n\t * \t<li> The target playback framerate. Optional.</li>\n\t * </ol>\n\t * <h3>SpriteSheet Format</h3>\n\t * SpriteSheets are an object with two required properties (`images` and `frames`), and two optional properties\n\t * (`framerate` and `animations`). This makes them easy to define in javascript code, or in JSON.\n\t *\n\t * <h4>images</h4>\n\t * An array of source images. Images can be either an HTMlimage\n\t * instance, or a uri to an image. The former is recommended to control preloading.\n\t *\n\t * \timages: [image1, \"path/to/image2.png\"],\n\t *\n\t * <h4>frames</h4>\n\t * Defines the individual frames. There are two supported formats for frame data:\n\t * When all of the frames are the same size (in a grid), use an object with `width`, `height`, `regX`, `regY`,\n\t * and `count` properties.\n\t *\n\t * <ul>\n\t *  <li>`width` & `height` are required and specify the dimensions of the frames</li>\n\t *  <li>`regX` & `regY` indicate the registration point or \"origin\" of the frames</li>\n\t *  <li>`spacing` indicate the spacing between frames</li>\n\t *  <li>`margin` specify the margin around the image(s)</li>\n\t *  <li>`count` allows you to specify the total number of frames in the spritesheet; if omitted, this will\n\t *  be calculated based on the dimensions of the source images and the frames. Frames will be assigned\n\t *  indexes based on their position in the source images (left to right, top to bottom).</li>\n\t * </ul>\n\t *\n\t *  \tframes: {width:64, height:64, count:20, regX: 32, regY:64, spacing:0, margin:0}\n\t *\n\t * If the frames are of different sizes, use an array of frame definitions. Each definition is itself an array\n\t * with 4 required and 3 optional entries, in the order:\n\t *\n\t * <ul>\n\t *  <li>The first four, `x`, `y`, `width`, and `height` are required and define the frame rectangle.</li>\n\t *  <li>The fifth, `imageIndex`, specifies the index of the source image (defaults to 0)</li>\n\t *  <li>The last two, `regX` and `regY` specify the registration point of the frame</li>\n\t * </ul>\n\t *\n\t * \tframes: [\n\t * \t\t// x, y, width, height, imageIndex*, regX*, regY*\n\t * \t\t[64, 0, 96, 64],\n\t * \t\t[0, 0, 64, 64, 1, 32, 32]\n\t * \t\t// etc.\n\t * \t]\n\t *\n\t * <h4>animations</h4>\n\t * Optional. An object defining sequences of frames to play as named animations. Each property corresponds to an\n\t * animation of the same name. Each animation must specify the frames to play, and may\n\t * also include a relative playback `speed` (ex. 2 would playback at double speed, 0.5 at half), and\n\t * the name of the `next` animation to sequence to after it completes.\n\t *\n\t * There are three formats supported for defining the frames in an animation, which can be mixed and matched as appropriate:\n\t * <ol>\n\t * \t<li>for a single frame animation, you can simply specify the frame index\n\t *\n\t * \t\tanimations: {\n\t * \t\t\tsit: 7\n\t * \t\t}\n\t *\n\t * </li>\n\t * <li>\n\t *      for an animation of consecutive frames, you can use an array with two required, and two optional entries\n\t * \t\tin the order: `start`, `end`, `next`, and `speed`. This will play the frames from start to end inclusive.\n\t *\n\t * \t\tanimations: {\n\t * \t\t\t// start, end, next*, speed*\n\t * \t\t\trun: [0, 8],\n\t * \t\t\tjump: [9, 12, \"run\", 2]\n\t * \t\t}\n\t *\n\t *  </li>\n\t *  <li>\n\t *     for non-consecutive frames, you can use an object with a `frames` property defining an array of frame\n\t *     indexes to play in order. The object can also specify `next` and `speed` properties.\n\t *\n\t * \t\tanimations: {\n\t * \t\t\twalk: {\n\t * \t\t\t\tframes: [1,2,3,3,2,1]\n\t * \t\t\t},\n\t * \t\t\tshoot: {\n\t * \t\t\t\tframes: [1,4,5,6],\n\t * \t\t\t\tnext: \"walk\",\n\t * \t\t\t\tspeed: 0.5\n\t * \t\t\t}\n\t * \t\t}\n\t *\n\t *  </li>\n\t * </ol>\n\t * <strong>Note:</strong> the `speed` property was added in EaselJS 0.7.0. Earlier versions had a `frequency`\n\t * property instead, which was the inverse of `speed`. For example, a value of \"4\" would be 1/4 normal speed in\n\t * earlier versions, but is 4x normal speed in EaselJS 0.7.0+.\n\t *\n\t * <h4>framerate</h4>\n\t * Optional. Indicates the default framerate to play this spritesheet at in frames per second. See\n\t * {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} for more information.\n\t *\n\t * \t\tframerate: 20\n\t *\n\t * Note that the Sprite framerate will only work if the stage update method is provided with the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n\t * event generated by the {{#crossLink \"Ticker\"}}{{/crossLink}}.\n\t *\n\t * \t\tcreatejs.Ticker.on(\"tick\", handleTick);\n\t * \t\tfunction handleTick(event) {\n\t *\t\t\tstage.update(event);\n\t *\t\t}\n\t *\n\t * <h3>Example</h3>\n\t * To define a simple sprite sheet, with a single image \"sprites.jpg\" arranged in a regular 50x50 grid with three\n\t * animations: \"stand\" showing the first frame, \"run\" looping frame 1-5 inclusive, and \"jump\" playing frame 6-8 and\n\t * sequencing back to run.\n\t *\n\t * \t\tvar data = {\n\t * \t\t\timages: [\"sprites.jpg\"],\n\t * \t\t\tframes: {width:50, height:50},\n\t * \t\t\tanimations: {\n\t * \t\t\t\tstand:0,\n\t * \t\t\t\trun:[1,5],\n\t * \t\t\t\tjump:[6,8,\"run\"]\n\t * \t\t\t}\n\t * \t\t};\n\t * \t\tvar spriteSheet = new createjs.SpriteSheet(data);\n\t * \t\tvar animation = new createjs.Sprite(spriteSheet, \"run\");\n\t *\n\t * <h3>Generating SpriteSheet Images</h3>\n\t * Spritesheets can be created manually by combining images in PhotoShop, and specifying the frame size or\n\t * coordinates manually, however there are a number of tools that facilitate this.\n\t * <ul>\n\t *     <li>Exporting SpriteSheets or HTML5 content from Adobe Flash/Animate supports the EaselJS SpriteSheet format.</li>\n\t *     <li>The popular <a href=\"https://www.codeandweb.com/texturepacker/easeljs\" target=\"_blank\">Texture Packer</a> has\n\t *     EaselJS support.\n\t *     <li>SWF animations in Adobe Flash/Animate can be exported to SpriteSheets using <a href=\"http://createjs.com/zoe\" target=\"_blank\">Zo&euml;</a></li>\n\t * </ul>\n\t *\n\t * <h3>Cross Origin Issues</h3>\n\t * <strong>Warning:</strong> Images loaded cross-origin will throw cross-origin security errors when interacted with\n\t * using:\n\t * <ul>\n\t *     <li>a mouse</li>\n\t *     <li>methods such as {{#crossLink \"Container/getObjectUnderPoint\"}}{{/crossLink}}</li>\n\t *     <li>Filters (see {{#crossLink \"Filter\"}}{{/crossLink}})</li>\n\t *     <li>caching (see {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}})</li>\n\t * </ul>\n\t * You can get around this by setting `crossOrigin` property on your images before passing them to EaselJS, or\n\t * setting the `crossOrigin` property on PreloadJS' LoadQueue or LoadItems.\n\t *\n\t * \t\tvar image = new Image();\n\t * \t\timg.crossOrigin=\"Anonymous\";\n\t * \t\timg.src = \"http://server-with-CORS-support.com/path/to/image.jpg\";\n\t *\n\t * If you pass string paths to SpriteSheets, they will not work cross-origin. The server that stores the image must\n\t * support cross-origin requests, or this will not work. For more information, check out\n\t * <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS\" target=\"_blank\">CORS overview on MDN</a>.\n\t *\n\t * @class SpriteSheet\n\t * @constructor\n\t * @param {Object} data An object describing the SpriteSheet data.\n\t * @extends EventDispatcher\n\t **/\n\tfunction SpriteSheet(data) {\n\t\tthis.EventDispatcher_constructor();\n\n\n\t\t// public properties:\n\t\t/**\n\t\t * Indicates whether all images are finished loading.\n\t\t * @property complete\n\t\t * @type Boolean\n\t\t * @readonly\n\t\t **/\n\t\tthis.complete = true;\n\n\t\t/**\n\t\t * Specifies the framerate to use by default for Sprite instances using the SpriteSheet. See the Sprite class\n\t\t * {{#crossLink \"Sprite/framerate:property\"}}{{/crossLink}} for more information.\n\t\t * @property framerate\n\t\t * @type Number\n\t\t **/\n\t\tthis.framerate = 0;\n\n\n\t\t// private properties:\n\t\t/**\n\t\t * @property _animations\n\t\t * @protected\n\t\t * @type Array\n\t\t **/\n\t\tthis._animations = null;\n\n\t\t/**\n\t\t * @property _frames\n\t\t * @protected\n\t\t * @type Array\n\t\t **/\n\t\tthis._frames = null;\n\n\t\t/**\n\t\t * @property _images\n\t\t * @protected\n\t\t * @type Array\n\t\t **/\n\t\tthis._images = null;\n\n\t\t/**\n\t\t * @property _data\n\t\t * @protected\n\t\t * @type Object\n\t\t **/\n\t\tthis._data = null;\n\n\t\t/**\n\t\t * @property _loadCount\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._loadCount = 0;\n\n\t\t// only used for simple frame defs:\n\t\t/**\n\t\t * @property _frameHeight\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._frameHeight = 0;\n\n\t\t/**\n\t\t * @property _frameWidth\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._frameWidth = 0;\n\n\t\t/**\n\t\t * @property _numFrames\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._numFrames = 0;\n\n\t\t/**\n\t\t * @property _regX\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._regX = 0;\n\n\t\t/**\n\t\t * @property _regY\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._regY = 0;\n\n\t\t/**\n\t\t * @property _spacing\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._spacing = 0;\n\n\t\t/**\n\t\t * @property _margin\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._margin = 0;\n\n\t\t// setup:\n\t\tthis._parseData(data);\n\t}\n\tvar p = createjs.extend(SpriteSheet, createjs.EventDispatcher);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n// events:\n\t/**\n\t * Dispatched when all images are loaded.  Note that this only fires if the images\n\t * were not fully loaded when the sprite sheet was initialized. You should check the complete property\n\t * to prior to adding a listener. Ex.\n\t *\n\t * \tvar sheet = new createjs.SpriteSheet(data);\n\t * \tif (!sheet.complete) {\n\t * \t\t// not preloaded, listen for the complete event:\n\t * \t\tsheet.addEventListener(\"complete\", handler);\n\t * \t}\n\t *\n\t * @event complete\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when getFrame is called with a valid frame index. This is primarily intended for use by {{#crossLink \"SpriteSheetBuilder\"}}{{/crossLink}}\n\t * when doing on-demand rendering.\n\t * @event getframe\n\t * @param {Number} index The frame index.\n\t * @param {Object} frame The frame object that getFrame will return.\n\t */\n\n\t/**\n\t * Dispatched when an image encounters an error. A SpriteSheet will dispatch an error event for each image that\n\t * encounters an error, and will still dispatch a {{#crossLink \"SpriteSheet/complete:event\"}}{{/crossLink}}\n\t * event once all images are finished processing, even if an error is encountered.\n\t * @event error\n\t * @param {String} src The source of the image that failed to load.\n\t * @since 0.8.2\n\t */\n\n\n// getter / setters:\n\t/**\n\t * Use the {{#crossLink \"SpriteSheet/animations:property\"}}{{/crossLink}} property instead.\n\t * @method getAnimations\n\t * @return {Array}\n\t * @deprecated\n\t **/\n\tp.getAnimations = function() {\n\t\treturn this._animations.slice();\n\t};\n\n\t/**\n\t * Returns an array of all available animation names available on this sprite sheet as strings.\n\t * @property animations\n\t * @type {Array}\n\t * @readonly\n\t **/\n\ttry {\n\t\tObject.defineProperties(p, {\n\t\t\tanimations: { get: p.getAnimations }\n\t\t});\n\t} catch (e) {}\n\n\n// public methods:\n\t/**\n\t * Returns the total number of frames in the specified animation, or in the whole sprite\n\t * sheet if the animation param is omitted. Returns 0 if the spritesheet relies on calculated frame counts, and\n\t * the images have not been fully loaded.\n\t * @method getNumFrames\n\t * @param {String} animation The name of the animation to get a frame count for.\n\t * @return {Number} The number of frames in the animation, or in the entire sprite sheet if the animation param is omitted.\n\t */\n\tp.getNumFrames = function(animation) {\n\t\tif (animation == null) {\n\t\t\treturn this._frames ? this._frames.length : this._numFrames || 0;\n\t\t} else {\n\t\t\tvar data = this._data[animation];\n\t\t\tif (data == null) { return 0; }\n\t\t\telse { return data.frames.length; }\n\t\t}\n\t};\n\n\t/**\n\t * Returns an object defining the specified animation. The returned object contains:<UL>\n\t * \t<li>frames: an array of the frame ids in the animation</li>\n\t * \t<li>speed: the playback speed for this animation</li>\n\t * \t<li>name: the name of the animation</li>\n\t * \t<li>next: the default animation to play next. If the animation loops, the name and next property will be the\n\t * \tsame.</li>\n\t * </UL>\n\t * @method getAnimation\n\t * @param {String} name The name of the animation to get.\n\t * @return {Object} a generic object with frames, speed, name, and next properties.\n\t **/\n\tp.getAnimation = function(name) {\n\t\treturn this._data[name];\n\t};\n\n\t/**\n\t * Returns an object specifying the image and source rect of the specified frame. The returned object has:<UL>\n\t * \t<li>an image property holding a reference to the image object in which the frame is found</li>\n\t * \t<li>a rect property containing a Rectangle instance which defines the boundaries for the frame within that\n\t * \timage.</li>\n\t * \t<li> A regX and regY property corresponding to the regX/Y values for the frame.\n\t * </UL>\n\t * @method getFrame\n\t * @param {Number} frameIndex The index of the frame.\n\t * @return {Object} a generic object with image and rect properties. Returns null if the frame does not exist.\n\t **/\n\tp.getFrame = function(frameIndex) {\n\t\tvar frame;\n\t\tif (this._frames && (frame=this._frames[frameIndex])) { return frame; }\n\t\treturn null;\n\t};\n\n\t/**\n\t * Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the specified frame relative\n\t * to the origin. For example, a 90 x 70 frame with a regX of 50 and a regY of 40 would return:\n\t *\n\t * \t[x=-50, y=-40, width=90, height=70]\n\t *\n\t * @method getFrameBounds\n\t * @param {Number} frameIndex The index of the frame.\n\t * @param {Rectangle} [rectangle] A Rectangle instance to copy the values into. By default a new instance is created.\n\t * @return {Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully loaded.\n\t **/\n\tp.getFrameBounds = function(frameIndex, rectangle) {\n\t\tvar frame = this.getFrame(frameIndex);\n\t\treturn frame ? (rectangle||new createjs.Rectangle()).setValues(-frame.regX, -frame.regY, frame.rect.width, frame.rect.height) : null;\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[SpriteSheet]\";\n\t};\n\n\t/**\n\t * SpriteSheet cannot be cloned. A SpriteSheet can be shared by multiple Sprite instances without cloning it.\n\t * @method clone\n\t **/\n\tp.clone = function() {\n\t\tthrow(\"SpriteSheet cannot be cloned.\")\n\t};\n\n// private methods:\n\t/**\n\t * @method _parseData\n\t * @param {Object} data An object describing the SpriteSheet data.\n\t * @protected\n\t **/\n\tp._parseData = function(data) {\n\t\tvar i,l,o,a;\n\t\tif (data == null) { return; }\n\n\t\tthis.framerate = data.framerate||0;\n\n\t\t// parse images:\n\t\tif (data.images && (l=data.images.length) > 0) {\n\t\t\ta = this._images = [];\n\t\t\tfor (i=0; i<l; i++) {\n\t\t\t\tvar img = data.images[i];\n\t\t\t\tif (typeof img == \"string\") {\n\t\t\t\t\tvar src = img;\n\t\t\t\t\timg = document.createElement(\"img\");\n\t\t\t\t\timg.src = src;\n\t\t\t\t}\n\t\t\t\ta.push(img);\n\t\t\t\tif (!img.getContext && !img.naturalWidth) {\n\t\t\t\t\tthis._loadCount++;\n\t\t\t\t\tthis.complete = false;\n\t\t\t\t\t(function(o, src) { img.onload = function() { o._handleImageLoad(src); } })(this, src);\n\t\t\t\t\t(function(o, src) { img.onerror = function() { o._handleImageError(src); } })(this, src);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// parse frames:\n\t\tif (data.frames == null) { // nothing\n\t\t} else if (Array.isArray(data.frames)) {\n\t\t\tthis._frames = [];\n\t\t\ta = data.frames;\n\t\t\tfor (i=0,l=a.length;i<l;i++) {\n\t\t\t\tvar arr = a[i];\n\t\t\t\tthis._frames.push({image:this._images[arr[4]?arr[4]:0], rect:new createjs.Rectangle(arr[0],arr[1],arr[2],arr[3]), regX:arr[5]||0, regY:arr[6]||0 });\n\t\t\t}\n\t\t} else {\n\t\t\to = data.frames;\n\t\t\tthis._frameWidth = o.width;\n\t\t\tthis._frameHeight = o.height;\n\t\t\tthis._regX = o.regX||0;\n\t\t\tthis._regY = o.regY||0;\n\t\t\tthis._spacing = o.spacing||0;\n\t\t\tthis._margin = o.margin||0;\n\t\t\tthis._numFrames = o.count;\n\t\t\tif (this._loadCount == 0) { this._calculateFrames(); }\n\t\t}\n\n\t\t// parse animations:\n\t\tthis._animations = [];\n\t\tif ((o=data.animations) != null) {\n\t\t\tthis._data = {};\n\t\t\tvar name;\n\t\t\tfor (name in o) {\n\t\t\t\tvar anim = {name:name};\n\t\t\t\tvar obj = o[name];\n\t\t\t\tif (typeof obj == \"number\") { // single frame\n\t\t\t\t\ta = anim.frames = [obj];\n\t\t\t\t} else if (Array.isArray(obj)) { // simple\n\t\t\t\t\tif (obj.length == 1) { anim.frames = [obj[0]]; }\n\t\t\t\t\telse {\n\t\t\t\t\t\tanim.speed = obj[3];\n\t\t\t\t\t\tanim.next = obj[2];\n\t\t\t\t\t\ta = anim.frames = [];\n\t\t\t\t\t\tfor (i=obj[0];i<=obj[1];i++) {\n\t\t\t\t\t\t\ta.push(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else { // complex\n\t\t\t\t\tanim.speed = obj.speed;\n\t\t\t\t\tanim.next = obj.next;\n\t\t\t\t\tvar frames = obj.frames;\n\t\t\t\t\ta = anim.frames = (typeof frames == \"number\") ? [frames] : frames.slice(0);\n\t\t\t\t}\n\t\t\t\tif (anim.next === true || anim.next === undefined) { anim.next = name; } // loop\n\t\t\t\tif (anim.next === false || (a.length < 2 && anim.next == name)) { anim.next = null; } // stop\n\t\t\t\tif (!anim.speed) { anim.speed = 1; }\n\t\t\t\tthis._animations.push(name);\n\t\t\t\tthis._data[name] = anim;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @method _handleImageLoad\n\t * @protected\n\t **/\n\tp._handleImageLoad = function(src) {\n\t\tif (--this._loadCount == 0) {\n\t\t\tthis._calculateFrames();\n\t\t\tthis.complete = true;\n\t\t\tthis.dispatchEvent(\"complete\");\n\t\t}\n\t};\n\n\t/**\n\t * @method _handleImageError\n\t * @protected\n\t */\n\tp._handleImageError = function (src) {\n\t\tvar errorEvent = new createjs.Event(\"error\");\n\t\terrorEvent.src = src;\n\t\tthis.dispatchEvent(errorEvent);\n\n\t\t// Complete is still dispatched.\n\t\tif (--this._loadCount == 0) {\n\t\t\tthis.dispatchEvent(\"complete\");\n\t\t}\n\t};\n\n\t/**\n\t * @method _calculateFrames\n\t * @protected\n\t **/\n\tp._calculateFrames = function() {\n\t\tif (this._frames || this._frameWidth == 0) { return; }\n\n\t\tthis._frames = [];\n\n\t\tvar maxFrames = this._numFrames || 100000; // if we go over this, something is wrong.\n\t\tvar frameCount = 0, frameWidth = this._frameWidth, frameHeight = this._frameHeight;\n\t\tvar spacing = this._spacing, margin = this._margin;\n\t\t\n\t\timgLoop:\n\t\tfor (var i=0, imgs=this._images; i<imgs.length; i++) {\n\t\t\tvar img = imgs[i], imgW = img.width, imgH = img.height;\n\n\t\t\tvar y = margin;\n\t\t\twhile (y <= imgH-margin-frameHeight) {\n\t\t\t\tvar x = margin;\n\t\t\t\twhile (x <= imgW-margin-frameWidth) {\n\t\t\t\t\tif (frameCount >= maxFrames) { break imgLoop; }\n\t\t\t\t\tframeCount++;\n\t\t\t\t\tthis._frames.push({\n\t\t\t\t\t\t\timage: img,\n\t\t\t\t\t\t\trect: new createjs.Rectangle(x, y, frameWidth, frameHeight),\n\t\t\t\t\t\t\tregX: this._regX,\n\t\t\t\t\t\t\tregY: this._regY\n\t\t\t\t\t\t});\n\t\t\t\t\tx += frameWidth+spacing;\n\t\t\t\t}\n\t\t\t\ty += frameHeight+spacing;\n\t\t\t}\n\t\t}\n\t\tthis._numFrames = frameCount;\n\t};\n\n\n\tcreatejs.SpriteSheet = createjs.promote(SpriteSheet, \"EventDispatcher\");\n}());\n\n//##############################################################################\n// Graphics.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * The Graphics class exposes an easy to use API for generating vector drawing instructions and drawing them to a\n\t * specified context. Note that you can use Graphics without any dependency on the EaselJS framework by calling {{#crossLink \"Graphics/draw\"}}{{/crossLink}}\n\t * directly, or it can be used with the {{#crossLink \"Shape\"}}{{/crossLink}} object to draw vector graphics within the\n\t * context of an EaselJS display list.\n\t *\n\t * There are two approaches to working with Graphics object: calling methods on a Graphics instance (the \"Graphics API\"), or\n\t * instantiating Graphics command objects and adding them to the graphics queue via {{#crossLink \"Graphics/append\"}}{{/crossLink}}.\n\t * The former abstracts the latter, simplifying beginning and ending paths, fills, and strokes.\n\t *\n\t *      var g = new createjs.Graphics();\n\t *      g.setStrokeStyle(1);\n\t *      g.beginStroke(\"#000000\");\n\t *      g.beginFill(\"red\");\n\t *      g.drawCircle(0,0,30);\n\t *\n\t * All drawing methods in Graphics return the Graphics instance, so they can be chained together. For example,\n\t * the following line of code would generate the instructions to draw a rectangle with a red stroke and blue fill:\n\t *\n\t *      myGraphics.beginStroke(\"red\").beginFill(\"blue\").drawRect(20, 20, 100, 50);\n\t *\n\t * Each graphics API call generates a command object (see below). The last command to be created can be accessed via\n\t * {{#crossLink \"Graphics/command:property\"}}{{/crossLink}}:\n\t *\n\t *      var fillCommand = myGraphics.beginFill(\"red\").command;\n\t *      // ... later, update the fill style/color:\n\t *      fillCommand.style = \"blue\";\n\t *      // or change it to a bitmap fill:\n\t *      fillCommand.bitmap(myImage);\n\t *\n\t * For more direct control of rendering, you can instantiate and append command objects to the graphics queue directly. In this case, you\n\t * need to manage path creation manually, and ensure that fill/stroke is applied to a defined path:\n\t *\n\t *      // start a new path. Graphics.beginCmd is a reusable BeginPath instance:\n\t *      myGraphics.append(createjs.Graphics.beginCmd);\n\t *      // we need to define the path before applying the fill:\n\t *      var circle = new createjs.Graphics.Circle(0,0,30);\n\t *      myGraphics.append(circle);\n\t *      // fill the path we just defined:\n\t *      var fill = new createjs.Graphics.Fill(\"red\");\n\t *      myGraphics.append(fill);\n\t *\n\t * These approaches can be used together, for example to insert a custom command:\n\t *\n\t *      myGraphics.beginFill(\"red\");\n\t *      var customCommand = new CustomSpiralCommand(etc);\n\t *      myGraphics.append(customCommand);\n\t *      myGraphics.beginFill(\"blue\");\n\t *      myGraphics.drawCircle(0, 0, 30);\n\t *\n\t * See {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more info on creating custom commands.\n\t *\n\t * <h4>Tiny API</h4>\n\t * The Graphics class also includes a \"tiny API\", which is one or two-letter methods that are shortcuts for all of the\n\t * Graphics methods. These methods are great for creating compact instructions, and is used by the Toolkit for CreateJS\n\t * to generate readable code. All tiny methods are marked as protected, so you can view them by enabling protected\n\t * descriptions in the docs.\n\t *\n\t * <table>\n\t *     <tr><td><b>Tiny</b></td><td><b>Method</b></td><td><b>Tiny</b></td><td><b>Method</b></td></tr>\n\t *     <tr><td>mt</td><td>{{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} </td>\n\t *     <td>lt</td> <td>{{#crossLink \"Graphics/lineTo\"}}{{/crossLink}}</td></tr>\n\t *     <tr><td>a/at</td><td>{{#crossLink \"Graphics/arc\"}}{{/crossLink}} / {{#crossLink \"Graphics/arcTo\"}}{{/crossLink}} </td>\n\t *     <td>bt</td><td>{{#crossLink \"Graphics/bezierCurveTo\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>qt</td><td>{{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} (also curveTo)</td>\n\t *     <td>r</td><td>{{#crossLink \"Graphics/rect\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>cp</td><td>{{#crossLink \"Graphics/closePath\"}}{{/crossLink}} </td>\n\t *     <td>c</td><td>{{#crossLink \"Graphics/clear\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>f</td><td>{{#crossLink \"Graphics/beginFill\"}}{{/crossLink}} </td>\n\t *     <td>lf</td><td>{{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>rf</td><td>{{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} </td>\n\t *     <td>bf</td><td>{{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>ef</td><td>{{#crossLink \"Graphics/endFill\"}}{{/crossLink}} </td>\n\t *     <td>ss / sd</td><td>{{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} / {{#crossLink \"Graphics/setStrokeDash\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>s</td><td>{{#crossLink \"Graphics/beginStroke\"}}{{/crossLink}} </td>\n\t *     <td>ls</td><td>{{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>rs</td><td>{{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} </td>\n\t *     <td>bs</td><td>{{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>es</td><td>{{#crossLink \"Graphics/endStroke\"}}{{/crossLink}} </td>\n\t *     <td>dr</td><td>{{#crossLink \"Graphics/drawRect\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>rr</td><td>{{#crossLink \"Graphics/drawRoundRect\"}}{{/crossLink}} </td>\n\t *     <td>rc</td><td>{{#crossLink \"Graphics/drawRoundRectComplex\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>dc</td><td>{{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}} </td>\n\t *     <td>de</td><td>{{#crossLink \"Graphics/drawEllipse\"}}{{/crossLink}} </td></tr>\n\t *     <tr><td>dp</td><td>{{#crossLink \"Graphics/drawPolyStar\"}}{{/crossLink}} </td>\n\t *     <td>p</td><td>{{#crossLink \"Graphics/decodePath\"}}{{/crossLink}} </td></tr>\n\t * </table>\n\t *\n\t * Here is the above example, using the tiny API instead.\n\t *\n\t *      myGraphics.s(\"red\").f(\"blue\").r(20, 20, 100, 50);\n\t *\n\t * @class Graphics\n\t * @constructor\n\t **/\n\tfunction Graphics() {\n\n\n\t// public properties\n\t\t/**\n\t\t * Holds a reference to the last command that was created or appended. For example, you could retain a reference\n\t\t * to a Fill command in order to dynamically update the color later by using:\n\t\t *\n\t\t * \t\tvar myFill = myGraphics.beginFill(\"red\").command;\n\t\t * \t\t// update color later:\n\t\t * \t\tmyFill.style = \"yellow\";\n\t\t *\n\t\t * @property command\n\t\t * @type Object\n\t\t **/\n\t\tthis.command = null;\n\n\n\t// private properties\n\t\t/**\n\t\t * @property _stroke\n\t\t * @protected\n\t\t * @type {Stroke}\n\t\t **/\n\t\tthis._stroke = null;\n\n\t\t/**\n\t\t * @property _strokeStyle\n\t\t * @protected\n\t\t * @type {StrokeStyle}\n\t\t **/\n\t\tthis._strokeStyle = null;\n\t\t\n\t\t/**\n\t\t * @property _oldStrokeStyle\n\t\t * @protected\n\t\t * @type {StrokeStyle}\n\t\t **/\n\t\tthis._oldStrokeStyle = null;\n\t\t\n\t\t/**\n\t\t * @property _strokeDash\n\t\t * @protected\n\t\t * @type {StrokeDash}\n\t\t **/\n\t\tthis._strokeDash = null;\n\t\t\n\t\t/**\n\t\t * @property _oldStrokeDash\n\t\t * @protected\n\t\t * @type {StrokeDash}\n\t\t **/\n\t\tthis._oldStrokeDash = null;\n\n\t\t/**\n\t\t * @property _strokeIgnoreScale\n\t\t * @protected\n\t\t * @type Boolean\n\t\t **/\n\t\tthis._strokeIgnoreScale = false;\n\n\t\t/**\n\t\t * @property _fill\n\t\t * @protected\n\t\t * @type {Fill}\n\t\t **/\n\t\tthis._fill = null;\n\n\t\t/**\n\t\t * @property _instructions\n\t\t * @protected\n\t\t * @type {Array}\n\t\t **/\n\t\tthis._instructions = [];\n\n\t\t/**\n\t\t * Indicates the last instruction index that was committed.\n\t\t * @property _commitIndex\n\t\t * @protected\n\t\t * @type {Number}\n\t\t **/\n\t\tthis._commitIndex = 0;\n\n\t\t/**\n\t\t * Uncommitted instructions.\n\t\t * @property _activeInstructions\n\t\t * @protected\n\t\t * @type {Array}\n\t\t **/\n\t\tthis._activeInstructions = [];\n\n\t\t/**\n\t\t * This indicates that there have been changes to the activeInstruction list since the last updateInstructions call.\n\t\t * @property _dirty\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t **/\n\t\tthis._dirty = false;\n\n\t\t/**\n\t\t * Index to draw from if a store operation has happened.\n\t\t * @property _storeIndex\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis._storeIndex = 0;\n\n\t// setup:\n\t\tthis.clear();\n\t}\n\tvar p = Graphics.prototype;\n\tvar G = Graphics; // shortcut\n\n\t/**\n\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t * for details.\n\t *\n\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t *\n\t * @method initialize\n\t * @protected\n\t * @deprecated\n\t */\n\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\n\n// static public methods:\n\t/**\n\t * Returns a CSS compatible color string based on the specified RGB numeric color values in the format\n\t * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\". For example,\n\t *\n\t *      createjs.Graphics.getRGB(50, 100, 150, 0.5);\n\t *      // Returns \"rgba(50,100,150,0.5)\"\n\t *\n\t * It also supports passing a single hex color value as the first param, and an optional alpha value as the second\n\t * param. For example,\n\t *\n\t *      createjs.Graphics.getRGB(0xFF00FF, 0.2);\n\t *      // Returns \"rgba(255,0,255,0.2)\"\n\t *\n\t * @method getRGB\n\t * @static\n\t * @param {Number} r The red component for the color, between 0 and 0xFF (255).\n\t * @param {Number} g The green component for the color, between 0 and 0xFF (255).\n\t * @param {Number} b The blue component for the color, between 0 and 0xFF (255).\n\t * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n\t * @return {String} A CSS compatible color string based on the specified RGB numeric color values in the format\n\t * \"rgba(255,255,255,1.0)\", or if alpha is null then in the format \"rgb(255,255,255)\".\n\t **/\n\tGraphics.getRGB = function(r, g, b, alpha) {\n\t\tif (r != null && b == null) {\n\t\t\talpha = g;\n\t\t\tb = r&0xFF;\n\t\t\tg = r>>8&0xFF;\n\t\t\tr = r>>16&0xFF;\n\t\t}\n\t\tif (alpha == null) {\n\t\t\treturn \"rgb(\"+r+\",\"+g+\",\"+b+\")\";\n\t\t} else {\n\t\t\treturn \"rgba(\"+r+\",\"+g+\",\"+b+\",\"+alpha+\")\";\n\t\t}\n\t};\n\n\t/**\n\t * Returns a CSS compatible color string based on the specified HSL numeric color values in the format \"hsla(360,100,100,1.0)\",\n\t * or if alpha is null then in the format \"hsl(360,100,100)\".\n\t *\n\t *      createjs.Graphics.getHSL(150, 100, 70);\n\t *      // Returns \"hsl(150,100,70)\"\n\t *\n\t * @method getHSL\n\t * @static\n\t * @param {Number} hue The hue component for the color, between 0 and 360.\n\t * @param {Number} saturation The saturation component for the color, between 0 and 100.\n\t * @param {Number} lightness The lightness component for the color, between 0 and 100.\n\t * @param {Number} [alpha] The alpha component for the color where 0 is fully transparent and 1 is fully opaque.\n\t * @return {String} A CSS compatible color string based on the specified HSL numeric color values in the format\n\t * \"hsla(360,100,100,1.0)\", or if alpha is null then in the format \"hsl(360,100,100)\".\n\t **/\n\tGraphics.getHSL = function(hue, saturation, lightness, alpha) {\n\t\tif (alpha == null) {\n\t\t\treturn \"hsl(\"+(hue%360)+\",\"+saturation+\"%,\"+lightness+\"%)\";\n\t\t} else {\n\t\t\treturn \"hsla(\"+(hue%360)+\",\"+saturation+\"%,\"+lightness+\"%,\"+alpha+\")\";\n\t\t}\n\t};\n\n\n// static properties:\n\t/**\n\t * A reusable instance of {{#crossLink \"Graphics/BeginPath\"}}{{/crossLink}} to avoid\n\t * unnecessary instantiation.\n\t * @property beginCmd\n\t * @type {Graphics.BeginPath}\n\t * @static\n\t **/\n\t // defined at the bottom of this file.\n\n\t/**\n\t * Map of Base64 characters to values. Used by {{#crossLink \"Graphics/decodePath\"}}{{/crossLink}}.\n\t * @property BASE_64\n\t * @static\n\t * @final\n\t * @readonly\n\t * @type {Object}\n\t **/\n\tGraphics.BASE_64 = {\"A\":0,\"B\":1,\"C\":2,\"D\":3,\"E\":4,\"F\":5,\"G\":6,\"H\":7,\"I\":8,\"J\":9,\"K\":10,\"L\":11,\"M\":12,\"N\":13,\"O\":14,\"P\":15,\"Q\":16,\"R\":17,\"S\":18,\"T\":19,\"U\":20,\"V\":21,\"W\":22,\"X\":23,\"Y\":24,\"Z\":25,\"a\":26,\"b\":27,\"c\":28,\"d\":29,\"e\":30,\"f\":31,\"g\":32,\"h\":33,\"i\":34,\"j\":35,\"k\":36,\"l\":37,\"m\":38,\"n\":39,\"o\":40,\"p\":41,\"q\":42,\"r\":43,\"s\":44,\"t\":45,\"u\":46,\"v\":47,\"w\":48,\"x\":49,\"y\":50,\"z\":51,\"0\":52,\"1\":53,\"2\":54,\"3\":55,\"4\":56,\"5\":57,\"6\":58,\"7\":59,\"8\":60,\"9\":61,\"+\":62,\"/\":63};\n\n\t/**\n\t * Maps numeric values for the caps parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\n\t * corresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n\t * \"butt\", 1 to \"round\", and 2 to \"square\".\n\t * For example, to set the line caps to \"square\":\n\t *\n\t *      myGraphics.ss(16, 2);\n\t *\n\t * @property STROKE_CAPS_MAP\n\t * @static\n\t * @final\n\t * @readonly\n\t * @type {Array}\n\t **/\n\tGraphics.STROKE_CAPS_MAP = [\"butt\", \"round\", \"square\"];\n\n\t/**\n\t * Maps numeric values for the joints parameter of {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} to\n\t * corresponding string values. This is primarily for use with the tiny API. The mappings are as follows: 0 to\n\t * \"miter\", 1 to \"round\", and 2 to \"bevel\".\n\t * For example, to set the line joints to \"bevel\":\n\t *\n\t *      myGraphics.ss(16, 0, 2);\n\t *\n\t * @property STROKE_JOINTS_MAP\n\t * @static\n\t * @final\n\t * @readonly\n\t * @type {Array}\n\t **/\n\tGraphics.STROKE_JOINTS_MAP = [\"miter\", \"round\", \"bevel\"];\n\n\t/**\n\t * @property _ctx\n\t * @static\n\t * @protected\n\t * @type {CanvasRenderingContext2D}\n\t **/\n\tvar canvas = (createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"));\n\tif (canvas.getContext) {\n\t\tGraphics._ctx = canvas.getContext(\"2d\");\n\t\tcanvas.width = canvas.height = 1;\n\t}\n\n\n// getter / setters:\n\t/**\n\t * Use the {{#crossLink \"Graphics/instructions:property\"}}{{/crossLink}} property instead.\n\t * @method getInstructions\n\t * @return {Array}\n\t * @deprecated\n\t **/\n\tp.getInstructions = function() {\n\t\tthis._updateInstructions();\n\t\treturn this._instructions;\n\t};\n\n\t/**\n\t * Returns the graphics instructions array. Each entry is a graphics command object (ex. Graphics.Fill, Graphics.Rect)\n\t * Modifying the returned array directly is not recommended, and is likely to result in unexpected behaviour.\n\t *\n\t * This property is mainly intended for introspection of the instructions (ex. for graphics export).\n\t * @property instructions\n\t * @type {Array}\n\t * @readonly\n\t **/\n\ttry {\n\t\tObject.defineProperties(p, {\n\t\t\tinstructions: { get: p.getInstructions }\n\t\t});\n\t} catch (e) {}\n\n\n// public methods:\n\t/**\n\t * Returns true if this Graphics instance has no drawing commands.\n\t * @method isEmpty\n\t * @return {Boolean} Returns true if this Graphics instance has no drawing commands.\n\t **/\n\tp.isEmpty = function() {\n\t\treturn !(this._instructions.length || this._activeInstructions.length);\n\t};\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Object} data Optional data that is passed to graphics command exec methods. When called from a Shape instance, the shape passes itself as the data parameter. This can be used by custom graphic commands to insert contextual data.\n\t **/\n\tp.draw = function(ctx, data) {\n\t\tthis._updateInstructions();\n\t\tvar instr = this._instructions;\n\t\tfor (var i=this._storeIndex, l=instr.length; i<l; i++) {\n\t\t\tinstr[i].exec(ctx, data);\n\t\t}\n\t};\n\n\t/**\n\t * Draws only the path described for this Graphics instance, skipping any non-path instructions, including fill and\n\t * stroke descriptions. Used for <code>DisplayObject.mask</code> to draw the clipping path, for example.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method drawAsPath\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t **/\n\tp.drawAsPath = function(ctx) {\n\t\tthis._updateInstructions();\n\t\tvar instr, instrs = this._instructions;\n\t\tfor (var i=this._storeIndex, l=instrs.length; i<l; i++) {\n\t\t\t// the first command is always a beginPath command.\n\t\t\tif ((instr = instrs[i]).path !== false) { instr.exec(ctx); }\n\t\t}\n\t};\n\n\n// public methods that map directly to context 2D calls:\n\t/**\n\t * Moves the drawing point to the specified position. A tiny API method \"mt\" also exists.\n\t * @method moveTo\n\t * @param {Number} x The x coordinate the drawing point should move to.\n\t * @param {Number} y The y coordinate the drawing point should move to.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls).\n\t * @chainable\n\t **/\n\tp.moveTo = function(x, y) {\n\t\treturn this.append(new G.MoveTo(x,y), true);\n\t};\n\n\t/**\n\t * Draws a line from the current drawing point to the specified position, which become the new current drawing\n\t * point. Note that you *must* call {{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} before the first `lineTo()`.\n\t * A tiny API method \"lt\" also exists.\n\t *\n\t * For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#complex-shapes-(paths)\">\n\t * whatwg spec</a>.\n\t * @method lineTo\n\t * @param {Number} x The x coordinate the drawing point should draw to.\n\t * @param {Number} y The y coordinate the drawing point should draw to.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.lineTo = function(x, y) {\n\t\treturn this.append(new G.LineTo(x,y));\n\t};\n\n\t/**\n\t * Draws an arc with the specified control points and radius.  For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arcto\">\n\t * whatwg spec</a>. A tiny API method \"at\" also exists.\n\t * @method arcTo\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} x2\n\t * @param {Number} y2\n\t * @param {Number} radius\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.arcTo = function(x1, y1, x2, y2, radius) {\n\t\treturn this.append(new G.ArcTo(x1, y1, x2, y2, radius));\n\t};\n\n\t/**\n\t * Draws an arc defined by the radius, startAngle and endAngle arguments, centered at the position (x, y). For\n\t * example, to draw a full circle with a radius of 20 centered at (100, 100):\n\t *\n\t *      arc(100, 100, 20, 0, Math.PI*2);\n\t *\n\t * For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-arc\">whatwg spec</a>.\n\t * A tiny API method \"a\" also exists.\n\t * @method arc\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} startAngle Measured in radians.\n\t * @param {Number} endAngle Measured in radians.\n\t * @param {Boolean} anticlockwise\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.arc = function(x, y, radius, startAngle, endAngle, anticlockwise) {\n\t\treturn this.append(new G.Arc(x, y, radius, startAngle, endAngle, anticlockwise));\n\t};\n\n\t/**\n\t * Draws a quadratic curve from the current drawing point to (x, y) using the control point (cpx, cpy). For detailed\n\t * information, read the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-quadraticcurveto\">\n\t * whatwg spec</a>. A tiny API method \"qt\" also exists.\n\t * @method quadraticCurveTo\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.quadraticCurveTo = function(cpx, cpy, x, y) {\n\t\treturn this.append(new G.QuadraticCurveTo(cpx, cpy, x, y));\n\t};\n\n\t/**\n\t * Draws a bezier curve from the current drawing point to (x, y) using the control points (cp1x, cp1y) and (cp2x,\n\t * cp2y). For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-beziercurveto\">\n\t * whatwg spec</a>. A tiny API method \"bt\" also exists.\n\t * @method bezierCurveTo\n\t * @param {Number} cp1x\n\t * @param {Number} cp1y\n\t * @param {Number} cp2x\n\t * @param {Number} cp2y\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.bezierCurveTo = function(cp1x, cp1y, cp2x, cp2y, x, y) {\n\t\treturn this.append(new G.BezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y));\n\t};\n\n\t/**\n\t * Draws a rectangle at (x, y) with the specified width and height using the current fill and/or stroke.\n\t * For detailed information, read the\n\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-rect\">\n\t * whatwg spec</a>. A tiny API method \"r\" also exists.\n\t * @method rect\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w Width of the rectangle\n\t * @param {Number} h Height of the rectangle\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.rect = function(x, y, w, h) {\n\t\treturn this.append(new G.Rect(x, y, w, h));\n\t};\n\n\t/**\n\t * Closes the current path, effectively drawing a line from the current drawing point to the first drawing point specified\n\t * since the fill or stroke was last set. A tiny API method \"cp\" also exists.\n\t * @method closePath\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.closePath = function() {\n\t\treturn this._activeInstructions.length ? this.append(new G.ClosePath()) : this;\n\t};\n\n\n// public methods that roughly map to Adobe Flash/Animate graphics APIs:\n\t/**\n\t * Clears all drawing instructions, effectively resetting this Graphics instance. Any line and fill styles will need\n\t * to be redefined to draw shapes following a clear call. A tiny API method \"c\" also exists.\n\t * @method clear\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.clear = function() {\n\t\tthis._instructions.length = this._activeInstructions.length = this._commitIndex = 0;\n\t\tthis._strokeStyle = this._oldStrokeStyle = this._stroke = this._fill = this._strokeDash = this._oldStrokeDash = null;\n\t\tthis._dirty = this._strokeIgnoreScale = false;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Begins a fill with the specified color. This ends the current sub-path. A tiny API method \"f\" also exists.\n\t * @method beginFill\n\t * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no fill.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.beginFill = function(color) {\n\t\treturn this._setFill(color ? new G.Fill(color) : null);\n\t};\n\n\t/**\n\t * Begins a linear gradient fill defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\n\t * example, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\n\t * square to display it:\n\t *\n\t *      myGraphics.beginLinearGradientFill([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n\t *\n\t * A tiny API method \"lf\" also exists.\n\t * @method beginLinearGradientFill\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n\t * drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n\t * the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.beginLinearGradientFill = function(colors, ratios, x0, y0, x1, y1) {\n\t\treturn this._setFill(new G.Fill().linearGradient(colors, ratios, x0, y0, x1, y1));\n\t};\n\n\t/**\n\t * Begins a radial gradient fill. This ends the current sub-path. For example, the following code defines a red to\n\t * blue radial gradient centered at (100, 100), with a radius of 50, and draws a circle to display it:\n\t *\n\t *      myGraphics.beginRadialGradientFill([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50).drawCircle(100, 100, 50);\n\t *\n\t * A tiny API method \"rf\" also exists.\n\t * @method beginRadialGradientFill\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.beginRadialGradientFill = function(colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\treturn this._setFill(new G.Fill().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n\t};\n\n\t/**\n\t * Begins a pattern fill using the specified image. This ends the current sub-path. A tiny API method \"bf\" also\n\t * exists.\n\t * @method beginBitmapFill\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n\t * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n\t * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n\t * @param {Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n\t * will be applied relative to the parent transform.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.beginBitmapFill = function(image, repetition, matrix) {\n\t\treturn this._setFill(new G.Fill(null,matrix).bitmap(image, repetition));\n\t};\n\n\t/**\n\t * Ends the current sub-path, and begins a new one with no fill. Functionally identical to <code>beginFill(null)</code>.\n\t * A tiny API method \"ef\" also exists.\n\t * @method endFill\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.endFill = function() {\n\t\treturn this.beginFill();\n\t};\n\n\t/**\n\t * Sets the stroke style. Like all drawing methods, this can be chained, so you can define\n\t * the stroke style and color in a single line of code like so:\n\t *\n\t * \tmyGraphics.setStrokeStyle(8,\"round\").beginStroke(\"#F00\");\n\t *\n\t * A tiny API method \"ss\" also exists.\n\t * @method setStrokeStyle\n\t * @param {Number} thickness The width of the stroke.\n\t * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n\t * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n\t * the tiny API.\n\t * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n\t * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n\t * for use with the tiny API.\n\t * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n\t * controls at what point a mitered joint will be clipped.\n\t * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n\t * of active transformations.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.setStrokeStyle = function(thickness, caps, joints, miterLimit, ignoreScale) {\n\t\tthis._updateInstructions(true);\n\t\tthis._strokeStyle = this.command = new G.StrokeStyle(thickness, caps, joints, miterLimit, ignoreScale);\n\n\t\t// ignoreScale lives on Stroke, not StrokeStyle, so we do a little trickery:\n\t\tif (this._stroke) { this._stroke.ignoreScale = ignoreScale; }\n\t\tthis._strokeIgnoreScale = ignoreScale;\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Sets or clears the stroke dash pattern.\n\t *\n\t * \tmyGraphics.setStrokeDash([20, 10], 0);\n\t *\n\t * A tiny API method `sd` also exists.\n\t * @method setStrokeDash\n\t * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n\t * For example, `[20,10]` would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n\t * Passing null or an empty array will clear the existing stroke dash.\n\t * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.setStrokeDash = function(segments, offset) {\n\t\tthis._updateInstructions(true);\n\t\tthis._strokeDash = this.command = new G.StrokeDash(segments, offset);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Begins a stroke with the specified color. This ends the current sub-path. A tiny API method \"s\" also exists.\n\t * @method beginStroke\n\t * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no stroke.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.beginStroke = function(color) {\n\t\treturn this._setStroke(color ? new G.Stroke(color) : null);\n\t};\n\n\t/**\n\t * Begins a linear gradient stroke defined by the line (x0, y0) to (x1, y1). This ends the current sub-path. For\n\t * example, the following code defines a black to white vertical gradient ranging from 20px to 120px, and draws a\n\t * square to display it:\n\t *\n\t *      myGraphics.setStrokeStyle(10).\n\t *          beginLinearGradientStroke([\"#000\",\"#FFF\"], [0, 1], 0, 20, 0, 120).drawRect(20, 20, 120, 120);\n\t *\n\t * A tiny API method \"ls\" also exists.\n\t * @method beginLinearGradientStroke\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.beginLinearGradientStroke = function(colors, ratios, x0, y0, x1, y1) {\n\t\treturn this._setStroke(new G.Stroke().linearGradient(colors, ratios, x0, y0, x1, y1));\n\t};\n\n\t/**\n\t * Begins a radial gradient stroke. This ends the current sub-path. For example, the following code defines a red to\n\t * blue radial gradient centered at (100, 100), with a radius of 50, and draws a rectangle to display it:\n\t *\n\t *      myGraphics.setStrokeStyle(10)\n\t *          .beginRadialGradientStroke([\"#F00\",\"#00F\"], [0, 1], 100, 100, 0, 100, 100, 50)\n\t *          .drawRect(50, 90, 150, 110);\n\t *\n\t * A tiny API method \"rs\" also exists.\n\t * @method beginRadialGradientStroke\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n\t * to 100%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.beginRadialGradientStroke = function(colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\treturn this._setStroke(new G.Stroke().radialGradient(colors, ratios, x0, y0, r0, x1, y1, r1));\n\t};\n\n\t/**\n\t * Begins a pattern fill using the specified image. This ends the current sub-path. Note that unlike bitmap fills,\n\t * strokes do not currently support a matrix parameter due to limitations in the canvas API. A tiny API method \"bs\"\n\t * also exists.\n\t * @method beginBitmapStroke\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern. Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} [repetition=repeat] Optional. Indicates whether to repeat the image in the fill area. One of\n\t * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.beginBitmapStroke = function(image, repetition) {\n\t\t// NOTE: matrix is not supported for stroke because transforms on strokes also affect the drawn stroke width.\n\t\treturn this._setStroke(new G.Stroke().bitmap(image, repetition));\n\t};\n\n\t/**\n\t * Ends the current sub-path, and begins a new one with no stroke. Functionally identical to <code>beginStroke(null)</code>.\n\t * A tiny API method \"es\" also exists.\n\t * @method endStroke\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.endStroke = function() {\n\t\treturn this.beginStroke();\n\t};\n\n\t/**\n\t * Maps the familiar ActionScript <code>curveTo()</code> method to the functionally similar {{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}}\n\t * method.\n\t * @method curveTo\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.curveTo = p.quadraticCurveTo;\n\n\t/**\n\t *\n\t * Maps the familiar ActionScript <code>drawRect()</code> method to the functionally similar {{#crossLink \"Graphics/rect\"}}{{/crossLink}}\n\t * method.\n\t * @method drawRect\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w Width of the rectangle\n\t * @param {Number} h Height of the rectangle\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.drawRect = p.rect;\n\n\t/**\n\t * Draws a rounded rectangle with all corners with the specified radius.\n\t * @method drawRoundRect\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t * @param {Number} radius Corner radius.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.drawRoundRect = function(x, y, w, h, radius) {\n\t\treturn this.drawRoundRectComplex(x, y, w, h, radius, radius, radius, radius);\n\t};\n\n\t/**\n\t * Draws a rounded rectangle with different corner radii. Supports positive and negative corner radii. A tiny API\n\t * method \"rc\" also exists.\n\t * @method drawRoundRectComplex\n\t * @param {Number} x The horizontal coordinate to draw the round rect.\n\t * @param {Number} y The vertical coordinate to draw the round rect.\n\t * @param {Number} w The width of the round rect.\n\t * @param {Number} h The height of the round rect.\n\t * @param {Number} radiusTL Top left corner radius.\n\t * @param {Number} radiusTR Top right corner radius.\n\t * @param {Number} radiusBR Bottom right corner radius.\n\t * @param {Number} radiusBL Bottom left corner radius.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.drawRoundRectComplex = function(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n\t\treturn this.append(new G.RoundRect(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL));\n\t};\n\n\t/**\n\t * Draws a circle with the specified radius at (x, y).\n\t *\n\t *      var g = new createjs.Graphics();\n\t *\t    g.setStrokeStyle(1);\n\t *\t    g.beginStroke(createjs.Graphics.getRGB(0,0,0));\n\t *\t    g.beginFill(createjs.Graphics.getRGB(255,0,0));\n\t *\t    g.drawCircle(0,0,3);\n\t *\n\t *\t    var s = new createjs.Shape(g);\n\t *\t\ts.x = 100;\n\t *\t\ts.y = 100;\n\t *\n\t *\t    stage.addChild(s);\n\t *\t    stage.update();\n\t *\n\t * A tiny API method \"dc\" also exists.\n\t * @method drawCircle\n\t * @param {Number} x x coordinate center point of circle.\n\t * @param {Number} y y coordinate center point of circle.\n\t * @param {Number} radius Radius of circle.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.drawCircle = function(x, y, radius) {\n\t\treturn this.append(new G.Circle(x, y, radius));\n\t};\n\n\t/**\n\t * Draws an ellipse (oval) with a specified width (w) and height (h). Similar to {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}},\n\t * except the width and height can be different. A tiny API method \"de\" also exists.\n\t * @method drawEllipse\n\t * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t * which draws from center.\n\t * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t * which draws from the center.\n\t * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n\t * number.\n\t * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.drawEllipse = function(x, y, w, h) {\n\t\treturn this.append(new G.Ellipse(x, y, w, h));\n\t};\n\n\t/**\n\t * Draws a star if pointSize is greater than 0, or a regular polygon if pointSize is 0 with the specified number of\n\t * points. For example, the following code will draw a familiar 5 pointed star shape centered at 100, 100 and with a\n\t * radius of 50:\n\t *\n\t *      myGraphics.beginFill(\"#FF0\").drawPolyStar(100, 100, 50, 5, 0.6, -90);\n\t *      // Note: -90 makes the first point vertical\n\t *\n\t * A tiny API method \"dp\" also exists.\n\t *\n\t * @method drawPolyStar\n\t * @param {Number} x Position of the center of the shape.\n\t * @param {Number} y Position of the center of the shape.\n\t * @param {Number} radius The outer radius of the shape.\n\t * @param {Number} sides The number of points on the star or sides on the polygon.\n\t * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n\t * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n\t * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n\t * directly to the right of the center.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.drawPolyStar = function(x, y, radius, sides, pointSize, angle) {\n\t\treturn this.append(new G.PolyStar(x, y, radius, sides, pointSize, angle));\n\t};\n\n\t// TODO: deprecated.\n\t/**\n\t * Removed in favour of using custom command objects with {{#crossLink \"Graphics/append\"}}{{/crossLink}}.\n\t * @method inject\n\t * @deprecated\n\t **/\n\n\t/**\n\t * Appends a graphics command object to the graphics queue. Command objects expose an \"exec\" method\n\t * that accepts two parameters: the Context2D to operate on, and an arbitrary data object passed into\n\t * {{#crossLink \"Graphics/draw\"}}{{/crossLink}}. The latter will usually be the Shape instance that called draw.\n\t *\n\t * This method is used internally by Graphics methods, such as drawCircle, but can also be used directly to insert\n\t * built-in or custom graphics commands. For example:\n\t *\n\t * \t\t// attach data to our shape, so we can access it during the draw:\n\t * \t\tmyShape.color = \"red\";\n\t *\n\t * \t\t// append a Circle command object:\n\t * \t\tmyShape.graphics.append(new createjs.Graphics.Circle(50, 50, 30));\n\t *\n\t * \t\t// append a custom command object with an exec method that sets the fill style\n\t * \t\t// based on the shape's data, and then fills the circle.\n\t * \t\tmyShape.graphics.append({exec:function(ctx, shape) {\n\t * \t\t\tctx.fillStyle = shape.color;\n\t * \t\t\tctx.fill();\n\t * \t\t}});\n\t *\n\t * @method append\n\t * @param {Object} command A graphics command object exposing an \"exec\" method.\n\t * @param {boolean} clean The clean param is primarily for internal use. A value of true indicates that a command does not generate a path that should be stroked or filled.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.append = function(command, clean) {\n\t\tthis._activeInstructions.push(command);\n\t\tthis.command = command;\n\t\tif (!clean) { this._dirty = true; }\n\t\treturn this;\n\t};\n\n\t/**\n\t * Decodes a compact encoded path string into a series of draw instructions.\n\t * This format is not intended to be human readable, and is meant for use by authoring tools.\n\t * The format uses a base64 character set, with each character representing 6 bits, to define a series of draw\n\t * commands.\n\t *\n\t * Each command is comprised of a single \"header\" character followed by a variable number of alternating x and y\n\t * position values. Reading the header bits from left to right (most to least significant): bits 1 to 3 specify the\n\t * type of operation (0-moveTo, 1-lineTo, 2-quadraticCurveTo, 3-bezierCurveTo, 4-closePath, 5-7 unused). Bit 4\n\t * indicates whether position values use 12 bits (2 characters) or 18 bits (3 characters), with a one indicating the\n\t * latter. Bits 5 and 6 are currently unused.\n\t *\n\t * Following the header is a series of 0 (closePath), 2 (moveTo, lineTo), 4 (quadraticCurveTo), or 6 (bezierCurveTo)\n\t * parameters. These parameters are alternating x/y positions represented by 2 or 3 characters (as indicated by the\n\t * 4th bit in the command char). These characters consist of a 1 bit sign (1 is negative, 0 is positive), followed\n\t * by an 11 (2 char) or 17 (3 char) bit integer value. All position values are in tenths of a pixel. Except in the\n\t * case of move operations which are absolute, this value is a delta from the previous x or y position (as\n\t * appropriate).\n\t *\n\t * For example, the string \"A3cAAMAu4AAA\" represents a line starting at -150,0 and ending at 150,0.\n\t * <br />A - bits 000000. First 3 bits (000) indicate a moveTo operation. 4th bit (0) indicates 2 chars per\n\t * parameter.\n\t * <br />n0 - 110111011100. Absolute x position of -150.0px. First bit indicates a negative value, remaining bits\n\t * indicate 1500 tenths of a pixel.\n\t * <br />AA - 000000000000. Absolute y position of 0.\n\t * <br />I - 001100. First 3 bits (001) indicate a lineTo operation. 4th bit (1) indicates 3 chars per parameter.\n\t * <br />Au4 - 000000101110111000. An x delta of 300.0px, which is added to the previous x value of -150.0px to\n\t * provide an absolute position of +150.0px.\n\t * <br />AAA - 000000000000000000. A y delta value of 0.\n\t *\n\t * A tiny API method \"p\" also exists.\n\t * @method decodePath\n\t * @param {String} str The path string to decode.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.decodePath = function(str) {\n\t\tvar instructions = [this.moveTo, this.lineTo, this.quadraticCurveTo, this.bezierCurveTo, this.closePath];\n\t\tvar paramCount = [2, 2, 4, 6, 0];\n\t\tvar i=0, l=str.length;\n\t\tvar params = [];\n\t\tvar x=0, y=0;\n\t\tvar base64 = Graphics.BASE_64;\n\n\t\twhile (i<l) {\n\t\t\tvar c = str.charAt(i);\n\t\t\tvar n = base64[c];\n\t\t\tvar fi = n>>3; // highest order bits 1-3 code for operation.\n\t\t\tvar f = instructions[fi];\n\t\t\t// check that we have a valid instruction & that the unused bits are empty:\n\t\t\tif (!f || (n&3)) { throw(\"bad path data (@\"+i+\"): \"+c); }\n\t\t\tvar pl = paramCount[fi];\n\t\t\tif (!fi) { x=y=0; } // move operations reset the position.\n\t\t\tparams.length = 0;\n\t\t\ti++;\n\t\t\tvar charCount = (n>>2&1)+2;  // 4th header bit indicates number size for this operation.\n\t\t\tfor (var p=0; p<pl; p++) {\n\t\t\t\tvar num = base64[str.charAt(i)];\n\t\t\t\tvar sign = (num>>5) ? -1 : 1;\n\t\t\t\tnum = ((num&31)<<6)|(base64[str.charAt(i+1)]);\n\t\t\t\tif (charCount == 3) { num = (num<<6)|(base64[str.charAt(i+2)]); }\n\t\t\t\tnum = sign*num/10;\n\t\t\t\tif (p%2) { x = (num += x); }\n\t\t\t\telse { y = (num += y); }\n\t\t\t\tparams[p] = num;\n\t\t\t\ti += charCount;\n\t\t\t}\n\t\t\tf.apply(this,params);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Stores all graphics commands so they won't be executed in future draws. Calling store() a second time adds to\n\t * the existing store. This also affects `drawAsPath()`.\n\t *\n\t * This is useful in cases where you are creating vector graphics in an iterative manner (ex. generative art), so\n\t * that only new graphics need to be drawn (which can provide huge performance benefits), but you wish to retain all\n\t * of the vector instructions for later use (ex. scaling, modifying, or exporting).\n\t *\n\t * Note that calling store() will force the active path (if any) to be ended in a manner similar to changing\n\t * the fill or stroke.\n\t *\n\t * For example, consider a application where the user draws lines with the mouse. As each line segment (or collection of\n\t * segments) are added to a Shape, it can be rasterized using {{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}},\n\t * and then stored, so that it can be redrawn at a different scale when the application is resized, or exported to SVG.\n\t *\n\t * \t// set up cache:\n\t * \tmyShape.cache(0,0,500,500,scale);\n\t *\n\t * \t// when the user drags, draw a new line:\n\t * \tmyShape.graphics.moveTo(oldX,oldY).lineTo(newX,newY);\n\t * \t// then draw it into the existing cache:\n\t * \tmyShape.updateCache(\"source-over\");\n\t * \t// store the new line, so it isn't redrawn next time:\n\t * \tmyShape.store();\n\t *\n\t * \t// then, when the window resizes, we can re-render at a different scale:\n\t * \t// first, unstore all our lines:\n\t * \tmyShape.unstore();\n\t * \t// then cache using the new scale:\n\t * \tmyShape.cache(0,0,500,500,newScale);\n\t * \t// finally, store the existing commands again:\n\t * \tmyShape.store();\n\t *\n\t * @method store\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.store = function() {\n\t\tthis._updateInstructions(true);\n\t\tthis._storeIndex = this._instructions.length;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Unstores any graphics commands that were previously stored using {{#crossLink \"Graphics/store\"}}{{/crossLink}}\n\t * so that they will be executed in subsequent draw calls.\n\t *\n\t * @method unstore\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.unstore = function() {\n\t\tthis._storeIndex = 0;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns a clone of this Graphics instance. Note that the individual command objects are not cloned.\n\t * @method clone\n\t * @return {Graphics} A clone of the current Graphics instance.\n\t **/\n\tp.clone = function() {\n\t\tvar o = new Graphics();\n\t\to.command = this.command;\n\t\to._stroke = this._stroke;\n\t\to._strokeStyle = this._strokeStyle;\n\t\to._strokeDash = this._strokeDash;\n\t\to._strokeIgnoreScale = this._strokeIgnoreScale;\n\t\to._fill = this._fill;\n\t\to._instructions = this._instructions.slice();\n\t\to._commitIndex = this._commitIndex;\n\t\to._activeInstructions = this._activeInstructions.slice();\n\t\to._dirty = this._dirty;\n\t\to._storeIndex = this._storeIndex;\n\t\treturn o;\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Graphics]\";\n\t};\n\n\n// tiny API:\n\t/**\n\t * Shortcut to moveTo.\n\t * @method mt\n\t * @param {Number} x The x coordinate the drawing point should move to.\n\t * @param {Number} y The y coordinate the drawing point should move to.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls).\n\t * @chainable\n\t * @protected\n\t **/\n\tp.mt = p.moveTo;\n\n\t/**\n\t * Shortcut to lineTo.\n\t * @method lt\n\t * @param {Number} x The x coordinate the drawing point should draw to.\n\t * @param {Number} y The y coordinate the drawing point should draw to.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.lt = p.lineTo;\n\n\t/**\n\t * Shortcut to arcTo.\n\t * @method at\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} x2\n\t * @param {Number} y2\n\t * @param {Number} radius\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.at = p.arcTo;\n\n\t/**\n\t * Shortcut to bezierCurveTo.\n\t * @method bt\n\t * @param {Number} cp1x\n\t * @param {Number} cp1y\n\t * @param {Number} cp2x\n\t * @param {Number} cp2y\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.bt = p.bezierCurveTo;\n\n\t/**\n\t * Shortcut to quadraticCurveTo / curveTo.\n\t * @method qt\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @protected\n\t * @chainable\n\t **/\n\tp.qt = p.quadraticCurveTo;\n\n\t/**\n\t * Shortcut to arc.\n\t * @method a\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} startAngle Measured in radians.\n\t * @param {Number} endAngle Measured in radians.\n\t * @param {Boolean} anticlockwise\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @protected\n\t * @chainable\n\t **/\n\tp.a = p.arc;\n\n\t/**\n\t * Shortcut to rect.\n\t * @method r\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w Width of the rectangle\n\t * @param {Number} h Height of the rectangle\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.r = p.rect;\n\n\t/**\n\t * Shortcut to closePath.\n\t * @method cp\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.cp = p.closePath;\n\n\t/**\n\t * Shortcut to clear.\n\t * @method c\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.c = p.clear;\n\n\t/**\n\t * Shortcut to beginFill.\n\t * @method f\n\t * @param {String} color A CSS compatible color value (ex. \"red\", \"#FF0000\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no fill.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.f = p.beginFill;\n\n\t/**\n\t * Shortcut to beginLinearGradientFill.\n\t * @method lf\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define a gradient\n\t * drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1, 0.9] would draw\n\t * the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.lf = p.beginLinearGradientFill;\n\n\t/**\n\t * Shortcut to beginRadialGradientFill.\n\t * @method rf\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.rf = p.beginRadialGradientFill;\n\n\t/**\n\t * Shortcut to beginBitmapFill.\n\t * @method bf\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern.\n\t * @param {String} repetition Optional. Indicates whether to repeat the image in the fill area. One of \"repeat\",\n\t * \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\". Note that Firefox does not support \"repeat-x\" or\n\t * \"repeat-y\" (latest tests were in FF 20.0), and will default to \"repeat\".\n\t * @param {Matrix2D} matrix Optional. Specifies a transformation matrix for the bitmap fill. This transformation\n\t * will be applied relative to the parent transform.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.bf = p.beginBitmapFill;\n\n\t/**\n\t * Shortcut to endFill.\n\t * @method ef\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.ef = p.endFill;\n\n\t/**\n\t * Shortcut to setStrokeStyle.\n\t * @method ss\n\t * @param {Number} thickness The width of the stroke.\n\t * @param {String | Number} [caps=0] Indicates the type of caps to use at the end of lines. One of butt,\n\t * round, or square. Defaults to \"butt\". Also accepts the values 0 (butt), 1 (round), and 2 (square) for use with\n\t * the tiny API.\n\t * @param {String | Number} [joints=0] Specifies the type of joints that should be used where two lines meet.\n\t * One of bevel, round, or miter. Defaults to \"miter\". Also accepts the values 0 (miter), 1 (round), and 2 (bevel)\n\t * for use with the tiny API.\n\t * @param {Number} [miterLimit=10] If joints is set to \"miter\", then you can specify a miter limit ratio which\n\t * controls at what point a mitered joint will be clipped.\n\t * @param {Boolean} [ignoreScale=false] If true, the stroke will be drawn at the specified thickness regardless\n\t * of active transformations.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.ss = p.setStrokeStyle;\n\t\n\t/**\n\t * Shortcut to setStrokeDash.\n\t * @method sd\n\t * @param {Array} [segments] An array specifying the dash pattern, alternating between line and gap.\n\t * For example, [20,10] would create a pattern of 20 pixel lines with 10 pixel gaps between them.\n\t * Passing null or an empty array will clear any existing dash.\n\t * @param {Number} [offset=0] The offset of the dash pattern. For example, you could increment this value to create a \"marching ants\" effect.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.sd = p.setStrokeDash;\n\n\t/**\n\t * Shortcut to beginStroke.\n\t * @method s\n\t * @param {String} color A CSS compatible color value (ex. \"#FF0000\", \"red\", or \"rgba(255,0,0,0.5)\"). Setting to\n\t * null will result in no stroke.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.s = p.beginStroke;\n\n\t/**\n\t * Shortcut to beginLinearGradientStroke.\n\t * @method ls\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%.\n\t * @param {Number} x0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} y0 The position of the first point defining the line that defines the gradient direction and size.\n\t * @param {Number} x1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @param {Number} y1 The position of the second point defining the line that defines the gradient direction and size.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.ls = p.beginLinearGradientStroke;\n\n\t/**\n\t * Shortcut to beginRadialGradientStroke.\n\t * @method rs\n\t * @param {Array} colors An array of CSS compatible color values. For example, [\"#F00\",\"#00F\"] would define\n\t * a gradient drawing from red to blue.\n\t * @param {Array} ratios An array of gradient positions which correspond to the colors. For example, [0.1,\n\t * 0.9] would draw the first color to 10% then interpolating to the second color at 90%, then draw the second color\n\t * to 100%.\n\t * @param {Number} x0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} y0 Center position of the inner circle that defines the gradient.\n\t * @param {Number} r0 Radius of the inner circle that defines the gradient.\n\t * @param {Number} x1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} y1 Center position of the outer circle that defines the gradient.\n\t * @param {Number} r1 Radius of the outer circle that defines the gradient.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.rs = p.beginRadialGradientStroke;\n\n\t/**\n\t * Shortcut to beginBitmapStroke.\n\t * @method bs\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image The Image, Canvas, or Video object to use\n\t * as the pattern.\n\t * @param {String} [repetition=repeat] Optional. Indicates whether to repeat the image in the fill area. One of\n\t * \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\". Defaults to \"repeat\".\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.bs = p.beginBitmapStroke;\n\n\t/**\n\t * Shortcut to endStroke.\n\t * @method es\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.es = p.endStroke;\n\n\t/**\n\t * Shortcut to drawRect.\n\t * @method dr\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w Width of the rectangle\n\t * @param {Number} h Height of the rectangle\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.dr = p.drawRect;\n\n\t/**\n\t * Shortcut to drawRoundRect.\n\t * @method rr\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t * @param {Number} radius Corner radius.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.rr = p.drawRoundRect;\n\n\t/**\n\t * Shortcut to drawRoundRectComplex.\n\t * @method rc\n\t * @param {Number} x The horizontal coordinate to draw the round rect.\n\t * @param {Number} y The vertical coordinate to draw the round rect.\n\t * @param {Number} w The width of the round rect.\n\t * @param {Number} h The height of the round rect.\n\t * @param {Number} radiusTL Top left corner radius.\n\t * @param {Number} radiusTR Top right corner radius.\n\t * @param {Number} radiusBR Bottom right corner radius.\n\t * @param {Number} radiusBL Bottom left corner radius.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.rc = p.drawRoundRectComplex;\n\n\t/**\n\t * Shortcut to drawCircle.\n\t * @method dc\n\t * @param {Number} x x coordinate center point of circle.\n\t * @param {Number} y y coordinate center point of circle.\n\t * @param {Number} radius Radius of circle.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.dc = p.drawCircle;\n\n\t/**\n\t * Shortcut to drawEllipse.\n\t * @method de\n\t * @param {Number} x The left coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t * which draws from center.\n\t * @param {Number} y The top coordinate point of the ellipse. Note that this is different from {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}}\n\t * which draws from the center.\n\t * @param {Number} w The height (horizontal diameter) of the ellipse. The horizontal radius will be half of this\n\t * number.\n\t * @param {Number} h The width (vertical diameter) of the ellipse. The vertical radius will be half of this number.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.de = p.drawEllipse;\n\n\t/**\n\t * Shortcut to drawPolyStar.\n\t * @method dp\n\t * @param {Number} x Position of the center of the shape.\n\t * @param {Number} y Position of the center of the shape.\n\t * @param {Number} radius The outer radius of the shape.\n\t * @param {Number} sides The number of points on the star or sides on the polygon.\n\t * @param {Number} pointSize The depth or \"pointy-ness\" of the star points. A pointSize of 0 will draw a regular\n\t * polygon (no points), a pointSize of 1 will draw nothing because the points are infinitely pointy.\n\t * @param {Number} angle The angle of the first point / corner. For example a value of 0 will draw the first point\n\t * directly to the right of the center.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.dp = p.drawPolyStar;\n\n\t/**\n\t * Shortcut to decodePath.\n\t * @method p\n\t * @param {String} str The path string to decode.\n\t * @return {Graphics} The Graphics instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t * @protected\n\t **/\n\tp.p = p.decodePath;\n\n\n// private methods:\n\t/**\n\t * @method _updateInstructions\n\t * @param commit\n\t * @protected\n\t **/\n\tp._updateInstructions = function(commit) {\n\t\tvar instr = this._instructions, active = this._activeInstructions, commitIndex = this._commitIndex;\n\n\t\tif (this._dirty && active.length) {\n\t\t\tinstr.length = commitIndex; // remove old, uncommitted commands\n\t\t\tinstr.push(Graphics.beginCmd);\n\n\t\t\tvar l = active.length, ll = instr.length;\n\t\t\tinstr.length = ll+l;\n\t\t\tfor (var i=0; i<l; i++) { instr[i+ll] = active[i]; }\n\n\t\t\tif (this._fill) { instr.push(this._fill); }\n\t\t\tif (this._stroke) {\n\t\t\t\t// doesn't need to be re-applied if it hasn't changed.\n\t\t\t\tif (this._strokeDash !== this._oldStrokeDash) {\n\t\t\t\t\tthis._oldStrokeDash = this._strokeDash;\n\t\t\t\t\tinstr.push(this._strokeDash);\n\t\t\t\t}\n\t\t\t\tif (this._strokeStyle !== this._oldStrokeStyle) {\n\t\t\t\t\tthis._oldStrokeStyle = this._strokeStyle;\n\t\t\t\t\tinstr.push(this._strokeStyle);\n\t\t\t\t}\n\t\t\t\tinstr.push(this._stroke);\n\t\t\t}\n\n\t\t\tthis._dirty = false;\n\t\t}\n\n\t\tif (commit) {\n\t\t\tactive.length = 0;\n\t\t\tthis._commitIndex = instr.length;\n\t\t}\n\t};\n\n\t/**\n\t * @method _setFill\n\t * @param fill\n\t * @protected\n\t **/\n\tp._setFill = function(fill) {\n\t\tthis._updateInstructions(true);\n\t\tthis.command = this._fill = fill;\n\t\treturn this;\n\t};\n\n\t/**\n\t * @method _setStroke\n\t * @param stroke\n\t * @protected\n\t **/\n\tp._setStroke = function(stroke) {\n\t\tthis._updateInstructions(true);\n\t\tif (this.command = this._stroke = stroke) {\n\t\t\tstroke.ignoreScale = this._strokeIgnoreScale;\n\t\t}\n\t\treturn this;\n\t};\n\n// Command Objects:\n\t/**\n\t * @namespace Graphics\n\t */\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/lineTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information. See {{#crossLink \"Graphics\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class LineTo\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.LineTo = function(x, y) {\n\t\tthis.x = x; this.y = y;\n\t}).prototype.exec = function(ctx) { ctx.lineTo(this.x,this.y); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/moveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class MoveTo\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx\n\t */\n\t(G.MoveTo = function(x, y) {\n\t\tthis.x = x; this.y = y;\n\t}).prototype.exec = function(ctx) { ctx.moveTo(this.x, this.y); };\n\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/arcTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class ArcTo\n\t * @constructor\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} x2\n\t * @param {Number} y2\n\t * @param {Number} radius\n\t **/\n\t/**\n\t * @property x1\n\t * @type Number\n\t */\n\t/**\n\t * @property y1\n\t * @type Number\n\t */\n\t/**\n\t * @property x2\n\t * @type Number\n\t */\n\t/**\n\t * @property y2\n\t * @type Number\n\t */\n\t/**\n\t * @property radius\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.ArcTo = function(x1, y1, x2, y2, radius) {\n\t\tthis.x1 = x1; this.y1 = y1;\n\t\tthis.x2 = x2; this.y2 = y2;\n\t\tthis.radius = radius;\n\t}).prototype.exec = function(ctx) { ctx.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/arc\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class Arc\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} startAngle\n\t * @param {Number} endAngle\n\t * @param {Number} anticlockwise\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @property radius\n\t * @type Number\n\t */\n\t/**\n\t * @property startAngle\n\t * @type Number\n\t */\n\t/**\n\t * @property endAngle\n\t * @type Number\n\t */\n\t/**\n\t * @property anticlockwise\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.Arc = function(x, y, radius, startAngle, endAngle, anticlockwise) {\n\t\tthis.x = x; this.y = y;\n\t\tthis.radius = radius;\n\t\tthis.startAngle = startAngle; this.endAngle = endAngle;\n\t\tthis.anticlockwise = !!anticlockwise;\n\t}).prototype.exec = function(ctx) { ctx.arc(this.x, this.y, this.radius, this.startAngle, this.endAngle, this.anticlockwise); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/quadraticCurveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class QuadraticCurveTo\n\t * @constructor\n\t * @param {Number} cpx\n\t * @param {Number} cpy\n\t * @param {Number} x\n\t * @param {Number} y\n\t **/\n\t/**\n\t * @property cpx\n\t * @type Number\n\t */\n\t/**\n\t * @property cpy\n\t * @type Number\n\t */\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.QuadraticCurveTo = function(cpx, cpy, x, y) {\n\t\tthis.cpx = cpx; this.cpy = cpy;\n\t\tthis.x = x; this.y = y;\n\t}).prototype.exec = function(ctx) { ctx.quadraticCurveTo(this.cpx, this.cpy, this.x, this.y); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/bezierCurveTo\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class BezierCurveTo\n\t * @constructor\n\t * @param {Number} cp1x\n\t * @param {Number} cp1y\n\t * @param {Number} cp2x\n\t * @param {Number} cp2y\n\t * @param {Number} x\n\t * @param {Number} y\n\t **/\n\t/**\n\t * @property cp1x\n\t * @type Number\n\t */\n\t/**\n\t * @property cp1y\n\t * @type Number\n\t */\n\t/**\n\t * @property cp2x\n\t * @type Number\n\t */\n\t/**\n\t * @property cp2y\n\t * @type Number\n\t */\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.BezierCurveTo = function(cp1x, cp1y, cp2x, cp2y, x, y) {\n\t\tthis.cp1x = cp1x; this.cp1y = cp1y;\n\t\tthis.cp2x = cp2x; this.cp2y = cp2y;\n\t\tthis.x = x; this.y = y;\n\t}).prototype.exec = function(ctx) { ctx.bezierCurveTo(this.cp1x, this.cp1y, this.cp2x, this.cp2y, this.x, this.y); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/rect\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class Rect\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @property w\n\t * @type Number\n\t */\n\t/**\n\t * @property h\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.Rect = function(x, y, w, h) {\n\t\tthis.x = x; this.y = y;\n\t\tthis.w = w; this.h = h;\n\t}).prototype.exec = function(ctx) { ctx.rect(this.x, this.y, this.w, this.h); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/closePath\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class ClosePath\n\t * @constructor\n\t **/\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.ClosePath = function() {\n\t}).prototype.exec = function(ctx) { ctx.closePath(); };\n\n\t/**\n\t * Graphics command object to begin a new path. See {{#crossLink \"Graphics\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class BeginPath\n\t * @constructor\n\t **/\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.BeginPath = function() {\n\t}).prototype.exec = function(ctx) { ctx.beginPath(); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/beginFill\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class Fill\n\t * @constructor\n\t * @param {Object} style A valid Context2D fillStyle.\n\t * @param {Matrix2D} matrix\n\t **/\n\t/**\n\t * A valid Context2D fillStyle.\n\t * @property style\n\t * @type Object\n\t */\n\t/**\n\t * @property matrix\n\t * @type Matrix2D\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\tp = (G.Fill = function(style, matrix) {\n\t\tthis.style = style;\n\t\tthis.matrix = matrix;\n\t}).prototype;\n\tp.exec = function(ctx) {\n\t\tif (!this.style) { return; }\n\t\tctx.fillStyle = this.style;\n\t\tvar mtx = this.matrix;\n\t\tif (mtx) { ctx.save(); ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty); }\n\t\tctx.fill();\n\t\tif (mtx) { ctx.restore(); }\n\t};\n\t/**\n\t * Creates a linear gradient style and assigns it to {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginLinearGradientFill\"}}{{/crossLink}} for more information.\n\t * @method linearGradient\n\t * @param {Array} colors\n\t *\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @return {Fill} Returns this Fill object for chaining or assignment.\n\t */\n\tp.linearGradient = function(colors, ratios, x0, y0, x1, y1) {\n\t\tvar o = this.style =  Graphics._ctx.createLinearGradient(x0, y0, x1, y1);\n\t\tfor (var i=0, l=colors.length; i<l; i++) { o.addColorStop(ratios[i], colors[i]); }\n\t\to.props = {colors:colors, ratios:ratios, x0:x0, y0:y0, x1:x1, y1:y1, type:\"linear\"};\n\t\treturn this;\n\t};\n\t/**\n\t * Creates a radial gradient style and assigns it to {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginRadialGradientFill\"}}{{/crossLink}} for more information.\n\t * @method radialGradient\n\t * @param {Array} colors\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} r0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} r1\n\t * @return {Fill} Returns this Fill object for chaining or assignment.\n\t */\n\tp.radialGradient = function(colors, ratios, x0, y0, r0, x1, y1, r1) {\n\t\tvar o = this.style =  Graphics._ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);\n\t\tfor (var i=0, l=colors.length; i<l; i++) { o.addColorStop(ratios[i], colors[i]); }\n\t\to.props = {colors:colors, ratios:ratios, x0:x0, y0:y0, r0:r0, x1:x1, y1:y1, r1:r1, type:\"radial\"};\n\t\treturn this;\n\t};\n\t/**\n\t * Creates a bitmap fill style and assigns it to the {{#crossLink \"Fill/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginBitmapFill\"}}{{/crossLink}} for more information.\n\t * @method bitmap\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement} image  Must be loaded prior to creating a bitmap fill, or the fill will be empty.\n\t * @param {String} [repetition] One of: repeat, repeat-x, repeat-y, or no-repeat.\n\t * @return {Fill} Returns this Fill object for chaining or assignment.\n\t */\n\tp.bitmap = function(image, repetition) {\n\t\tif (image.naturalWidth || image.getContext || image.readyState >= 2) {\n\t\t\tvar o = this.style = Graphics._ctx.createPattern(image, repetition || \"\");\n\t\t\to.props = {image: image, repetition: repetition, type: \"bitmap\"};\n\t\t}\n\t\treturn this;\n\t};\n\tp.path = false;\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/beginStroke\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class Stroke\n\t * @constructor\n\t * @param {Object} style A valid Context2D fillStyle.\n\t * @param {Boolean} ignoreScale\n\t **/\n\t/**\n\t * A valid Context2D strokeStyle.\n\t * @property style\n\t * @type Object\n\t */\n\t/**\n\t * @property ignoreScale\n\t * @type Boolean\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\tp = (G.Stroke = function(style, ignoreScale) {\n\t\tthis.style = style;\n\t\tthis.ignoreScale = ignoreScale;\n\t}).prototype;\n\tp.exec = function(ctx) {\n\t\tif (!this.style) { return; }\n\t\tctx.strokeStyle = this.style;\n\t\tif (this.ignoreScale) { ctx.save(); ctx.setTransform(1,0,0,1,0,0); }\n\t\tctx.stroke();\n\t\tif (this.ignoreScale) { ctx.restore(); }\n\t};\n\t/**\n\t * Creates a linear gradient style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginLinearGradientStroke\"}}{{/crossLink}} for more information.\n\t * @method linearGradient\n\t * @param {Array} colors\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @return {Fill} Returns this Stroke object for chaining or assignment.\n\t */\n\tp.linearGradient = G.Fill.prototype.linearGradient;\n\t/**\n\t * Creates a radial gradient style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginRadialGradientStroke\"}}{{/crossLink}} for more information.\n\t * @method radialGradient\n\t * @param {Array} colors\n\t * @param {Array} ratios\n\t * @param {Number} x0\n\t * @param {Number} y0\n\t * @param {Number} r0\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} r1\n\t * @return {Fill} Returns this Stroke object for chaining or assignment.\n\t */\n\tp.radialGradient = G.Fill.prototype.radialGradient;\n\t/**\n\t * Creates a bitmap fill style and assigns it to {{#crossLink \"Stroke/style:property\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Graphics/beginBitmapStroke\"}}{{/crossLink}} for more information.\n\t * @method bitmap\n\t * @param {HTMLImageElement} image\n\t * @param {String} [repetition] One of: repeat, repeat-x, repeat-y, or no-repeat.\n\t * @return {Fill} Returns this Stroke object for chaining or assignment.\n\t */\n\tp.bitmap = G.Fill.prototype.bitmap;\n\tp.path = false;\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/setStrokeStyle\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class StrokeStyle\n\t * @constructor\n\t * @param {Number} width\n\t * @param {String} [caps=butt]\n\t * @param {String} [joints=miter]\n\t * @param {Number} [miterLimit=10]\n\t * @param {Boolean} [ignoreScale=false]\n\t **/\n\t/**\n\t * @property width\n\t * @type Number\n\t */\n\t/**\n\t * One of: butt, round, square\n\t * @property caps\n\t * @type String\n\t */\n\t/**\n\t * One of: round, bevel, miter\n\t * @property joints\n\t * @type String\n\t */\n\t/**\n\t * @property miterLimit\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\tp = (G.StrokeStyle = function(width, caps, joints, miterLimit, ignoreScale) {\n\t\tthis.width = width;\n\t\tthis.caps = caps;\n\t\tthis.joints = joints;\n\t\tthis.miterLimit = miterLimit;\n\t\tthis.ignoreScale = ignoreScale;\n\t}).prototype;\n\tp.exec = function(ctx) {\n\t\tctx.lineWidth = (this.width == null ? \"1\" : this.width);\n\t\tctx.lineCap = (this.caps == null ? \"butt\" : (isNaN(this.caps) ? this.caps : Graphics.STROKE_CAPS_MAP[this.caps]));\n\t\tctx.lineJoin = (this.joints == null ? \"miter\" : (isNaN(this.joints) ? this.joints : Graphics.STROKE_JOINTS_MAP[this.joints]));\n\t\tctx.miterLimit = (this.miterLimit == null ? \"10\" : this.miterLimit);\n\t\tctx.ignoreScale = (this.ignoreScale == null ? false : this.ignoreScale);\n\t};\n\tp.path = false;\n\t\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/setStrokeDash\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class StrokeDash\n\t * @constructor\n\t * @param {Array} [segments]\n\t * @param {Number} [offset=0]\n\t **/\n\t/**\n\t * @property segments\n\t * @type Array\n\t */\n\t/**\n\t * @property offset\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.StrokeDash = function(segments, offset) {\n\t\tthis.segments = segments;\n\t\tthis.offset = offset||0;\n\t}).prototype.exec = function(ctx) {\n\t\tif (ctx.setLineDash) { // feature detection.\n\t\t\tctx.setLineDash(this.segments|| G.StrokeDash.EMPTY_SEGMENTS); // instead of [] to reduce churn.\n\t\t\tctx.lineDashOffset = this.offset||0;\n\t\t}\n\t};\n\t/**\n\t * The default value for segments (ie. no dash).\n\t * @property EMPTY_SEGMENTS\n\t * @static\n\t * @final\n\t * @readonly\n\t * @protected\n\t * @type {Array}\n\t **/\n\tG.StrokeDash.EMPTY_SEGMENTS = [];\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/drawRoundRectComplex\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class RoundRect\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t * @param {Number} radiusTL\n\t * @param {Number} radiusTR\n\t * @param {Number} radiusBR\n\t * @param {Number} radiusBL\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @property w\n\t * @type Number\n\t */\n\t/**\n\t * @property h\n\t * @type Number\n\t */\n\t/**\n\t * @property radiusTL\n\t * @type Number\n\t */\n\t/**\n\t * @property radiusTR\n\t * @type Number\n\t */\n\t/**\n\t * @property radiusBR\n\t * @type Number\n\t */\n\t/**\n\t * @property radiusBL\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.RoundRect = function(x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL) {\n\t\tthis.x = x; this.y = y;\n\t\tthis.w = w; this.h = h;\n\t\tthis.radiusTL = radiusTL; this.radiusTR = radiusTR;\n\t\tthis.radiusBR = radiusBR; this.radiusBL = radiusBL;\n\t}).prototype.exec = function(ctx) {\n\t\tvar max = (w<h?w:h)/2;\n\t\tvar mTL=0, mTR=0, mBR=0, mBL=0;\n\t\tvar x = this.x, y = this.y, w = this.w, h = this.h;\n\t\tvar rTL = this.radiusTL, rTR = this.radiusTR, rBR = this.radiusBR, rBL = this.radiusBL;\n\n\t\tif (rTL < 0) { rTL *= (mTL=-1); }\n\t\tif (rTL > max) { rTL = max; }\n\t\tif (rTR < 0) { rTR *= (mTR=-1); }\n\t\tif (rTR > max) { rTR = max; }\n\t\tif (rBR < 0) { rBR *= (mBR=-1); }\n\t\tif (rBR > max) { rBR = max; }\n\t\tif (rBL < 0) { rBL *= (mBL=-1); }\n\t\tif (rBL > max) { rBL = max; }\n\n\t\tctx.moveTo(x+w-rTR, y);\n\t\tctx.arcTo(x+w+rTR*mTR, y-rTR*mTR, x+w, y+rTR, rTR);\n\t\tctx.lineTo(x+w, y+h-rBR);\n\t\tctx.arcTo(x+w+rBR*mBR, y+h+rBR*mBR, x+w-rBR, y+h, rBR);\n\t\tctx.lineTo(x+rBL, y+h);\n\t\tctx.arcTo(x-rBL*mBL, y+h+rBL*mBL, x, y+h-rBL, rBL);\n\t\tctx.lineTo(x, y+rTL);\n\t\tctx.arcTo(x-rTL*mTL, y-rTL*mTL, x+rTL, y, rTL);\n\t\tctx.closePath();\n\t};\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/drawCircle\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class Circle\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @property radius\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.Circle = function(x, y, radius) {\n\t\tthis.x = x; this.y = y;\n\t\tthis.radius = radius;\n\t}).prototype.exec = function(ctx) { ctx.arc(this.x, this.y, this.radius, 0, Math.PI*2); };\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/drawEllipse\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class Ellipse\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @property w\n\t * @type Number\n\t */\n\t/**\n\t * @property h\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.Ellipse = function(x, y, w, h) {\n\t\tthis.x = x; this.y = y;\n\t\tthis.w = w; this.h = h;\n\t}).prototype.exec = function(ctx) {\n\t\tvar x = this.x, y = this.y;\n\t\tvar w = this.w, h = this.h;\n\n\t\tvar k = 0.5522848;\n\t\tvar ox = (w / 2) * k;\n\t\tvar oy = (h / 2) * k;\n\t\tvar xe = x + w;\n\t\tvar ye = y + h;\n\t\tvar xm = x + w / 2;\n\t\tvar ym = y + h / 2;\n\n\t\tctx.moveTo(x, ym);\n\t\tctx.bezierCurveTo(x, ym-oy, xm-ox, y, xm, y);\n\t\tctx.bezierCurveTo(xm+ox, y, xe, ym-oy, xe, ym);\n\t\tctx.bezierCurveTo(xe, ym+oy, xm+ox, ye, xm, ye);\n\t\tctx.bezierCurveTo(xm-ox, ye, x, ym+oy, x, ym);\n\t};\n\n\t/**\n\t * Graphics command object. See {{#crossLink \"Graphics/drawPolyStar\"}}{{/crossLink}} and {{#crossLink \"Graphics/append\"}}{{/crossLink}} for more information.\n\t * @class PolyStar\n\t * @constructor\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} radius\n\t * @param {Number} sides\n\t * @param {Number} pointSize\n\t * @param {Number} angle\n\t **/\n\t/**\n\t * @property x\n\t * @type Number\n\t */\n\t/**\n\t * @property y\n\t * @type Number\n\t */\n\t/**\n\t * @property radius\n\t * @type Number\n\t */\n\t/**\n\t * @property sides\n\t * @type Number\n\t */\n\t/**\n\t * @property pointSize\n\t * @type Number\n\t */\n\t/**\n\t * @property angle\n\t * @type Number\n\t */\n\t/**\n\t * Execute the Graphics command in the provided Canvas context.\n\t * @method exec\n\t * @param {CanvasRenderingContext2D} ctx The canvas rendering context\n\t */\n\t(G.PolyStar = function(x, y, radius, sides, pointSize, angle) {\n\t\tthis.x = x; this.y = y;\n\t\tthis.radius = radius;\n\t\tthis.sides = sides;\n\t\tthis.pointSize = pointSize;\n\t\tthis.angle = angle;\n\t}).prototype.exec = function(ctx) {\n\t\tvar x = this.x, y = this.y;\n\t\tvar radius = this.radius;\n\t\tvar angle = (this.angle||0)/180*Math.PI;\n\t\tvar sides = this.sides;\n\t\tvar ps = 1-(this.pointSize||0);\n\t\tvar a = Math.PI/sides;\n\n\t\tctx.moveTo(x+Math.cos(angle)*radius, y+Math.sin(angle)*radius);\n\t\tfor (var i=0; i<sides; i++) {\n\t\t\tangle += a;\n\t\t\tif (ps != 1) {\n\t\t\t\tctx.lineTo(x+Math.cos(angle)*radius*ps, y+Math.sin(angle)*radius*ps);\n\t\t\t}\n\t\t\tangle += a;\n\t\t\tctx.lineTo(x+Math.cos(angle)*radius, y+Math.sin(angle)*radius);\n\t\t}\n\t\tctx.closePath();\n\t};\n\n\t// docced above.\n\tGraphics.beginCmd = new G.BeginPath(); // so we don't have to instantiate multiple instances.\n\n\n\tcreatejs.Graphics = Graphics;\n}());\n\n//##############################################################################\n// DisplayObject.js\n//##############################################################################\n\n(function() {\r\n\t\"use strict\";\r\n\r\n\r\n// constructor:\r\n\t/**\r\n\t * DisplayObject is an abstract class that should not be constructed directly. Instead construct subclasses such as\r\n\t * {{#crossLink \"Container\"}}{{/crossLink}}, {{#crossLink \"Bitmap\"}}{{/crossLink}}, and {{#crossLink \"Shape\"}}{{/crossLink}}.\r\n\t * DisplayObject is the base class for all display classes in the EaselJS library. It defines the core properties and\r\n\t * methods that are shared between all display objects, such as transformation properties (x, y, scaleX, scaleY, etc),\r\n\t * caching, and mouse handlers.\r\n\t * @class DisplayObject\r\n\t * @extends EventDispatcher\r\n\t * @constructor\r\n\t **/\r\n\tfunction DisplayObject() {\r\n\t\tthis.EventDispatcher_constructor();\r\n\t\t\r\n\t\t\r\n\t// public properties:\r\n\t\t/**\r\n\t\t * The alpha (transparency) for this display object. 0 is fully transparent, 1 is fully opaque.\r\n\t\t * @property alpha\r\n\t\t * @type {Number}\r\n\t\t * @default 1\r\n\t\t **/\r\n\t\tthis.alpha = 1;\r\n\t\r\n\t\t/**\r\n\t\t * If a cache is active, this returns the canvas that holds the cached version of this display object. See {{#crossLink \"cache\"}}{{/crossLink}}\r\n\t\t * for more information.\r\n\t\t * @property cacheCanvas\r\n\t\t * @type {HTMLCanvasElement | Object}\r\n\t\t * @default null\r\n\t\t * @readonly\r\n\t\t **/\r\n\t\tthis.cacheCanvas = null;\r\n\t\r\n\t\t/**\r\n\t\t * Returns an ID number that uniquely identifies the current cache for this display object. This can be used to\r\n\t\t * determine if the cache has changed since a previous check.\r\n\t\t * @property cacheID\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis.cacheID = 0;\r\n\t\r\n\t\t/**\r\n\t\t * Unique ID for this display object. Makes display objects easier for some uses.\r\n\t\t * @property id\r\n\t\t * @type {Number}\r\n\t\t * @default -1\r\n\t\t **/\r\n\t\tthis.id = createjs.UID.get();\r\n\t\r\n\t\t/**\r\n\t\t * Indicates whether to include this object when running mouse interactions. Setting this to `false` for children\r\n\t\t * of a {{#crossLink \"Container\"}}{{/crossLink}} will cause events on the Container to not fire when that child is\r\n\t\t * clicked. Setting this property to `false` does not prevent the {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}\r\n\t\t * method from returning the child.\r\n\t\t *\r\n\t\t * <strong>Note:</strong> In EaselJS 0.7.0, the mouseEnabled property will not work properly with nested Containers. Please\r\n\t\t * check out the latest NEXT version in <a href=\"https://github.com/CreateJS/EaselJS/tree/master/lib\">GitHub</a> for an updated version with this issue resolved. The fix will be\r\n\t\t * provided in the next release of EaselJS.\r\n\t\t * @property mouseEnabled\r\n\t\t * @type {Boolean}\r\n\t\t * @default true\r\n\t\t **/\r\n\t\tthis.mouseEnabled = true;\r\n\t\t\r\n\t\t/**\r\n\t\t * If false, the tick will not run on this display object (or its children). This can provide some performance benefits.\r\n\t\t * In addition to preventing the \"tick\" event from being dispatched, it will also prevent tick related updates\r\n\t\t * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\r\n\t\t * @property tickEnabled\r\n\t\t * @type Boolean\r\n\t\t * @default true\r\n\t\t **/\r\n\t\tthis.tickEnabled = true;\r\n\t\r\n\t\t/**\r\n\t\t * An optional name for this display object. Included in {{#crossLink \"DisplayObject/toString\"}}{{/crossLink}} . Useful for\r\n\t\t * debugging.\r\n\t\t * @property name\r\n\t\t * @type {String}\r\n\t\t * @default null\r\n\t\t **/\r\n\t\tthis.name = null;\r\n\t\r\n\t\t/**\r\n\t\t * A reference to the {{#crossLink \"Container\"}}{{/crossLink}} or {{#crossLink \"Stage\"}}{{/crossLink}} object that\r\n\t\t * contains this display object, or null if it has not been added\r\n\t\t * to one.\r\n\t\t * @property parent\r\n\t\t * @final\r\n\t\t * @type {Container}\r\n\t\t * @default null\r\n\t\t * @readonly\r\n\t\t **/\r\n\t\tthis.parent = null;\r\n\t\r\n\t\t/**\r\n\t\t * The left offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate\r\n\t\t * around its center, you would set regX and {{#crossLink \"DisplayObject/regY:property\"}}{{/crossLink}} to 50.\r\n\t\t * @property regX\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t **/\r\n\t\tthis.regX = 0;\r\n\t\r\n\t\t/**\r\n\t\t * The y offset for this display object's registration point. For example, to make a 100x100px Bitmap rotate around\r\n\t\t * its center, you would set {{#crossLink \"DisplayObject/regX:property\"}}{{/crossLink}} and regY to 50.\r\n\t\t * @property regY\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t **/\r\n\t\tthis.regY = 0;\r\n\t\r\n\t\t/**\r\n\t\t * The rotation in degrees for this display object.\r\n\t\t * @property rotation\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t **/\r\n\t\tthis.rotation = 0;\r\n\t\r\n\t\t/**\r\n\t\t * The factor to stretch this display object horizontally. For example, setting scaleX to 2 will stretch the display\r\n\t\t * object to twice its nominal width. To horizontally flip an object, set the scale to a negative number.\r\n\t\t * @property scaleX\r\n\t\t * @type {Number}\r\n\t\t * @default 1\r\n\t\t **/\r\n\t\tthis.scaleX = 1;\r\n\t\r\n\t\t/**\r\n\t\t * The factor to stretch this display object vertically. For example, setting scaleY to 0.5 will stretch the display\r\n\t\t * object to half its nominal height. To vertically flip an object, set the scale to a negative number.\r\n\t\t * @property scaleY\r\n\t\t * @type {Number}\r\n\t\t * @default 1\r\n\t\t **/\r\n\t\tthis.scaleY = 1;\r\n\t\r\n\t\t/**\r\n\t\t * The factor to skew this display object horizontally.\r\n\t\t * @property skewX\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t **/\r\n\t\tthis.skewX = 0;\r\n\t\r\n\t\t/**\r\n\t\t * The factor to skew this display object vertically.\r\n\t\t * @property skewY\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t **/\r\n\t\tthis.skewY = 0;\r\n\t\r\n\t\t/**\r\n\t\t * A shadow object that defines the shadow to render on this display object. Set to `null` to remove a shadow. If\r\n\t\t * null, this property is inherited from the parent container.\r\n\t\t * @property shadow\r\n\t\t * @type {Shadow}\r\n\t\t * @default null\r\n\t\t **/\r\n\t\tthis.shadow = null;\r\n\t\r\n\t\t/**\r\n\t\t * Indicates whether this display object should be rendered to the canvas and included when running the Stage\r\n\t\t * {{#crossLink \"Stage/getObjectsUnderPoint\"}}{{/crossLink}} method.\r\n\t\t * @property visible\r\n\t\t * @type {Boolean}\r\n\t\t * @default true\r\n\t\t **/\r\n\t\tthis.visible = true;\r\n\t\r\n\t\t/**\r\n\t\t * The x (horizontal) position of the display object, relative to its parent.\r\n\t\t * @property x\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t **/\r\n\t\tthis.x = 0;\r\n\t\r\n\t\t/** The y (vertical) position of the display object, relative to its parent.\r\n\t\t * @property y\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t **/\r\n\t\tthis.y = 0;\r\n\t\t\r\n\t\t/**\r\n\t\t * If set, defines the transformation for this display object, overriding all other transformation properties\r\n\t\t * (x, y, rotation, scale, skew).\r\n\t\t * @property transformMatrix\r\n\t\t * @type {Matrix2D}\r\n\t\t * @default null\r\n\t\t **/\r\n\t\tthis.transformMatrix = null;\r\n\t\t\r\n\t\t/**\r\n\t\t * The composite operation indicates how the pixels of this display object will be composited with the elements\r\n\t\t * behind it. If `null`, this property is inherited from the parent container. For more information, read the\r\n\t\t * <a href=\"https://html.spec.whatwg.org/multipage/scripting.html#dom-context-2d-globalcompositeoperation\">\r\n\t\t * whatwg spec on compositing</a>. For a list of supported compositeOperation value, visit\r\n\t\t * <a href=\"https://drafts.fxtf.org/compositing/\">the W3C draft on Compositing and Blending</a>.\r\n\t\t * @property compositeOperation\r\n\t\t * @type {String}\r\n\t\t * @default null\r\n\t\t **/\r\n\t\tthis.compositeOperation = null;\r\n\t\r\n\t\t/**\r\n\t\t * Indicates whether the display object should be drawn to a whole pixel when\r\n\t\t * {{#crossLink \"Stage/snapToPixelEnabled\"}}{{/crossLink}} is true. To enable/disable snapping on whole\r\n\t\t * categories of display objects, set this value on the prototype (Ex. Text.prototype.snapToPixel = true).\r\n\t\t * @property snapToPixel\r\n\t\t * @type {Boolean}\r\n\t\t * @default true\r\n\t\t **/\r\n\t\tthis.snapToPixel = true;\r\n\t\r\n\t\t/**\r\n\t\t * An array of Filter objects to apply to this display object. Filters are only applied / updated when {{#crossLink \"cache\"}}{{/crossLink}}\r\n\t\t * or {{#crossLink \"updateCache\"}}{{/crossLink}} is called on the display object, and only apply to the area that is\r\n\t\t * cached.\r\n\t\t * @property filters\r\n\t\t * @type {Array}\r\n\t\t * @default null\r\n\t\t **/\r\n\t\tthis.filters = null;\r\n\t\t\r\n\t\t/**\r\n\t\t * A Shape instance that defines a vector mask (clipping path) for this display object.  The shape's transformation\r\n\t\t * will be applied relative to the display object's parent coordinates (as if it were a child of the parent).\r\n\t\t * @property mask\r\n\t\t * @type {Shape}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.mask = null;\r\n\t\t\r\n\t\t/**\r\n\t\t * A display object that will be tested when checking mouse interactions or testing {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}.\r\n\t\t * The hit area will have its transformation applied relative to this display object's coordinate space (as though\r\n\t\t * the hit test object were a child of this display object and relative to its regX/Y). The hitArea will be tested\r\n\t\t * using only its own `alpha` value regardless of the alpha value on the target display object, or the target's\r\n\t\t * ancestors (parents).\r\n\t\t * \r\n\t\t * If set on a {{#crossLink \"Container\"}}{{/crossLink}}, children of the Container will not receive mouse events.\r\n\t\t * This is similar to setting {{#crossLink \"mouseChildren\"}}{{/crossLink}} to false.\r\n\t\t *\r\n\t\t * Note that hitArea is NOT currently used by the `hitTest()` method, nor is it supported for {{#crossLink \"Stage\"}}{{/crossLink}}.\r\n\t\t * @property hitArea\r\n\t\t * @type {DisplayObject}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.hitArea = null;\r\n\t\t\r\n\t\t/**\r\n\t\t * A CSS cursor (ex. \"pointer\", \"help\", \"text\", etc) that will be displayed when the user hovers over this display\r\n\t\t * object. You must enable mouseover events using the {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}} method to\r\n\t\t * use this property. Setting a non-null cursor on a Container will override the cursor set on its descendants.\r\n\t\t * @property cursor\r\n\t\t * @type {String}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.cursor = null;\r\n\t\r\n\t\r\n\t// private properties:\r\n\t\t/**\r\n\t\t * @property _cacheOffsetX\r\n\t\t * @protected\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t **/\r\n\t\tthis._cacheOffsetX = 0;\r\n\t\r\n\t\t/**\r\n\t\t * @property _cacheOffsetY\r\n\t\t * @protected\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t **/\r\n\t\tthis._cacheOffsetY = 0;\r\n\t\t\r\n\t\t/**\r\n\t\t * @property _filterOffsetX\r\n\t\t * @protected\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t **/\r\n\t\tthis._filterOffsetX = 0;\r\n\t\t\r\n\t\t/**\r\n\t\t * @property _filterOffsetY\r\n\t\t * @protected\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t **/\r\n\t\tthis._filterOffsetY = 0;\r\n\t\t\r\n\t\t/**\r\n\t\t * @property _cacheScale\r\n\t\t * @protected\r\n\t\t * @type {Number}\r\n\t\t * @default 1\r\n\t\t **/\r\n\t\tthis._cacheScale = 1;\r\n\t\r\n\t\t/**\r\n\t\t* @property _cacheDataURLID\r\n\t\t* @protected\r\n\t\t* @type {Number}\r\n\t\t* @default 0\r\n\t\t*/\r\n\t\tthis._cacheDataURLID = 0;\r\n\t\t\r\n\t\t/**\r\n\t\t* @property _cacheDataURL\r\n\t\t* @protected\r\n\t\t* @type {String}\r\n\t\t* @default null\r\n\t\t*/\r\n\t\tthis._cacheDataURL = null;\r\n\t\r\n\t\t/**\r\n\t\t * @property _props\r\n\t\t * @protected\r\n\t\t * @type {DisplayObject}\r\n\t\t * @default null\r\n\t\t **/\r\n\t\tthis._props = new createjs.DisplayProps();\r\n\t\r\n\t\t/**\r\n\t\t * @property _rectangle\r\n\t\t * @protected\r\n\t\t * @type {Rectangle}\r\n\t\t * @default null\r\n\t\t **/\r\n\t\tthis._rectangle = new createjs.Rectangle();\r\n\t\r\n\t\t/**\r\n\t\t * @property _bounds\r\n\t\t * @protected\r\n\t\t * @type {Rectangle}\r\n\t\t * @default null\r\n\t\t **/\r\n\t\tthis._bounds = null;\r\n\t}\r\n\tvar p = createjs.extend(DisplayObject, createjs.EventDispatcher);\r\n\r\n\t// TODO: deprecated\r\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\r\n\t\r\n// static properties:\r\n\t/**\r\n\t * Listing of mouse event names. Used in _hasMouseEventListener.\r\n\t * @property _MOUSE_EVENTS\r\n\t * @protected\r\n\t * @static\r\n\t * @type {Array}\r\n\t **/\r\n\tDisplayObject._MOUSE_EVENTS = [\"click\",\"dblclick\",\"mousedown\",\"mouseout\",\"mouseover\",\"pressmove\",\"pressup\",\"rollout\",\"rollover\"];\r\n\r\n\t/**\r\n\t * Suppresses errors generated when using features like hitTest, mouse events, and {{#crossLink \"getObjectsUnderPoint\"}}{{/crossLink}}\r\n\t * with cross domain content.\r\n\t * @property suppressCrossDomainErrors\r\n\t * @static\r\n\t * @type {Boolean}\r\n\t * @default false\r\n\t **/\r\n\tDisplayObject.suppressCrossDomainErrors = false;\r\n\t\r\n\t/**\r\n\t * @property _snapToPixelEnabled\r\n\t * @protected\r\n\t * @static\r\n\t * @type {Boolean}\r\n\t * @default false\r\n\t **/\r\n\tDisplayObject._snapToPixelEnabled = false; // stage.snapToPixelEnabled is temporarily copied here during a draw to provide global access.\r\n\r\n\t/**\r\n\t * @property _hitTestCanvas\r\n\t * @type {HTMLCanvasElement | Object}\r\n\t * @static\r\n\t * @protected\r\n\t **/\r\n\t/**\r\n\t * @property _hitTestContext\r\n\t * @type {CanvasRenderingContext2D}\r\n\t * @static\r\n\t * @protected\r\n\t **/\r\n\tvar canvas = createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"); // prevent errors on load in browsers without canvas.\r\n\tif (canvas.getContext) {\r\n\t\tDisplayObject._hitTestCanvas = canvas;\r\n\t\tDisplayObject._hitTestContext = canvas.getContext(\"2d\");\r\n\t\tcanvas.width = canvas.height = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * @property _nextCacheID\r\n\t * @type {Number}\r\n\t * @static\r\n\t * @protected\r\n\t **/\r\n\tDisplayObject._nextCacheID = 1;\r\n\r\n\r\n// events:\r\n\t/**\r\n\t * Dispatched when the user presses their left mouse button over the display object. See the \r\n\t * {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n\t * @event mousedown\r\n\t * @since 0.6.0\r\n\t */\r\n\t \r\n\t/**\r\n\t * Dispatched when the user presses their left mouse button and then releases it while over the display object.\r\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n\t * @event click\r\n\t * @since 0.6.0\r\n\t */\r\n\t \r\n\t/**\r\n\t * Dispatched when the user double clicks their left mouse button over this display object.\r\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n\t * @event dblclick\r\n\t * @since 0.6.0\r\n\t */\r\n\t \r\n\t/**\r\n\t * Dispatched when the user's mouse enters this display object. This event must be enabled using \r\n\t * {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}. See also {{#crossLink \"DisplayObject/rollover:event\"}}{{/crossLink}}.\r\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n\t * @event mouseover\r\n\t * @since 0.6.0\r\n\t */\r\n\r\n\t/**\r\n\t * Dispatched when the user's mouse leaves this display object. This event must be enabled using \r\n\t * {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}. See also {{#crossLink \"DisplayObject/rollout:event\"}}{{/crossLink}}.\r\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n\t * @event mouseout\r\n\t * @since 0.6.0\r\n\t */\r\n\t \r\n\t/**\r\n\t * This event is similar to {{#crossLink \"DisplayObject/mouseover:event\"}}{{/crossLink}}, with the following\r\n\t * differences: it does not bubble, and it considers {{#crossLink \"Container\"}}{{/crossLink}} instances as an\r\n\t * aggregate of their content.\r\n\t * \r\n\t * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\r\n\t * shapeA and then directly on to shapeB. With a listener for {{#crossLink \"mouseover:event\"}}{{/crossLink}} on\r\n\t * myContainer, two events would be received, each targeting a child element:<OL>\r\n\t * <LI>when the mouse enters shapeA (target=shapeA)</LI>\r\n\t * <LI>when the mouse enters shapeB (target=shapeB)</LI>\r\n\t * </OL>\r\n\t * However, with a listener for \"rollover\" instead, only a single event is received when the mouse first enters\r\n\t * the aggregate myContainer content (target=myContainer).\r\n\t * \r\n\t * This event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\r\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n\t * @event rollover\r\n\t * @since 0.7.0\r\n\t */\r\n\t \r\n\t/**\r\n\t * This event is similar to {{#crossLink \"DisplayObject/mouseout:event\"}}{{/crossLink}}, with the following\r\n\t * differences: it does not bubble, and it considers {{#crossLink \"Container\"}}{{/crossLink}} instances as an\r\n\t * aggregate of their content.\r\n\t * \r\n\t * For example, myContainer contains two overlapping children: shapeA and shapeB. The user moves their mouse over\r\n\t * shapeA, then directly on to shapeB, then off both. With a listener for {{#crossLink \"mouseout:event\"}}{{/crossLink}}\r\n\t * on myContainer, two events would be received, each targeting a child element:<OL>\r\n\t * <LI>when the mouse leaves shapeA (target=shapeA)</LI>\r\n\t * <LI>when the mouse leaves shapeB (target=shapeB)</LI>\r\n\t * </OL>\r\n\t * However, with a listener for \"rollout\" instead, only a single event is received when the mouse leaves\r\n\t * the aggregate myContainer content (target=myContainer).\r\n\t * \r\n\t * This event must be enabled using {{#crossLink \"Stage/enableMouseOver\"}}{{/crossLink}}.\r\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\r\n\t * @event rollout\r\n\t * @since 0.7.0\r\n\t */\r\n\t \r\n\t/**\r\n\t * After a {{#crossLink \"DisplayObject/mousedown:event\"}}{{/crossLink}} occurs on a display object, a pressmove\r\n\t * event will be generated on that object whenever the mouse moves until the mouse press is released. This can be\r\n\t * useful for dragging and similar operations.\r\n\t *\r\n\t * **Please note** that if the initial mouse target from a `mousedown` event is removed from the stage after being pressed\r\n\t * (e.g. during a `pressmove` event), a `pressmove` event is still generated. However since it is no longer in the\r\n\t * display list, the event can not bubble. This means that previous ancestors (parent containers) will not receive\r\n\t * the event, and therefore can not re-dispatch it. If you intend to listen for `{{#crossLink \"DisplayObject/pressup:event\"}}{{/crossLink}}`\r\n\t * or `pressmove` on a dynamic object (such as a {{#crossLink \"MovieClip\"}}{{/crossLink}} or {{#crossLink \"Container\"}}{{/crossLink}}),\r\n\t * then ensure you set {{#crossLink \"Container/mouseChildren:property\"}}{{/crossLink}} to `false`.\r\n\t * @event pressmove\r\n\t * @since 0.7.0\r\n\t */\r\n\t \r\n\t/**\r\n\t * After a {{#crossLink \"DisplayObject/mousedown:event\"}}{{/crossLink}} occurs on a display object, a pressup event\r\n\t * will be generated on that object when that mouse press is released. This can be useful for dragging and similar\r\n\t * operations.\r\n\t *\r\n\t * **Please note** that if the initial mouse target from a `mousedown` event is removed from the stage after being pressed\r\n\t * (e.g. during a `pressmove` event), a `pressup` event is still generated. However since it is no longer in the\r\n\t * display list, the event can not bubble. This means that previous ancestors (parent containers) will not receive\r\n\t * the event, and therefore can not re-dispatch it. If you intend to listen for `{{#crossLink \"DisplayObject/pressmove:event\"}}{{/crossLink}}`\r\n\t * or `pressup` on a dynamic object (such as a {{#crossLink \"MovieClip\"}}{{/crossLink}} or {{#crossLink \"Container\"}}{{/crossLink}}),\r\n\t * then ensure you set {{#crossLink \"Container/mouseChildren:property\"}}{{/crossLink}} to `false`.\r\n\t * @event pressup\r\n\t * @since 0.7.0\r\n\t */\r\n\t \r\n\t/**\r\n\t * Dispatched when the display object is added to a parent container.\r\n\t * @event added\r\n\t */\r\n\t \r\n\t/**\r\n\t * Dispatched when the display object is removed from its parent container.\r\n\t * @event removed\r\n\t */\r\n\t \r\n\t/**\r\n\t * Dispatched on each display object on a stage whenever the stage updates. This occurs immediately before the\r\n\t * rendering (draw) pass. When {{#crossLink \"Stage/update\"}}{{/crossLink}} is called, first all display objects on\r\n\t * the stage dispatch the tick event, then all of the display objects are drawn to stage. Children will have their\r\n\t * {{#crossLink \"tick:event\"}}{{/crossLink}} event dispatched in order of their depth prior to the event being\r\n\t * dispatched on their parent.\r\n\t * @event tick\r\n\t * @param {Object} target The object that dispatched the event.\r\n\t * @param {String} type The event type.\r\n\t * @param {Array} params An array containing any arguments that were passed to the Stage.update() method. For\r\n\t *      example if you called stage.update(\"hello\"), then the params would be [\"hello\"].\r\n\t * @since 0.6.0\r\n\t */\r\n\t\r\n\t\r\n// getter / setters:\r\n\t/**\r\n\t * Use the {{#crossLink \"DisplayObject/stage:property\"}}{{/crossLink}} property instead.\r\n\t * @method getStage\r\n\t * @return {Stage}\r\n\t * @deprecated\r\n\t **/\r\n\tp.getStage = function() {\r\n\t\t// uses dynamic access to avoid circular dependencies;\r\n\t\tvar o = this, _Stage = createjs[\"Stage\"];\r\n\t\twhile (o.parent) { o = o.parent; }\r\n\t\tif (o instanceof _Stage) { return o; }\r\n\t\treturn null;\r\n\t};\r\n\r\n\t/**\r\n\t * Returns the Stage instance that this display object will be rendered on, or null if it has not been added to one.\r\n\t * @property stage\r\n\t * @type {Stage}\r\n\t * @readonly\r\n\t **/\r\n\ttry {\r\n\t\tObject.defineProperties(p, {\r\n\t\t\tstage: { get: p.getStage }\r\n\t\t});\r\n\t} catch (e) {}\r\n\r\n\r\n// public methods:\r\n\t/**\r\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\r\n\t * This does not account for whether it would be visible within the boundaries of the stage.\r\n\t *\r\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\r\n\t * @method isVisible\r\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\r\n\t **/\r\n\tp.isVisible = function() {\r\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\r\n\t};\r\n\r\n\t/**\r\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\r\n\t * Returns <code>true</code> if the draw was handled (useful for overriding functionality).\r\n\t *\r\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\r\n\t * @method draw\r\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\r\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\r\n\t * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\r\n\t * @return {Boolean}\r\n\t **/\r\n\tp.draw = function(ctx, ignoreCache) {\r\n\t\tvar cacheCanvas = this.cacheCanvas;\r\n\t\tif (ignoreCache || !cacheCanvas) { return false; }\r\n\t\tvar scale = this._cacheScale;\r\n\t\tctx.drawImage(cacheCanvas, this._cacheOffsetX+this._filterOffsetX, this._cacheOffsetY+this._filterOffsetY, cacheCanvas.width/scale, cacheCanvas.height/scale);\r\n\t\treturn true;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Applies this display object's transformation, alpha, globalCompositeOperation, clipping path (mask), and shadow\r\n\t * to the specified context. This is typically called prior to {{#crossLink \"DisplayObject/draw\"}}{{/crossLink}}.\r\n\t * @method updateContext\r\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D to update.\r\n\t **/\r\n\tp.updateContext = function(ctx) {\r\n\t\tvar o=this, mask=o.mask, mtx= o._props.matrix;\r\n\t\t\r\n\t\tif (mask && mask.graphics && !mask.graphics.isEmpty()) {\r\n\t\t\tmask.getMatrix(mtx);\r\n\t\t\tctx.transform(mtx.a,  mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\r\n\t\t\t\r\n\t\t\tmask.graphics.drawAsPath(ctx);\r\n\t\t\tctx.clip();\r\n\t\t\t\r\n\t\t\tmtx.invert();\r\n\t\t\tctx.transform(mtx.a,  mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\r\n\t\t}\r\n\t\t\r\n\t\tthis.getMatrix(mtx);\r\n\t\tvar tx = mtx.tx, ty = mtx.ty;\r\n\t\tif (DisplayObject._snapToPixelEnabled && o.snapToPixel) {\r\n\t\t\ttx = tx + (tx < 0 ? -0.5 : 0.5) | 0;\r\n\t\t\tty = ty + (ty < 0 ? -0.5 : 0.5) | 0;\r\n\t\t}\r\n\t\tctx.transform(mtx.a,  mtx.b, mtx.c, mtx.d, tx, ty);\r\n\t\tctx.globalAlpha *= o.alpha;\r\n\t\tif (o.compositeOperation) { ctx.globalCompositeOperation = o.compositeOperation; }\r\n\t\tif (o.shadow) { this._applyShadow(ctx, o.shadow); }\r\n\t};\r\n\r\n\t/**\r\n\t * Draws the display object into a new canvas, which is then used for subsequent draws. For complex content\r\n\t * that does not change frequently (ex. a Container with many children that do not move, or a complex vector Shape),\r\n\t * this can provide for much faster rendering because the content does not need to be re-rendered each tick. The\r\n\t * cached display object can be moved, rotated, faded, etc freely, however if its content changes, you must\r\n\t * manually update the cache by calling <code>updateCache()</code> or <code>cache()</code> again. You must specify\r\n\t * the cache area via the x, y, w, and h parameters. This defines the rectangle that will be rendered and cached\r\n\t * using this display object's coordinates.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t * For example if you defined a Shape that drew a circle at 0, 0 with a radius of 25:\r\n\t *\r\n\t *      var shape = new createjs.Shape();\r\n\t *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0, 0, 25);\r\n\t *      myShape.cache(-25, -25, 50, 50);\r\n\t *\r\n\t * Note that filters need to be defined <em>before</em> the cache is applied. Check out the {{#crossLink \"Filter\"}}{{/crossLink}}\r\n\t * class for more information. Some filters (ex. BlurFilter) will not work as expected in conjunction with the scale param.\r\n\t * \r\n\t * Usually, the resulting cacheCanvas will have the dimensions width*scale by height*scale, however some filters (ex. BlurFilter)\r\n\t * will add padding to the canvas dimensions.\r\n\t *\r\n\t * @method cache\r\n\t * @param {Number} x The x coordinate origin for the cache region.\r\n\t * @param {Number} y The y coordinate origin for the cache region.\r\n\t * @param {Number} width The width of the cache region.\r\n\t * @param {Number} height The height of the cache region.\r\n\t * @param {Number} [scale=1] The scale at which the cache will be created. For example, if you cache a vector shape using\r\n\t * \tmyShape.cache(0,0,100,100,2) then the resulting cacheCanvas will be 200x200 px. This lets you scale and rotate\r\n\t * \tcached elements with greater fidelity. Default is 1.\r\n\t **/\r\n\tp.cache = function(x, y, width, height, scale) {\r\n\t\t// draw to canvas.\r\n\t\tscale = scale||1;\r\n\t\tif (!this.cacheCanvas) { this.cacheCanvas = createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"); }\r\n\t\tthis._cacheWidth = width;\r\n\t\tthis._cacheHeight = height;\r\n\t\tthis._cacheOffsetX = x;\r\n\t\tthis._cacheOffsetY = y;\r\n\t\tthis._cacheScale = scale;\r\n\t\tthis.updateCache();\r\n\t};\r\n\r\n\t/**\r\n\t * Redraws the display object to its cache. Calling updateCache without an active cache will throw an error.\r\n\t * If compositeOperation is null the current cache will be cleared prior to drawing. Otherwise the display object\r\n\t * will be drawn over the existing cache using the specified compositeOperation.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t * Clear the current graphics of a cached shape, draw some new instructions, and then update the cache. The new line\r\n\t * will be drawn on top of the old one.\r\n\t *\r\n\t *      // Not shown: Creating the shape, and caching it.\r\n\t *      shapeInstance.clear();\r\n\t *      shapeInstance.setStrokeStyle(3).beginStroke(\"#ff0000\").moveTo(100, 100).lineTo(200,200);\r\n\t *      shapeInstance.updateCache();\r\n\t *\r\n\t * @method updateCache\r\n\t * @param {String} compositeOperation The compositeOperation to use, or null to clear the cache and redraw it.\r\n\t * <a href=\"https://html.spec.whatwg.org/multipage/scripting.html#dom-context-2d-globalcompositeoperation\">\r\n\t * whatwg spec on compositing</a>.\r\n\t **/\r\n\tp.updateCache = function(compositeOperation) {\r\n\t\tvar cacheCanvas = this.cacheCanvas;\r\n\t\tif (!cacheCanvas) { throw \"cache() must be called before updateCache()\"; }\r\n\t\tvar scale = this._cacheScale, offX = this._cacheOffsetX*scale, offY = this._cacheOffsetY*scale;\r\n\t\tvar w = this._cacheWidth, h = this._cacheHeight, ctx = cacheCanvas.getContext(\"2d\");\r\n\t\t\r\n\t\tvar fBounds = this._getFilterBounds();\r\n\t\toffX += (this._filterOffsetX = fBounds.x);\r\n\t\toffY += (this._filterOffsetY = fBounds.y);\r\n\t\t\r\n\t\tw = Math.ceil(w*scale) + fBounds.width;\r\n\t\th = Math.ceil(h*scale) + fBounds.height;\r\n\t\tif (w != cacheCanvas.width || h != cacheCanvas.height) {\r\n\t\t\t// TODO: it would be nice to preserve the content if there is a compositeOperation.\r\n\t\t\tcacheCanvas.width = w;\r\n\t\t\tcacheCanvas.height = h;\r\n\t\t} else if (!compositeOperation) {\r\n\t\t\tctx.clearRect(0, 0, w+1, h+1);\r\n\t\t}\r\n\t\t\r\n\t\tctx.save();\r\n\t\tctx.globalCompositeOperation = compositeOperation;\r\n\t\tctx.setTransform(scale, 0, 0, scale, -offX, -offY);\r\n\t\tthis.draw(ctx, true);\r\n\t\t// TODO: filters and cache scale don't play well together at present.\r\n\t\tthis._applyFilters();\r\n\t\tctx.restore();\r\n\t\tthis.cacheID = DisplayObject._nextCacheID++;\r\n\t};\r\n\r\n\t/**\r\n\t * Clears the current cache. See {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} for more information.\r\n\t * @method uncache\r\n\t **/\r\n\tp.uncache = function() {\r\n\t\tthis._cacheDataURL = this.cacheCanvas = null;\r\n\t\tthis.cacheID = this._cacheOffsetX = this._cacheOffsetY = this._filterOffsetX = this._filterOffsetY = 0;\r\n\t\tthis._cacheScale = 1;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Returns a data URL for the cache, or null if this display object is not cached.\r\n\t * Uses cacheID to ensure a new data URL is not generated if the cache has not changed.\r\n\t * @method getCacheDataURL\r\n\t * @return {String} The image data url for the cache.\r\n\t **/\r\n\tp.getCacheDataURL = function() {\r\n\t\tif (!this.cacheCanvas) { return null; }\r\n\t\tif (this.cacheID != this._cacheDataURLID) { this._cacheDataURL = this.cacheCanvas.toDataURL(); }\r\n\t\treturn this._cacheDataURL;\r\n\t};\r\n\r\n\t/**\r\n\t * Transforms the specified x and y position from the coordinate space of the display object\r\n\t * to the global (stage) coordinate space. For example, this could be used to position an HTML label\r\n\t * over a specific point on a nested display object. Returns a Point instance with x and y properties\r\n\t * correlating to the transformed coordinates on the stage.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      displayObject.x = 300;\r\n\t *      displayObject.y = 200;\r\n\t *      stage.addChild(displayObject);\r\n\t *      var point = displayObject.localToGlobal(100, 100);\r\n\t *      // Results in x=400, y=300\r\n\t *\r\n\t * @method localToGlobal\r\n\t * @param {Number} x The x position in the source display object to transform.\r\n\t * @param {Number} y The y position in the source display object to transform.\r\n\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned. \r\n\t * @return {Point} A Point instance with x and y properties correlating to the transformed coordinates\r\n\t * on the stage.\r\n\t **/\r\n\tp.localToGlobal = function(x, y, pt) {\r\n\t\treturn this.getConcatenatedMatrix(this._props.matrix).transformPoint(x,y, pt||new createjs.Point());\r\n\t};\r\n\r\n\t/**\r\n\t * Transforms the specified x and y position from the global (stage) coordinate space to the\r\n\t * coordinate space of the display object. For example, this could be used to determine\r\n\t * the current mouse position within the display object. Returns a Point instance with x and y properties\r\n\t * correlating to the transformed position in the display object's coordinate space.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      displayObject.x = 300;\r\n\t *      displayObject.y = 200;\r\n\t *      stage.addChild(displayObject);\r\n\t *      var point = displayObject.globalToLocal(100, 100);\r\n\t *      // Results in x=-200, y=-100\r\n\t *\r\n\t * @method globalToLocal\r\n\t * @param {Number} x The x position on the stage to transform.\r\n\t * @param {Number} y The y position on the stage to transform.\r\n\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned. \r\n\t * @return {Point} A Point instance with x and y properties correlating to the transformed position in the\r\n\t * display object's coordinate space.\r\n\t **/\r\n\tp.globalToLocal = function(x, y, pt) {\r\n\t\treturn this.getConcatenatedMatrix(this._props.matrix).invert().transformPoint(x,y, pt||new createjs.Point());\r\n\t};\r\n\r\n\t/**\r\n\t * Transforms the specified x and y position from the coordinate space of this display object to the coordinate\r\n\t * space of the target display object. Returns a Point instance with x and y properties correlating to the\r\n\t * transformed position in the target's coordinate space. Effectively the same as using the following code with\r\n\t * {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}} and {{#crossLink \"DisplayObject/globalToLocal\"}}{{/crossLink}}.\r\n\t *\r\n\t *      var pt = this.localToGlobal(x, y);\r\n\t *      pt = target.globalToLocal(pt.x, pt.y);\r\n\t *\r\n\t * @method localToLocal\r\n\t * @param {Number} x The x position in the source display object to transform.\r\n\t * @param {Number} y The y position on the source display object to transform.\r\n\t * @param {DisplayObject} target The target display object to which the coordinates will be transformed.\r\n\t * @param {Point | Object} [pt] An object to copy the result into. If omitted a new Point object with x/y properties will be returned. \r\n\t * @return {Point} Returns a Point instance with x and y properties correlating to the transformed position\r\n\t * in the target's coordinate space.\r\n\t **/\r\n\tp.localToLocal = function(x, y, target, pt) {\r\n\t\tpt = this.localToGlobal(x, y, pt);\r\n\t\treturn target.globalToLocal(pt.x, pt.y, pt);\r\n\t};\r\n\r\n\t/**\r\n\t * Shortcut method to quickly set the transform properties on the display object. All parameters are optional.\r\n\t * Omitted parameters will have the default value set.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      displayObject.setTransform(100, 100, 2, 2);\r\n\t *\r\n\t * @method setTransform\r\n\t * @param {Number} [x=0] The horizontal translation (x position) in pixels\r\n\t * @param {Number} [y=0] The vertical translation (y position) in pixels\r\n\t * @param {Number} [scaleX=1] The horizontal scale, as a percentage of 1\r\n\t * @param {Number} [scaleY=1] the vertical scale, as a percentage of 1\r\n\t * @param {Number} [rotation=0] The rotation, in degrees\r\n\t * @param {Number} [skewX=0] The horizontal skew factor\r\n\t * @param {Number} [skewY=0] The vertical skew factor\r\n\t * @param {Number} [regX=0] The horizontal registration point in pixels\r\n\t * @param {Number} [regY=0] The vertical registration point in pixels\r\n\t * @return {DisplayObject} Returns this instance. Useful for chaining commands.\r\n\t * @chainable\r\n\t*/\r\n\tp.setTransform = function(x, y, scaleX, scaleY, rotation, skewX, skewY, regX, regY) {\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.scaleX = scaleX == null ? 1 : scaleX;\r\n\t\tthis.scaleY = scaleY == null ? 1 : scaleY;\r\n\t\tthis.rotation = rotation || 0;\r\n\t\tthis.skewX = skewX || 0;\r\n\t\tthis.skewY = skewY || 0;\r\n\t\tthis.regX = regX || 0;\r\n\t\tthis.regY = regY || 0;\r\n\t\treturn this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Returns a matrix based on this object's current transform.\r\n\t * @method getMatrix\r\n\t * @param {Matrix2D} matrix Optional. A Matrix2D object to populate with the calculated values. If null, a new\r\n\t * Matrix object is returned.\r\n\t * @return {Matrix2D} A matrix representing this display object's transform.\r\n\t **/\r\n\tp.getMatrix = function(matrix) {\r\n\t\tvar o = this, mtx = matrix&&matrix.identity() || new createjs.Matrix2D();\r\n\t\treturn o.transformMatrix ?  mtx.copy(o.transformMatrix) : mtx.appendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation, o.skewX, o.skewY, o.regX, o.regY);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Generates a Matrix2D object representing the combined transform of the display object and all of its\r\n\t * parent Containers up to the highest level ancestor (usually the {{#crossLink \"Stage\"}}{{/crossLink}}). This can\r\n\t * be used to transform positions between coordinate spaces, such as with {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}}\r\n\t * and {{#crossLink \"DisplayObject/globalToLocal\"}}{{/crossLink}}.\r\n\t * @method getConcatenatedMatrix\r\n\t * @param {Matrix2D} [matrix] A {{#crossLink \"Matrix2D\"}}{{/crossLink}} object to populate with the calculated values.\r\n\t * If null, a new Matrix2D object is returned.\r\n\t * @return {Matrix2D} The combined matrix.\r\n\t **/\r\n\tp.getConcatenatedMatrix = function(matrix) {\r\n\t\tvar o = this, mtx = this.getMatrix(matrix);\r\n\t\twhile (o = o.parent) {\r\n\t\t\tmtx.prependMatrix(o.getMatrix(o._props.matrix));\r\n\t\t}\r\n\t\treturn mtx;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Generates a DisplayProps object representing the combined display properties of the  object and all of its\r\n\t * parent Containers up to the highest level ancestor (usually the {{#crossLink \"Stage\"}}{{/crossLink}}).\r\n\t * @method getConcatenatedDisplayProps\r\n\t * @param {DisplayProps} [props] A {{#crossLink \"DisplayProps\"}}{{/crossLink}} object to populate with the calculated values.\r\n\t * If null, a new DisplayProps object is returned.\r\n\t * @return {DisplayProps} The combined display properties.\r\n\t **/\r\n\tp.getConcatenatedDisplayProps = function(props) {\r\n\t\tprops = props ? props.identity() : new createjs.DisplayProps();\r\n\t\tvar o = this, mtx = o.getMatrix(props.matrix); \r\n\t\tdo {\r\n\t\t\tprops.prepend(o.visible, o.alpha, o.shadow, o.compositeOperation);\r\n\t\t\t\r\n\t\t\t// we do this to avoid problems with the matrix being used for both operations when o._props.matrix is passed in as the props param.\r\n\t\t\t// this could be simplified (ie. just done as part of the prepend above) if we switched to using a pool.\r\n\t\t\tif (o != this) { mtx.prependMatrix(o.getMatrix(o._props.matrix)); }\r\n\t\t} while (o = o.parent);\r\n\t\treturn props;\r\n\t};\r\n\r\n\t/**\r\n\t * Tests whether the display object intersects the specified point in <em>local</em> coordinates (ie. draws a pixel\r\n\t * with alpha > 0 at the specified position). This ignores the alpha, shadow, hitArea, mask, and compositeOperation\r\n\t * of the display object.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t * \t\tvar myShape = new createjs.Shape();\r\n\t * \t\tmyShape.graphics.beginFill(\"red\").drawRect(100, 100, 20, 50);\r\n\t *\r\n\t * \t\tconsole.log(myShape.hitTest(10,10); // false\r\n\t * \t\tconsole.log(myShape.hitTest(110, 25); // true\r\n\t *\r\n\t * Note that to use Stage coordinates (such as {{#crossLink \"Stage/mouseX:property\"}}{{/crossLink}}), they must\r\n\t * first be converted to local coordinates:\r\n\t *\r\n\t *      stage.addEventListener(\"stagemousedown\", handleMouseDown);\r\n\t *      function handleMouseDown(event) {\r\n\t *      \tvar p = myShape.globalToLocal(stage.mouseX, stage.mouseY);\r\n\t *          var hit = myShape.hitTest(p.x, p.y);\r\n\t *      }\r\n\t *\r\n\t * Shape-to-shape collision is not currently supported by EaselJS.\r\n\t *\r\n\t * @method hitTest\r\n\t * @param {Number} x The x position to check in the display object's local coordinates.\r\n\t * @param {Number} y The y position to check in the display object's local coordinates.\r\n\t * @return {Boolean} A Boolean indicating whether a visible portion of the DisplayObject intersect the specified\r\n\t * local Point.\r\n\t*/\r\n\tp.hitTest = function(x, y) {\r\n\t\tvar ctx = DisplayObject._hitTestContext;\r\n\t\tctx.setTransform(1, 0, 0, 1, -x, -y);\r\n\t\tthis.draw(ctx);\r\n\r\n\t\tvar hit = this._testHit(ctx);\r\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\tctx.clearRect(0, 0, 2, 2);\r\n\t\treturn hit;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Provides a chainable shortcut method for setting a number of properties on the instance.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      var myGraphics = new createjs.Graphics().beginFill(\"#ff0000\").drawCircle(0, 0, 25);\r\n\t *      var shape = stage.addChild(new createjs.Shape()).set({graphics:myGraphics, x:100, y:100, alpha:0.5});\r\n\t *\r\n\t * @method set\r\n\t * @param {Object} props A generic object containing properties to copy to the DisplayObject instance.\r\n\t * @return {DisplayObject} Returns the instance the method is called on (useful for chaining calls.)\r\n\t * @chainable\r\n\t*/\r\n\tp.set = function(props) {\r\n\t\tfor (var n in props) { this[n] = props[n]; }\r\n\t\treturn this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Returns a rectangle representing this object's bounds in its local coordinate system (ie. with no transformation).\r\n\t * Objects that have been cached will return the bounds of the cache.\r\n\t * \r\n\t * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use \r\n\t * {{#crossLink \"DisplayObject/setBounds\"}}{{/crossLink}} so that they are included when calculating Container\r\n\t * bounds.\r\n\t * \r\n\t * <table>\r\n\t * \t<tr><td><b>All</b></td><td>\r\n\t * \t\tAll display objects support setting bounds manually using setBounds(). Likewise, display objects that\r\n\t * \t\thave been cached using cache() will return the bounds of their cache. Manual and cache bounds will override\r\n\t * \t\tthe automatic calculations listed below.\r\n\t * \t</td></tr>\r\n\t * \t<tr><td><b>Bitmap</b></td><td>\r\n\t * \t\tReturns the width and height of the sourceRect (if specified) or image, extending from (x=0,y=0).\r\n\t * \t</td></tr>\r\n\t * \t<tr><td><b>Sprite</b></td><td>\r\n\t * \t\tReturns the bounds of the current frame. May have non-zero x/y if a frame registration point was specified\r\n\t * \t\tin the spritesheet data. See also {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}}\r\n\t * \t</td></tr>\r\n\t * \t<tr><td><b>Container</b></td><td>\r\n\t * \t\tReturns the aggregate (combined) bounds of all children that return a non-null value from getBounds().\r\n\t * \t</td></tr>\r\n\t * \t<tr><td><b>Shape</b></td><td>\r\n\t * \t\tDoes not currently support automatic bounds calculations. Use setBounds() to manually define bounds.\r\n\t * \t</td></tr>\r\n\t * \t<tr><td><b>Text</b></td><td>\r\n\t * \t\tReturns approximate bounds. Horizontal values (x/width) are quite accurate, but vertical values (y/height) are\r\n\t * \t\tnot, especially when using textBaseline values other than \"top\".\r\n\t * \t</td></tr>\r\n\t * \t<tr><td><b>BitmapText</b></td><td>\r\n\t * \t\tReturns approximate bounds. Values will be more accurate if spritesheet frame registration points are close\r\n\t * \t\tto (x=0,y=0).\r\n\t * \t</td></tr>\r\n\t* </table>\r\n\t * \r\n\t * Bounds can be expensive to calculate for some objects (ex. text, or containers with many children), and\r\n\t * are recalculated each time you call getBounds(). You can prevent recalculation on static objects by setting the\r\n\t * bounds explicitly:\r\n\t * \r\n\t * \tvar bounds = obj.getBounds();\r\n\t * \tobj.setBounds(bounds.x, bounds.y, bounds.width, bounds.height);\r\n\t * \t// getBounds will now use the set values, instead of recalculating\r\n\t * \r\n\t * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\r\n\t * values if you need to retain it.\r\n\t * \r\n\t * \tvar myBounds = obj.getBounds().clone();\r\n\t * \t// OR:\r\n\t * \tmyRect.copy(obj.getBounds());\r\n\t * \r\n\t * @method getBounds\r\n\t * @return {Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this\r\n\t * object.\r\n\t **/\r\n\tp.getBounds = function() {\r\n\t\tif (this._bounds) { return this._rectangle.copy(this._bounds); }\r\n\t\tvar cacheCanvas = this.cacheCanvas;\r\n\t\tif (cacheCanvas) {\r\n\t\t\tvar scale = this._cacheScale;\r\n\t\t\treturn this._rectangle.setValues(this._cacheOffsetX, this._cacheOffsetY, cacheCanvas.width/scale, cacheCanvas.height/scale);\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Returns a rectangle representing this object's bounds in its parent's coordinate system (ie. with transformations applied).\r\n\t * Objects that have been cached will return the transformed bounds of the cache.\r\n\t * \r\n\t * Not all display objects can calculate their own bounds (ex. Shape). For these objects, you can use \r\n\t * {{#crossLink \"DisplayObject/setBounds\"}}{{/crossLink}} so that they are included when calculating Container\r\n\t * bounds.\r\n\t * \r\n\t * To reduce memory impact, the returned Rectangle instance may be reused internally; clone the instance or copy its\r\n\t * values if you need to retain it.\r\n\t * \r\n\t * Container instances calculate aggregate bounds for all children that return bounds via getBounds.\r\n\t * @method getTransformedBounds\r\n\t * @return {Rectangle} A Rectangle instance representing the bounds, or null if bounds are not available for this object.\r\n\t **/\r\n\tp.getTransformedBounds = function() {\r\n\t\treturn this._getBounds();\r\n\t};\r\n\t\r\n\t/**\r\n\t * Allows you to manually specify the bounds of an object that either cannot calculate their own bounds (ex. Shape &\r\n\t * Text) for future reference, or so the object can be included in Container bounds. Manually set bounds will always\r\n\t * override calculated bounds.\r\n\t * \r\n\t * The bounds should be specified in the object's local (untransformed) coordinates. For example, a Shape instance\r\n\t * with a 25px radius circle centered at 0,0 would have bounds of (-25, -25, 50, 50).\r\n\t * @method setBounds\r\n\t * @param {Number} x The x origin of the bounds. Pass null to remove the manual bounds.\r\n\t * @param {Number} y The y origin of the bounds.\r\n\t * @param {Number} width The width of the bounds.\r\n\t * @param {Number} height The height of the bounds.\r\n\t **/\r\n\tp.setBounds = function(x, y, width, height) {\r\n\t\tif (x == null) { this._bounds = x; }\r\n\t\tthis._bounds = (this._bounds || new createjs.Rectangle()).setValues(x, y, width, height);\r\n\t};\r\n\r\n\t/**\r\n\t * Returns a clone of this DisplayObject. Some properties that are specific to this instance's current context are\r\n\t * reverted to their defaults (for example .parent). Caches are not maintained across clones, and some elements\r\n\t * are copied by reference (masks, individual filter instances, hit area)\r\n\t * @method clone\r\n\t * @return {DisplayObject} A clone of the current DisplayObject instance.\r\n\t **/\r\n\tp.clone = function() {\r\n\t\treturn this._cloneProps(new DisplayObject());\r\n\t};\r\n\r\n\t/**\r\n\t * Returns a string representation of this object.\r\n\t * @method toString\r\n\t * @return {String} a string representation of the instance.\r\n\t **/\r\n\tp.toString = function() {\r\n\t\treturn \"[DisplayObject (name=\"+  this.name +\")]\";\r\n\t};\r\n\r\n\r\n// private methods:\r\n\t// separated so it can be used more easily in subclasses:\r\n\t/**\r\n\t * @method _cloneProps\r\n\t * @param {DisplayObject} o The DisplayObject instance which will have properties from the current DisplayObject\r\n\t * instance copied into.\r\n\t * @return {DisplayObject} o\r\n\t * @protected\r\n\t **/\r\n\tp._cloneProps = function(o) {\r\n\t\to.alpha = this.alpha;\r\n\t\to.mouseEnabled = this.mouseEnabled;\r\n\t\to.tickEnabled = this.tickEnabled;\r\n\t\to.name = this.name;\r\n\t\to.regX = this.regX;\r\n\t\to.regY = this.regY;\r\n\t\to.rotation = this.rotation;\r\n\t\to.scaleX = this.scaleX;\r\n\t\to.scaleY = this.scaleY;\r\n\t\to.shadow = this.shadow;\r\n\t\to.skewX = this.skewX;\r\n\t\to.skewY = this.skewY;\r\n\t\to.visible = this.visible;\r\n\t\to.x  = this.x;\r\n\t\to.y = this.y;\r\n\t\to.compositeOperation = this.compositeOperation;\r\n\t\to.snapToPixel = this.snapToPixel;\r\n\t\to.filters = this.filters==null?null:this.filters.slice(0);\r\n\t\to.mask = this.mask;\r\n\t\to.hitArea = this.hitArea;\r\n\t\to.cursor = this.cursor;\r\n\t\to._bounds = this._bounds;\r\n\t\treturn o;\r\n\t};\r\n\r\n\t/**\r\n\t * @method _applyShadow\r\n\t * @protected\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t * @param {Shadow} shadow\r\n\t **/\r\n\tp._applyShadow = function(ctx, shadow) {\r\n\t\tshadow = shadow || Shadow.identity;\r\n\t\tctx.shadowColor = shadow.color;\r\n\t\tctx.shadowOffsetX = shadow.offsetX;\r\n\t\tctx.shadowOffsetY = shadow.offsetY;\r\n\t\tctx.shadowBlur = shadow.blur;\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * @method _tick\r\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\r\n\t * @protected\r\n\t **/\r\n\tp._tick = function(evtObj) {\r\n\t\t// because tick can be really performance sensitive, check for listeners before calling dispatchEvent.\r\n\t\tvar ls = this._listeners;\r\n\t\tif (ls && ls[\"tick\"]) {\r\n\t\t\t// reset & reuse the event object to avoid construction / GC costs:\r\n\t\t\tevtObj.target = null;\r\n\t\t\tevtObj.propagationStopped = evtObj.immediatePropagationStopped = false;\r\n\t\t\tthis.dispatchEvent(evtObj);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @method _testHit\r\n\t * @protected\r\n\t * @param {CanvasRenderingContext2D} ctx\r\n\t * @return {Boolean}\r\n\t **/\r\n\tp._testHit = function(ctx) {\r\n\t\ttry {\r\n\t\t\tvar hit = ctx.getImageData(0, 0, 1, 1).data[3] > 1;\r\n\t\t} catch (e) {\r\n\t\t\tif (!DisplayObject.suppressCrossDomainErrors) {\r\n\t\t\t\tthrow \"An error has occurred. This is most likely due to security restrictions on reading canvas pixel data with local or cross-domain images.\";\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn hit;\r\n\t};\r\n\r\n\t/**\r\n\t * @method _applyFilters\r\n\t * @protected\r\n\t **/\r\n\tp._applyFilters = function() {\r\n\t\tif (!this.filters || this.filters.length == 0 || !this.cacheCanvas) { return; }\r\n\t\tvar l = this.filters.length;\r\n\t\tvar ctx = this.cacheCanvas.getContext(\"2d\");\r\n\t\tvar w = this.cacheCanvas.width;\r\n\t\tvar h = this.cacheCanvas.height;\r\n\t\tfor (var i=0; i<l; i++) {\r\n\t\t\tthis.filters[i].applyFilter(ctx, 0, 0, w, h);\r\n\t\t}\r\n\t};\r\n\t\r\n\t/**\r\n\t * @method _getFilterBounds\r\n\t * @return {Rectangle}\r\n\t * @protected\r\n\t **/\r\n\tp._getFilterBounds = function(rect) {\r\n\t\tvar l, filters = this.filters, bounds = this._rectangle.setValues(0,0,0,0);\r\n\t\tif (!filters || !(l=filters.length)) { return bounds; }\r\n\t\t\r\n\t\tfor (var i=0; i<l; i++) {\r\n\t\t\tvar f = this.filters[i];\r\n\t\t\tf.getBounds&&f.getBounds(bounds);\r\n\t\t}\r\n\t\treturn bounds;\r\n\t};\r\n\t\r\n\t/**\r\n\t * @method _getBounds\r\n\t * @param {Matrix2D} matrix\r\n\t * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\r\n\t * @return {Rectangle}\r\n\t * @protected\r\n\t **/\r\n\tp._getBounds = function(matrix, ignoreTransform){\r\n\t\treturn this._transformBounds(this.getBounds(), matrix, ignoreTransform);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @method _transformBounds\r\n\t * @param {Rectangle} bounds\r\n\t * @param {Matrix2D} matrix\r\n\t * @param {Boolean} ignoreTransform\r\n\t * @return {Rectangle}\r\n\t * @protected\r\n\t **/\r\n\tp._transformBounds = function(bounds, matrix, ignoreTransform) {\r\n\t\tif (!bounds) { return bounds; }\r\n\t\tvar x = bounds.x, y = bounds.y, width = bounds.width, height = bounds.height, mtx = this._props.matrix;\r\n\t\tmtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\r\n\t\t\r\n\t\tif (x || y) { mtx.appendTransform(0,0,1,1,0,0,0,-x,-y); } // TODO: simplify this.\r\n\t\tif (matrix) { mtx.prependMatrix(matrix); }\r\n\t\t\r\n\t\tvar x_a = width*mtx.a, x_b = width*mtx.b;\r\n\t\tvar y_c = height*mtx.c, y_d = height*mtx.d;\r\n\t\tvar tx = mtx.tx, ty = mtx.ty;\r\n\t\t\r\n\t\tvar minX = tx, maxX = tx, minY = ty, maxY = ty;\r\n\r\n\t\tif ((x = x_a + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\r\n\t\tif ((x = x_a + y_c + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\r\n\t\tif ((x = y_c + tx) < minX) { minX = x; } else if (x > maxX) { maxX = x; }\r\n\t\t\r\n\t\tif ((y = x_b + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\r\n\t\tif ((y = x_b + y_d + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\r\n\t\tif ((y = y_d + ty) < minY) { minY = y; } else if (y > maxY) { maxY = y; }\r\n\t\t\r\n\t\treturn bounds.setValues(minX, minY, maxX-minX, maxY-minY);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Indicates whether the display object has any mouse event listeners or a cursor.\r\n\t * @method _isMouseOpaque\r\n\t * @return {Boolean}\r\n\t * @protected\r\n\t **/\r\n\tp._hasMouseEventListener = function() {\r\n\t\tvar evts = DisplayObject._MOUSE_EVENTS;\r\n\t\tfor (var i= 0, l=evts.length; i<l; i++) {\r\n\t\t\tif (this.hasEventListener(evts[i])) { return true; }\r\n\t\t}\r\n\t\treturn !!this.cursor;\r\n\t};\r\n\r\n\tcreatejs.DisplayObject = createjs.promote(DisplayObject, \"EventDispatcher\");\r\n}());\n\n//##############################################################################\n// Container.js\n//##############################################################################\n\n(function() {\r\n\t\"use strict\";\r\n\t\r\n\r\n// constructor:\r\n/**\r\n * A Container is a nestable display list that allows you to work with compound display elements. For  example you could\r\n * group arm, leg, torso and head {{#crossLink \"Bitmap\"}}{{/crossLink}} instances together into a Person Container, and\r\n * transform them as a group, while still being able to move the individual parts relative to each other. Children of\r\n * containers have their <code>transform</code> and <code>alpha</code> properties concatenated with their parent\r\n * Container.\r\n *\r\n * For example, a {{#crossLink \"Shape\"}}{{/crossLink}} with x=100 and alpha=0.5, placed in a Container with <code>x=50</code>\r\n * and <code>alpha=0.7</code> will be rendered to the canvas at <code>x=150</code> and <code>alpha=0.35</code>.\r\n * Containers have some overhead, so you generally shouldn't create a Container to hold a single child.\r\n *\r\n * <h4>Example</h4>\r\n *\r\n *      var container = new createjs.Container();\r\n *      container.addChild(bitmapInstance, shapeInstance);\r\n *      container.x = 100;\r\n *\r\n * @class Container\r\n * @extends DisplayObject\r\n * @constructor\r\n **/\r\n\tfunction Container() {\r\n\t\tthis.DisplayObject_constructor();\r\n\t\t\r\n\t// public properties:\r\n\t\t/**\r\n\t\t * The array of children in the display list. You should usually use the child management methods such as\r\n\t\t * {{#crossLink \"Container/addChild\"}}{{/crossLink}}, {{#crossLink \"Container/removeChild\"}}{{/crossLink}},\r\n\t\t * {{#crossLink \"Container/swapChildren\"}}{{/crossLink}}, etc, rather than accessing this directly, but it is\r\n\t\t * included for advanced uses.\r\n\t\t * @property children\r\n\t\t * @type Array\r\n\t\t * @default null\r\n\t\t **/\r\n\t\tthis.children = [];\r\n\t\t\r\n\t\t/**\r\n\t\t * Indicates whether the children of this container are independently enabled for mouse/pointer interaction.\r\n\t\t * If false, the children will be aggregated under the container - for example, a click on a child shape would\r\n\t\t * trigger a click event on the container.\r\n\t\t * @property mouseChildren\r\n\t\t * @type Boolean\r\n\t\t * @default true\r\n\t\t **/\r\n\t\tthis.mouseChildren = true;\r\n\t\t\r\n\t\t/**\r\n\t\t * If false, the tick will not be propagated to children of this Container. This can provide some performance benefits.\r\n\t\t * In addition to preventing the \"tick\" event from being dispatched, it will also prevent tick related updates\r\n\t\t * on some display objects (ex. Sprite & MovieClip frame advancing, DOMElement visibility handling).\r\n\t\t * @property tickChildren\r\n\t\t * @type Boolean\r\n\t\t * @default true\r\n\t\t **/\r\n\t\tthis.tickChildren = true;\r\n\t}\r\n\tvar p = createjs.extend(Container, createjs.DisplayObject);\r\n\t\r\n\t\r\n// getter / setters:\r\n\t/**\r\n\t * Use the {{#crossLink \"Container/numChildren:property\"}}{{/crossLink}} property instead.\r\n\t * @method getNumChildren\r\n\t * @return {Number}\r\n\t * @deprecated\r\n\t **/\r\n\tp.getNumChildren = function() {\r\n\t\treturn this.children.length;\r\n\t};\r\n\r\n\t/**\r\n\t * Returns the number of children in the container.\r\n\t * @property numChildren\r\n\t * @type {Number}\r\n\t * @readonly\r\n\t **/\r\n\ttry {\r\n\t\tObject.defineProperties(p, {\r\n\t\t\tnumChildren: { get: p.getNumChildren }\r\n\t\t});\r\n\t} catch (e) {}\r\n\t\r\n\r\n// public methods:\r\n\t/**\r\n\t * Constructor alias for backwards compatibility. This method will be removed in future versions.\r\n\t * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\r\n\t * @method initialize\r\n\t * @deprecated in favour of `createjs.promote()`\r\n\t **/\r\n\tp.initialize = Container; // TODO: deprecated.\r\n\t\r\n\t/**\r\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\r\n\t * This does not account for whether it would be visible within the boundaries of the stage.\r\n\t *\r\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\r\n\t * @method isVisible\r\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\r\n\t **/\r\n\tp.isVisible = function() {\r\n\t\tvar hasContent = this.cacheCanvas || this.children.length;\r\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\r\n\t};\r\n\r\n\t/**\r\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\r\n\t * Returns true if the draw was handled (useful for overriding functionality).\r\n\t *\r\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\r\n\t * @method draw\r\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\r\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache.\r\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\r\n\t * into itself).\r\n\t **/\r\n\tp.draw = function(ctx, ignoreCache) {\r\n\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\r\n\t\t\r\n\t\t// this ensures we don't have issues with display list changes that occur during a draw:\r\n\t\tvar list = this.children.slice();\r\n\t\tfor (var i=0,l=list.length; i<l; i++) {\r\n\t\t\tvar child = list[i];\r\n\t\t\tif (!child.isVisible()) { continue; }\r\n\t\t\t\r\n\t\t\t// draw the child:\r\n\t\t\tctx.save();\r\n\t\t\tchild.updateContext(ctx);\r\n\t\t\tchild.draw(ctx);\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t\treturn true;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Adds a child to the top of the display list.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t * \t\tcontainer.addChild(bitmapInstance);\r\n\t *\r\n\t * You can also add multiple children at once:\r\n\t *\r\n\t * \t\tcontainer.addChild(bitmapInstance, shapeInstance, textInstance);\r\n\t *\r\n\t * @method addChild\r\n\t * @param {DisplayObject} child The display object to add.\r\n\t * @return {DisplayObject} The child that was added, or the last child if multiple children were added.\r\n\t **/\r\n\tp.addChild = function(child) {\r\n\t\tif (child == null) { return child; }\r\n\t\tvar l = arguments.length;\r\n\t\tif (l > 1) {\r\n\t\t\tfor (var i=0; i<l; i++) { this.addChild(arguments[i]); }\r\n\t\t\treturn arguments[l-1];\r\n\t\t}\r\n\t\tif (child.parent) { child.parent.removeChild(child); }\r\n\t\tchild.parent = this;\r\n\t\tthis.children.push(child);\r\n\t\tchild.dispatchEvent(\"added\");\r\n\t\treturn child;\r\n\t};\r\n\r\n\t/**\r\n\t * Adds a child to the display list at the specified index, bumping children at equal or greater indexes up one, and\r\n\t * setting its parent to this Container.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      addChildAt(child1, index);\r\n\t *\r\n\t * You can also add multiple children, such as:\r\n\t *\r\n\t *      addChildAt(child1, child2, ..., index);\r\n\t *\r\n\t * The index must be between 0 and numChildren. For example, to add myShape under otherShape in the display list,\r\n\t * you could use:\r\n\t *\r\n\t *      container.addChildAt(myShape, container.getChildIndex(otherShape));\r\n\t *\r\n\t * This would also bump otherShape's index up by one. Fails silently if the index is out of range.\r\n\t *\r\n\t * @method addChildAt\r\n\t * @param {DisplayObject} child The display object to add.\r\n\t * @param {Number} index The index to add the child at.\r\n\t * @return {DisplayObject} Returns the last child that was added, or the last child if multiple children were added.\r\n\t **/\r\n\tp.addChildAt = function(child, index) {\r\n\t\tvar l = arguments.length;\r\n\t\tvar indx = arguments[l-1]; // can't use the same name as the index param or it replaces arguments[1]\r\n\t\tif (indx < 0 || indx > this.children.length) { return arguments[l-2]; }\r\n\t\tif (l > 2) {\r\n\t\t\tfor (var i=0; i<l-1; i++) { this.addChildAt(arguments[i], indx+i); }\r\n\t\t\treturn arguments[l-2];\r\n\t\t}\r\n\t\tif (child.parent) { child.parent.removeChild(child); }\r\n\t\tchild.parent = this;\r\n\t\tthis.children.splice(index, 0, child);\r\n\t\tchild.dispatchEvent(\"added\");\r\n\t\treturn child;\r\n\t};\r\n\r\n\t/**\r\n\t * Removes the specified child from the display list. Note that it is faster to use removeChildAt() if the index is\r\n\t * already known.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      container.removeChild(child);\r\n\t *\r\n\t * You can also remove multiple children:\r\n\t *\r\n\t *      removeChild(child1, child2, ...);\r\n\t *\r\n\t * Returns true if the child (or children) was removed, or false if it was not in the display list.\r\n\t * @method removeChild\r\n\t * @param {DisplayObject} child The child to remove.\r\n\t * @return {Boolean} true if the child (or children) was removed, or false if it was not in the display list.\r\n\t **/\r\n\tp.removeChild = function(child) {\r\n\t\tvar l = arguments.length;\r\n\t\tif (l > 1) {\r\n\t\t\tvar good = true;\r\n\t\t\tfor (var i=0; i<l; i++) { good = good && this.removeChild(arguments[i]); }\r\n\t\t\treturn good;\r\n\t\t}\r\n\t\treturn this.removeChildAt(createjs.indexOf(this.children, child));\r\n\t};\r\n\r\n\t/**\r\n\t * Removes the child at the specified index from the display list, and sets its parent to null.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      container.removeChildAt(2);\r\n\t *\r\n\t * You can also remove multiple children:\r\n\t *\r\n\t *      container.removeChild(2, 7, ...)\r\n\t *\r\n\t * Returns true if the child (or children) was removed, or false if any index was out of range.\r\n\t * @method removeChildAt\r\n\t * @param {Number} index The index of the child to remove.\r\n\t * @return {Boolean} true if the child (or children) was removed, or false if any index was out of range.\r\n\t **/\r\n\tp.removeChildAt = function(index) {\r\n\t\tvar l = arguments.length;\r\n\t\tif (l > 1) {\r\n\t\t\tvar a = [];\r\n\t\t\tfor (var i=0; i<l; i++) { a[i] = arguments[i]; }\r\n\t\t\ta.sort(function(a, b) { return b-a; });\r\n\t\t\tvar good = true;\r\n\t\t\tfor (var i=0; i<l; i++) { good = good && this.removeChildAt(a[i]); }\r\n\t\t\treturn good;\r\n\t\t}\r\n\t\tif (index < 0 || index > this.children.length-1) { return false; }\r\n\t\tvar child = this.children[index];\r\n\t\tif (child) { child.parent = null; }\r\n\t\tthis.children.splice(index, 1);\r\n\t\tchild.dispatchEvent(\"removed\");\r\n\t\treturn true;\r\n\t};\r\n\r\n\t/**\r\n\t * Removes all children from the display list.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t * \tcontainer.removeAllChildren();\r\n\t *\r\n\t * @method removeAllChildren\r\n\t **/\r\n\tp.removeAllChildren = function() {\r\n\t\tvar kids = this.children;\r\n\t\twhile (kids.length) { this.removeChildAt(0); }\r\n\t};\r\n\r\n\t/**\r\n\t * Returns the child at the specified index.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      container.getChildAt(2);\r\n\t *\r\n\t * @method getChildAt\r\n\t * @param {Number} index The index of the child to return.\r\n\t * @return {DisplayObject} The child at the specified index. Returns null if there is no child at the index.\r\n\t **/\r\n\tp.getChildAt = function(index) {\r\n\t\treturn this.children[index];\r\n\t};\r\n\t\r\n\t/**\r\n\t * Returns the child with the specified name.\r\n\t * @method getChildByName\r\n\t * @param {String} name The name of the child to return.\r\n\t * @return {DisplayObject} The child with the specified name.\r\n\t **/\r\n\tp.getChildByName = function(name) {\r\n\t\tvar kids = this.children;\r\n\t\tfor (var i=0,l=kids.length;i<l;i++) {\r\n\t\t\tif(kids[i].name == name) { return kids[i]; }\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\r\n\t/**\r\n\t * Performs an array sort operation on the child list.\r\n\t *\r\n\t * <h4>Example: Display children with a higher y in front.</h4>\r\n\t * \r\n\t *      var sortFunction = function(obj1, obj2, options) {\r\n\t *          if (obj1.y > obj2.y) { return 1; }\r\n\t *          if (obj1.y < obj2.y) { return -1; }\r\n\t *          return 0;\r\n\t *      }\r\n\t *      container.sortChildren(sortFunction);\r\n\t *\r\n\t * @method sortChildren\r\n\t * @param {Function} sortFunction the function to use to sort the child list. See JavaScript's <code>Array.sort</code>\r\n\t * documentation for details.\r\n\t **/\r\n\tp.sortChildren = function(sortFunction) {\r\n\t\tthis.children.sort(sortFunction);\r\n\t};\r\n\r\n\t/**\r\n\t * Returns the index of the specified child in the display list, or -1 if it is not in the display list.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      var index = container.getChildIndex(child);\r\n\t *\r\n\t * @method getChildIndex\r\n\t * @param {DisplayObject} child The child to return the index of.\r\n\t * @return {Number} The index of the specified child. -1 if the child is not found.\r\n\t **/\r\n\tp.getChildIndex = function(child) {\r\n\t\treturn createjs.indexOf(this.children, child);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Swaps the children at the specified indexes. Fails silently if either index is out of range.\r\n\t * @method swapChildrenAt\r\n\t * @param {Number} index1\r\n\t * @param {Number} index2\r\n\t **/\r\n\tp.swapChildrenAt = function(index1, index2) {\r\n\t\tvar kids = this.children;\r\n\t\tvar o1 = kids[index1];\r\n\t\tvar o2 = kids[index2];\r\n\t\tif (!o1 || !o2) { return; }\r\n\t\tkids[index1] = o2;\r\n\t\tkids[index2] = o1;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Swaps the specified children's depth in the display list. Fails silently if either child is not a child of this\r\n\t * Container.\r\n\t * @method swapChildren\r\n\t * @param {DisplayObject} child1\r\n\t * @param {DisplayObject} child2\r\n\t **/\r\n\tp.swapChildren = function(child1, child2) {\r\n\t\tvar kids = this.children;\r\n\t\tvar index1,index2;\r\n\t\tfor (var i=0,l=kids.length;i<l;i++) {\r\n\t\t\tif (kids[i] == child1) { index1 = i; }\r\n\t\t\tif (kids[i] == child2) { index2 = i; }\r\n\t\t\tif (index1 != null && index2 != null) { break; }\r\n\t\t}\r\n\t\tif (i==l) { return; } // TODO: throw error?\r\n\t\tkids[index1] = child2;\r\n\t\tkids[index2] = child1;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Changes the depth of the specified child. Fails silently if the child is not a child of this container, or the index is out of range.\r\n\t * @param {DisplayObject} child\r\n\t * @param {Number} index  \r\n\t * @method setChildIndex\r\n\t **/\r\n\tp.setChildIndex = function(child, index) {\r\n\t\tvar kids = this.children, l=kids.length;\r\n\t\tif (child.parent != this || index < 0 || index >= l) { return; }\r\n\t\tfor (var i=0;i<l;i++) {\r\n\t\t\tif (kids[i] == child) { break; }\r\n\t\t}\r\n\t\tif (i==l || i == index) { return; }\r\n\t\tkids.splice(i,1);\r\n\t\tkids.splice(index,0,child);\r\n\t};\r\n\r\n\t/**\r\n\t * Returns true if the specified display object either is this container or is a descendent (child, grandchild, etc)\r\n\t * of this container.\r\n\t * @method contains\r\n\t * @param {DisplayObject} child The DisplayObject to be checked.\r\n\t * @return {Boolean} true if the specified display object either is this container or is a descendent.\r\n\t **/\r\n\tp.contains = function(child) {\r\n\t\twhile (child) {\r\n\t\t\tif (child == this) { return true; }\r\n\t\t\tchild = child.parent;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\t/**\r\n\t * Tests whether the display object intersects the specified local point (ie. draws a pixel with alpha > 0 at the\r\n\t * specified position). This ignores the alpha, shadow and compositeOperation of the display object, and all\r\n\t * transform properties including regX/Y.\r\n\t * @method hitTest\r\n\t * @param {Number} x The x position to check in the display object's local coordinates.\r\n\t * @param {Number} y The y position to check in the display object's local coordinates.\r\n\t * @return {Boolean} A Boolean indicating whether there is a visible section of a DisplayObject that overlaps the specified\r\n\t * coordinates.\r\n\t **/\r\n\tp.hitTest = function(x, y) {\r\n\t\t// TODO: optimize to use the fast cache check where possible.\r\n\t\treturn (this.getObjectUnderPoint(x, y) != null);\r\n\t};\r\n\r\n\t/**\r\n\t * Returns an array of all display objects under the specified coordinates that are in this container's display\r\n\t * list. This routine ignores any display objects with {{#crossLink \"DisplayObject/mouseEnabled:property\"}}{{/crossLink}}\r\n\t * set to `false`. The array will be sorted in order of visual depth, with the top-most display object at index 0.\r\n\t * This uses shape based hit detection, and can be an expensive operation to run, so it is best to use it carefully.\r\n\t * For example, if testing for objects under the mouse, test on tick (instead of on {{#crossLink \"DisplayObject/mousemove:event\"}}{{/crossLink}}),\r\n\t * and only if the mouse's position has changed.\r\n\t * \r\n\t * <ul>\r\n\t *     <li>By default (mode=0) this method evaluates all display objects.</li>\r\n\t *     <li>By setting the `mode` parameter to `1`, the {{#crossLink \"DisplayObject/mouseEnabled:property\"}}{{/crossLink}}\r\n\t * \t\tand {{#crossLink \"mouseChildren:property\"}}{{/crossLink}} properties will be respected.</li>\r\n\t * \t   <li>Setting the `mode` to `2` additionally excludes display objects that do not have active mouse event\r\n\t * \t   \tlisteners or a {{#crossLink \"DisplayObject:cursor:property\"}}{{/crossLink}} property. That is, only objects\r\n\t * \t   \tthat would normally intercept mouse interaction will be included. This can significantly improve performance\r\n\t * \t   \tin some cases by reducing the number of display objects that need to be tested.</li>\r\n\t * </li>\r\n\t * \r\n\t * This method accounts for both {{#crossLink \"DisplayObject/hitArea:property\"}}{{/crossLink}} and {{#crossLink \"DisplayObject/mask:property\"}}{{/crossLink}}.\r\n\t * @method getObjectsUnderPoint\r\n\t * @param {Number} x The x position in the container to test.\r\n\t * @param {Number} y The y position in the container to test.\r\n\t * @param {Number} [mode=0] The mode to use to determine which display objects to include. 0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\r\n\t * @return {Array} An Array of DisplayObjects under the specified coordinates.\r\n\t **/\r\n\tp.getObjectsUnderPoint = function(x, y, mode) {\r\n\t\tvar arr = [];\r\n\t\tvar pt = this.localToGlobal(x, y);\r\n\t\tthis._getObjectsUnderPoint(pt.x, pt.y, arr, mode>0, mode==1);\r\n\t\treturn arr;\r\n\t};\r\n\r\n\t/**\r\n\t * Similar to {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}}, but returns only the top-most display\r\n\t * object. This runs significantly faster than <code>getObjectsUnderPoint()</code>, but is still potentially an expensive\r\n\t * operation. See {{#crossLink \"Container/getObjectsUnderPoint\"}}{{/crossLink}} for more information.\r\n\t * @method getObjectUnderPoint\r\n\t * @param {Number} x The x position in the container to test.\r\n\t * @param {Number} y The y position in the container to test.\r\n\t * @param {Number} mode The mode to use to determine which display objects to include.  0-all, 1-respect mouseEnabled/mouseChildren, 2-only mouse opaque objects.\r\n\t * @return {DisplayObject} The top-most display object under the specified coordinates.\r\n\t **/\r\n\tp.getObjectUnderPoint = function(x, y, mode) {\r\n\t\tvar pt = this.localToGlobal(x, y);\r\n\t\treturn this._getObjectsUnderPoint(pt.x, pt.y, null, mode>0, mode==1);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Docced in superclass.\r\n\t */\r\n\tp.getBounds = function() {\r\n\t\treturn this._getBounds(null, true);\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Docced in superclass.\r\n\t */\r\n\tp.getTransformedBounds = function() {\r\n\t\treturn this._getBounds();\r\n\t};\r\n\r\n\t/**\r\n\t * Returns a clone of this Container. Some properties that are specific to this instance's current context are\r\n\t * reverted to their defaults (for example .parent).\r\n\t * @method clone\r\n\t * @param {Boolean} [recursive=false] If true, all of the descendants of this container will be cloned recursively. If false, the\r\n\t * properties of the container will be cloned, but the new instance will not have any children.\r\n\t * @return {Container} A clone of the current Container instance.\r\n\t **/\r\n\tp.clone = function(recursive) {\r\n\t\tvar o = this._cloneProps(new Container());\r\n\t\tif (recursive) { this._cloneChildren(o); }\r\n\t\treturn o;\r\n\t};\r\n\r\n\t/**\r\n\t * Returns a string representation of this object.\r\n\t * @method toString\r\n\t * @return {String} a string representation of the instance.\r\n\t **/\r\n\tp.toString = function() {\r\n\t\treturn \"[Container (name=\"+  this.name +\")]\";\r\n\t};\r\n\r\n\r\n// private methods:\r\n\t/**\r\n\t * @method _tick\r\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\r\n\t * @protected\r\n\t **/\r\n\tp._tick = function(evtObj) {\r\n\t\tif (this.tickChildren) {\r\n\t\t\tfor (var i=this.children.length-1; i>=0; i--) {\r\n\t\t\t\tvar child = this.children[i];\r\n\t\t\t\tif (child.tickEnabled && child._tick) { child._tick(evtObj); }\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.DisplayObject__tick(evtObj);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Recursively clones all children of this container, and adds them to the target container.\r\n\t * @method cloneChildren\r\n\t * @protected\r\n\t * @param {Container} o The target container.\r\n\t **/\r\n\tp._cloneChildren = function(o) {\r\n\t\tif (o.children.length) { o.removeAllChildren(); }\r\n\t\tvar arr = o.children;\r\n\t\tfor (var i=0, l=this.children.length; i<l; i++) {\r\n\t\t\tvar clone = this.children[i].clone(true);\r\n\t\t\tclone.parent = o;\r\n\t\t\tarr.push(clone);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @method _getObjectsUnderPoint\r\n\t * @param {Number} x\r\n\t * @param {Number} y\r\n\t * @param {Array} arr\r\n\t * @param {Boolean} mouse If true, it will respect mouse interaction properties like mouseEnabled, mouseChildren, and active listeners.\r\n\t * @param {Boolean} activeListener If true, there is an active mouse event listener on a parent object.\r\n\t * @param {Number} currentDepth Indicates the current depth of the search.\r\n\t * @return {DisplayObject}\r\n\t * @protected\r\n\t **/\r\n\tp._getObjectsUnderPoint = function(x, y, arr, mouse, activeListener, currentDepth) {\r\n\t\tcurrentDepth = currentDepth || 0;\r\n\t\tif (!currentDepth && !this._testMask(this, x, y)) { return null; }\r\n\t\tvar mtx, ctx = createjs.DisplayObject._hitTestContext;\r\n\t\tactiveListener = activeListener || (mouse&&this._hasMouseEventListener());\r\n\r\n\t\t// draw children one at a time, and check if we get a hit:\r\n\t\tvar children = this.children, l = children.length;\r\n\t\tfor (var i=l-1; i>=0; i--) {\r\n\t\t\tvar child = children[i];\r\n\t\t\tvar hitArea = child.hitArea;\r\n\t\t\tif (!child.visible || (!hitArea && !child.isVisible()) || (mouse && !child.mouseEnabled)) { continue; }\r\n\t\t\tif (!hitArea && !this._testMask(child, x, y)) { continue; }\r\n\t\t\t\r\n\t\t\t// if a child container has a hitArea then we only need to check its hitArea, so we can treat it as a normal DO:\r\n\t\t\tif (!hitArea && child instanceof Container) {\r\n\t\t\t\tvar result = child._getObjectsUnderPoint(x, y, arr, mouse, activeListener, currentDepth+1);\r\n\t\t\t\tif (!arr && result) { return (mouse && !this.mouseChildren) ? this : result; }\r\n\t\t\t} else {\r\n\t\t\t\tif (mouse && !activeListener && !child._hasMouseEventListener()) { continue; }\r\n\t\t\t\t\r\n\t\t\t\t// TODO: can we pass displayProps forward, to avoid having to calculate this backwards every time? It's kind of a mixed bag. When we're only hunting for DOs with event listeners, it may not make sense.\r\n\t\t\t\tvar props = child.getConcatenatedDisplayProps(child._props);\r\n\t\t\t\tmtx = props.matrix;\r\n\t\t\t\t\r\n\t\t\t\tif (hitArea) {\r\n\t\t\t\t\tmtx.appendMatrix(hitArea.getMatrix(hitArea._props.matrix));\r\n\t\t\t\t\tprops.alpha = hitArea.alpha;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tctx.globalAlpha = props.alpha;\r\n\t\t\t\tctx.setTransform(mtx.a,  mtx.b, mtx.c, mtx.d, mtx.tx-x, mtx.ty-y);\r\n\t\t\t\t(hitArea||child).draw(ctx);\r\n\t\t\t\tif (!this._testHit(ctx)) { continue; }\r\n\t\t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\t\t\tctx.clearRect(0, 0, 2, 2);\r\n\t\t\t\tif (arr) { arr.push(child); }\r\n\t\t\t\telse { return (mouse && !this.mouseChildren) ? this : child; }\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\t\r\n\t/**\r\n\t * @method _testMask\r\n\t * @param {DisplayObject} target\r\n\t * @param {Number} x\r\n\t * @param {Number} y\r\n\t * @return {Boolean} Indicates whether the x/y is within the masked region.\r\n\t * @protected\r\n\t **/\r\n\tp._testMask = function(target, x, y) {\r\n\t\tvar mask = target.mask;\r\n\t\tif (!mask || !mask.graphics || mask.graphics.isEmpty()) { return true; }\r\n\t\t\r\n\t\tvar mtx = this._props.matrix, parent = target.parent;\r\n\t\tmtx = parent ? parent.getConcatenatedMatrix(mtx) : mtx.identity();\r\n\t\tmtx = mask.getMatrix(mask._props.matrix).prependMatrix(mtx);\r\n\t\t\r\n\t\tvar ctx = createjs.DisplayObject._hitTestContext;\r\n\t\tctx.setTransform(mtx.a,  mtx.b, mtx.c, mtx.d, mtx.tx-x, mtx.ty-y);\r\n\t\t\r\n\t\t// draw the mask as a solid fill:\r\n\t\tmask.graphics.drawAsPath(ctx);\r\n\t\tctx.fillStyle = \"#000\";\r\n\t\tctx.fill();\r\n\t\t\r\n\t\tif (!this._testHit(ctx)) { return false; }\r\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\tctx.clearRect(0, 0, 2, 2);\r\n\t\t\r\n\t\treturn true;\r\n\t};\r\n\t\r\n\t/**\r\n\t * @method _getBounds\r\n\t * @param {Matrix2D} matrix\r\n\t * @param {Boolean} ignoreTransform If true, does not apply this object's transform.\r\n\t * @return {Rectangle}\r\n\t * @protected\r\n\t **/\r\n\tp._getBounds = function(matrix, ignoreTransform) {\r\n\t\tvar bounds = this.DisplayObject_getBounds();\r\n\t\tif (bounds) { return this._transformBounds(bounds, matrix, ignoreTransform); }\r\n\t\t\r\n\t\tvar mtx = this._props.matrix;\r\n\t\tmtx = ignoreTransform ? mtx.identity() : this.getMatrix(mtx);\r\n\t\tif (matrix) { mtx.prependMatrix(matrix); }\r\n\t\t\r\n\t\tvar l = this.children.length, rect=null;\r\n\t\tfor (var i=0; i<l; i++) {\r\n\t\t\tvar child = this.children[i];\r\n\t\t\tif (!child.visible || !(bounds = child._getBounds(mtx))) { continue; }\r\n\t\t\tif (rect) { rect.extend(bounds.x, bounds.y, bounds.width, bounds.height); }\r\n\t\t\telse { rect = bounds.clone(); }\r\n\t\t}\r\n\t\treturn rect;\r\n\t};\r\n\r\n\r\n\tcreatejs.Container = createjs.promote(Container, \"DisplayObject\");\r\n}());\n\n//##############################################################################\n// Stage.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * A stage is the root level {{#crossLink \"Container\"}}{{/crossLink}} for a display list. Each time its {{#crossLink \"Stage/tick\"}}{{/crossLink}}\n\t * method is called, it will render its display list to its target canvas.\n\t *\n\t * <h4>Example</h4>\n\t * This example creates a stage, adds a child to it, then uses {{#crossLink \"Ticker\"}}{{/crossLink}} to update the child\n\t * and redraw the stage using {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n\t *\n\t *      var stage = new createjs.Stage(\"canvasElementId\");\n\t *      var image = new createjs.Bitmap(\"imagePath.png\");\n\t *      stage.addChild(image);\n\t *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n\t *      function handleTick(event) {\n\t *          image.x += 10;\n\t *          stage.update();\n\t *      }\n\t *\n\t * @class Stage\n\t * @extends Container\n\t * @constructor\n\t * @param {HTMLCanvasElement | String | Object} canvas A canvas object that the Stage will render to, or the string id\n\t * of a canvas object in the current document.\n\t **/\n\tfunction Stage(canvas) {\n\t\tthis.Container_constructor();\n\t\n\t\n\t// public properties:\n\t\t/**\n\t\t * Indicates whether the stage should automatically clear the canvas before each render. You can set this to <code>false</code>\n\t\t * to manually control clearing (for generative art, or when pointing multiple stages at the same canvas for\n\t\t * example).\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var stage = new createjs.Stage(\"canvasId\");\n\t\t *      stage.autoClear = false;\n\t\t *\n\t\t * @property autoClear\n\t\t * @type Boolean\n\t\t * @default true\n\t\t **/\n\t\tthis.autoClear = true;\n\t\n\t\t/**\n\t\t * The canvas the stage will render to. Multiple stages can share a single canvas, but you must disable autoClear for all but the\n\t\t * first stage that will be ticked (or they will clear each other's render).\n\t\t *\n\t\t * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n\t\t * new canvas or mouse events will not work as expected. For example:\n\t\t *\n\t\t *      myStage.enableDOMEvents(false);\n\t\t *      myStage.canvas = anotherCanvas;\n\t\t *      myStage.enableDOMEvents(true);\n\t\t *\n\t\t * @property canvas\n\t\t * @type HTMLCanvasElement | Object\n\t\t **/\n\t\tthis.canvas = (typeof canvas == \"string\") ? document.getElementById(canvas) : canvas;\n\t\n\t\t/**\n\t\t * The current mouse X position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n\t\t * position over the canvas, and mouseInBounds will be set to false.\n\t\t * @property mouseX\n\t\t * @type Number\n\t\t * @readonly\n\t\t **/\n\t\tthis.mouseX = 0;\n\t\n\t\t/**\n\t\t * The current mouse Y position on the canvas. If the mouse leaves the canvas, this will indicate the most recent\n\t\t * position over the canvas, and mouseInBounds will be set to false.\n\t\t * @property mouseY\n\t\t * @type Number\n\t\t * @readonly\n\t\t **/\n\t\tthis.mouseY = 0;\n\t\n\t\t/**\n\t\t * Specifies the area of the stage to affect when calling update. This can be use to selectively\n\t\t * re-draw specific regions of the canvas. If null, the whole canvas area is drawn.\n\t\t * @property drawRect\n\t\t * @type {Rectangle}\n\t\t */\n\t\tthis.drawRect = null;\n\t\n\t\t/**\n\t\t * Indicates whether display objects should be rendered on whole pixels. You can set the\n\t\t * {{#crossLink \"DisplayObject/snapToPixel\"}}{{/crossLink}} property of\n\t\t * display objects to false to enable/disable this behaviour on a per instance basis.\n\t\t * @property snapToPixelEnabled\n\t\t * @type Boolean\n\t\t * @default false\n\t\t **/\n\t\tthis.snapToPixelEnabled = false;\n\t\n\t\t/**\n\t\t * Indicates whether the mouse is currently within the bounds of the canvas.\n\t\t * @property mouseInBounds\n\t\t * @type Boolean\n\t\t * @default false\n\t\t **/\n\t\tthis.mouseInBounds = false;\n\t\n\t\t/**\n\t\t * If true, tick callbacks will be called on all display objects on the stage prior to rendering to the canvas.\n\t\t * @property tickOnUpdate\n\t\t * @type Boolean\n\t\t * @default true\n\t\t **/\n\t\tthis.tickOnUpdate = true;\n\t\n\t\t/**\n\t\t * If true, mouse move events will continue to be called when the mouse leaves the target canvas. See\n\t\t * {{#crossLink \"Stage/mouseInBounds:property\"}}{{/crossLink}}, and {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n\t\t * x/y/rawX/rawY.\n\t\t * @property mouseMoveOutside\n\t\t * @type Boolean\n\t\t * @default false\n\t\t **/\n\t\tthis.mouseMoveOutside = false;\n\t\t\n\t\t\n\t\t/**\n\t\t * Prevents selection of other elements in the html page if the user clicks and drags, or double clicks on the canvas.\n\t\t * This works by calling `preventDefault()` on any mousedown events (or touch equivalent) originating on the canvas.\n\t\t * @property preventSelection\n\t\t * @type Boolean\n\t\t * @default true\n\t\t **/\n\t\tthis.preventSelection = true;\n\t\n\t\t/**\n\t\t * The hitArea property is not supported for Stage.\n\t\t * @property hitArea\n\t\t * @type {DisplayObject}\n\t\t * @default null\n\t\t */\n\t\t \n\t\t \n\t// private properties:\n\t\t/**\n\t\t * Holds objects with data for each active pointer id. Each object has the following properties:\n\t\t * x, y, event, target, overTarget, overX, overY, inBounds, posEvtObj (native event that last updated position)\n\t\t * @property _pointerData\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._pointerData = {};\n\t\n\t\t/**\n\t\t * Number of active pointers.\n\t\t * @property _pointerCount\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._pointerCount = 0;\n\t\n\t\t/**\n\t\t * The ID of the primary pointer.\n\t\t * @property _primaryPointerID\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._primaryPointerID = null;\n\t\n\t\t/**\n\t\t * @property _mouseOverIntervalID\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._mouseOverIntervalID = null;\n\t\t\n\t\t/**\n\t\t * @property _nextStage\n\t\t * @protected\n\t\t * @type Stage\n\t\t **/\n\t\tthis._nextStage = null;\n\t\t\n\t\t/**\n\t\t * @property _prevStage\n\t\t * @protected\n\t\t * @type Stage\n\t\t **/\n\t\tthis._prevStage = null;\n\t\t\n\t\t\n\t// initialize:\n\t\tthis.enableDOMEvents(true);\n\t}\n\tvar p = createjs.extend(Stage, createjs.Container);\n\n\t/**\n\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t * for details.\n\t *\n\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t *\n\t * @method initialize\n\t * @protected\n\t * @deprecated\n\t */\n\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\n\n// events:\n\t/**\n\t * Dispatched when the user moves the mouse over the canvas.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event stagemousemove\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user presses their left mouse button on the canvas. See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n\t * class for a listing of event properties.\n\t * @event stagemousedown\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the user the user presses somewhere on the stage, then releases the mouse button anywhere that the page can detect it (this varies slightly between browsers).\n\t * You can use {{#crossLink \"Stage/mouseInBounds:property\"}}{{/crossLink}} to check whether the mouse is currently within the stage bounds.\n\t * See the {{#crossLink \"MouseEvent\"}}{{/crossLink}} class for a listing of event properties.\n\t * @event stagemouseup\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when the mouse moves from within the canvas area (mouseInBounds == true) to outside it (mouseInBounds == false).\n\t * This is currently only dispatched for mouse input (not touch). See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n\t * class for a listing of event properties.\n\t * @event mouseleave\n\t * @since 0.7.0\n\t */\n\n\t/**\n\t * Dispatched when the mouse moves into the canvas area (mouseInBounds == false) from outside it (mouseInBounds == true).\n\t * This is currently only dispatched for mouse input (not touch). See the {{#crossLink \"MouseEvent\"}}{{/crossLink}}\n\t * class for a listing of event properties.\n\t * @event mouseenter\n\t * @since 0.7.0\n\t */\n\t \n\t/**\n\t * Dispatched each update immediately before the tick event is propagated through the display list.\n\t * You can call preventDefault on the event object to cancel propagating the tick event.\n\t * @event tickstart\n\t * @since 0.7.0\n\t */\n\t \n\t/**\n\t * Dispatched each update immediately after the tick event is propagated through the display list. Does not fire if\n\t * tickOnUpdate is false. Precedes the \"drawstart\" event.\n\t * @event tickend\n\t * @since 0.7.0\n\t */\n\t \n\t/**\n\t * Dispatched each update immediately before the canvas is cleared and the display list is drawn to it.\n\t * You can call preventDefault on the event object to cancel the draw.\n\t * @event drawstart\n\t * @since 0.7.0\n\t */\n\t \n\t/**\n\t * Dispatched each update immediately after the display list is drawn to the canvas and the canvas context is restored.\n\t * @event drawend\n\t * @since 0.7.0\n\t */\n\n\t \n// getter / setters:\n\t/**\n\t * Specifies a target stage that will have mouse / touch interactions relayed to it after this stage handles them.\n\t * This can be useful in cases where you have multiple layered canvases and want user interactions\n\t * events to pass through. For example, this would relay mouse events from topStage to bottomStage:\n\t *\n\t *      topStage.nextStage = bottomStage;\n\t *\n\t * To disable relaying, set nextStage to null.\n\t * \n\t * MouseOver, MouseOut, RollOver, and RollOut interactions are also passed through using the mouse over settings\n\t * of the top-most stage, but are only processed if the target stage has mouse over interactions enabled.\n\t * Considerations when using roll over in relay targets:<OL>\n\t * <LI> The top-most (first) stage must have mouse over interactions enabled (via enableMouseOver)</LI>\n\t * <LI> All stages that wish to participate in mouse over interaction must enable them via enableMouseOver</LI>\n\t * <LI> All relay targets will share the frequency value of the top-most stage</LI>\n\t * </OL>\n\t * To illustrate, in this example the targetStage would process mouse over interactions at 10hz (despite passing\n\t * 30 as it's desired frequency):\n\t * \ttopStage.nextStage = targetStage;\n\t * \ttopStage.enableMouseOver(10);\n\t * \ttargetStage.enableMouseOver(30);\n\t * \n\t * If the target stage's canvas is completely covered by this stage's canvas, you may also want to disable its\n\t * DOM events using:\n\t * \n\t *\ttargetStage.enableDOMEvents(false);\n\t * \n\t * @property nextStage\n\t * @type {Stage}\n\t **/\n\tp._get_nextStage = function() {\n\t\treturn this._nextStage;\n\t};\n\tp._set_nextStage = function(value) {\n\t\tif (this._nextStage) { this._nextStage._prevStage = null; }\n\t\tif (value) { value._prevStage = this; }\n\t\tthis._nextStage = value;\n\t};\n\t\n\ttry {\n\t\tObject.defineProperties(p, {\n\t\t\tnextStage: { get: p._get_nextStage, set: p._set_nextStage }\n\t\t});\n\t} catch (e) {} // TODO: use Log\n\n\n// public methods:\n\t/**\n\t * Each time the update method is called, the stage will call {{#crossLink \"Stage/tick\"}}{{/crossLink}}\n\t * unless {{#crossLink \"Stage/tickOnUpdate:property\"}}{{/crossLink}} is set to false,\n\t * and then render the display list to the canvas.\n\t *\n\t * @method update\n\t * @param {Object} [props] Props object to pass to `tick()`. Should usually be a {{#crossLink \"Ticker\"}}{{/crossLink}} event object, or similar object with a delta property.\n\t **/\n\tp.update = function(props) {\n\t\tif (!this.canvas) { return; }\n\t\tif (this.tickOnUpdate) { this.tick(props); }\n\t\tif (this.dispatchEvent(\"drawstart\", false, true) === false) { return; }\n\t\tcreatejs.DisplayObject._snapToPixelEnabled = this.snapToPixelEnabled;\n\t\tvar r = this.drawRect, ctx = this.canvas.getContext(\"2d\");\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tif (this.autoClear) {\n\t\t\tif (r) { ctx.clearRect(r.x, r.y, r.width, r.height); }\n\t\t\telse { ctx.clearRect(0, 0, this.canvas.width+1, this.canvas.height+1); }\n\t\t}\n\t\tctx.save();\n\t\tif (this.drawRect) {\n\t\t\tctx.beginPath();\n\t\t\tctx.rect(r.x, r.y, r.width, r.height);\n\t\t\tctx.clip();\n\t\t}\n\t\tthis.updateContext(ctx);\n\t\tthis.draw(ctx, false);\n\t\tctx.restore();\n\t\tthis.dispatchEvent(\"drawend\");\n\t};\n\t\n\t/**\n\t * Propagates a tick event through the display list. This is automatically called by {{#crossLink \"Stage/update\"}}{{/crossLink}}\n\t * unless {{#crossLink \"Stage/tickOnUpdate:property\"}}{{/crossLink}} is set to false.\n\t *\n\t * If a props object is passed to `tick()`, then all of its properties will be copied to the event object that is\n\t * propagated to listeners.\n\t *\n\t * Some time-based features in EaselJS (for example {{#crossLink \"Sprite/framerate\"}}{{/crossLink}} require that\n\t * a {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}} event object (or equivalent object with a delta property) be\n\t * passed as the `props` parameter to `tick()`. For example:\n\t *\n\t * \tTicker.on(\"tick\", handleTick);\n\t * \tfunction handleTick(evtObj) {\n\t * \t\t// clone the event object from Ticker, and add some custom data to it:\n\t * \t\tvar evt = evtObj.clone().set({greeting:\"hello\", name:\"world\"});\n\t * \t\t\n\t * \t\t// pass it to stage.update():\n\t * \t\tmyStage.update(evt); // subsequently calls tick() with the same param\n\t * \t}\n\t * \t\n\t * \t// ...\n\t * \tmyDisplayObject.on(\"tick\", handleDisplayObjectTick);\n\t * \tfunction handleDisplayObjectTick(evt) {\n\t * \t\tconsole.log(evt.delta); // the delta property from the Ticker tick event object\n\t * \t\tconsole.log(evt.greeting, evt.name); // custom data: \"hello world\"\n\t * \t}\n\t * \n\t * @method tick\n\t * @param {Object} [props] An object with properties that should be copied to the event object. Should usually be a Ticker event object, or similar object with a delta property.\n\t **/\n\tp.tick = function(props) {\n\t\tif (!this.tickEnabled || this.dispatchEvent(\"tickstart\", false, true) === false) { return; }\n\t\tvar evtObj = new createjs.Event(\"tick\");\n\t\tif (props) {\n\t\t\tfor (var n in props) {\n\t\t\t\tif (props.hasOwnProperty(n)) { evtObj[n] = props[n]; }\n\t\t\t}\n\t\t}\n\t\tthis._tick(evtObj);\n\t\tthis.dispatchEvent(\"tickend\");\n\t};\n\n\t/**\n\t * Default event handler that calls the Stage {{#crossLink \"Stage/update\"}}{{/crossLink}} method when a {{#crossLink \"DisplayObject/tick:event\"}}{{/crossLink}}\n\t * event is received. This allows you to register a Stage instance as a event listener on {{#crossLink \"Ticker\"}}{{/crossLink}}\n\t * directly, using:\n\t *\n\t *      Ticker.addEventListener(\"tick\", myStage);\n\t *\n\t * Note that if you subscribe to ticks using this pattern, then the tick event object will be passed through to\n\t * display object tick handlers, instead of <code>delta</code> and <code>paused</code> parameters.\n\t * @property handleEvent\n\t * @type Function\n\t **/\n\tp.handleEvent = function(evt) {\n\t\tif (evt.type == \"tick\") { this.update(evt); }\n\t};\n\n\t/**\n\t * Clears the target canvas. Useful if {{#crossLink \"Stage/autoClear:property\"}}{{/crossLink}} is set to `false`.\n\t * @method clear\n\t **/\n\tp.clear = function() {\n\t\tif (!this.canvas) { return; }\n\t\tvar ctx = this.canvas.getContext(\"2d\");\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tctx.clearRect(0, 0, this.canvas.width+1, this.canvas.height+1);\n\t};\n\n\t/**\n\t * Returns a data url that contains a Base64-encoded image of the contents of the stage. The returned data url can\n\t * be specified as the src value of an image element.\n\t * @method toDataURL\n\t * @param {String} [backgroundColor] The background color to be used for the generated image. Any valid CSS color\n\t * value is allowed. The default value is a transparent background.\n\t * @param {String} [mimeType=\"image/png\"] The MIME type of the image format to be create. The default is \"image/png\". If an unknown MIME type\n\t * is passed in, or if the browser does not support the specified MIME type, the default value will be used.\n\t * @return {String} a Base64 encoded image.\n\t **/\n\tp.toDataURL = function(backgroundColor, mimeType) {\n\t\tvar data, ctx = this.canvas.getContext('2d'), w = this.canvas.width, h = this.canvas.height;\n\n\t\tif (backgroundColor) {\n\t\t\tdata = ctx.getImageData(0, 0, w, h);\n\t\t\tvar compositeOperation = ctx.globalCompositeOperation;\n\t\t\tctx.globalCompositeOperation = \"destination-over\";\n\t\t\t\n\t\t\tctx.fillStyle = backgroundColor;\n\t\t\tctx.fillRect(0, 0, w, h);\n\t\t}\n\n\t\tvar dataURL = this.canvas.toDataURL(mimeType||\"image/png\");\n\n\t\tif(backgroundColor) {\n\t\t\tctx.putImageData(data, 0, 0);\n\t\t\tctx.globalCompositeOperation = compositeOperation;\n\t\t}\n\n\t\treturn dataURL;\n\t};\n\n\t/**\n\t * Enables or disables (by passing a frequency of 0) mouse over ({{#crossLink \"DisplayObject/mouseover:event\"}}{{/crossLink}}\n\t * and {{#crossLink \"DisplayObject/mouseout:event\"}}{{/crossLink}}) and roll over events ({{#crossLink \"DisplayObject/rollover:event\"}}{{/crossLink}}\n\t * and {{#crossLink \"DisplayObject/rollout:event\"}}{{/crossLink}}) for this stage's display list. These events can\n\t * be expensive to generate, so they are disabled by default. The frequency of the events can be controlled\n\t * independently of mouse move events via the optional `frequency` parameter.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var stage = new createjs.Stage(\"canvasId\");\n\t *      stage.enableMouseOver(10); // 10 updates per second\n\t *\n\t * @method enableMouseOver\n\t * @param {Number} [frequency=20] Optional param specifying the maximum number of times per second to broadcast\n\t * mouse over/out events. Set to 0 to disable mouse over events completely. Maximum is 50. A lower frequency is less\n\t * responsive, but uses less CPU.\n\t **/\n\tp.enableMouseOver = function(frequency) {\n\t\tif (this._mouseOverIntervalID) {\n\t\t\tclearInterval(this._mouseOverIntervalID);\n\t\t\tthis._mouseOverIntervalID = null;\n\t\t\tif (frequency == 0) {\n\t\t\t\tthis._testMouseOver(true);\n\t\t\t}\n\t\t}\n\t\tif (frequency == null) { frequency = 20; }\n\t\telse if (frequency <= 0) { return; }\n\t\tvar o = this;\n\t\tthis._mouseOverIntervalID = setInterval(function(){ o._testMouseOver(); }, 1000/Math.min(50,frequency));\n\t};\n\n\t/**\n\t * Enables or disables the event listeners that stage adds to DOM elements (window, document and canvas). It is good\n\t * practice to disable events when disposing of a Stage instance, otherwise the stage will continue to receive\n\t * events from the page.\n\t *\n\t * When changing the canvas property you must disable the events on the old canvas, and enable events on the\n\t * new canvas or mouse events will not work as expected. For example:\n\t *\n\t *      myStage.enableDOMEvents(false);\n\t *      myStage.canvas = anotherCanvas;\n\t *      myStage.enableDOMEvents(true);\n\t *\n\t * @method enableDOMEvents\n\t * @param {Boolean} [enable=true] Indicates whether to enable or disable the events. Default is true.\n\t **/\n\tp.enableDOMEvents = function(enable) {\n\t\tif (enable == null) { enable = true; }\n\t\tvar n, o, ls = this._eventListeners;\n\t\tif (!enable && ls) {\n\t\t\tfor (n in ls) {\n\t\t\t\to = ls[n];\n\t\t\t\to.t.removeEventListener(n, o.f, false);\n\t\t\t}\n\t\t\tthis._eventListeners = null;\n\t\t} else if (enable && !ls && this.canvas) {\n\t\t\tvar t = window.addEventListener ? window : document;\n\t\t\tvar _this = this;\n\t\t\tls = this._eventListeners = {};\n\t\t\tls[\"mouseup\"] = {t:t, f:function(e) { _this._handleMouseUp(e)} };\n\t\t\tls[\"mousemove\"] = {t:t, f:function(e) { _this._handleMouseMove(e)} };\n\t\t\tls[\"dblclick\"] = {t:this.canvas, f:function(e) { _this._handleDoubleClick(e)} };\n\t\t\tls[\"mousedown\"] = {t:this.canvas, f:function(e) { _this._handleMouseDown(e)} };\n\n\t\t\tfor (n in ls) {\n\t\t\t\to = ls[n];\n\t\t\t\to.t.addEventListener(n, o.f, false);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Stage instances cannot be cloned.\n\t * @method clone\n\t **/\n\tp.clone = function() {\n\t\tthrow(\"Stage cannot be cloned.\");\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Stage (name=\"+  this.name +\")]\";\n\t};\n\n\n// private methods:\n\t/**\n\t * @method _getElementRect\n\t * @protected\n\t * @param {HTMLElement} e\n\t **/\n\tp._getElementRect = function(e) {\n\t\tvar bounds;\n\t\ttry { bounds = e.getBoundingClientRect(); } // this can fail on disconnected DOM elements in IE9\n\t\tcatch (err) { bounds = {top: e.offsetTop, left: e.offsetLeft, width:e.offsetWidth, height:e.offsetHeight}; }\n\n\t\tvar offX = (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || document.body.clientLeft || 0);\n\t\tvar offY = (window.pageYOffset || document.scrollTop || 0) - (document.clientTop  || document.body.clientTop  || 0);\n\n\t\tvar styles = window.getComputedStyle ? getComputedStyle(e,null) : e.currentStyle; // IE <9 compatibility.\n\t\tvar padL = parseInt(styles.paddingLeft)+parseInt(styles.borderLeftWidth);\n\t\tvar padT = parseInt(styles.paddingTop)+parseInt(styles.borderTopWidth);\n\t\tvar padR = parseInt(styles.paddingRight)+parseInt(styles.borderRightWidth);\n\t\tvar padB = parseInt(styles.paddingBottom)+parseInt(styles.borderBottomWidth);\n\n\t\t// note: in some browsers bounds properties are read only.\n\t\treturn {\n\t\t\tleft: bounds.left+offX+padL,\n\t\t\tright: bounds.right+offX-padR,\n\t\t\ttop: bounds.top+offY+padT,\n\t\t\tbottom: bounds.bottom+offY-padB\n\t\t}\n\t};\n\n\t/**\n\t * @method _getPointerData\n\t * @protected\n\t * @param {Number} id\n\t **/\n\tp._getPointerData = function(id) {\n\t\tvar data = this._pointerData[id];\n\t\tif (!data) { data = this._pointerData[id] = {x:0,y:0}; }\n\t\treturn data;\n\t};\n\n\t/**\n\t * @method _handleMouseMove\n\t * @protected\n\t * @param {MouseEvent} e\n\t **/\n\tp._handleMouseMove = function(e) {\n\t\tif(!e){ e = window.event; }\n\t\tthis._handlePointerMove(-1, e, e.pageX, e.pageY);\n\t};\n\n\t/**\n\t * @method _handlePointerMove\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t **/\n\tp._handlePointerMove = function(id, e, pageX, pageY, owner) {\n\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\t\tif (!this.canvas) { return; }\n\t\tvar nextStage=this._nextStage, o=this._getPointerData(id);\n\n\t\tvar inBounds = o.inBounds;\n\t\tthis._updatePointerPosition(id, e, pageX, pageY);\n\t\tif (inBounds || o.inBounds || this.mouseMoveOutside) {\n\t\t\tif (id === -1 && o.inBounds == !inBounds) {\n\t\t\t\tthis._dispatchMouseEvent(this, (inBounds ? \"mouseleave\" : \"mouseenter\"), false, id, o, e);\n\t\t\t}\n\t\t\t\n\t\t\tthis._dispatchMouseEvent(this, \"stagemousemove\", false, id, o, e);\n\t\t\tthis._dispatchMouseEvent(o.target, \"pressmove\", true, id, o, e);\n\t\t}\n\t\t\n\t\tnextStage&&nextStage._handlePointerMove(id, e, pageX, pageY, null);\n\t};\n\n\t/**\n\t * @method _updatePointerPosition\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t **/\n\tp._updatePointerPosition = function(id, e, pageX, pageY) {\n\t\tvar rect = this._getElementRect(this.canvas);\n\t\tpageX -= rect.left;\n\t\tpageY -= rect.top;\n\n\t\tvar w = this.canvas.width;\n\t\tvar h = this.canvas.height;\n\t\tpageX /= (rect.right-rect.left)/w;\n\t\tpageY /= (rect.bottom-rect.top)/h;\n\t\tvar o = this._getPointerData(id);\n\t\tif (o.inBounds = (pageX >= 0 && pageY >= 0 && pageX <= w-1 && pageY <= h-1)) {\n\t\t\to.x = pageX;\n\t\t\to.y = pageY;\n\t\t} else if (this.mouseMoveOutside) {\n\t\t\to.x = pageX < 0 ? 0 : (pageX > w-1 ? w-1 : pageX);\n\t\t\to.y = pageY < 0 ? 0 : (pageY > h-1 ? h-1 : pageY);\n\t\t}\n\n\t\to.posEvtObj = e;\n\t\to.rawX = pageX;\n\t\to.rawY = pageY;\n\n\t\tif (id === this._primaryPointerID || id === -1) {\n\t\t\tthis.mouseX = o.x;\n\t\t\tthis.mouseY = o.y;\n\t\t\tthis.mouseInBounds = o.inBounds;\n\t\t}\n\t};\n\n\t/**\n\t * @method _handleMouseUp\n\t * @protected\n\t * @param {MouseEvent} e\n\t **/\n\tp._handleMouseUp = function(e) {\n\t\tthis._handlePointerUp(-1, e, false);\n\t};\n\n\t/**\n\t * @method _handlePointerUp\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Boolean} clear\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t **/\n\tp._handlePointerUp = function(id, e, clear, owner) {\n\t\tvar nextStage = this._nextStage, o = this._getPointerData(id);\n\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\t\t\n\t\tvar target=null, oTarget = o.target;\n\t\tif (!owner && (oTarget || nextStage)) { target = this._getObjectsUnderPoint(o.x, o.y, null, true); }\n\t\t\n\t\tif (o.down) { this._dispatchMouseEvent(this, \"stagemouseup\", false, id, o, e, target); o.down = false; }\n\t\t\n\t\tif (target == oTarget) { this._dispatchMouseEvent(oTarget, \"click\", true, id, o, e); }\n\t\tthis._dispatchMouseEvent(oTarget, \"pressup\", true, id, o, e);\n\t\t\n\t\tif (clear) {\n\t\t\tif (id==this._primaryPointerID) { this._primaryPointerID = null; }\n\t\t\tdelete(this._pointerData[id]);\n\t\t} else { o.target = null; }\n\t\t\n\t\tnextStage&&nextStage._handlePointerUp(id, e, clear, owner || target && this);\n\t};\n\n\t/**\n\t * @method _handleMouseDown\n\t * @protected\n\t * @param {MouseEvent} e\n\t **/\n\tp._handleMouseDown = function(e) {\n\t\tthis._handlePointerDown(-1, e, e.pageX, e.pageY);\n\t};\n\n\t/**\n\t * @method _handlePointerDown\n\t * @protected\n\t * @param {Number} id\n\t * @param {Event} e\n\t * @param {Number} pageX\n\t * @param {Number} pageY\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t **/\n\tp._handlePointerDown = function(id, e, pageX, pageY, owner) {\n\t\tif (this.preventSelection) { e.preventDefault(); }\n\t\tif (this._primaryPointerID == null || id === -1) { this._primaryPointerID = id; } // mouse always takes over.\n\t\t\n\t\tif (pageY != null) { this._updatePointerPosition(id, e, pageX, pageY); }\n\t\tvar target = null, nextStage = this._nextStage, o = this._getPointerData(id);\n\t\tif (!owner) { target = o.target = this._getObjectsUnderPoint(o.x, o.y, null, true); }\n\n\t\tif (o.inBounds) { this._dispatchMouseEvent(this, \"stagemousedown\", false, id, o, e, target); o.down = true; }\n\t\tthis._dispatchMouseEvent(target, \"mousedown\", true, id, o, e);\n\t\t\n\t\tnextStage&&nextStage._handlePointerDown(id, e, pageX, pageY, owner || target && this);\n\t};\n\n\t/**\n\t * @method _testMouseOver\n\t * @param {Boolean} clear If true, clears the mouseover / rollover (ie. no target)\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t * @param {Stage} eventTarget The stage that the cursor is actively over.\n\t * @protected\n\t **/\n\tp._testMouseOver = function(clear, owner, eventTarget) {\n\t\tif (this._prevStage && owner === undefined) { return; } // redundant listener.\n\t\t\n\t\tvar nextStage = this._nextStage;\n\t\tif (!this._mouseOverIntervalID) {\n\t\t\t// not enabled for mouseover, but should still relay the event.\n\t\t\tnextStage&&nextStage._testMouseOver(clear, owner, eventTarget);\n\t\t\treturn;\n\t\t}\n\t\tvar o = this._getPointerData(-1);\n\t\t// only update if the mouse position has changed. This provides a lot of optimization, but has some trade-offs.\n\t\tif (!o || (!clear && this.mouseX == this._mouseOverX && this.mouseY == this._mouseOverY && this.mouseInBounds)) { return; }\n\t\t\n\t\tvar e = o.posEvtObj;\n\t\tvar isEventTarget = eventTarget || e&&(e.target == this.canvas);\n\t\tvar target=null, common = -1, cursor=\"\", t, i, l;\n\t\t\n\t\tif (!owner && (clear || this.mouseInBounds && isEventTarget)) {\n\t\t\ttarget = this._getObjectsUnderPoint(this.mouseX, this.mouseY, null, true);\n\t\t\tthis._mouseOverX = this.mouseX;\n\t\t\tthis._mouseOverY = this.mouseY;\n\t\t}\n\n\t\tvar oldList = this._mouseOverTarget||[];\n\t\tvar oldTarget = oldList[oldList.length-1];\n\t\tvar list = this._mouseOverTarget = [];\n\n\t\t// generate ancestor list and check for cursor:\n\t\tt = target;\n\t\twhile (t) {\n\t\t\tlist.unshift(t);\n\t\t\tif (!cursor) { cursor = t.cursor; }\n\t\t\tt = t.parent;\n\t\t}\n\t\tthis.canvas.style.cursor = cursor;\n\t\tif (!owner && eventTarget) { eventTarget.canvas.style.cursor = cursor; }\n\n\t\t// find common ancestor:\n\t\tfor (i=0,l=list.length; i<l; i++) {\n\t\t\tif (list[i] != oldList[i]) { break; }\n\t\t\tcommon = i;\n\t\t}\n\n\t\tif (oldTarget != target) {\n\t\t\tthis._dispatchMouseEvent(oldTarget, \"mouseout\", true, -1, o, e, target);\n\t\t}\n\n\t\tfor (i=oldList.length-1; i>common; i--) {\n\t\t\tthis._dispatchMouseEvent(oldList[i], \"rollout\", false, -1, o, e, target);\n\t\t}\n\n\t\tfor (i=list.length-1; i>common; i--) {\n\t\t\tthis._dispatchMouseEvent(list[i], \"rollover\", false, -1, o, e, oldTarget);\n\t\t}\n\n\t\tif (oldTarget != target) {\n\t\t\tthis._dispatchMouseEvent(target, \"mouseover\", true, -1, o, e, oldTarget);\n\t\t}\n\t\t\n\t\tnextStage&&nextStage._testMouseOver(clear, owner || target && this, eventTarget || isEventTarget && this);\n\t};\n\n\t/**\n\t * @method _handleDoubleClick\n\t * @protected\n\t * @param {MouseEvent} e\n\t * @param {Stage} owner Indicates that the event has already been captured & handled by the indicated stage.\n\t **/\n\tp._handleDoubleClick = function(e, owner) {\n\t\tvar target=null, nextStage=this._nextStage, o=this._getPointerData(-1);\n\t\tif (!owner) {\n\t\t\ttarget = this._getObjectsUnderPoint(o.x, o.y, null, true);\n\t\t\tthis._dispatchMouseEvent(target, \"dblclick\", true, -1, o, e);\n\t\t}\n\t\tnextStage&&nextStage._handleDoubleClick(e, owner || target && this);\n\t};\n\n\t/**\n\t * @method _dispatchMouseEvent\n\t * @protected\n\t * @param {DisplayObject} target\n\t * @param {String} type\n\t * @param {Boolean} bubbles\n\t * @param {Number} pointerId\n\t * @param {Object} o\n\t * @param {MouseEvent} [nativeEvent]\n\t * @param {DisplayObject} [relatedTarget]\n\t **/\n\tp._dispatchMouseEvent = function(target, type, bubbles, pointerId, o, nativeEvent, relatedTarget) {\n\t\t// TODO: might be worth either reusing MouseEvent instances, or adding a willTrigger method to avoid GC.\n\t\tif (!target || (!bubbles && !target.hasEventListener(type))) { return; }\n\t\t/*\n\t\t// TODO: account for stage transformations?\n\t\tthis._mtx = this.getConcatenatedMatrix(this._mtx).invert();\n\t\tvar pt = this._mtx.transformPoint(o.x, o.y);\n\t\tvar evt = new createjs.MouseEvent(type, bubbles, false, pt.x, pt.y, nativeEvent, pointerId, pointerId==this._primaryPointerID || pointerId==-1, o.rawX, o.rawY);\n\t\t*/\n\t\tvar evt = new createjs.MouseEvent(type, bubbles, false, o.x, o.y, nativeEvent, pointerId, pointerId === this._primaryPointerID || pointerId === -1, o.rawX, o.rawY, relatedTarget);\n\t\ttarget.dispatchEvent(evt);\n\t};\n\n\n\tcreatejs.Stage = createjs.promote(Stage, \"Container\");\n}());\n\n//##############################################################################\n// Bitmap.js\n//##############################################################################\n\n(function() {\n\t\n\t/**\n\t * A Bitmap represents an Image, Canvas, or Video in the display list. A Bitmap can be instantiated using an existing\n\t * HTML element, or a string.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var bitmap = new createjs.Bitmap(\"imagePath.jpg\");\n\t *\n\t * <strong>Notes:</strong>\n\t * <ol>\n\t *     <li>When a string path or image tag that is not yet loaded is used, the stage may need to be redrawn before it\n\t *      will be displayed.</li>\n\t *     <li>Bitmaps with an SVG source currently will not respect an alpha value other than 0 or 1. To get around this,\n\t *     the Bitmap can be cached.</li>\n\t *     <li>Bitmaps with an SVG source will taint the canvas with cross-origin data, which prevents interactivity. This\n\t *     happens in all browsers except recent Firefox builds.</li>\n\t *     <li>Images loaded cross-origin will throw cross-origin security errors when interacted with using a mouse, using\n\t *     methods such as `getObjectUnderPoint`, or using filters, or caching. You can get around this by setting\n\t *     `crossOrigin` flags on your images before passing them to EaselJS, eg: `img.crossOrigin=\"Anonymous\";`</li>\n\t * </ol>\n\t *\n\t * @class Bitmap\n\t * @extends DisplayObject\n\t * @constructor\n\t * @param {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | String} imageOrUri The source object or URI to an image to\n\t * display. This can be either an Image, Canvas, or Video object, or a string URI to an image file to load and use.\n\t * If it is a URI, a new Image object will be constructed and assigned to the .image property.\n\t **/\n\tfunction Bitmap(imageOrUri) {\n\t\tthis.DisplayObject_constructor();\n\t\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The image to render. This can be an Image, a Canvas, or a Video. Not all browsers (especially\n\t\t * mobile browsers) support drawing video to a canvas.\n\t\t * @property image\n\t\t * @type HTMLImageElement | HTMLCanvasElement | HTMLVideoElement\n\t\t **/\n\t\tif (typeof imageOrUri == \"string\") {\n\t\t\tthis.image = document.createElement(\"img\");\n\t\t\tthis.image.src = imageOrUri;\n\t\t} else {\n\t\t\tthis.image = imageOrUri;\n\t\t}\n\t\n\t\t/**\n\t\t * Specifies an area of the source image to draw. If omitted, the whole image will be drawn.\n\t\t * Note that video sources must have a width / height set to work correctly with `sourceRect`.\n\t\t * @property sourceRect\n\t\t * @type Rectangle\n\t\t * @default null\n\t\t */\n\t\tthis.sourceRect = null;\n\t}\n\tvar p = createjs.extend(Bitmap, createjs.DisplayObject);\n\t\n\t\n// public methods:\n\t/**\n\t * Constructor alias for backwards compatibility. This method will be removed in future versions.\n\t * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\n\t * @method initialize\n\t * @deprecated in favour of `createjs.promote()`\n\t **/\n\tp.initialize = Bitmap; // TODO: deprecated.\n\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t **/\n\tp.isVisible = function() {\n\t\tvar image = this.image;\n\t\tvar hasContent = this.cacheCanvas || (image && (image.naturalWidth || image.getContext || image.readyState >= 2));\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t};\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t *\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t * @return {Boolean}\n\t **/\n\tp.draw = function(ctx, ignoreCache) {\n\t\tif (this.DisplayObject_draw(ctx, ignoreCache) || !this.image) { return true; }\n\t\tvar img = this.image, rect = this.sourceRect;\n\t\tif (rect) {\n\t\t\t// some browsers choke on out of bound values, so we'll fix them:\n\t\t\tvar x1 = rect.x, y1 = rect.y, x2 = x1 + rect.width, y2 = y1 + rect.height, x = 0, y = 0, w = img.width, h = img.height;\n\t\t\tif (x1 < 0) { x -= x1; x1 = 0; }\n\t\t\tif (x2 > w) { x2 = w; }\n\t\t\tif (y1 < 0) { y -= y1; y1 = 0; }\n\t\t\tif (y2 > h) { y2 = h; }\n\t\t\tctx.drawImage(img, x1, y1, x2-x1, y2-y1, x, y, x2-x1, y2-y1);\n\t\t} else {\n\t\t\tctx.drawImage(img, 0, 0);\n\t\t}\n\t\treturn true;\n\t};\n\t\n\t//Note, the doc sections below document using the specified APIs (from DisplayObject)  from\n\t//Bitmap. This is why they have no method implementations.\n\t\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t * method.\n\t * @method cache\n\t **/\n\t\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t * method.\n\t * @method updateCache\n\t **/\n\t\n\t/**\n\t * Because the content of a Bitmap is already in a simple format, cache is unnecessary for Bitmap instances.\n\t * You should <b>not</b> cache Bitmap instances as it can degrade performance.\n\t *\n\t * <strong>However: If you want to use a filter on a Bitmap, you <em>MUST</em> cache it, or it will not work.</strong>\n\t * To see the API for caching, please visit the DisplayObject {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}}\n\t * method.\n\t * @method uncache\n\t **/\n\n\t/**\n\t * Docced in superclass.\n\t */\n\tp.getBounds = function() {\n\t\tvar rect = this.DisplayObject_getBounds();\n\t\tif (rect) { return rect; }\n\t\tvar image = this.image, o = this.sourceRect || image;\n\t\tvar hasContent = (image && (image.naturalWidth || image.getContext || image.readyState >= 2));\n\t\treturn hasContent ? this._rectangle.setValues(0, 0, o.width, o.height) : null;\n\t};\n\t\n\t/**\n\t * Returns a clone of the Bitmap instance.\n\t * @method clone\n\t * @return {Bitmap} a clone of the Bitmap instance.\n\t **/\n\tp.clone = function() {\n\t\tvar o = new Bitmap(this.image);\n\t\tif (this.sourceRect) { o.sourceRect = this.sourceRect.clone(); }\n\t\tthis._cloneProps(o);\n\t\treturn o;\n\t};\n\t\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Bitmap (name=\"+  this.name +\")]\";\n\t};\n\n\t\n\tcreatejs.Bitmap = createjs.promote(Bitmap, \"DisplayObject\");\n}());\n\n//##############################################################################\n// Sprite.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Displays a frame or sequence of frames (ie. an animation) from a SpriteSheet instance. A sprite sheet is a series of\n\t * images (usually animation frames) combined into a single image. For example, an animation consisting of 8 100x100\n\t * images could be combined into a 400x200 sprite sheet (4 frames across by 2 high). You can display individual frames,\n\t * play frames as an animation, and even sequence animations together.\n\t *\n\t * See the {{#crossLink \"SpriteSheet\"}}{{/crossLink}} class for more information on setting up frames and animations.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var instance = new createjs.Sprite(spriteSheet);\n\t *      instance.gotoAndStop(\"frameName\");\n\t *\n\t * Until {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} or {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}} is called,\n\t * only the first defined frame defined in the sprite sheet will be displayed.\n\t *\n\t * @class Sprite\n\t * @extends DisplayObject\n\t * @constructor\n\t * @param {SpriteSheet} spriteSheet The SpriteSheet instance to play back. This includes the source image(s), frame\n\t * dimensions, and frame data. See {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.\n\t * @param {String|Number} [frameOrAnimation] The frame number or animation to play initially.\n\t **/\n\tfunction Sprite(spriteSheet, frameOrAnimation) {\n\t\tthis.DisplayObject_constructor();\n\t\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The frame index that will be drawn when draw is called. Note that with some {{#crossLink \"SpriteSheet\"}}{{/crossLink}}\n\t\t * definitions, this will advance non-sequentially. This will always be an integer value.\n\t\t * @property currentFrame\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @readonly\n\t\t **/\n\t\tthis.currentFrame = 0;\n\t\n\t\t/**\n\t\t * Returns the name of the currently playing animation.\n\t\t * @property currentAnimation\n\t\t * @type {String}\n\t\t * @final\n\t\t * @readonly\n\t\t **/\n\t\tthis.currentAnimation = null;\n\t\n\t\t/**\n\t\t * Prevents the animation from advancing each tick automatically. For example, you could create a sprite\n\t\t * sheet of icons, set paused to true, and display the appropriate icon by setting <code>currentFrame</code>.\n\t\t * @property paused\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t **/\n\t\tthis.paused = true;\n\t\n\t\t/**\n\t\t * The SpriteSheet instance to play back. This includes the source image, frame dimensions, and frame\n\t\t * data. See {{#crossLink \"SpriteSheet\"}}{{/crossLink}} for more information.\n\t\t * @property spriteSheet\n\t\t * @type {SpriteSheet}\n\t\t * @readonly\n\t\t **/\n\t\tthis.spriteSheet = spriteSheet;\n\t\n\t\t/**\n\t\t * Specifies the current frame index within the currently playing animation. When playing normally, this will increase\n\t\t * from 0 to n-1, where n is the number of frames in the current animation.\n\t\t *\n\t\t * This could be a non-integer value if\n\t\t * using time-based playback (see {{#crossLink \"Sprite/framerate\"}}{{/crossLink}}, or if the animation's speed is\n\t\t * not an integer.\n\t\t * @property currentAnimationFrame\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis.currentAnimationFrame = 0;\n\t\n\t\t/**\n\t\t * By default Sprite instances advance one frame per tick. Specifying a framerate for the Sprite (or its related\n\t\t * SpriteSheet) will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n\t\t * framerate.\n\t\t *\n\t\t * For example, if a Sprite with a framerate of 10 is placed on a Stage being updated at 40fps, then the Sprite will\n\t\t * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n\t\t * vary slightly between frames.\n\t\t *\n\t\t * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n\t\t * passed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n\t\t * @property framerate\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t **/\n\t\tthis.framerate = 0;\n\t\n\t\n\t// private properties:\n\t\t/**\n\t\t * Current animation object.\n\t\t * @property _animation\n\t\t * @protected\n\t\t * @type {Object}\n\t\t * @default null\n\t\t **/\n\t\tthis._animation = null;\n\t\n\t\t/**\n\t\t * Current frame index.\n\t\t * @property _currentFrame\n\t\t * @protected\n\t\t * @type {Number}\n\t\t * @default null\n\t\t **/\n\t\tthis._currentFrame = null;\n\t\t\n\t\t/**\n\t\t * Skips the next auto advance. Used by gotoAndPlay to avoid immediately jumping to the next frame\n\t\t * @property _skipAdvance\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t **/\n\t\tthis._skipAdvance = false;\n\t\t\n\t\t\n\t\tif (frameOrAnimation != null) { this.gotoAndPlay(frameOrAnimation); }\n\t}\n\tvar p = createjs.extend(Sprite, createjs.DisplayObject);\n\n\t/**\n\t * Constructor alias for backwards compatibility. This method will be removed in future versions.\n\t * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\n\t * @method initialize\n\t * @deprecated in favour of `createjs.promote()`\n\t **/\n\tp.initialize = Sprite; // TODO: Deprecated. This is for backwards support of Flash/Animate spritesheet export.\n\n\n// events:\n\t/**\n\t * Dispatched when an animation reaches its ends.\n\t * @event animationend\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {String} name The name of the animation that just ended.\n\t * @param {String} next The name of the next animation that will be played, or null. This will be the same as name if the animation is looping.\n\t * @since 0.6.0\n\t */\n\t \n\t/**\n\t * Dispatched any time the current frame changes. For example, this could be due to automatic advancement on a tick,\n\t * or calling gotoAndPlay() or gotoAndStop().\n\t * @event change\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t */\n\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t **/\n\tp.isVisible = function() {\n\t\tvar hasContent = this.cacheCanvas || this.spriteSheet.complete;\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t};\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t **/\n\tp.draw = function(ctx, ignoreCache) {\n\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n\t\tthis._normalizeFrame();\n\t\tvar o = this.spriteSheet.getFrame(this._currentFrame|0);\n\t\tif (!o) { return false; }\n\t\tvar rect = o.rect;\n\t\tif (rect.width && rect.height) { ctx.drawImage(o.image, rect.x, rect.y, rect.width, rect.height, -o.regX, -o.regY, rect.width, rect.height); }\n\t\treturn true;\n\t};\n\n\t//Note, the doc sections below document using the specified APIs (from DisplayObject)  from\n\t//Bitmap. This is why they have no method implementations.\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @method cache\n\t **/\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @method updateCache\n\t **/\n\n\t/**\n\t * Because the content of a Sprite is already in a raster format, cache is unnecessary for Sprite instances.\n\t * You should not cache Sprite instances as it can degrade performance.\n\t * @method uncache\n\t **/\n\n\t/**\n\t * Play (unpause) the current animation. The Sprite will be paused if either {{#crossLink \"Sprite/stop\"}}{{/crossLink}}\n\t * or {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} is called. Single frame animations will remain\n\t * unchanged.\n\t * @method play\n\t **/\n\tp.play = function() {\n\t\tthis.paused = false;\n\t};\n\n\t/**\n\t * Stop playing a running animation. The Sprite will be playing if {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}}\n\t * is called. Note that calling {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}} or {{#crossLink \"Sprite/play\"}}{{/crossLink}}\n\t * will resume playback.\n\t * @method stop\n\t **/\n\tp.stop = function() {\n\t\tthis.paused = true;\n\t};\n\n\t/**\n\t * Sets paused to false and plays the specified animation name, named frame, or frame number.\n\t * @method gotoAndPlay\n\t * @param {String|Number} frameOrAnimation The frame number or animation name that the playhead should move to\n\t * and begin playing.\n\t **/\n\tp.gotoAndPlay = function(frameOrAnimation) {\n\t\tthis.paused = false;\n\t\tthis._skipAdvance = true;\n\t\tthis._goto(frameOrAnimation);\n\t};\n\n\t/**\n\t * Sets paused to true and seeks to the specified animation name, named frame, or frame number.\n\t * @method gotoAndStop\n\t * @param {String|Number} frameOrAnimation The frame number or animation name that the playhead should move to\n\t * and stop.\n\t **/\n\tp.gotoAndStop = function(frameOrAnimation) {\n\t\tthis.paused = true;\n\t\tthis._goto(frameOrAnimation);\n\t};\n\n\t/**\n\t * Advances the playhead. This occurs automatically each tick by default.\n\t * @param [time] {Number} The amount of time in ms to advance by. Only applicable if framerate is set on the Sprite\n\t * or its SpriteSheet.\n\t * @method advance\n\t*/\n\tp.advance = function(time) {\n\t\tvar fps = this.framerate || this.spriteSheet.framerate;\n\t\tvar t = (fps && time != null) ? time/(1000/fps) : 1;\n\t\tthis._normalizeFrame(t);\n\t};\n\t\n\t/**\n\t * Returns a {{#crossLink \"Rectangle\"}}{{/crossLink}} instance defining the bounds of the current frame relative to\n\t * the origin. For example, a 90 x 70 frame with <code>regX=50</code> and <code>regY=40</code> would return a\n\t * rectangle with [x=-50, y=-40, width=90, height=70]. This ignores transformations on the display object.\n\t *\n\t * Also see the SpriteSheet {{#crossLink \"SpriteSheet/getFrameBounds\"}}{{/crossLink}} method.\n\t * @method getBounds\n\t * @return {Rectangle} A Rectangle instance. Returns null if the frame does not exist, or the image is not fully\n\t * loaded.\n\t **/\n\tp.getBounds = function() {\n\t\t// TODO: should this normalizeFrame?\n\t\treturn this.DisplayObject_getBounds() || this.spriteSheet.getFrameBounds(this.currentFrame, this._rectangle);\n\t};\n\n\t/**\n\t * Returns a clone of the Sprite instance. Note that the same SpriteSheet is shared between cloned\n\t * instances.\n\t * @method clone\n\t * @return {Sprite} a clone of the Sprite instance.\n\t **/\n\tp.clone = function() {\n\t\treturn this._cloneProps(new Sprite(this.spriteSheet));\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Sprite (name=\"+  this.name +\")]\";\n\t};\n\n// private methods:\n\t/**\n\t * @method _cloneProps\n\t * @param {Sprite} o\n\t * @return {Sprite} o\n\t * @protected\n\t **/\n\tp._cloneProps = function(o) {\n\t\tthis.DisplayObject__cloneProps(o);\n\t\to.currentFrame = this.currentFrame;\n\t\to.currentAnimation = this.currentAnimation;\n\t\to.paused = this.paused;\n\t\to.currentAnimationFrame = this.currentAnimationFrame;\n\t\to.framerate = this.framerate;\n\t\t\n\t\to._animation = this._animation;\n\t\to._currentFrame = this._currentFrame;\n\t\to._skipAdvance = this._skipAdvance;\n\t\treturn o;\n\t};\n\t\n\t/**\n\t * Advances the <code>currentFrame</code> if paused is not true. This is called automatically when the {{#crossLink \"Stage\"}}{{/crossLink}}\n\t * ticks.\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * @protected\n\t * @method _tick\n\t **/\n\tp._tick = function(evtObj) {\n\t\tif (!this.paused) {\n\t\t\tif (!this._skipAdvance) { this.advance(evtObj&&evtObj.delta); }\n\t\t\tthis._skipAdvance = false;\n\t\t}\n\t\tthis.DisplayObject__tick(evtObj);\n\t};\n\n\n\t/**\n\t * Normalizes the current frame, advancing animations and dispatching callbacks as appropriate.\n\t * @protected\n\t * @method _normalizeFrame\n\t **/\n\tp._normalizeFrame = function(frameDelta) {\n\t\tframeDelta = frameDelta || 0;\n\t\tvar animation = this._animation;\n\t\tvar paused = this.paused;\n\t\tvar frame = this._currentFrame;\n\t\tvar l;\n\t\t\n\t\tif (animation) {\n\t\t\tvar speed = animation.speed || 1;\n\t\t\tvar animFrame = this.currentAnimationFrame;\n\t\t\tl = animation.frames.length;\n\t\t\tif (animFrame + frameDelta * speed >= l) {\n\t\t\t\tvar next = animation.next;\n\t\t\t\tif (this._dispatchAnimationEnd(animation, frame, paused, next, l - 1)) {\n\t\t\t\t\t// something changed in the event stack, so we shouldn't make any more changes here.\n\t\t\t\t\treturn;\n\t\t\t\t} else if (next) {\n\t\t\t\t\t// sequence. Automatically calls _normalizeFrame again with the remaining frames.\n\t\t\t\t\treturn this._goto(next, frameDelta - (l - animFrame) / speed);\n\t\t\t\t} else {\n\t\t\t\t\t// end.\n\t\t\t\t\tthis.paused = true;\n\t\t\t\t\tanimFrame = animation.frames.length - 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanimFrame += frameDelta * speed;\n\t\t\t}\n\t\t\tthis.currentAnimationFrame = animFrame;\n\t\t\tthis._currentFrame = animation.frames[animFrame | 0]\n\t\t} else {\n\t\t\tframe = (this._currentFrame += frameDelta);\n\t\t\tl = this.spriteSheet.getNumFrames();\n\t\t\tif (frame >= l && l > 0) {\n\t\t\t\tif (!this._dispatchAnimationEnd(animation, frame, paused, l - 1)) {\n\t\t\t\t\t// looped.\n\t\t\t\t\tif ((this._currentFrame -= l) >= l) { return this._normalizeFrame(); }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tframe = this._currentFrame | 0;\n\t\tif (this.currentFrame != frame) {\n\t\t\tthis.currentFrame = frame;\n\t\t\tthis.dispatchEvent(\"change\");\n\t\t}\n\t};\n\n\t/**\n\t * Dispatches the \"animationend\" event. Returns true if a handler changed the animation (ex. calling {{#crossLink \"Sprite/stop\"}}{{/crossLink}},\n\t * {{#crossLink \"Sprite/gotoAndPlay\"}}{{/crossLink}}, etc.)\n\t * @property _dispatchAnimationEnd\n\t * @private\n\t * @type {Function}\n\t **/\n\tp._dispatchAnimationEnd = function(animation, frame, paused, next, end) {\n\t\tvar name = animation ? animation.name : null;\n\t\tif (this.hasEventListener(\"animationend\")) {\n\t\t\tvar evt = new createjs.Event(\"animationend\");\n\t\t\tevt.name = name;\n\t\t\tevt.next = next;\n\t\t\tthis.dispatchEvent(evt);\n\t\t}\n\t\t// did the animation get changed in the event stack?:\n\t\tvar changed = (this._animation != animation || this._currentFrame != frame);\n\t\t// if the animation hasn't changed, but the sprite was paused, then we want to stick to the last frame:\n\t\tif (!changed && !paused && this.paused) { this.currentAnimationFrame = end; changed = true; }\n\t\treturn changed;\n\t};\n\n\t/**\n\t * Moves the playhead to the specified frame number or animation.\n\t * @method _goto\n\t * @param {String|Number} frameOrAnimation The frame number or animation that the playhead should move to.\n\t * @param {Boolean} [frame] The frame of the animation to go to. Defaults to 0.\n\t * @protected\n\t **/\n\tp._goto = function(frameOrAnimation, frame) {\n\t\tthis.currentAnimationFrame = 0;\n\t\tif (isNaN(frameOrAnimation)) {\n\t\t\tvar data = this.spriteSheet.getAnimation(frameOrAnimation);\n\t\t\tif (data) {\n\t\t\t\tthis._animation = data;\n\t\t\t\tthis.currentAnimation = frameOrAnimation;\n\t\t\t\tthis._normalizeFrame(frame);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.currentAnimation = this._animation = null;\n\t\t\tthis._currentFrame = frameOrAnimation;\n\t\t\tthis._normalizeFrame();\n\t\t}\n\t};\n\n\n\tcreatejs.Sprite = createjs.promote(Sprite, \"DisplayObject\");\n}());\n\n//##############################################################################\n// Shape.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * A Shape allows you to display vector art in the display list. It composites a {{#crossLink \"Graphics\"}}{{/crossLink}}\n\t * instance which exposes all of the vector drawing methods. The Graphics instance can be shared between multiple Shape\n\t * instances to display the same vector graphics with different positions or transforms.\n\t *\n\t * If the vector art will not\n\t * change between draws, you may want to use the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} method to reduce the\n\t * rendering cost.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var graphics = new createjs.Graphics().beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n\t *      var shape = new createjs.Shape(graphics);\n\t *\n\t *      //Alternatively use can also use the graphics property of the Shape class to renderer the same as above.\n\t *      var shape = new createjs.Shape();\n\t *      shape.graphics.beginFill(\"#ff0000\").drawRect(0, 0, 100, 100);\n\t *\n\t * @class Shape\n\t * @extends DisplayObject\n\t * @constructor\n\t * @param {Graphics} graphics Optional. The graphics instance to display. If null, a new Graphics instance will be created.\n\t **/\n\tfunction Shape(graphics) {\n\t\tthis.DisplayObject_constructor();\n\t\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The graphics instance to display.\n\t\t * @property graphics\n\t\t * @type Graphics\n\t\t **/\n\t\tthis.graphics = graphics ? graphics : new createjs.Graphics();\n\t}\n\tvar p = createjs.extend(Shape, createjs.DisplayObject);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the Shape would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the Shape would be visible if drawn to a canvas\n\t **/\n\tp.isVisible = function() {\n\t\tvar hasContent = this.cacheCanvas || (this.graphics && !this.graphics.isEmpty());\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t};\n\n\t/**\n\t * Draws the Shape into the specified context ignoring its visible, alpha, shadow, and transform. Returns true if\n\t * the draw was handled (useful for overriding functionality).\n\t *\n\t * <i>NOTE: This method is mainly for internal use, though it may be useful for advanced uses.</i>\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} [ignoreCache=false] Indicates whether the draw operation should ignore any current cache. For example,\n\t * used for drawing the cache (to prevent it from simply drawing an existing cache back into itself).\n\t * @return {Boolean}\n\t **/\n\tp.draw = function(ctx, ignoreCache) {\n\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n\t\tthis.graphics.draw(ctx, this);\n\t\treturn true;\n\t};\n\n\t/**\n\t * Returns a clone of this Shape. Some properties that are specific to this instance's current context are reverted to\n\t * their defaults (for example .parent).\n\t * @method clone\n\t * @param {Boolean} recursive If true, this Shape's {{#crossLink \"Graphics\"}}{{/crossLink}} instance will also be\n\t * cloned. If false, the Graphics instance will be shared with the new Shape.\n\t **/\n\tp.clone = function(recursive) {\n\t\tvar g = (recursive && this.graphics) ? this.graphics.clone() : this.graphics;\n\t\treturn  this._cloneProps(new Shape(g));\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Shape (name=\"+  this.name +\")]\";\n\t};\n\n\n\tcreatejs.Shape = createjs.promote(Shape, \"DisplayObject\");\n}());\n\n//##############################################################################\n// Text.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Display one or more lines of dynamic text (not user editable) in the display list. Line wrapping support (using the\n\t * lineWidth) is very basic, wrapping on spaces and tabs only. Note that as an alternative to Text, you can position HTML\n\t * text above or below the canvas relative to items in the display list using the {{#crossLink \"DisplayObject/localToGlobal\"}}{{/crossLink}}\n\t * method, or using {{#crossLink \"DOMElement\"}}{{/crossLink}}.\n\t *\n\t * <b>Please note that Text does not support HTML text, and can only display one font style at a time.</b> To use\n\t * multiple font styles, you will need to create multiple text instances, and position them manually.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var text = new createjs.Text(\"Hello World\", \"20px Arial\", \"#ff7700\");\n\t *      text.x = 100;\n\t *      text.textBaseline = \"alphabetic\";\n\t *\n\t * CreateJS Text supports web fonts (the same rules as Canvas). The font must be loaded and supported by the browser\n\t * before it can be displayed.\n\t *\n\t * <strong>Note:</strong> Text can be expensive to generate, so cache instances where possible. Be aware that not all\n\t * browsers will render Text exactly the same.\n\t * @class Text\n\t * @extends DisplayObject\n\t * @constructor\n\t * @param {String} [text] The text to display.\n\t * @param {String} [font] The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold\n\t * 36px Arial\").\n\t * @param {String} [color] The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex.\n\t * \"#F00\", \"red\", or \"#FF0000\").\n\t **/\n\tfunction Text(text, font, color) {\n\t\tthis.DisplayObject_constructor();\n\t\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The text to display.\n\t\t * @property text\n\t\t * @type String\n\t\t **/\n\t\tthis.text = text;\n\t\n\t\t/**\n\t\t * The font style to use. Any valid value for the CSS font attribute is acceptable (ex. \"bold 36px Arial\").\n\t\t * @property font\n\t\t * @type String\n\t\t **/\n\t\tthis.font = font;\n\t\n\t\t/**\n\t\t * The color to draw the text in. Any valid value for the CSS color attribute is acceptable (ex. \"#F00\"). Default is \"#000\".\n\t\t * It will also accept valid canvas fillStyle values.\n\t\t * @property color\n\t\t * @type String\n\t\t **/\n\t\tthis.color = color;\n\t\n\t\t/**\n\t\t * The horizontal text alignment. Any of \"start\", \"end\", \"left\", \"right\", and \"center\". For detailed\n\t\t * information view the\n\t\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n\t\t * whatwg spec</a>. Default is \"left\".\n\t\t * @property textAlign\n\t\t * @type String\n\t\t **/\n\t\tthis.textAlign = \"left\";\n\t\n\t\t/**\n\t\t * The vertical alignment point on the font. Any of \"top\", \"hanging\", \"middle\", \"alphabetic\", \"ideographic\", or\n\t\t * \"bottom\". For detailed information view the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n\t\t * whatwg spec</a>. Default is \"top\".\n\t\t * @property textBaseline\n\t\t * @type String\n\t\t*/\n\t\tthis.textBaseline = \"top\";\n\t\n\t\t/**\n\t\t * The maximum width to draw the text. If maxWidth is specified (not null), the text will be condensed or\n\t\t * shrunk to make it fit in this width. For detailed information view the\n\t\t * <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#text-styles\">\n\t\t * whatwg spec</a>.\n\t\t * @property maxWidth\n\t\t * @type Number\n\t\t*/\n\t\tthis.maxWidth = null;\n\t\n\t\t/**\n\t\t * If greater than 0, the text will be drawn as a stroke (outline) of the specified width.\n\t\t * @property outline\n\t\t * @type Number\n\t\t **/\n\t\tthis.outline = 0;\n\t\n\t\t/**\n\t\t * Indicates the line height (vertical distance between baselines) for multi-line text. If null or 0,\n\t\t * the value of getMeasuredLineHeight is used.\n\t\t * @property lineHeight\n\t\t * @type Number\n\t\t **/\n\t\tthis.lineHeight = 0;\n\t\n\t\t/**\n\t\t * Indicates the maximum width for a line of text before it is wrapped to multiple lines. If null,\n\t\t * the text will not be wrapped.\n\t\t * @property lineWidth\n\t\t * @type Number\n\t\t **/\n\t\tthis.lineWidth = null;\n\t}\n\tvar p = createjs.extend(Text, createjs.DisplayObject);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\t\n// static properties:\n\t/**\n\t * @property _workingContext\n\t * @type CanvasRenderingContext2D\n\t * @private\n\t **/\n\tvar canvas = (createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"));\n\tif (canvas.getContext) { Text._workingContext = canvas.getContext(\"2d\"); canvas.width = canvas.height = 1; }\n\t\n\t\n// constants:\n\t/**\n\t * Lookup table for the ratio to offset bounds x calculations based on the textAlign property.\n\t * @property H_OFFSETS\n\t * @type Object\n\t * @protected\n\t * @static\n\t **/\n\tText.H_OFFSETS = {start: 0, left: 0, center: -0.5, end: -1, right: -1};\n\t\n\t/**\n\t * Lookup table for the ratio to offset bounds y calculations based on the textBaseline property.\n\t * @property H_OFFSETS\n\t * @type Object\n\t * @protected\n\t * @static\n\t **/\n\tText.V_OFFSETS = {top: 0, hanging: -0.01, middle: -0.4, alphabetic: -0.8, ideographic: -0.85, bottom: -1};\n\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Whether the display object would be visible if drawn to a canvas\n\t **/\n\tp.isVisible = function() {\n\t\tvar hasContent = this.cacheCanvas || (this.text != null && this.text !== \"\");\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && hasContent);\n\t};\n\n\t/**\n\t * Draws the Text into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t **/\n\tp.draw = function(ctx, ignoreCache) {\n\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n\n\t\tvar col = this.color || \"#000\";\n\t\tif (this.outline) { ctx.strokeStyle = col; ctx.lineWidth = this.outline*1; }\n\t\telse { ctx.fillStyle = col; }\n\t\t\n\t\tthis._drawText(this._prepContext(ctx));\n\t\treturn true;\n\t};\n\n\t/**\n\t * Returns the measured, untransformed width of the text without wrapping. Use getBounds for a more robust value.\n\t * @method getMeasuredWidth\n\t * @return {Number} The measured, untransformed width of the text.\n\t **/\n\tp.getMeasuredWidth = function() {\n\t\treturn this._getMeasuredWidth(this.text);\n\t};\n\n\t/**\n\t * Returns an approximate line height of the text, ignoring the lineHeight property. This is based on the measured\n\t * width of a \"M\" character multiplied by 1.2, which provides an approximate line height for most fonts.\n\t * @method getMeasuredLineHeight\n\t * @return {Number} an approximate line height of the text, ignoring the lineHeight property. This is\n\t * based on the measured width of a \"M\" character multiplied by 1.2, which approximates em for most fonts.\n\t **/\n\tp.getMeasuredLineHeight = function() {\n\t\treturn this._getMeasuredWidth(\"M\")*1.2;\n\t};\n\n\t/**\n\t * Returns the approximate height of multi-line text by multiplying the number of lines against either the\n\t * <code>lineHeight</code> (if specified) or {{#crossLink \"Text/getMeasuredLineHeight\"}}{{/crossLink}}. Note that\n\t * this operation requires the text flowing logic to run, which has an associated CPU cost.\n\t * @method getMeasuredHeight\n\t * @return {Number} The approximate height of the untransformed multi-line text.\n\t **/\n\tp.getMeasuredHeight = function() {\n\t\treturn this._drawText(null,{}).height;\n\t};\n\n\t/**\n\t * Docced in superclass.\n\t */\n\tp.getBounds = function() {\n\t\tvar rect = this.DisplayObject_getBounds();\n\t\tif (rect) { return rect; }\n\t\tif (this.text == null || this.text === \"\") { return null; }\n\t\tvar o = this._drawText(null, {});\n\t\tvar w = (this.maxWidth && this.maxWidth < o.width) ? this.maxWidth : o.width;\n\t\tvar x = w * Text.H_OFFSETS[this.textAlign||\"left\"];\n\t\tvar lineHeight = this.lineHeight||this.getMeasuredLineHeight();\n\t\tvar y = lineHeight * Text.V_OFFSETS[this.textBaseline||\"top\"];\n\t\treturn this._rectangle.setValues(x, y, w, o.height);\n\t};\n\t\n\t/**\n\t * Returns an object with width, height, and lines properties. The width and height are the visual width and height\n\t * of the drawn text. The lines property contains an array of strings, one for\n\t * each line of text that will be drawn, accounting for line breaks and wrapping. These strings have trailing\n\t * whitespace removed.\n\t * @method getMetrics\n\t * @return {Object} An object with width, height, and lines properties.\n\t **/\n\tp.getMetrics = function() {\n\t\tvar o = {lines:[]};\n\t\to.lineHeight = this.lineHeight || this.getMeasuredLineHeight();\n\t\to.vOffset = o.lineHeight * Text.V_OFFSETS[this.textBaseline||\"top\"];\n\t\treturn this._drawText(null, o, o.lines);\n\t};\n\n\t/**\n\t * Returns a clone of the Text instance.\n\t * @method clone\n\t * @return {Text} a clone of the Text instance.\n\t **/\n\tp.clone = function() {\n\t\treturn this._cloneProps(new Text(this.text, this.font, this.color));\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Text (text=\"+  (this.text.length > 20 ? this.text.substr(0, 17)+\"...\" : this.text) +\")]\";\n\t};\n\n\n// private methods:\n\t/**\n\t * @method _cloneProps\n\t * @param {Text} o\n\t * @protected\n\t * @return {Text} o\n\t **/\n\tp._cloneProps = function(o) {\n\t\tthis.DisplayObject__cloneProps(o);\n\t\to.textAlign = this.textAlign;\n\t\to.textBaseline = this.textBaseline;\n\t\to.maxWidth = this.maxWidth;\n\t\to.outline = this.outline;\n\t\to.lineHeight = this.lineHeight;\n\t\to.lineWidth = this.lineWidth;\n\t\treturn o;\n\t};\n\n\t/**\n\t * @method _getWorkingContext\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @return {CanvasRenderingContext2D}\n\t * @protected\n\t **/\n\tp._prepContext = function(ctx) {\n\t\tctx.font = this.font||\"10px sans-serif\";\n\t\tctx.textAlign = this.textAlign||\"left\";\n\t\tctx.textBaseline = this.textBaseline||\"top\";\n\t\treturn ctx;\n\t};\n\n\t/**\n\t * Draws multiline text.\n\t * @method _drawText\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {Object} o\n\t * @param {Array} lines\n\t * @return {Object}\n\t * @protected\n\t **/\n\tp._drawText = function(ctx, o, lines) {\n\t\tvar paint = !!ctx;\n\t\tif (!paint) {\n\t\t\tctx = Text._workingContext;\n\t\t\tctx.save();\n\t\t\tthis._prepContext(ctx);\n\t\t}\n\t\tvar lineHeight = this.lineHeight||this.getMeasuredLineHeight();\n\t\t\n\t\tvar maxW = 0, count = 0;\n\t\tvar hardLines = String(this.text).split(/(?:\\r\\n|\\r|\\n)/);\n\t\tfor (var i=0, l=hardLines.length; i<l; i++) {\n\t\t\tvar str = hardLines[i];\n\t\t\tvar w = null;\n\t\t\t\n\t\t\tif (this.lineWidth != null && (w = ctx.measureText(str).width) > this.lineWidth) {\n\t\t\t\t// text wrapping:\n\t\t\t\tvar words = str.split(/(\\s)/);\n\t\t\t\tstr = words[0];\n\t\t\t\tw = ctx.measureText(str).width;\n\t\t\t\t\n\t\t\t\tfor (var j=1, jl=words.length; j<jl; j+=2) {\n\t\t\t\t\t// Line needs to wrap:\n\t\t\t\t\tvar wordW = ctx.measureText(words[j] + words[j+1]).width;\n\t\t\t\t\tif (w + wordW > this.lineWidth) {\n\t\t\t\t\t\tif (paint) { this._drawTextLine(ctx, str, count*lineHeight); }\n\t\t\t\t\t\tif (lines) { lines.push(str); }\n\t\t\t\t\t\tif (w > maxW) { maxW = w; }\n\t\t\t\t\t\tstr = words[j+1];\n\t\t\t\t\t\tw = ctx.measureText(str).width;\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstr += words[j] + words[j+1];\n\t\t\t\t\t\tw += wordW;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (paint) { this._drawTextLine(ctx, str, count*lineHeight); }\n\t\t\tif (lines) { lines.push(str); }\n\t\t\tif (o && w == null) { w = ctx.measureText(str).width; }\n\t\t\tif (w > maxW) { maxW = w; }\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\tif (o) {\n\t\t\to.width = maxW;\n\t\t\to.height = count*lineHeight;\n\t\t}\n\t\tif (!paint) { ctx.restore(); }\n\t\treturn o;\n\t};\n\n\t/**\n\t * @method _drawTextLine\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {String} text\n\t * @param {Number} y\n\t * @protected\n\t **/\n\tp._drawTextLine = function(ctx, text, y) {\n\t\t// Chrome 17 will fail to draw the text if the last param is included but null, so we feed it a large value instead:\n\t\tif (this.outline) { ctx.strokeText(text, 0, y, this.maxWidth||0xFFFF); }\n\t\telse { ctx.fillText(text, 0, y, this.maxWidth||0xFFFF); }\n\t};\n\t\n\t\n\t/**\n\t * @method _getMeasuredWidth\n\t * @param {String} text\n\t * @protected\n\t **/\n\tp._getMeasuredWidth = function(text) {\n\t\tvar ctx = Text._workingContext;\n\t\tctx.save();\n\t\tvar w = this._prepContext(ctx).measureText(text).width;\n\t\tctx.restore();\n\t\treturn w;\n\t};\n\n\n\tcreatejs.Text = createjs.promote(Text, \"DisplayObject\");\n}());\n\n//##############################################################################\n// BitmapText.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Displays text using bitmap glyphs defined in a sprite sheet. Multi-line text is supported\n\t * using new line characters, but automatic wrapping is not supported. See the \n\t * {{#crossLink \"BitmapText/spriteSheet:property\"}}{{/crossLink}}\n\t * property for more information on defining glyphs.\n\t * \n\t * <strong>Important:</strong> BitmapText extends Container, but is not designed to be used as one.\n\t * As such, methods like addChild and removeChild are disabled.\n\t * @class BitmapText\n\t * @extends DisplayObject\n\t * @param {String} [text=\"\"] The text to display.\n\t * @param {SpriteSheet} [spriteSheet=null] The spritesheet that defines the character glyphs.\n\t * @constructor\n\t **/\n\tfunction BitmapText(text, spriteSheet) {\n\t\tthis.Container_constructor();\n\t\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The text to display.\n\t\t * @property text\n\t\t * @type String\n\t\t * @default \"\"\n\t\t **/\n\t\tthis.text = text||\"\";\n\t\t\n\t\t/**\n\t\t * A SpriteSheet instance that defines the glyphs for this bitmap text. Each glyph/character\n\t\t * should have a single frame animation defined in the sprite sheet named the same as\n\t\t * corresponding character. For example, the following animation definition:\n\t\t *\n\t\t * \t\t\"A\": {frames: [0]}\n\t\t *\n\t\t * would indicate that the frame at index 0 of the spritesheet should be drawn for the \"A\" character. The short form\n\t\t * is also acceptable:\n\t\t * \n\t\t * \t\t\"A\": 0\n\t\t *\n\t\t * Note that if a character in the text is not found in the sprite sheet, it will also\n\t\t * try to use the alternate case (upper or lower).\n\t\t *\n\t\t * See SpriteSheet for more information on defining sprite sheet data.\n\t\t * @property spriteSheet\n\t\t * @type SpriteSheet\n\t\t * @default null\n\t\t **/\n\t\tthis.spriteSheet = spriteSheet;\n\t\n\t\t/**\n\t\t * The height of each line of text. If 0, then it will use a line height calculated\n\t\t * by checking for the height of the \"1\", \"T\", or \"L\" character (in that order). If\n\t\t * those characters are not defined, it will use the height of the first frame of the\n\t\t * sprite sheet.\n\t\t * @property lineHeight\n\t\t * @type Number\n\t\t * @default 0\n\t\t **/\n\t\tthis.lineHeight = 0;\n\t\n\t\t/**\n\t\t * This spacing (in pixels) will be added after each character in the output.\n\t\t * @property letterSpacing\n\t\t * @type Number\n\t\t * @default 0\n\t\t **/\n\t\tthis.letterSpacing = 0;\n\t\n\t\t/**\n\t\t * If a space character is not defined in the sprite sheet, then empty pixels equal to\n\t\t * spaceWidth will be inserted instead. If 0, then it will use a value calculated\n\t\t * by checking for the width of the \"1\", \"l\", \"E\", or \"A\" character (in that order). If\n\t\t * those characters are not defined, it will use the width of the first frame of the\n\t\t * sprite sheet.\n\t\t * @property spaceWidth\n\t\t * @type Number\n\t\t * @default 0\n\t\t **/\n\t\tthis.spaceWidth = 0;\n\t\t\n\t\t\n\t// private properties:\n\t \t/**\n\t\t * @property _oldProps\n\t\t * @type Object\n\t\t * @protected\n\t\t **/\n\t\tthis._oldProps = {text:0,spriteSheet:0,lineHeight:0,letterSpacing:0,spaceWidth:0};\n\t}\n\tvar p = createjs.extend(BitmapText, createjs.Container);\n\n\t/**\n\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t * for details.\n\t *\n\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t *\n\t * @method initialize\n\t * @protected\n\t * @deprecated\n\t */\n\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\n// static properties:\n\t/**\n\t * BitmapText uses Sprite instances to draw text. To reduce the creation and destruction of instances (and thus garbage collection), it maintains\n\t * an internal object pool of sprite instances to reuse. Increasing this value can cause more sprites to be\n\t * retained, slightly increasing memory use, but reducing instantiation.\n\t * @property maxPoolSize\n\t * @type Number\n\t * @static\n\t * @default 100\n\t **/\n\tBitmapText.maxPoolSize = 100;\n\t\n\t/**\n\t * Sprite object pool.\n\t * @type {Array}\n\t * @static\n\t * @private\n\t */\n\tBitmapText._spritePool = [];\n\n\t\n// public methods:\n\t/**\n\t * Docced in superclass.\n\t **/\n\tp.draw = function(ctx, ignoreCache) {\n\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return; }\n\t\tthis._updateText();\n\t\tthis.Container_draw(ctx, ignoreCache);\n\t};\n\t\n\t/**\n\t * Docced in superclass.\n\t **/\n\tp.getBounds = function() {\n\t\tthis._updateText();\n\t\treturn this.Container_getBounds();\n\t};\n\t\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t **/\n\tp.isVisible = function() {\n\t\tvar hasContent = this.cacheCanvas || (this.spriteSheet && this.spriteSheet.complete && this.text);\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX !== 0 && this.scaleY !== 0 && hasContent);\n\t};\n\t\n\tp.clone = function() {\n\t\treturn this._cloneProps(new BitmapText(this.text, this.spriteSheet));\n\t};\n\t\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method addChild\n\t **/\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method addChildAt\n\t **/\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method removeChild\n\t **/\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method removeChildAt\n\t **/\n\t/**\n\t * <strong>Disabled in BitmapText.</strong>\n\t * @method removeAllChildren\n\t **/\n\tp.addChild = p.addChildAt = p.removeChild = p.removeChildAt = p.removeAllChildren = function() {};\n\n\n// private methods:\n \t/**\n\t * @method _cloneProps\n\t * @param {BitmapText} o\n\t * @return {BitmapText} o\n\t * @protected\n\t **/\n\tp._cloneProps = function(o) {\n\t\tthis.Container__cloneProps(o);\n\t\to.lineHeight = this.lineHeight;\n\t\to.letterSpacing = this.letterSpacing;\n\t\to.spaceWidth = this.spaceWidth;\n\t\treturn o;\n\t};\n\t\n\t/**\n\t * @method _getFrameIndex\n\t * @param {String} character\n\t * @param {SpriteSheet} spriteSheet\n\t * @return {Number}\n\t * @protected\n\t **/\n\tp._getFrameIndex = function(character, spriteSheet) {\n\t\tvar c, o = spriteSheet.getAnimation(character);\n\t\tif (!o) {\n\t\t\t(character != (c = character.toUpperCase())) || (character != (c = character.toLowerCase())) || (c=null);\n\t\t\tif (c) { o = spriteSheet.getAnimation(c); }\n\t\t}\n\t\treturn o && o.frames[0];\n\t};\n\t\n\t/**\n\t * @method _getFrame\n\t * @param {String} character\n\t * @param {SpriteSheet} spriteSheet\n\t * @return {Object}\n\t * @protected\n\t **/\n\tp._getFrame = function(character, spriteSheet) {\n\t\tvar index = this._getFrameIndex(character, spriteSheet);\n\t\treturn index == null ? index : spriteSheet.getFrame(index);\n\t};\n\t\n\t/**\n\t * @method _getLineHeight\n\t * @param {SpriteSheet} ss\n\t * @return {Number}\n\t * @protected\n\t **/\n\tp._getLineHeight = function(ss) {\n\t\tvar frame = this._getFrame(\"1\",ss) || this._getFrame(\"T\",ss) || this._getFrame(\"L\",ss) || ss.getFrame(0);\n\t\treturn frame ? frame.rect.height : 1;\n\t};\n\t/**\n\t * @method _getSpaceWidth\n\t * @param {SpriteSheet} ss\n\t * @return {Number}\n\t * @protected\n\t **/\n\tp._getSpaceWidth = function(ss) {\n\t\tvar frame = this._getFrame(\"1\",ss) || this._getFrame(\"l\",ss) || this._getFrame(\"e\",ss) || this._getFrame(\"a\",ss) || ss.getFrame(0);\n\t\treturn frame ? frame.rect.width : 1;\n\t};\n\t\n\t/**\n\t * @method _drawText\n\t * @protected\n\t **/\n\tp._updateText = function() {\n\t\tvar x=0, y=0, o=this._oldProps, change=false, spaceW=this.spaceWidth, lineH=this.lineHeight, ss=this.spriteSheet;\n\t\tvar pool=BitmapText._spritePool, kids=this.children, childIndex=0, numKids=kids.length, sprite;\n\t\t\n\t\tfor (var n in o) {\n\t\t\tif (o[n] != this[n]) {\n\t\t\t\to[n] = this[n];\n\t\t\t\tchange = true;\n\t\t\t}\n\t\t}\n\t\tif (!change) { return; }\n\t\t\n\t\tvar hasSpace = !!this._getFrame(\" \", ss);\n\t\tif (!hasSpace && !spaceW) { spaceW = this._getSpaceWidth(ss); }\n\t\tif (!lineH) { lineH = this._getLineHeight(ss); }\n\t\t\n\t\tfor(var i=0, l=this.text.length; i<l; i++) {\n\t\t\tvar character = this.text.charAt(i);\n\t\t\tif (character == \" \" && !hasSpace) {\n\t\t\t\tx += spaceW;\n\t\t\t\tcontinue;\n\t\t\t} else if (character==\"\\n\" || character==\"\\r\") {\n\t\t\t\tif (character==\"\\r\" && this.text.charAt(i+1) == \"\\n\") { i++; } // crlf\n\t\t\t\tx = 0;\n\t\t\t\ty += lineH;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar index = this._getFrameIndex(character, ss);\n\t\t\tif (index == null) { continue; }\n\t\t\t\n\t\t\tif (childIndex < numKids) {\n\t\t\t\tsprite = kids[childIndex];\n\t\t\t} else {\n\t\t\t\tkids.push(sprite = pool.length ? pool.pop() : new createjs.Sprite());\n\t\t\t\tsprite.parent = this;\n\t\t\t\tnumKids++;\n\t\t\t}\n\t\t\tsprite.spriteSheet = ss;\n\t\t\tsprite.gotoAndStop(index);\n\t\t\tsprite.x = x;\n\t\t\tsprite.y = y;\n\t\t\tchildIndex++;\n\t\t\t\n\t\t\tx += sprite.getBounds().width + this.letterSpacing;\n\t\t}\n\t\twhile (numKids > childIndex) {\n\t\t\t // faster than removeChild.\n\t\t\tpool.push(sprite = kids.pop());\n\t\t\tsprite.parent = null;\n\t\t\tnumKids--;\n\t\t}\n\t\tif (pool.length > BitmapText.maxPoolSize) { pool.length = BitmapText.maxPoolSize; }\n\t};\n\n\n\tcreatejs.BitmapText = createjs.promote(BitmapText, \"Container\");\n}());\n\n//##############################################################################\n// MovieClip.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * The MovieClip class associates a TweenJS Timeline with an EaselJS {{#crossLink \"Container\"}}{{/crossLink}}. It allows\n\t * you to create objects which encapsulate timeline animations, state changes, and synched actions. The MovieClip\n\t * class has been included in the EaselJS minified file since 0.7.0.\n\t *\n\t * Currently MovieClip only works properly if it is tick based (as opposed to time based) though some concessions have\n\t * been made to support time-based timelines in the future.\n\t *\n\t * <h4>Example</h4>\n\t * This example animates two shapes back and forth. The grey shape starts on the left, but we jump to a mid-point in\n\t * the animation using {{#crossLink \"MovieClip/gotoAndPlay\"}}{{/crossLink}}.\n\t *\n\t *      var stage = new createjs.Stage(\"canvas\");\n\t *      createjs.Ticker.addEventListener(\"tick\", stage);\n\t *\n\t *      var mc = new createjs.MovieClip(null, 0, true, {start:20});\n\t *      stage.addChild(mc);\n\t *\n\t *      var child1 = new createjs.Shape(\n\t *          new createjs.Graphics().beginFill(\"#999999\")\n\t *              .drawCircle(30,30,30));\n\t *      var child2 = new createjs.Shape(\n\t *          new createjs.Graphics().beginFill(\"#5a9cfb\")\n\t *              .drawCircle(30,30,30));\n\t *\n\t *      mc.timeline.addTween(\n\t *          createjs.Tween.get(child1)\n\t *              .to({x:0}).to({x:60}, 50).to({x:0}, 50));\n\t *      mc.timeline.addTween(\n\t *          createjs.Tween.get(child2)\n\t *              .to({x:60}).to({x:0}, 50).to({x:60}, 50));\n\t *\n\t *      mc.gotoAndPlay(\"start\");\n\t *\n\t * It is recommended to use <code>tween.to()</code> to animate and set properties (use no duration to have it set\n\t * immediately), and the <code>tween.wait()</code> method to create delays between animations. Note that using the\n\t * <code>tween.set()</code> method to affect properties will likely not provide the desired result.\n\t *\n\t * @class MovieClip\n\t * @main MovieClip\n\t * @extends Container\n\t * @constructor\n\t * @param {String} [mode=independent] Initial value for the mode property. One of {{#crossLink \"MovieClip/INDEPENDENT:property\"}}{{/crossLink}},\n\t * {{#crossLink \"MovieClip/SINGLE_FRAME:property\"}}{{/crossLink}}, or {{#crossLink \"MovieClip/SYNCHED:property\"}}{{/crossLink}}.\n\t * The default is {{#crossLink \"MovieClip/INDEPENDENT:property\"}}{{/crossLink}}.\n\t * @param {Number} [startPosition=0] Initial value for the {{#crossLink \"MovieClip/startPosition:property\"}}{{/crossLink}}\n\t * property.\n\t * @param {Boolean} [loop=true] Initial value for the {{#crossLink \"MovieClip/loop:property\"}}{{/crossLink}}\n\t * property. The default is `true`.\n\t * @param {Object} [labels=null] A hash of labels to pass to the {{#crossLink \"MovieClip/timeline:property\"}}{{/crossLink}}\n\t * instance associated with this MovieClip. Labels only need to be passed if they need to be used.\n\t **/\n\tfunction MovieClip(mode, startPosition, loop, labels) {\n\t\tthis.Container_constructor();\n\t\t!MovieClip.inited&&MovieClip.init(); // static init\n\t\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * Controls how this MovieClip advances its time. Must be one of 0 (INDEPENDENT), 1 (SINGLE_FRAME), or 2 (SYNCHED).\n\t\t * See each constant for a description of the behaviour.\n\t\t * @property mode\n\t\t * @type String\n\t\t * @default null\n\t\t **/\n\t\tthis.mode = mode||MovieClip.INDEPENDENT;\n\t\n\t\t/**\n\t\t * Specifies what the first frame to play in this movieclip, or the only frame to display if mode is SINGLE_FRAME.\n\t\t * @property startPosition\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.startPosition = startPosition || 0;\n\t\n\t\t/**\n\t\t * Indicates whether this MovieClip should loop when it reaches the end of its timeline.\n\t\t * @property loop\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.loop = loop;\n\t\n\t\t/**\n\t\t * The current frame of the movieclip.\n\t\t * @property currentFrame\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.currentFrame = 0;\n\t\n\t\t/**\n\t\t * The TweenJS Timeline that is associated with this MovieClip. This is created automatically when the MovieClip\n\t\t * instance is initialized. Animations are created by adding <a href=\"http://tweenjs.com\">TweenJS</a> Tween\n\t\t * instances to the timeline.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var tween = createjs.Tween.get(target).to({x:0}).to({x:100}, 30);\n\t\t *      var mc = new createjs.MovieClip();\n\t\t *      mc.timeline.addTween(tween);\n\t\t *\n\t\t * Elements can be added and removed from the timeline by toggling an \"_off\" property\n\t\t * using the <code>tweenInstance.to()</code> method. Note that using <code>Tween.set</code> is not recommended to\n\t\t * create MovieClip animations. The following example will toggle the target off on frame 0, and then back on for\n\t\t * frame 1. You can use the \"visible\" property to achieve the same effect.\n\t\t *\n\t\t *      var tween = createjs.Tween.get(target).to({_off:false})\n\t\t *          .wait(1).to({_off:true})\n\t\t *          .wait(1).to({_off:false});\n\t\t *\n\t\t * @property timeline\n\t\t * @type Timeline\n\t\t * @default null\n\t\t */\n\t\tthis.timeline = new createjs.Timeline(null, labels, {paused:true, position:startPosition, useTicks:true});\n\t\n\t\t/**\n\t\t * If true, the MovieClip's position will not advance when ticked.\n\t\t * @property paused\n\t\t * @type Boolean\n\t\t * @default false\n\t\t */\n\t\tthis.paused = false;\n\t\n\t\t/**\n\t\t * If true, actions in this MovieClip's tweens will be run when the playhead advances.\n\t\t * @property actionsEnabled\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.actionsEnabled = true;\n\t\n\t\t/**\n\t\t * If true, the MovieClip will automatically be reset to its first frame whenever the timeline adds\n\t\t * it back onto the display list. This only applies to MovieClip instances with mode=INDEPENDENT.\n\t\t * <br><br>\n\t\t * For example, if you had a character animation with a \"body\" child MovieClip instance\n\t\t * with different costumes on each frame, you could set body.autoReset = false, so that\n\t\t * you can manually change the frame it is on, without worrying that it will be reset\n\t\t * automatically.\n\t\t * @property autoReset\n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tthis.autoReset = true;\n\t\t\n\t\t/**\n\t\t * An array of bounds for each frame in the MovieClip. This is mainly intended for tool output.\n\t\t * @property frameBounds\n\t\t * @type Array\n\t\t * @default null\n\t\t */\n\t\tthis.frameBounds = this.frameBounds||null; // TODO: Deprecated. This is for backwards support of Flash/Animate\n\t\t\n\t\t/**\n\t\t * By default MovieClip instances advance one frame per tick. Specifying a framerate for the MovieClip\n\t\t * will cause it to advance based on elapsed time between ticks as appropriate to maintain the target\n\t\t * framerate.\n\t\t *\n\t\t * For example, if a MovieClip with a framerate of 10 is placed on a Stage being updated at 40fps, then the MovieClip will\n\t\t * advance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\n\t\t * vary slightly between frames.\n\t\t *\n\t\t * This feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\n\t\t * passed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.\n\t\t * @property framerate\n\t\t * @type {Number}\n\t\t * @default null\n\t\t **/\n\t\tthis.framerate = null;\n\t\t\n\t\t\n\t// private properties:\n\t\t/**\n\t\t * @property _synchOffset\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @private\n\t\t */\n\t\tthis._synchOffset = 0;\n\t\n\t\t/**\n\t\t * @property _prevPos\n\t\t * @type Number\n\t\t * @default -1\n\t\t * @private\n\t\t */\n\t\tthis._prevPos = -1; // TODO: evaluate using a ._reset Boolean prop instead of -1.\n\t\n\t\t/**\n\t\t * @property _prevPosition\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @private\n\t\t */\n\t\tthis._prevPosition = 0;\n\t\n\t\t/**\n\t\t * The time remaining from the previous tick, only applicable when .framerate is set.\n\t\t * @property _t\n\t\t * @type Number\n\t\t * @private\n\t\t */\n\t\tthis._t = 0;\n\t\n\t\t/**\n\t\t * List of display objects that are actively being managed by the MovieClip.\n\t\t * @property _managed\n\t\t * @type Object\n\t\t * @private\n\t\t */\n\t\tthis._managed = {};\n\t}\n\tvar p = createjs.extend(MovieClip, createjs.Container);\n\n\n// constants:\n\t/**\n\t * The MovieClip will advance independently of its parent, even if its parent is paused.\n\t * This is the default mode.\n\t * @property INDEPENDENT\n\t * @static\n\t * @type String\n\t * @default \"independent\"\n\t * @readonly\n\t **/\n\tMovieClip.INDEPENDENT = \"independent\";\n\n\t/**\n\t * The MovieClip will only display a single frame (as determined by the startPosition property).\n\t * @property SINGLE_FRAME\n\t * @static\n\t * @type String\n\t * @default \"single\"\n\t * @readonly\n\t **/\n\tMovieClip.SINGLE_FRAME = \"single\";\n\n\t/**\n\t * The MovieClip will be advanced only when its parent advances and will be synched to the position of\n\t * the parent MovieClip.\n\t * @property SYNCHED\n\t * @static\n\t * @type String\n\t * @default \"synched\"\n\t * @readonly\n\t **/\n\tMovieClip.SYNCHED = \"synched\";\n\t\n\t\n// static properties:\n\tMovieClip.inited = false;\n\t\n\t\n// static methods:\n\tMovieClip.init = function() {\n\t\tif (MovieClip.inited) { return; }\n\t\t// plugins introduce some overhead to Tween, so we only install this if an MC is instantiated.\n\t\tMovieClipPlugin.install();\n\t\tMovieClip.inited = true;\n\t};\n\t\n\t\n// getter / setters:\n\t/**\n\t * Use the {{#crossLink \"MovieClip/labels:property\"}}{{/crossLink}} property instead.\n\t * @method getLabels\n\t * @return {Array}\n\t * @deprecated\n\t **/\n\tp.getLabels = function() {\n\t\treturn this.timeline.getLabels();\n\t};\n\t\n\t/**\n\t * Use the {{#crossLink \"MovieClip/currentLabel:property\"}}{{/crossLink}} property instead.\n\t * @method getCurrentLabel\n\t * @return {String}\n\t * @deprecated\n\t **/\n\tp.getCurrentLabel = function() {\n\t\tthis._updateTimeline();\n\t\treturn this.timeline.getCurrentLabel();\n\t};\n\t\n\t/**\n\t * Use the {{#crossLink \"MovieClip/duration:property\"}}{{/crossLink}} property instead.\n\t * @method getDuration\n\t * @return {Number}\n\t * @protected\n\t **/\n\tp.getDuration = function() {\n\t\treturn this.timeline.duration;\n\t};\n\n\t/**\n\t * Returns an array of objects with label and position (aka frame) properties, sorted by position.\n\t * Shortcut to TweenJS: Timeline.getLabels();\n\t * @property labels\n\t * @type {Array}\n\t * @readonly\n\t **/\n\t\n\t/**\n\t * Returns the name of the label on or immediately before the current frame. See TweenJS: Timeline.getCurrentLabel()\n\t * for more information.\n\t * @property currentLabel\n\t * @type {String}\n\t * @readonly\n\t **/\n\t\n\t/**\n\t * Returns the duration of this MovieClip in seconds or ticks. Identical to {{#crossLink \"MovieClip/duration:property\"}}{{/crossLink}}\n\t * and provided for Adobe Flash/Animate API compatibility.\n\t * @property totalFrames\n\t * @type {Number}\n\t * @readonly\n\t **/\n\t\n\t/**\n\t * Returns the duration of this MovieClip in seconds or ticks.\n\t * @property duration\n\t * @type {Number}\n\t * @readonly\n\t **/\n\ttry {\n\t\tObject.defineProperties(p, {\n\t\t\tlabels: { get: p.getLabels },\n\t\t\tcurrentLabel: { get: p.getCurrentLabel },\n\t\t\ttotalFrames: { get: p.getDuration },\n\t\t\tduration: { get: p.getDuration }\n\t\t});\n\t} catch (e) {}\n\n\n// public methods:\n\t/**\n\t * Constructor alias for backwards compatibility. This method will be removed in future versions.\n\t * Subclasses should be updated to use {{#crossLink \"Utility Methods/extends\"}}{{/crossLink}}.\n\t * @method initialize\n\t * @deprecated in favour of `createjs.promote()`\n\t **/\n\tp.initialize = MovieClip; // TODO: Deprecated. This is for backwards support of Adobe Flash/Animate\n\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t **/\n\tp.isVisible = function() {\n\t\t// children are placed in draw, so we can't determine if we have content.\n\t\treturn !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0);\n\t};\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t **/\n\tp.draw = function(ctx, ignoreCache) {\n\t\t// draw to cache first:\n\t\tif (this.DisplayObject_draw(ctx, ignoreCache)) { return true; }\n\t\tthis._updateTimeline();\n\t\tthis.Container_draw(ctx, ignoreCache);\n\t\treturn true;\n\t};\n\t\n\t/**\n\t * Sets paused to false.\n\t * @method play\n\t **/\n\tp.play = function() {\n\t\tthis.paused = false;\n\t};\n\t\n\t/**\n\t * Sets paused to true.\n\t * @method stop\n\t **/\n\tp.stop = function() {\n\t\tthis.paused = true;\n\t};\n\t\n\t/**\n\t * Advances this movie clip to the specified position or label and sets paused to false.\n\t * @method gotoAndPlay\n\t * @param {String|Number} positionOrLabel The animation name or frame number to go to.\n\t **/\n\tp.gotoAndPlay = function(positionOrLabel) {\n\t\tthis.paused = false;\n\t\tthis._goto(positionOrLabel);\n\t};\n\t\n\t/**\n\t * Advances this movie clip to the specified position or label and sets paused to true.\n\t * @method gotoAndStop\n\t * @param {String|Number} positionOrLabel The animation or frame name to go to.\n\t **/\n\tp.gotoAndStop = function(positionOrLabel) {\n\t\tthis.paused = true;\n\t\tthis._goto(positionOrLabel);\n\t};\n\t\n\t/**\n\t * Advances the playhead. This occurs automatically each tick by default.\n\t * @param [time] {Number} The amount of time in ms to advance by. Only applicable if framerate is set.\n\t * @method advance\n\t*/\n\tp.advance = function(time) {\n\t\t// TODO: should we worry at all about clips who change their own modes via frame scripts?\n\t\tvar independent = MovieClip.INDEPENDENT;\n\t\tif (this.mode != independent) { return; }\n\t\t\n\t\tvar o=this, fps = o.framerate;\n\t\twhile ((o = o.parent) && fps == null) {\n\t\t\tif (o.mode == independent) { fps = o._framerate; }\n\t\t}\n\t\tthis._framerate = fps;\n\t\t\n\t\tvar t = (fps != null && fps != -1 && time != null) ? time/(1000/fps) + this._t : 1;\n\t\tvar frames = t|0;\n\t\tthis._t = t-frames; // leftover time\n\t\t\n\t\twhile (!this.paused && frames--) {\n\t\t\tthis._prevPosition = (this._prevPos < 0) ? 0 : this._prevPosition+1;\n\t\t\tthis._updateTimeline();\n\t\t}\n\t};\n\t\n\t/**\n\t * MovieClip instances cannot be cloned.\n\t * @method clone\n\t **/\n\tp.clone = function() {\n\t\t// TODO: add support for this? Need to clone the Timeline & retarget tweens - pretty complex.\n\t\tthrow(\"MovieClip cannot be cloned.\")\n\t};\n\t\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[MovieClip (name=\"+  this.name +\")]\";\n\t};\n\n\n// private methods:\n\t/**\n\t * @method _tick\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * function.\n\t * @protected\n\t **/\n\tp._tick = function(evtObj) {\n\t\tthis.advance(evtObj&&evtObj.delta);\n\t\tthis.Container__tick(evtObj);\n\t};\n\t\n\t/**\n\t * @method _goto\n\t * @param {String|Number} positionOrLabel The animation name or frame number to go to.\n\t * @protected\n\t **/\n\tp._goto = function(positionOrLabel) {\n\t\tvar pos = this.timeline.resolve(positionOrLabel);\n\t\tif (pos == null) { return; }\n\t\t// prevent _updateTimeline from overwriting the new position because of a reset:\n\t\tif (this._prevPos == -1) { this._prevPos = NaN; }\n\t\tthis._prevPosition = pos;\n\t\tthis._t = 0;\n\t\tthis._updateTimeline();\n\t};\n\t\n\t/**\n\t * @method _reset\n\t * @private\n\t **/\n\tp._reset = function() {\n\t\tthis._prevPos = -1;\n\t\tthis._t = this.currentFrame = 0;\n\t\tthis.paused = false;\n\t};\n\t\n\t/**\n\t * @method _updateTimeline\n\t * @protected\n\t **/\n\tp._updateTimeline = function() {\n\t\tvar tl = this.timeline;\n\t\tvar synched = this.mode != MovieClip.INDEPENDENT;\n\t\ttl.loop = (this.loop==null) ? true : this.loop;\n\t\t\n\t\tvar pos = synched ? this.startPosition + (this.mode==MovieClip.SINGLE_FRAME?0:this._synchOffset) : (this._prevPos < 0 ? 0 : this._prevPosition);\n\t\tvar mode = synched || !this.actionsEnabled ? createjs.Tween.NONE : null;\n\t\t\n\t\t// pre-assign currentFrame so it is available to frame scripts:\n\t\tthis.currentFrame = tl._calcPosition(pos);\n\t\t\n\t\t// update timeline position, ignoring actions if this is a graphic.\n\t\ttl.setPosition(pos, mode);\n\n\t\tthis._prevPosition = tl._prevPosition;\n\t\tif (this._prevPos == tl._prevPos) { return; }\n\t\tthis.currentFrame = this._prevPos = tl._prevPos;\n\n\t\tfor (var n in this._managed) { this._managed[n] = 1; }\n\n\t\tvar tweens = tl._tweens;\n\t\tfor (var i=0, l=tweens.length; i<l; i++) {\n\t\t\tvar tween = tweens[i];\n\t\t\tvar target = tween._target;\n\t\t\tif (target == this || tween.passive) { continue; } // TODO: this assumes actions tween has this as the target. Valid?\n\t\t\tvar offset = tween._stepPosition;\n\n\t\t\tif (target instanceof createjs.DisplayObject) {\n\t\t\t\t// motion tween.\n\t\t\t\tthis._addManagedChild(target, offset);\n\t\t\t} else {\n\t\t\t\t// state tween.\n\t\t\t\tthis._setState(target.state, offset);\n\t\t\t}\n\t\t}\n\n\t\tvar kids = this.children;\n\t\tfor (i=kids.length-1; i>=0; i--) {\n\t\t\tvar id = kids[i].id;\n\t\t\tif (this._managed[id] == 1) {\n\t\t\t\tthis.removeChildAt(i);\n\t\t\t\tdelete(this._managed[id]);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @method _setState\n\t * @param {Array} state\n\t * @param {Number} offset\n\t * @protected\n\t **/\n\tp._setState = function(state, offset) {\n\t\tif (!state) { return; }\n\t\tfor (var i=state.length-1;i>=0;i--) {\n\t\t\tvar o = state[i];\n\t\t\tvar target = o.t;\n\t\t\tvar props = o.p;\n\t\t\tfor (var n in props) { target[n] = props[n]; }\n\t\t\tthis._addManagedChild(target, offset);\n\t\t}\n\t};\n\n\t/**\n\t * Adds a child to the timeline, and sets it up as a managed child.\n\t * @method _addManagedChild\n\t * @param {MovieClip} child The child MovieClip to manage\n\t * @param {Number} offset\n\t * @private\n\t **/\n\tp._addManagedChild = function(child, offset) {\n\t\tif (child._off) { return; }\n\t\tthis.addChildAt(child,0);\n\n\t\tif (child instanceof MovieClip) {\n\t\t\tchild._synchOffset = offset;\n\t\t\t// TODO: this does not precisely match Adobe Flash/Animate, which loses track of the clip if it is renamed or removed from the timeline, which causes it to reset.\n\t\t\tif (child.mode == MovieClip.INDEPENDENT && child.autoReset && !this._managed[child.id]) { child._reset(); }\n\t\t}\n\t\tthis._managed[child.id] = 2;\n\t};\n\t\n\t/**\n\t * @method _getBounds\n\t * @param {Matrix2D} matrix\n\t * @param {Boolean} ignoreTransform\n\t * @return {Rectangle}\n\t * @protected\n\t **/\n\tp._getBounds = function(matrix, ignoreTransform) {\n\t\tvar bounds = this.DisplayObject_getBounds();\n\t\tif (!bounds) {\n\t\t\tthis._updateTimeline();\n\t\t\tif (this.frameBounds) { bounds = this._rectangle.copy(this.frameBounds[this.currentFrame]); }\n\t\t}\n\t\tif (bounds) { return this._transformBounds(bounds, matrix, ignoreTransform); }\n\t\treturn this.Container__getBounds(matrix, ignoreTransform);\n\t};\n\n\n\tcreatejs.MovieClip = createjs.promote(MovieClip, \"Container\");\n\n\n\n// MovieClipPlugin for TweenJS:\n\t/**\n\t * This plugin works with <a href=\"http://tweenjs.com\" target=\"_blank\">TweenJS</a> to prevent the startPosition\n\t * property from tweening.\n\t * @private\n\t * @class MovieClipPlugin\n\t * @constructor\n\t **/\n\tfunction MovieClipPlugin() {\n\t\tthrow(\"MovieClipPlugin cannot be instantiated.\")\n\t}\n\t\n\t/**\n\t * @method priority\n\t * @private\n\t **/\n\tMovieClipPlugin.priority = 100; // very high priority, should run first\n\n\t/**\n\t * @method install\n\t * @private\n\t **/\n\tMovieClipPlugin.install = function() {\n\t\tcreatejs.Tween.installPlugin(MovieClipPlugin, [\"startPosition\"]);\n\t};\n\t\n\t/**\n\t * @method init\n\t * @param {Tween} tween\n\t * @param {String} prop\n\t * @param {String|Number|Boolean} value\n\t * @private\n\t **/\n\tMovieClipPlugin.init = function(tween, prop, value) {\n\t\treturn value;\n\t};\n\t\n\t/**\n\t * @method step\n\t * @private\n\t **/\n\tMovieClipPlugin.step = function() {\n\t\t// unused.\n\t};\n\n\t/**\n\t * @method tween\n\t * @param {Tween} tween\n\t * @param {String} prop\n\t * @param {String | Number | Boolean} value\n\t * @param {Array} startValues\n\t * @param {Array} endValues\n\t * @param {Number} ratio\n\t * @param {Object} wait\n\t * @param {Object} end\n\t * @return {*}\n\t */\n\tMovieClipPlugin.tween = function(tween, prop, value, startValues, endValues, ratio, wait, end) {\n\t\tif (!(tween.target instanceof MovieClip)) { return value; }\n\t\treturn (ratio == 1 ? endValues[prop] : startValues[prop]);\n\t};\n\n}());\n\n//##############################################################################\n// SpriteSheetUtils.js\n//##############################################################################\n\n(function() {\r\n\t\"use strict\";\r\n\t\r\n\t\r\n// constructor:\r\n\t/**\r\n\t * The SpriteSheetUtils class is a collection of static methods for working with {{#crossLink \"SpriteSheet\"}}{{/crossLink}}s.\r\n\t * A sprite sheet is a series of images (usually animation frames) combined into a single image on a regular grid. For\r\n\t * example, an animation consisting of 8 100x100 images could be combined into a 400x200 sprite sheet (4 frames across\r\n\t * by 2 high). The SpriteSheetUtils class uses a static interface and should not be instantiated.\r\n\t * @class SpriteSheetUtils\r\n\t * @static\r\n\t **/\r\n\tfunction SpriteSheetUtils() {\r\n\t\tthrow \"SpriteSheetUtils cannot be instantiated\";\r\n\t}\r\n\r\n\r\n// private static properties:\r\n\t/**\r\n\t * @property _workingCanvas\r\n\t * @static\r\n\t * @type HTMLCanvasElement | Object\r\n\t * @protected\r\n\t*/\r\n\t/**\r\n\t * @property _workingContext\r\n\t * @static\r\n\t * @type CanvasRenderingContext2D\r\n\t * @protected\r\n\t*/\r\n\tvar canvas = (createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"));\r\n\tif (canvas.getContext) {\r\n\t\tSpriteSheetUtils._workingCanvas = canvas;\r\n\t\tSpriteSheetUtils._workingContext = canvas.getContext(\"2d\");\r\n\t\tcanvas.width = canvas.height = 1;\r\n\t}\r\n\r\n\r\n// public static methods:\r\n\t/**\r\n\t * <b>This is an experimental method, and may be buggy. Please report issues.</b><br/><br/>\r\n\t * Extends the existing sprite sheet by flipping the original frames horizontally, vertically, or both,\r\n\t * and adding appropriate animation & frame data. The flipped animations will have a suffix added to their names\r\n\t * (_h, _v, _hv as appropriate). Make sure the sprite sheet images are fully loaded before using this method.\r\n\t * <br/><br/>\r\n\t * For example:<br/>\r\n\t * SpriteSheetUtils.addFlippedFrames(mySpriteSheet, true, true);\r\n\t * The above would add frames that are flipped horizontally AND frames that are flipped vertically.\r\n\t * <br/><br/>\r\n\t * Note that you can also flip any display object by setting its scaleX or scaleY to a negative value. On some\r\n\t * browsers (especially those without hardware accelerated canvas) this can result in slightly degraded performance,\r\n\t * which is why addFlippedFrames is available.\r\n\t * @method addFlippedFrames\r\n\t * @static\r\n\t * @param {SpriteSheet} spriteSheet\r\n\t * @param {Boolean} horizontal If true, horizontally flipped frames will be added.\r\n\t * @param {Boolean} vertical If true, vertically flipped frames will be added.\r\n\t * @param {Boolean} both If true, frames that are flipped both horizontally and vertically will be added.\r\n\t * @deprecated Modern browsers perform better when flipping via a transform (ex. scaleX=-1) rendering this obsolete.\r\n\t **/\r\n\tSpriteSheetUtils.addFlippedFrames = function(spriteSheet, horizontal, vertical, both) {\r\n\t\tif (!horizontal && !vertical && !both) { return; }\r\n\r\n\t\tvar count = 0;\r\n\t\tif (horizontal) { SpriteSheetUtils._flip(spriteSheet,++count,true,false); }\r\n\t\tif (vertical) { SpriteSheetUtils._flip(spriteSheet,++count,false,true); }\r\n\t\tif (both) { SpriteSheetUtils._flip(spriteSheet,++count,true,true); }\r\n\t};\r\n\r\n\t/**\r\n\t * Returns a single frame of the specified sprite sheet as a new PNG image. An example of when this may be useful is\r\n\t * to use a spritesheet frame as the source for a bitmap fill.\r\n\t *\r\n\t * <strong>WARNING:</strong> In almost all cases it is better to display a single frame using a {{#crossLink \"Sprite\"}}{{/crossLink}}\r\n\t * with a {{#crossLink \"Sprite/gotoAndStop\"}}{{/crossLink}} call than it is to slice out a frame using this\r\n\t * method and display it with a Bitmap instance. You can also crop an image using the {{#crossLink \"Bitmap/sourceRect\"}}{{/crossLink}}\r\n\t * property of {{#crossLink \"Bitmap\"}}{{/crossLink}}.\r\n\t *\r\n\t * The extractFrame method may cause cross-domain warnings since it accesses pixels directly on the canvas.\r\n\t * @method extractFrame\r\n\t * @static\r\n\t * @param {SpriteSheet} spriteSheet The SpriteSheet instance to extract a frame from.\r\n\t * @param {Number|String} frameOrAnimation The frame number or animation name to extract. If an animation\r\n\t * name is specified, only the first frame of the animation will be extracted.\r\n\t * @return {HTMLImageElement} a single frame of the specified sprite sheet as a new PNG image.\r\n\t*/\r\n\tSpriteSheetUtils.extractFrame = function(spriteSheet, frameOrAnimation) {\r\n\t\tif (isNaN(frameOrAnimation)) {\r\n\t\t\tframeOrAnimation = spriteSheet.getAnimation(frameOrAnimation).frames[0];\r\n\t\t}\r\n\t\tvar data = spriteSheet.getFrame(frameOrAnimation);\r\n\t\tif (!data) { return null; }\r\n\t\tvar r = data.rect;\r\n\t\tvar canvas = SpriteSheetUtils._workingCanvas;\r\n\t\tcanvas.width = r.width;\r\n\t\tcanvas.height = r.height;\r\n\t\tSpriteSheetUtils._workingContext.drawImage(data.image, r.x, r.y, r.width, r.height, 0, 0, r.width, r.height);\r\n\t\tvar img = document.createElement(\"img\");\r\n\t\timg.src = canvas.toDataURL(\"image/png\");\r\n\t\treturn img;\r\n\t};\r\n\r\n\t/**\r\n\t * Merges the rgb channels of one image with the alpha channel of another. This can be used to combine a compressed\r\n\t * JPEG image containing color data with a PNG32 monochromatic image containing alpha data. With certain types of\r\n\t * images (those with detail that lend itself to JPEG compression) this can provide significant file size savings\r\n\t * versus a single RGBA PNG32. This method is very fast (generally on the order of 1-2 ms to run).\r\n\t * @method mergeAlpha\r\n\t * @static\r\n\t * @param {HTMLImageElement} rbgImage The image (or canvas) containing the RGB channels to use.\r\n\t * @param {HTMLImageElement} alphaImage The image (or canvas) containing the alpha channel to use.\r\n\t * @param {HTMLCanvasElement} canvas Optional. If specified, this canvas will be used and returned. If not, a new canvas will be created.\r\n\t * @return {HTMLCanvasElement} A canvas with the combined image data. This can be used as a source for Bitmap or SpriteSheet.\r\n\t * @deprecated Tools such as ImageAlpha generally provide better results. This will be moved to sandbox in the future.\r\n\t*/\r\n\tSpriteSheetUtils.mergeAlpha = function(rgbImage, alphaImage, canvas) {\r\n\t\tif (!canvas) { canvas = createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\"); }\r\n\t\tcanvas.width = Math.max(alphaImage.width, rgbImage.width);\r\n\t\tcanvas.height = Math.max(alphaImage.height, rgbImage.height);\r\n\t\tvar ctx = canvas.getContext(\"2d\");\r\n\t\tctx.save();\r\n\t\tctx.drawImage(rgbImage,0,0);\r\n\t\tctx.globalCompositeOperation = \"destination-in\";\r\n\t\tctx.drawImage(alphaImage,0,0);\r\n\t\tctx.restore();\r\n\t\treturn canvas;\r\n\t};\r\n\r\n\r\n// private static methods:\r\n\tSpriteSheetUtils._flip = function(spriteSheet, count, h, v) {\r\n\t\tvar imgs = spriteSheet._images;\r\n\t\tvar canvas = SpriteSheetUtils._workingCanvas;\r\n\t\tvar ctx = SpriteSheetUtils._workingContext;\r\n\t\tvar il = imgs.length/count;\r\n\t\tfor (var i=0;i<il;i++) {\r\n\t\t\tvar src = imgs[i];\r\n\t\t\tsrc.__tmp = i; // a bit hacky, but faster than doing indexOf below.\r\n\t\t\tctx.setTransform(1,0,0,1,0,0);\r\n\t\t\tctx.clearRect(0,0,canvas.width+1,canvas.height+1);\r\n\t\t\tcanvas.width = src.width;\r\n\t\t\tcanvas.height = src.height;\r\n\t\t\tctx.setTransform(h?-1:1, 0, 0, v?-1:1, h?src.width:0, v?src.height:0);\r\n\t\t\tctx.drawImage(src,0,0);\r\n\t\t\tvar img = document.createElement(\"img\");\r\n\t\t\timg.src = canvas.toDataURL(\"image/png\");\r\n\t\t\t// work around a strange bug in Safari:\r\n\t\t\timg.width = src.width;\r\n\t\t\timg.height = src.height;\r\n\t\t\timgs.push(img);\r\n\t\t}\r\n\r\n\t\tvar frames = spriteSheet._frames;\r\n\t\tvar fl = frames.length/count;\r\n\t\tfor (i=0;i<fl;i++) {\r\n\t\t\tsrc = frames[i];\r\n\t\t\tvar rect = src.rect.clone();\r\n\t\t\timg = imgs[src.image.__tmp+il*count];\r\n\r\n\t\t\tvar frame = {image:img,rect:rect,regX:src.regX,regY:src.regY};\r\n\t\t\tif (h) {\r\n\t\t\t\trect.x = img.width-rect.x-rect.width; // update rect\r\n\t\t\t\tframe.regX = rect.width-src.regX; // update registration point\r\n\t\t\t}\r\n\t\t\tif (v) {\r\n\t\t\t\trect.y = img.height-rect.y-rect.height;  // update rect\r\n\t\t\t\tframe.regY = rect.height-src.regY; // update registration point\r\n\t\t\t}\r\n\t\t\tframes.push(frame);\r\n\t\t}\r\n\r\n\t\tvar sfx = \"_\"+(h?\"h\":\"\")+(v?\"v\":\"\");\r\n\t\tvar names = spriteSheet._animations;\r\n\t\tvar data = spriteSheet._data;\r\n\t\tvar al = names.length/count;\r\n\t\tfor (i=0;i<al;i++) {\r\n\t\t\tvar name = names[i];\r\n\t\t\tsrc = data[name];\r\n\t\t\tvar anim = {name:name+sfx,speed:src.speed,next:src.next,frames:[]};\r\n\t\t\tif (src.next) { anim.next += sfx; }\r\n\t\t\tframes = src.frames;\r\n\t\t\tfor (var j=0,l=frames.length;j<l;j++) {\r\n\t\t\t\tanim.frames.push(frames[j]+fl*count);\r\n\t\t\t}\r\n\t\t\tdata[anim.name] = anim;\r\n\t\t\tnames.push(anim.name);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tcreatejs.SpriteSheetUtils = SpriteSheetUtils;\r\n}());\n\n//##############################################################################\n// SpriteSheetBuilder.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * The SpriteSheetBuilder allows you to generate {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances at run time\n\t * from any display object. This can allow you to maintain your assets as vector graphics (for low file size), and\n\t * render them at run time as SpriteSheets for better performance.\n\t *\n\t * SpriteSheets can be built either synchronously, or asynchronously, so that large SpriteSheets can be generated\n\t * without locking the UI.\n\t *\n\t * Note that the \"images\" used in the generated SpriteSheet are actually canvas elements, and that they will be\n\t * sized to the nearest power of 2 up to the value of {{#crossLink \"SpriteSheetBuilder/maxWidth:property\"}}{{/crossLink}}\n\t * or {{#crossLink \"SpriteSheetBuilder/maxHeight:property\"}}{{/crossLink}}.\n\t * @class SpriteSheetBuilder\n\t * @param {Number} [framerate=0] The {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} of\n\t * {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are created.\n\t * @extends EventDispatcher\n\t * @constructor\n\t **/\n\tfunction SpriteSheetBuilder(framerate) {\n\t\tthis.EventDispatcher_constructor();\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The maximum width for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n\t\t * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n\t\t * dimensions, then additional images will be created as needed.\n\t\t * @property maxWidth\n\t\t * @type Number\n\t\t * @default 2048\n\t\t*/\n\t\tthis.maxWidth = 2048;\n\t\n\t\t/**\n\t\t * The maximum height for the images (not individual frames) in the generated SpriteSheet. It is recommended to\n\t\t * use a power of 2 for this value (ex. 1024, 2048, 4096). If the frames cannot all fit within the max\n\t\t * dimensions, then additional images will be created as needed.\n\t\t * @property maxHeight\n\t\t * @type Number\n\t\t * @default 2048\n\t\t **/\n\t\tthis.maxHeight = 2048;\n\t\n\t\t/**\n\t\t * The SpriteSheet that was generated. This will be null before a build is completed successfully.\n\t\t * @property spriteSheet\n\t\t * @type SpriteSheet\n\t\t **/\n\t\tthis.spriteSheet = null;\n\t\n\t\t/**\n\t\t * The scale to apply when drawing all frames to the SpriteSheet. This is multiplied against any scale specified\n\t\t * in the addFrame call. This can be used, for example, to generate a SpriteSheet at run time that is tailored\n\t\t * to the a specific device resolution (ex. tablet vs mobile).\n\t\t * @property scale\n\t\t * @type Number\n\t\t * @default 1\n\t\t **/\n\t\tthis.scale = 1;\n\t\n\t\t/**\n\t\t* The padding to use between frames. This is helpful to preserve antialiasing on drawn vector content.\n\t\t* @property padding\n\t\t* @type Number\n\t\t* @default 1\n\t\t**/\n\t\tthis.padding = 1;\n\t\n\t\t/**\n\t\t * A number from 0.01 to 0.99 that indicates what percentage of time the builder can use. This can be\n\t\t * thought of as the number of seconds per second the builder will use. For example, with a timeSlice value of 0.3,\n\t\t * the builder will run 20 times per second, using approximately 15ms per build (30% of available time, or 0.3s per second).\n\t\t * Defaults to 0.3.\n\t\t * @property timeSlice\n\t\t * @type Number\n\t\t * @default 0.3\n\t\t **/\n\t\tthis.timeSlice = 0.3;\n\t\n\t\t/**\n\t\t * A value between 0 and 1 that indicates the progress of a build, or -1 if a build has not\n\t\t * been initiated.\n\t\t * @property progress\n\t\t * @type Number\n\t\t * @default -1\n\t\t * @readonly\n\t\t */\n\t\tthis.progress = -1;\n\n\t\t/**\n\t\t * A {{#crossLink \"SpriteSheet/framerate:property\"}}{{/crossLink}} value that will be passed to new {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instances that are\n\t\t * created. If no framerate is specified (or it is 0), then SpriteSheets will use the {{#crossLink \"Ticker\"}}{{/crossLink}}\n\t\t * framerate.\n\t\t * @property framerate\n\t\t * @type Number\n\t\t * @default 0\n\t\t */\n\t\tthis.framerate = framerate || 0;\n\t\n\t\n\t// private properties:\n\t\t/**\n\t\t * @property _frames\n\t\t * @protected\n\t\t * @type Array\n\t\t **/\n\t\tthis._frames = [];\n\t\n\t\t/**\n\t\t * @property _animations\n\t\t * @protected\n\t\t * @type Array\n\t\t **/\n\t\tthis._animations = {};\n\t\n\t\t/**\n\t\t * @property _data\n\t\t * @protected\n\t\t * @type Array\n\t\t **/\n\t\tthis._data = null;\n\t\n\t\t/**\n\t\t * @property _nextFrameIndex\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._nextFrameIndex = 0;\n\t\n\t\t/**\n\t\t * @property _index\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._index = 0;\n\t\n\t\t/**\n\t\t * @property _timerID\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._timerID = null;\n\t\n\t\t/**\n\t\t * @property _scale\n\t\t * @protected\n\t\t * @type Number\n\t\t **/\n\t\tthis._scale = 1;\n\t}\n\tvar p = createjs.extend(SpriteSheetBuilder, createjs.EventDispatcher);\n\n\t/**\n\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t * for details.\n\t *\n\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t *\n\t * @method initialize\n\t * @protected\n\t * @deprecated\n\t */\n\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\n\n// constants:\n\tSpriteSheetBuilder.ERR_DIMENSIONS = \"frame dimensions exceed max spritesheet dimensions\";\n\tSpriteSheetBuilder.ERR_RUNNING = \"a build is already running\";\n\n// events:\n\t/**\n\t * Dispatched when a build completes.\n\t * @event complete\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * Dispatched when an asynchronous build has progress.\n\t * @event progress\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {Number} progress The current progress value (0-1).\n\t * @since 0.6.0\n\t */\n\n\n// public methods:\n\t/**\n\t * Adds a frame to the {{#crossLink \"SpriteSheet\"}}{{/crossLink}}. Note that the frame will not be drawn until you\n\t * call {{#crossLink \"SpriteSheetBuilder/build\"}}{{/crossLink}} method. The optional setup params allow you to have\n\t * a function run immediately before the draw occurs. For example, this allows you to add a single source multiple\n\t * times, but manipulate it or its children to change it to generate different frames.\n\t *\n\t * Note that the source's transformations (x, y, scale, rotate, alpha) will be ignored, except for regX/Y. To apply\n\t * transforms to a source object and have them captured in the SpriteSheet, simply place it into a {{#crossLink \"Container\"}}{{/crossLink}}\n\t * and pass in the Container as the source.\n\t * @method addFrame\n\t * @param {DisplayObject} source The source {{#crossLink \"DisplayObject\"}}{{/crossLink}}  to draw as the frame.\n\t * @param {Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the\n\t * source to draw to the frame. If not specified, it will look for a `getBounds` method, bounds property, or\n\t * `nominalBounds` property on the source to use. If one is not found, the frame will be skipped.\n\t * @param {Number} [scale=1] Optional. The scale to draw this frame at. Default is 1.\n\t * @param {Function} [setupFunction] A function to call immediately before drawing this frame. It will be called with two parameters: the source, and setupData.\n\t * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n\t * @return {Number} The index of the frame that was just added, or null if a sourceRect could not be determined.\n\t **/\n\tp.addFrame = function(source, sourceRect, scale, setupFunction, setupData) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tvar rect = sourceRect||source.bounds||source.nominalBounds;\n\t\tif (!rect&&source.getBounds) { rect = source.getBounds(); }\n\t\tif (!rect) { return null; }\n\t\tscale = scale||1;\n\t\treturn this._frames.push({source:source, sourceRect:rect, scale:scale, funct:setupFunction, data:setupData, index:this._frames.length, height:rect.height*scale})-1;\n\t};\n\n\t/**\n\t * Adds an animation that will be included in the created {{#crossLink \"SpriteSheet\"}}{{/crossLink}}.\n\t * @method addAnimation\n\t * @param {String} name The name for the animation.\n\t * @param {Array} frames An array of frame indexes that comprise the animation. Ex. [3,6,5] would describe an animation\n\t * that played frame indexes 3, 6, and 5 in that order.\n\t * @param {String} [next] Specifies the name of the animation to continue to after this animation ends. You can\n\t * also pass false to have the animation stop when it ends. By default it will loop to the start of the same animation.\n\t * @param {Number} [speed] Specifies a frame advance speed for this animation. For example, a value of 0.5 would\n\t * cause the animation to advance every second tick. Note that earlier versions used `frequency` instead, which had\n\t * the opposite effect.\n\t **/\n\tp.addAnimation = function(name, frames, next, speed) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tthis._animations[name] = {frames:frames, next:next, speed:speed};\n\t};\n\n\t/**\n\t * This will take a {{#crossLink \"MovieClip\"}}{{/crossLink}} instance, and add its frames and labels to this\n\t * builder. Labels will be added as an animation running from the label index to the next label. For example, if\n\t * there is a label named \"foo\" at frame 0 and a label named \"bar\" at frame 10, in a MovieClip with 15 frames, it\n\t * will add an animation named \"foo\" that runs from frame index 0 to 9, and an animation named \"bar\" that runs from\n\t * frame index 10 to 14.\n\t *\n\t * Note that this will iterate through the full MovieClip with {{#crossLink \"MovieClip/actionsEnabled:property\"}}{{/crossLink}}\n\t * set to `false`, ending on the last frame.\n\t * @method addMovieClip\n\t * @param {MovieClip} source The source MovieClip instance to add to the SpriteSheet.\n\t * @param {Rectangle} [sourceRect] A {{#crossLink \"Rectangle\"}}{{/crossLink}} defining the portion of the source to\n\t * draw to the frame. If not specified, it will look for a {{#crossLink \"DisplayObject/getBounds\"}}{{/crossLink}}\n\t * method, `frameBounds` Array, `bounds` property, or `nominalBounds` property on the source to use. If one is not\n\t * found, the MovieClip will be skipped.\n\t * @param {Number} [scale=1] The scale to draw the movie clip at.\n\t * @param {Function} [setupFunction] A function to call immediately before drawing each frame. It will be called\n\t * with three parameters: the source, setupData, and the frame index.\n\t * @param {Object} [setupData] Arbitrary setup data to pass to setupFunction as the second parameter.\n\t * @param {Function} [labelFunction] This method will be called for each MovieClip label that is added with four\n\t * parameters: the label name, the source MovieClip instance, the starting frame index (in the movieclip timeline)\n\t * and the end index. It must return a new name for the label/animation, or `false` to exclude the label.\n\t **/\n\tp.addMovieClip = function(source, sourceRect, scale, setupFunction, setupData, labelFunction) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tvar rects = source.frameBounds;\n\t\tvar rect = sourceRect||source.bounds||source.nominalBounds;\n\t\tif (!rect&&source.getBounds) { rect = source.getBounds(); }\n\t\tif (!rect && !rects) { return; }\n\n\t\tvar i, l, baseFrameIndex = this._frames.length;\n\t\tvar duration = source.timeline.duration;\n\t\tfor (i=0; i<duration; i++) {\n\t\t\tvar r = (rects&&rects[i]) ? rects[i] : rect;\n\t\t\tthis.addFrame(source, r, scale, this._setupMovieClipFrame, {i:i, f:setupFunction, d:setupData});\n\t\t}\n\t\tvar labels = source.timeline._labels;\n\t\tvar lbls = [];\n\t\tfor (var n in labels) {\n\t\t\tlbls.push({index:labels[n], label:n});\n\t\t}\n\t\tif (lbls.length) {\n\t\t\tlbls.sort(function(a,b){ return a.index-b.index; });\n\t\t\tfor (i=0,l=lbls.length; i<l; i++) {\n\t\t\t\tvar label = lbls[i].label;\n\t\t\t\tvar start = baseFrameIndex+lbls[i].index;\n\t\t\t\tvar end = baseFrameIndex+((i == l-1) ? duration : lbls[i+1].index);\n\t\t\t\tvar frames = [];\n\t\t\t\tfor (var j=start; j<end; j++) { frames.push(j); }\n\t\t\t\tif (labelFunction) {\n\t\t\t\t\tlabel = labelFunction(label, source, start, end);\n\t\t\t\t\tif (!label) { continue; }\n\t\t\t\t}\n\t\t\t\tthis.addAnimation(label, frames, true); // for now, this loops all animations.\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames.\n\t * @method build\n\t * @return {SpriteSheet} The created SpriteSheet instance, or null if a build is already running or an error\n\t * occurred.\n\t **/\n\tp.build = function() {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tthis._startBuild();\n\t\twhile (this._drawNext()) {}\n\t\tthis._endBuild();\n\t\treturn this.spriteSheet;\n\t};\n\n\t/**\n\t * Asynchronously builds a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance based on the current frames. It will\n\t * run 20 times per second, using an amount of time defined by `timeSlice`. When it is complete it will call the\n\t * specified callback.\n\t * @method buildAsync\n\t * @param {Number} [timeSlice] Sets the timeSlice property on this instance.\n\t **/\n\tp.buildAsync = function(timeSlice) {\n\t\tif (this._data) { throw SpriteSheetBuilder.ERR_RUNNING; }\n\t\tthis.timeSlice = timeSlice;\n\t\tthis._startBuild();\n\t\tvar _this = this;\n\t\tthis._timerID = setTimeout(function() { _this._run(); }, 50-Math.max(0.01, Math.min(0.99, this.timeSlice||0.3))*50);\n\t};\n\n\t/**\n\t * Stops the current asynchronous build.\n\t * @method stopAsync\n\t **/\n\tp.stopAsync = function() {\n\t\tclearTimeout(this._timerID);\n\t\tthis._data = null;\n\t};\n\n\t/**\n\t * SpriteSheetBuilder instances cannot be cloned.\n\t * @method clone\n\t **/\n\tp.clone = function() {\n\t\tthrow(\"SpriteSheetBuilder cannot be cloned.\");\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[SpriteSheetBuilder]\";\n\t};\n\n\n// private methods:\n\t/**\n\t * @method _startBuild\n\t * @protected\n\t **/\n\tp._startBuild = function() {\n\t\tvar pad = this.padding||0;\n\t\tthis.progress = 0;\n\t\tthis.spriteSheet = null;\n\t\tthis._index = 0;\n\t\tthis._scale = this.scale;\n\t\tvar dataFrames = [];\n\t\tthis._data = {\n\t\t\timages: [],\n\t\t\tframes: dataFrames,\n\t\t\tframerate: this.framerate,\n\t\t\tanimations: this._animations // TODO: should we \"clone\" _animations in case someone adds more animations after a build?\n\t\t};\n\n\t\tvar frames = this._frames.slice();\n\t\tframes.sort(function(a,b) { return (a.height<=b.height) ? -1 : 1; });\n\n\t\tif (frames[frames.length-1].height+pad*2 > this.maxHeight) { throw SpriteSheetBuilder.ERR_DIMENSIONS; }\n\t\tvar y=0, x=0;\n\t\tvar img = 0;\n\t\twhile (frames.length) {\n\t\t\tvar o = this._fillRow(frames, y, img, dataFrames, pad);\n\t\t\tif (o.w > x) { x = o.w; }\n\t\t\ty += o.h;\n\t\t\tif (!o.h || !frames.length) {\n\t\t\t\tvar canvas = createjs.createCanvas?createjs.createCanvas():document.createElement(\"canvas\");\n\t\t\t\tcanvas.width = this._getSize(x,this.maxWidth);\n\t\t\t\tcanvas.height = this._getSize(y,this.maxHeight);\n\t\t\t\tthis._data.images[img] = canvas;\n\t\t\t\tif (!o.h) {\n\t\t\t\t\tx=y=0;\n\t\t\t\t\timg++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * @method _setupMovieClipFrame\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t **/\n\tp._setupMovieClipFrame = function(source, data) {\n\t\tvar ae = source.actionsEnabled;\n\t\tsource.actionsEnabled = false;\n\t\tsource.gotoAndStop(data.i);\n\t\tsource.actionsEnabled = ae;\n\t\tdata.f&&data.f(source, data.d, data.i);\n\t};\n\n\t/**\n\t * @method _getSize\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t **/\n\tp._getSize = function(size,max) {\n\t\tvar pow = 4;\n\t\twhile (Math.pow(2,++pow) < size){}\n\t\treturn Math.min(max,Math.pow(2,pow));\n\t};\n\n\t/**\n\t * @method _fillRow\n\t * @param {Array} frames\n\t * @param {Number} y\n\t * @param {HTMLImageElement} img\n\t * @param {Object} dataFrames\n\t * @param {Number} pad\n\t * @protected\n\t * @return {Number} The width & height of the row.\n\t **/\n\tp._fillRow = function(frames, y, img, dataFrames, pad) {\n\t\tvar w = this.maxWidth;\n\t\tvar maxH = this.maxHeight;\n\t\ty += pad;\n\t\tvar h = maxH-y;\n\t\tvar x = pad;\n\t\tvar height = 0;\n\t\tfor (var i=frames.length-1; i>=0; i--) {\n\t\t\tvar frame = frames[i];\n\t\t\tvar sc = this._scale*frame.scale;\n\t\t\tvar rect = frame.sourceRect;\n\t\t\tvar source = frame.source;\n\t\t\tvar rx = Math.floor(sc*rect.x-pad);\n\t\t\tvar ry = Math.floor(sc*rect.y-pad);\n\t\t\tvar rh = Math.ceil(sc*rect.height+pad*2);\n\t\t\tvar rw = Math.ceil(sc*rect.width+pad*2);\n\t\t\tif (rw > w) { throw SpriteSheetBuilder.ERR_DIMENSIONS; }\n\t\t\tif (rh > h || x+rw > w) { continue; }\n\t\t\tframe.img = img;\n\t\t\tframe.rect = new createjs.Rectangle(x,y,rw,rh);\n\t\t\theight = height || rh;\n\t\t\tframes.splice(i,1);\n\t\t\tdataFrames[frame.index] = [x,y,rw,rh,img,Math.round(-rx+sc*source.regX-pad),Math.round(-ry+sc*source.regY-pad)];\n\t\t\tx += rw;\n\t\t}\n\t\treturn {w:x, h:height};\n\t};\n\n\t/**\n\t * @method _endBuild\n\t * @protected\n\t **/\n\tp._endBuild = function() {\n\t\tthis.spriteSheet = new createjs.SpriteSheet(this._data);\n\t\tthis._data = null;\n\t\tthis.progress = 1;\n\t\tthis.dispatchEvent(\"complete\");\n\t};\n\n\t/**\n\t * @method _run\n\t * @protected\n\t **/\n\tp._run = function() {\n\t\tvar ts = Math.max(0.01, Math.min(0.99, this.timeSlice||0.3))*50;\n\t\tvar t = (new Date()).getTime()+ts;\n\t\tvar complete = false;\n\t\twhile (t > (new Date()).getTime()) {\n\t\t\tif (!this._drawNext()) { complete = true; break; }\n\t\t}\n\t\tif (complete) {\n\t\t\tthis._endBuild();\n\t\t} else {\n\t\t\tvar _this = this;\n\t\t\tthis._timerID = setTimeout(function() { _this._run(); }, 50-ts);\n\t\t}\n\t\tvar p = this.progress = this._index/this._frames.length;\n\t\tif (this.hasEventListener(\"progress\")) {\n\t\t\tvar evt = new createjs.Event(\"progress\");\n\t\t\tevt.progress = p;\n\t\t\tthis.dispatchEvent(evt);\n\t\t}\n\t};\n\n\t/**\n\t * @method _drawNext\n\t * @protected\n\t * @return Boolean Returns false if this is the last draw.\n\t **/\n\tp._drawNext = function() {\n\t\tvar frame = this._frames[this._index];\n\t\tvar sc = frame.scale*this._scale;\n\t\tvar rect = frame.rect;\n\t\tvar sourceRect = frame.sourceRect;\n\t\tvar canvas = this._data.images[frame.img];\n\t\tvar ctx = canvas.getContext(\"2d\");\n\t\tframe.funct&&frame.funct(frame.source, frame.data);\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(rect.x, rect.y, rect.width, rect.height);\n\t\tctx.clip();\n\t\tctx.translate(Math.ceil(rect.x-sourceRect.x*sc), Math.ceil(rect.y-sourceRect.y*sc));\n\t\tctx.scale(sc,sc);\n\t\tframe.source.draw(ctx); // display object will draw itself.\n\t\tctx.restore();\n\t\treturn (++this._index) < this._frames.length;\n\t};\n\n\n\tcreatejs.SpriteSheetBuilder = createjs.promote(SpriteSheetBuilder, \"EventDispatcher\");\n}());\n\n//##############################################################################\n// DOMElement.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * <b>This class is still experimental, and more advanced use is likely to be buggy. Please report bugs.</b>\n\t *\n\t * A DOMElement allows you to associate a HTMLElement with the display list. It will be transformed\n\t * within the DOM as though it is child of the {{#crossLink \"Container\"}}{{/crossLink}} it is added to. However, it is\n\t * not rendered to canvas, and as such will retain whatever z-index it has relative to the canvas (ie. it will be\n\t * drawn in front of or behind the canvas).\n\t *\n\t * The position of a DOMElement is relative to their parent node in the DOM. It is recommended that\n\t * the DOM Object be added to a div that also contains the canvas so that they share the same position\n\t * on the page.\n\t *\n\t * DOMElement is useful for positioning HTML elements over top of canvas content, and for elements\n\t * that you want to display outside the bounds of the canvas. For example, a tooltip with rich HTML\n\t * content.\n\t *\n\t * <h4>Mouse Interaction</h4>\n\t *\n\t * DOMElement instances are not full EaselJS display objects, and do not participate in EaselJS mouse\n\t * events or support methods like hitTest. To get mouse events from a DOMElement, you must instead add handlers to\n\t * the htmlElement (note, this does not support EventDispatcher)\n\t *\n\t *      var domElement = new createjs.DOMElement(htmlElement);\n\t *      domElement.htmlElement.onclick = function() {\n\t *          console.log(\"clicked\");\n\t *      }\n\t *\n\t * @class DOMElement\n\t * @extends DisplayObject\n\t * @constructor\n\t * @param {HTMLElement} htmlElement A reference or id for the DOM element to manage.\n\t */\n\tfunction DOMElement(htmlElement) {\n\t\tthis.DisplayObject_constructor();\n\t\t\n\t\tif (typeof(htmlElement)==\"string\") { htmlElement = document.getElementById(htmlElement); }\n\t\tthis.mouseEnabled = false;\n\t\t\n\t\tvar style = htmlElement.style;\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin = style.WebkitTransformOrigin = style.msTransformOrigin = style.MozTransformOrigin = style.OTransformOrigin = \"0% 0%\";\n\t\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * The DOM object to manage.\n\t\t * @property htmlElement\n\t\t * @type HTMLElement\n\t\t */\n\t\tthis.htmlElement = htmlElement;\n\t\n\t\n\t// private properties:\n\t\t/**\n\t\t * @property _oldMtx\n\t\t * @type Matrix2D\n\t\t * @protected\n\t\t */\n\t\tthis._oldProps = null;\n\t}\n\tvar p = createjs.extend(DOMElement, createjs.DisplayObject);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n// public methods:\n\t/**\n\t * Returns true or false indicating whether the display object would be visible if drawn to a canvas.\n\t * This does not account for whether it would be visible within the boundaries of the stage.\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method isVisible\n\t * @return {Boolean} Boolean indicating whether the display object would be visible if drawn to a canvas\n\t */\n\tp.isVisible = function() {\n\t\treturn this.htmlElement != null;\n\t};\n\n\t/**\n\t * Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\n\t * Returns true if the draw was handled (useful for overriding functionality).\n\t * NOTE: This method is mainly for internal use, though it may be useful for advanced uses.\n\t * @method draw\n\t * @param {CanvasRenderingContext2D} ctx The canvas 2D context object to draw into.\n\t * @param {Boolean} ignoreCache Indicates whether the draw operation should ignore any current cache.\n\t * For example, used for drawing the cache (to prevent it from simply drawing an existing cache back\n\t * into itself).\n\t * @return {Boolean}\n\t */\n\tp.draw = function(ctx, ignoreCache) {\n\t\t// this relies on the _tick method because draw isn't called if the parent is not visible.\n\t\t// the actual update happens in _handleDrawEnd\n\t\treturn true;\n\t};\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method cache\n\t */\n\tp.cache = function() {};\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method uncache\n\t */\n\tp.uncache = function() {};\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method updateCache\n\t */\n\tp.updateCache = function() {};\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method hitTest\n\t */\n\tp.hitTest = function() {};\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method localToGlobal\n\t */\n\tp.localToGlobal = function() {};\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method globalToLocal\n\t */\n\tp.globalToLocal = function() {};\n\n\t/**\n\t * Not applicable to DOMElement.\n\t * @method localToLocal\n\t */\n\tp.localToLocal = function() {};\n\n\t/**\n\t * DOMElement cannot be cloned. Throws an error.\n\t * @method clone\n\t */\n\tp.clone = function() {\n\t\tthrow(\"DOMElement cannot be cloned.\")\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\tp.toString = function() {\n\t\treturn \"[DOMElement (name=\"+  this.name +\")]\";\n\t};\n\n\t/**\n     * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n\t * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n\t * @event click\n\t */\n\n     /**\n     * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n \t * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n\t * @event dblClick\n\t */\n\n     /**\n      * Interaction events should be added to `htmlElement`, and not the DOMElement instance, since DOMElement instances\n \t  * are not full EaselJS display objects and do not participate in EaselJS mouse events.\n\t  * @event mousedown\n\t  */\n\n     /**\n      * The HTMLElement can listen for the mouseover event, not the DOMElement instance.\n      * Since DOMElement instances are not full EaselJS display objects and do not participate in EaselJS mouse events.\n      * @event mouseover\n\t  */\n\n     /**\n      * Not applicable to DOMElement.\n\t  * @event tick\n\t  */\n\n\n// private methods:\n\t/**\n\t * @method _tick\n\t * @param {Object} evtObj An event object that will be dispatched to all tick listeners. This object is reused between dispatchers to reduce construction & GC costs.\n\t * function.\n\t * @protected\n\t */\n\tp._tick = function(evtObj) {\n\t\tvar stage = this.getStage();\n\t\tstage&&stage.on(\"drawend\", this._handleDrawEnd, this, true);\n\t\tthis.DisplayObject__tick(evtObj);\n\t};\n\t\n\t/**\n\t * @method _handleDrawEnd\n\t * @param {Event} evt\n\t * @protected\n\t */\n\tp._handleDrawEnd = function(evt) {\n\t\tvar o = this.htmlElement;\n\t\tif (!o) { return; }\n\t\tvar style = o.style;\n\t\t\n\t\tvar props = this.getConcatenatedDisplayProps(this._props), mtx = props.matrix;\n\t\t\n\t\tvar visibility = props.visible ? \"visible\" : \"hidden\";\n\t\tif (visibility != style.visibility) { style.visibility = visibility; }\n\t\tif (!props.visible) { return; }\n\t\t\n\t\tvar oldProps = this._oldProps, oldMtx = oldProps&&oldProps.matrix;\n\t\tvar n = 10000; // precision\n\t\t\n\t\tif (!oldMtx || !oldMtx.equals(mtx)) {\n\t\t\tvar str = \"matrix(\" + (mtx.a*n|0)/n +\",\"+ (mtx.b*n|0)/n +\",\"+ (mtx.c*n|0)/n +\",\"+ (mtx.d*n|0)/n +\",\"+ (mtx.tx+0.5|0);\n\t\t\tstyle.transform = style.WebkitTransform = style.OTransform = style.msTransform = str +\",\"+ (mtx.ty+0.5|0) +\")\";\n\t\t\tstyle.MozTransform = str +\"px,\"+ (mtx.ty+0.5|0) +\"px)\";\n\t\t\tif (!oldProps) { oldProps = this._oldProps = new createjs.DisplayProps(true, NaN); }\n\t\t\toldProps.matrix.copy(mtx);\n\t\t}\n\t\t\n\t\tif (oldProps.alpha != props.alpha) {\n\t\t\tstyle.opacity = \"\"+(props.alpha*n|0)/n;\n\t\t\toldProps.alpha = props.alpha;\n\t\t}\n\t};\n\n\n\tcreatejs.DOMElement = createjs.promote(DOMElement, \"DisplayObject\");\n}());\n\n//##############################################################################\n// Filter.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Base class that all filters should inherit from. Filters need to be applied to objects that have been cached using\n\t * the {{#crossLink \"DisplayObject/cache\"}}{{/crossLink}} method. If an object changes, please cache it again, or use\n\t * {{#crossLink \"DisplayObject/updateCache\"}}{{/crossLink}}. Note that the filters must be applied before caching.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      myInstance.filters = [\n\t *          new createjs.ColorFilter(0, 0, 0, 1, 255, 0, 0),\n\t *          new createjs.BlurFilter(5, 5, 10)\n\t *      ];\n\t *      myInstance.cache(0,0, 100, 100);\n\t *\n\t * Note that each filter can implement a {{#crossLink \"Filter/getBounds\"}}{{/crossLink}} method, which returns the\n\t * margins that need to be applied in order to fully display the filter. For example, the {{#crossLink \"BlurFilter\"}}{{/crossLink}}\n\t * will cause an object to feather outwards, resulting in a margin around the shape.\n\t *\n\t * <h4>EaselJS Filters</h4>\n\t * EaselJS comes with a number of pre-built filters:\n\t * <ul><li>{{#crossLink \"AlphaMapFilter\"}}{{/crossLink}} : Map a greyscale image to the alpha channel of a display object</li>\n\t *      <li>{{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}}: Map an image's alpha channel to the alpha channel of a display object</li>\n\t *      <li>{{#crossLink \"BlurFilter\"}}{{/crossLink}}: Apply vertical and horizontal blur to a display object</li>\n\t *      <li>{{#crossLink \"ColorFilter\"}}{{/crossLink}}: Color transform a display object</li>\n\t *      <li>{{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}: Transform an image using a {{#crossLink \"ColorMatrix\"}}{{/crossLink}}</li>\n\t * </ul>\n\t *\n\t * @class Filter\n\t * @constructor\n\t **/\n\tfunction Filter() {}\n\tvar p = Filter.prototype;\n\n\t/**\n\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t * for details.\n\t *\n\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t *\n\t * @method initialize\n\t * @protected\n\t * @deprecated\n\t */\n\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\n\n// public methods:\n\t/**\n\t * Provides padding values for this filter. That is, how much the filter will extend the visual bounds of an object it is applied to.\n\t * @method getBounds\n\t * @param {Rectangle} [rect] If specified, the provided Rectangle instance will be expanded by the padding amounts and returned.\n\t * @return {Rectangle} If a `rect` param was provided, it is returned. If not, either a new rectangle with the padding values, or null if no padding is required for this filter.\n\t **/\n\tp.getBounds = function(rect) {\n\t\treturn rect;\n\t};\n\n\t/**\n\t * Applies the filter to the specified context.\n\t * @method applyFilter\n\t * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n\t * @param {Number} x The x position to use for the source rect.\n\t * @param {Number} y The y position to use for the source rect.\n\t * @param {Number} width The width to use for the source rect.\n\t * @param {Number} height The height to use for the source rect.\n\t * @param {CanvasRenderingContext2D} [targetCtx] The 2D context to draw the result to. Defaults to the context passed to ctx.\n\t * @param {Number} [targetX] The x position to draw the result to. Defaults to the value passed to x.\n\t * @param {Number} [targetY] The y position to draw the result to. Defaults to the value passed to y.\n\t * @return {Boolean} If the filter was applied successfully.\n\t **/\n\tp.applyFilter = function(ctx, x, y, width, height, targetCtx, targetX, targetY) {\n\t\t// this is the default behaviour because most filters access pixel data. It is overridden when not needed.\n\t\ttargetCtx = targetCtx || ctx;\n\t\tif (targetX == null) { targetX = x; }\n\t\tif (targetY == null) { targetY = y; }\n\t\ttry {\n\t\t\tvar imageData = ctx.getImageData(x, y, width, height);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._applyFilter(imageData)) {\n\t\t\ttargetCtx.putImageData(imageData, targetX, targetY);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[Filter]\";\n\t};\n\n\t/**\n\t * Returns a clone of this Filter instance.\n\t * @method clone\n\t * @return {Filter} A clone of the current Filter instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new Filter();\n\t};\n\t\n// private methods:\n\t/**\n\t * @method _applyFilter\n\t * @param {ImageData} imageData Target ImageData instance.\n\t * @return {Boolean}\n\t **/\n\tp._applyFilter = function(imageData) { return true; };\n\n\n\tcreatejs.Filter = Filter;\n}());\n\n//##############################################################################\n// BlurFilter.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Applies a box blur to DisplayObjects. Note that this filter is fairly CPU intensive, particularly if the quality is\n\t * set higher than 1.\n\t *\n\t * <h4>Example</h4>\n\t * This example creates a red circle, and then applies a 5 pixel blur to it. It uses the {{#crossLink \"Filter/getBounds\"}}{{/crossLink}}\n\t * method to account for the spread that the blur causes.\n\t *\n\t *      var shape = new createjs.Shape().set({x:100,y:100});\n\t *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n\t *\n\t *      var blurFilter = new createjs.BlurFilter(5, 5, 1);\n\t *      shape.filters = [blurFilter];\n\t *      var bounds = blurFilter.getBounds();\n\t *\n\t *      shape.cache(-50+bounds.x, -50+bounds.y, 100+bounds.width, 100+bounds.height);\n\t *\n\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n\t * @class BlurFilter\n\t * @extends Filter\n\t * @constructor\n\t * @param {Number} [blurX=0] The horizontal blur radius in pixels.\n\t * @param {Number} [blurY=0] The vertical blur radius in pixels.\n\t * @param {Number} [quality=1] The number of blur iterations.\n\t **/\n\tfunction BlurFilter( blurX, blurY, quality) {\n\t\tif ( isNaN(blurX) || blurX < 0 ) blurX = 0;\n\t\tif ( isNaN(blurY) || blurY < 0 ) blurY = 0;\n\t\tif ( isNaN(quality) || quality < 1  ) quality = 1;\n\n\n\t\t// public properties:\n\t\t/**\n\t\t * Horizontal blur radius in pixels\n\t\t * @property blurX\n\t\t * @default 0\n\t\t * @type Number\n\t\t **/\n\t\tthis.blurX = blurX | 0;\n\n\t\t/**\n\t\t * Vertical blur radius in pixels\n\t\t * @property blurY\n\t\t * @default 0\n\t\t * @type Number\n\t\t **/\n\t\tthis.blurY = blurY | 0;\n\n\t\t/**\n\t\t * Number of blur iterations. For example, a value of 1 will produce a rough blur. A value of 2 will produce a\n\t\t * smoother blur, but take twice as long to run.\n\t\t * @property quality\n\t\t * @default 1\n\t\t * @type Number\n\t\t **/\n\t\tthis.quality = quality | 0;\n\t}\n\tvar p = createjs.extend(BlurFilter, createjs.Filter);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n// constants:\n\t/**\n\t * Array of multiply values for blur calculations.\n\t * @property MUL_TABLE\n\t * @type Array\n\t * @protected\n\t * @static\n\t **/\n\tBlurFilter.MUL_TABLE = [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265, 497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269, 261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369, 361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69, 271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446, 55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371, 367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317, 157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277, 275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491, 61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221, 439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202, 401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185, 23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341, 339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79, 315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295, 147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69, 275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130, 259, 129, 257, 1];\n\n\t/**\n\t * Array of shift values for blur calculations.\n\t * @property SHG_TABLE\n\t * @type Array\n\t * @protected\n\t * @static\n\t **/\n\tBlurFilter.SHG_TABLE = [0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14, 14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15, 15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14, 16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16, 14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16, 15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16, 17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16, 17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15, 16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17, 17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17, 16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14, 17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16, 17, 16, 17, 9];\n\n// public methods:\n\t/** docced in super class **/\n\tp.getBounds = function (rect) {\n\t\tvar x = this.blurX|0, y = this.blurY| 0;\n\t\tif (x <= 0 && y <= 0) { return rect; }\n\t\tvar q = Math.pow(this.quality, 0.2);\n\t\treturn (rect || new createjs.Rectangle()).pad(x*q+1,y*q+1,x*q+1,y*q+1);\n\t};\n\n\t/** docced in super class **/\n\tp.clone = function() {\n\t\treturn new BlurFilter(this.blurX, this.blurY, this.quality);\n\t};\n\n\t/** docced in super class **/\n\tp.toString = function() {\n\t\treturn \"[BlurFilter]\";\n\t};\n\n\n// private methods:\n\n\t/** docced in super class **/\n\tp._applyFilter = function (imageData) {\n\n\t\tvar radiusX = this.blurX >> 1;\n\t\tif (isNaN(radiusX) || radiusX < 0) return false;\n\t\tvar radiusY = this.blurY >> 1;\n\t\tif (isNaN(radiusY) || radiusY < 0) return false;\n\t\tif (radiusX == 0 && radiusY == 0) return false;\n\n\t\tvar iterations = this.quality;\n\t\tif (isNaN(iterations) || iterations < 1) iterations = 1;\n\t\titerations |= 0;\n\t\tif (iterations > 3) iterations = 3;\n\t\tif (iterations < 1) iterations = 1;\n\n\t\tvar px = imageData.data;\n\t\tvar x=0, y=0, i=0, p=0, yp=0, yi=0, yw=0, r=0, g=0, b=0, a=0, pr=0, pg=0, pb=0, pa=0;\n\n\t\tvar divx = (radiusX + radiusX + 1) | 0;\n\t\tvar divy = (radiusY + radiusY + 1) | 0;\n\t\tvar w = imageData.width | 0;\n\t\tvar h = imageData.height | 0;\n\n\t\tvar w1 = (w - 1) | 0;\n\t\tvar h1 = (h - 1) | 0;\n\t\tvar rxp1 = (radiusX + 1) | 0;\n\t\tvar ryp1 = (radiusY + 1) | 0;\n\n\t\tvar ssx = {r:0,b:0,g:0,a:0};\n\t\tvar sx = ssx;\n\t\tfor ( i = 1; i < divx; i++ )\n\t\t{\n\t\t\tsx = sx.n = {r:0,b:0,g:0,a:0};\n\t\t}\n\t\tsx.n = ssx;\n\n\t\tvar ssy = {r:0,b:0,g:0,a:0};\n\t\tvar sy = ssy;\n\t\tfor ( i = 1; i < divy; i++ )\n\t\t{\n\t\t\tsy = sy.n = {r:0,b:0,g:0,a:0};\n\t\t}\n\t\tsy.n = ssy;\n\n\t\tvar si = null;\n\n\n\t\tvar mtx = BlurFilter.MUL_TABLE[radiusX] | 0;\n\t\tvar stx = BlurFilter.SHG_TABLE[radiusX] | 0;\n\t\tvar mty = BlurFilter.MUL_TABLE[radiusY] | 0;\n\t\tvar sty = BlurFilter.SHG_TABLE[radiusY] | 0;\n\n\t\twhile (iterations-- > 0) {\n\n\t\t\tyw = yi = 0;\n\t\t\tvar ms = mtx;\n\t\t\tvar ss = stx;\n\t\t\tfor (y = h; --y > -1;) {\n\t\t\t\tr = rxp1 * (pr = px[(yi) | 0]);\n\t\t\t\tg = rxp1 * (pg = px[(yi + 1) | 0]);\n\t\t\t\tb = rxp1 * (pb = px[(yi + 2) | 0]);\n\t\t\t\ta = rxp1 * (pa = px[(yi + 3) | 0]);\n\n\t\t\t\tsx = ssx;\n\n\t\t\t\tfor( i = rxp1; --i > -1; )\n\t\t\t\t{\n\t\t\t\t\tsx.r = pr;\n\t\t\t\t\tsx.g = pg;\n\t\t\t\t\tsx.b = pb;\n\t\t\t\t\tsx.a = pa;\n\t\t\t\t\tsx = sx.n;\n\t\t\t\t}\n\n\t\t\t\tfor( i = 1; i < rxp1; i++ )\n\t\t\t\t{\n\t\t\t\t\tp = (yi + ((w1 < i ? w1 : i) << 2)) | 0;\n\t\t\t\t\tr += ( sx.r = px[p]);\n\t\t\t\t\tg += ( sx.g = px[p+1]);\n\t\t\t\t\tb += ( sx.b = px[p+2]);\n\t\t\t\t\ta += ( sx.a = px[p+3]);\n\n\t\t\t\t\tsx = sx.n;\n\t\t\t\t}\n\n\t\t\t\tsi = ssx;\n\t\t\t\tfor ( x = 0; x < w; x++ )\n\t\t\t\t{\n\t\t\t\t\tpx[yi++] = (r * ms) >>> ss;\n\t\t\t\t\tpx[yi++] = (g * ms) >>> ss;\n\t\t\t\t\tpx[yi++] = (b * ms) >>> ss;\n\t\t\t\t\tpx[yi++] = (a * ms) >>> ss;\n\n\t\t\t\t\tp = ((yw + ((p = x + radiusX + 1) < w1 ? p : w1)) << 2);\n\n\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\n\t\t\t\t\tsi = si.n;\n\n\t\t\t\t}\n\t\t\t\tyw += w;\n\t\t\t}\n\n\t\t\tms = mty;\n\t\t\tss = sty;\n\t\t\tfor (x = 0; x < w; x++) {\n\t\t\t\tyi = (x << 2) | 0;\n\n\t\t\t\tr = (ryp1 * (pr = px[yi])) | 0;\n\t\t\t\tg = (ryp1 * (pg = px[(yi + 1) | 0])) | 0;\n\t\t\t\tb = (ryp1 * (pb = px[(yi + 2) | 0])) | 0;\n\t\t\t\ta = (ryp1 * (pa = px[(yi + 3) | 0])) | 0;\n\n\t\t\t\tsy = ssy;\n\t\t\t\tfor( i = 0; i < ryp1; i++ )\n\t\t\t\t{\n\t\t\t\t\tsy.r = pr;\n\t\t\t\t\tsy.g = pg;\n\t\t\t\t\tsy.b = pb;\n\t\t\t\t\tsy.a = pa;\n\t\t\t\t\tsy = sy.n;\n\t\t\t\t}\n\n\t\t\t\typ = w;\n\n\t\t\t\tfor( i = 1; i <= radiusY; i++ )\n\t\t\t\t{\n\t\t\t\t\tyi = ( yp + x ) << 2;\n\n\t\t\t\t\tr += ( sy.r = px[yi]);\n\t\t\t\t\tg += ( sy.g = px[yi+1]);\n\t\t\t\t\tb += ( sy.b = px[yi+2]);\n\t\t\t\t\ta += ( sy.a = px[yi+3]);\n\n\t\t\t\t\tsy = sy.n;\n\n\t\t\t\t\tif( i < h1 )\n\t\t\t\t\t{\n\t\t\t\t\t\typ += w;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tyi = x;\n\t\t\t\tsi = ssy;\n\t\t\t\tif ( iterations > 0 )\n\t\t\t\t{\n\t\t\t\t\tfor ( y = 0; y < h; y++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tp = yi << 2;\n\t\t\t\t\t\tpx[p+3] = pa =(a * ms) >>> ss;\n\t\t\t\t\t\tif ( pa > 0 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpx[p]   = ((r * ms) >>> ss );\n\t\t\t\t\t\t\tpx[p+1] = ((g * ms) >>> ss );\n\t\t\t\t\t\t\tpx[p+2] = ((b * ms) >>> ss );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpx[p] = px[p+1] = px[p+2] = 0\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp = ( x + (( ( p = y + ryp1) < h1 ? p : h1 ) * w )) << 2;\n\n\t\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\n\t\t\t\t\t\tsi = si.n;\n\n\t\t\t\t\t\tyi += w;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor ( y = 0; y < h; y++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tp = yi << 2;\n\t\t\t\t\t\tpx[p+3] = pa =(a * ms) >>> ss;\n\t\t\t\t\t\tif ( pa > 0 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpa = 255 / pa;\n\t\t\t\t\t\t\tpx[p]   = ((r * ms) >>> ss ) * pa;\n\t\t\t\t\t\t\tpx[p+1] = ((g * ms) >>> ss ) * pa;\n\t\t\t\t\t\t\tpx[p+2] = ((b * ms) >>> ss ) * pa;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpx[p] = px[p+1] = px[p+2] = 0\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp = ( x + (( ( p = y + ryp1) < h1 ? p : h1 ) * w )) << 2;\n\n\t\t\t\t\t\tr -= si.r - ( si.r = px[p]);\n\t\t\t\t\t\tg -= si.g - ( si.g = px[p+1]);\n\t\t\t\t\t\tb -= si.b - ( si.b = px[p+2]);\n\t\t\t\t\t\ta -= si.a - ( si.a = px[p+3]);\n\n\t\t\t\t\t\tsi = si.n;\n\n\t\t\t\t\t\tyi += w;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn true;\n\t};\n\n\tcreatejs.BlurFilter = createjs.promote(BlurFilter, \"Filter\");\n}());\n\n//##############################################################################\n// AlphaMapFilter.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\t\n\t\n// constructor:\n\t/**\n\t * Applies a greyscale alpha map image (or canvas) to the target, such that the alpha channel of the result will\n\t * be copied from the red channel of the map, and the RGB channels will be copied from the target.\n\t *\n\t * Generally, it is recommended that you use {{#crossLink \"AlphaMaskFilter\"}}{{/crossLink}}, because it has much\n\t * better performance.\n\t *\n\t * <h4>Example</h4>\n\t * This example draws a red->blue box, caches it, and then uses the cache canvas as an alpha map on a 100x100 image.\n\t *\n\t *       var box = new createjs.Shape();\n\t *       box.graphics.beginLinearGradientFill([\"#ff0000\", \"#0000ff\"], [0, 1], 0, 0, 0, 100)\n\t *       box.graphics.drawRect(0, 0, 100, 100);\n\t *       box.cache(0, 0, 100, 100);\n\t *\n\t *       var bmp = new createjs.Bitmap(\"path/to/image.jpg\");\n\t *       bmp.filters = [\n\t *           new createjs.AlphaMapFilter(box.cacheCanvas)\n\t *       ];\n\t *       bmp.cache(0, 0, 100, 100);\n\t *       stage.addChild(bmp);\n\t *\n\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for more information on applying filters.\n\t * @class AlphaMapFilter\n\t * @extends Filter\n\t * @constructor\n\t * @param {HTMLImageElement|HTMLCanvasElement} alphaMap The greyscale image (or canvas) to use as the alpha value for the\n\t * result. This should be exactly the same dimensions as the target.\n\t **/\n\tfunction AlphaMapFilter(alphaMap) {\n\t\n\t\n\t// public properties:\n\t\t/**\n\t\t * The greyscale image (or canvas) to use as the alpha value for the result. This should be exactly the same\n\t\t * dimensions as the target.\n\t\t * @property alphaMap\n\t\t * @type HTMLImageElement|HTMLCanvasElement\n\t\t **/\n\t\tthis.alphaMap = alphaMap;\n\t\t\n\t\t\n\t// private properties:\n\t\t/**\n\t\t * @property _alphaMap\n\t\t * @protected\n\t\t * @type HTMLImageElement|HTMLCanvasElement\n\t\t **/\n\t\tthis._alphaMap = null;\n\t\t\n\t\t/**\n\t\t * @property _mapData\n\t\t * @protected\n\t\t * @type Uint8ClampedArray\n\t\t **/\n\t\tthis._mapData = null;\n\t}\n\tvar p = createjs.extend(AlphaMapFilter, createjs.Filter);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n// public methods:\n\t/** docced in super class **/\n\tp.clone = function () {\n\t\tvar o = new AlphaMapFilter(this.alphaMap);\n\t\to._alphaMap = this._alphaMap;\n\t\to._mapData = this._mapData;\n\t\treturn o;\n\t};\n\n\t/** docced in super class **/\n\tp.toString = function () {\n\t\treturn \"[AlphaMapFilter]\";\n\t};\n\n\n// private methods:\n\t/** docced in super class **/\n\tp._applyFilter = function (imageData) {\n\t\tif (!this.alphaMap) { return true; }\n\t\tif (!this._prepAlphaMap()) { return false; }\n\t\t\n\t\t// TODO: update to support scenarios where the target has different dimensions.\n\t\tvar data = imageData.data;\n\t\tvar map = this._mapData;\n\t\tfor(var i=0, l=data.length; i<l; i += 4) { data[i + 3] = map[i] || 0; }\n\t\t\n\t\treturn true;\n\t};\n\n\t/**\n\t * @method _prepAlphaMap\n\t * @protected\n\t **/\n\tp._prepAlphaMap = function () {\n\t\tif (!this.alphaMap) { return false; }\n\t\tif (this.alphaMap == this._alphaMap && this._mapData) { return true; }\n\n\t\tthis._mapData = null;\n\t\tvar map = this._alphaMap = this.alphaMap;\n\t\tvar canvas = map;\n\t\tvar ctx;\n\t\tif (map instanceof HTMLCanvasElement) {\n\t\t\tctx = canvas.getContext(\"2d\");\n\t\t} else {\n\t\t\tcanvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement(\"canvas\");\n\t\t\tcanvas.width = map.width;\n\t\t\tcanvas.height = map.height;\n\t\t\tctx = canvas.getContext(\"2d\");\n\t\t\tctx.drawImage(map, 0, 0);\n\t\t}\n\n\t\ttry {\n\t\t\tvar imgData = ctx.getImageData(0, 0, map.width, map.height);\n\t\t} catch (e) {\n\t\t\t//if (!this.suppressCrossDomainErrors) throw new Error(\"unable to access local image data: \" + e);\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tthis._mapData = imgData.data;\n\t\treturn true;\n\t};\n\n\n\tcreatejs.AlphaMapFilter = createjs.promote(AlphaMapFilter, \"Filter\");\n}());\n\n//##############################################################################\n// AlphaMaskFilter.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Applies the alpha from the mask image (or canvas) to the target, such that the alpha channel of the result will\n\t * be derived from the mask, and the RGB channels will be copied from the target. This can be used, for example, to\n\t * apply an alpha mask to a display object. This can also be used to combine a JPG compressed RGB image with a PNG32\n\t * alpha mask, which can result in a much smaller file size than a single PNG32 containing ARGB.\n\t *\n\t * <b>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters correctly.</b>\n\t *\n\t * <h4>Example</h4>\n\t * This example draws a gradient box, then caches it and uses the \"cacheCanvas\" as the alpha mask on a 100x100 image.\n\t *\n\t *      var box = new createjs.Shape();\n\t *      box.graphics.beginLinearGradientFill([\"#000000\", \"rgba(0, 0, 0, 0)\"], [0, 1], 0, 0, 100, 100)\n\t *      box.graphics.drawRect(0, 0, 100, 100);\n\t *      box.cache(0, 0, 100, 100);\n\t *\n\t *      var bmp = new createjs.Bitmap(\"path/to/image.jpg\");\n\t *      bmp.filters = [\n\t *          new createjs.AlphaMaskFilter(box.cacheCanvas)\n\t *      ];\n\t *      bmp.cache(0, 0, 100, 100);\n\t *\n\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for more information on applying filters.\n\t * @class AlphaMaskFilter\n\t * @extends Filter\n\t * @constructor\n\t * @param {HTMLImageElement|HTMLCanvasElement} mask\n\t **/\n\tfunction AlphaMaskFilter(mask) {\n\t\n\t\n\t// public properties:\n\t\t/**\n\t\t * The image (or canvas) to use as the mask.\n\t\t * @property mask\n\t\t * @type HTMLImageElement|HTMLCanvasElement\n\t\t **/\n\t\tthis.mask = mask;\n\t}\n\tvar p = createjs.extend(AlphaMaskFilter, createjs.Filter);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\n\n// public methods:\n\t/**\n\t * Applies the filter to the specified context.\n\t *\n\t * <strong>IMPORTANT NOTE: This filter currently does not support the targetCtx, or targetX/Y parameters\n\t * correctly.</strong>\n\t * @method applyFilter\n\t * @param {CanvasRenderingContext2D} ctx The 2D context to use as the source.\n\t * @param {Number} x The x position to use for the source rect.\n\t * @param {Number} y The y position to use for the source rect.\n\t * @param {Number} width The width to use for the source rect.\n\t * @param {Number} height The height to use for the source rect.\n\t * @param {CanvasRenderingContext2D} [targetCtx] NOT SUPPORTED IN THIS FILTER. The 2D context to draw the result to. Defaults to the context passed to ctx.\n\t * @param {Number} [targetX] NOT SUPPORTED IN THIS FILTER. The x position to draw the result to. Defaults to the value passed to x.\n\t * @param {Number} [targetY] NOT SUPPORTED IN THIS FILTER. The y position to draw the result to. Defaults to the value passed to y.\n\t * @return {Boolean} If the filter was applied successfully.\n\t **/\n\tp.applyFilter = function (ctx, x, y, width, height, targetCtx, targetX, targetY) {\n\t\tif (!this.mask) { return true; }\n\t\ttargetCtx = targetCtx || ctx;\n\t\tif (targetX == null) { targetX = x; }\n\t\tif (targetY == null) { targetY = y; }\n\n\t\ttargetCtx.save();\n\t\tif (ctx != targetCtx) {\n\t\t\t// TODO: support targetCtx and targetX/Y\n\t\t\t// clearRect, then draw the ctx in?\n\t\t\treturn false;\n\t\t}\n\n\t\ttargetCtx.globalCompositeOperation = \"destination-in\";\n\t\ttargetCtx.drawImage(this.mask, targetX, targetY);\n\t\ttargetCtx.restore();\n\t\treturn true;\n\t};\n\n\t/** docced in super class **/\n\tp.clone = function () {\n\t\treturn new AlphaMaskFilter(this.mask);\n\t};\n\n\t/** docced in super class **/\n\tp.toString = function () {\n\t\treturn \"[AlphaMaskFilter]\";\n\t};\n\n\n\tcreatejs.AlphaMaskFilter = createjs.promote(AlphaMaskFilter, \"Filter\");\n}());\n\n//##############################################################################\n// ColorFilter.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Applies a color transform to DisplayObjects.\n\t *\n\t * <h4>Example</h4>\n\t * This example draws a red circle, and then transforms it to Blue. This is accomplished by multiplying all the channels\n\t * to 0 (except alpha, which is set to 1), and then adding 255 to the blue channel.\n\t *\n\t *      var shape = new createjs.Shape().set({x:100,y:100});\n\t *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n\t *\n\t *      shape.filters = [\n\t *          new createjs.ColorFilter(0,0,0,1, 0,0,255,0)\n\t *      ];\n\t *      shape.cache(-50, -50, 100, 100);\n\t *\n\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n\t * @class ColorFilter\n\t * @param {Number} [redMultiplier=1] The amount to multiply against the red channel. This is a range between 0 and 1.\n\t * @param {Number} [greenMultiplier=1] The amount to multiply against the green channel. This is a range between 0 and 1.\n\t * @param {Number} [blueMultiplier=1] The amount to multiply against the blue channel. This is a range between 0 and 1.\n\t * @param {Number} [alphaMultiplier=1] The amount to multiply against the alpha channel. This is a range between 0 and 1.\n\t * @param {Number} [redOffset=0] The amount to add to the red channel after it has been multiplied. This is a range\n\t * between -255 and 255.\n\t * @param {Number} [greenOffset=0] The amount to add to the green channel after it has been multiplied. This is a range\n\t  * between -255 and 255.\n\t * @param {Number} [blueOffset=0] The amount to add to the blue channel after it has been multiplied. This is a range\n\t  * between -255 and 255.\n\t * @param {Number} [alphaOffset=0] The amount to add to the alpha channel after it has been multiplied. This is a range\n\t  * between -255 and 255.\n\t * @constructor\n\t * @extends Filter\n\t **/\n\tfunction ColorFilter(redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier, redOffset, greenOffset, blueOffset, alphaOffset) {\n\t\t\n\t\n\t// public properties:\n\t\t/**\n\t\t * Red channel multiplier.\n\t\t * @property redMultiplier\n\t\t * @type Number\n\t\t **/\n\t\tthis.redMultiplier = redMultiplier != null ? redMultiplier : 1;\n\t\n\t\t/**\n\t\t * Green channel multiplier.\n\t\t * @property greenMultiplier\n\t\t * @type Number\n\t\t **/\n\t\tthis.greenMultiplier = greenMultiplier != null ? greenMultiplier : 1;\n\t\n\t\t/**\n\t\t * Blue channel multiplier.\n\t\t * @property blueMultiplier\n\t\t * @type Number\n\t\t **/\n\t\tthis.blueMultiplier = blueMultiplier != null ? blueMultiplier : 1;\n\t\n\t\t/**\n\t\t * Alpha channel multiplier.\n\t\t * @property alphaMultiplier\n\t\t * @type Number\n\t\t **/\n\t\tthis.alphaMultiplier = alphaMultiplier != null ? alphaMultiplier : 1;\n\t\n\t\t/**\n\t\t * Red channel offset (added to value).\n\t\t * @property redOffset\n\t\t * @type Number\n\t\t **/\n\t\tthis.redOffset = redOffset || 0;\n\t\n\t\t/**\n\t\t * Green channel offset (added to value).\n\t\t * @property greenOffset\n\t\t * @type Number\n\t\t **/\n\t\tthis.greenOffset = greenOffset || 0;\n\t\n\t\t/**\n\t\t * Blue channel offset (added to value).\n\t\t * @property blueOffset\n\t\t * @type Number\n\t\t **/\n\t\tthis.blueOffset = blueOffset || 0;\n\t\n\t\t/**\n\t\t * Alpha channel offset (added to value).\n\t\t * @property alphaOffset\n\t\t * @type Number\n\t\t **/\n\t\tthis.alphaOffset = alphaOffset || 0;\n\t}\n\tvar p = createjs.extend(ColorFilter, createjs.Filter);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n// public methods:\n\t/** docced in super class **/\n\tp.toString = function() {\n\t\treturn \"[ColorFilter]\";\n\t};\n\n\t/** docced in super class **/\n\tp.clone = function() {\n\t\treturn new ColorFilter(this.redMultiplier, this.greenMultiplier, this.blueMultiplier, this.alphaMultiplier, this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset);\n\t};\n\t\n\n// private methods:\n\t/** docced in super class **/\n\tp._applyFilter = function(imageData) {\n\t\tvar data = imageData.data;\n\t\tvar l = data.length;\n\t\tfor (var i=0; i<l; i+=4) {\n\t\t\tdata[i] = data[i]*this.redMultiplier+this.redOffset;\n\t\t\tdata[i+1] = data[i+1]*this.greenMultiplier+this.greenOffset;\n\t\t\tdata[i+2] = data[i+2]*this.blueMultiplier+this.blueOffset;\n\t\t\tdata[i+3] = data[i+3]*this.alphaMultiplier+this.alphaOffset;\n\t\t}\n\t\treturn true;\n\t};\n\n\n\tcreatejs.ColorFilter = createjs.promote(ColorFilter, \"Filter\");\n}());\n\n//##############################################################################\n// ColorMatrix.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Provides helper functions for assembling a matrix for use with the {{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}.\n\t * Most methods return the instance to facilitate chained calls.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      myColorMatrix.adjustHue(20).adjustBrightness(50);\n\t *\n\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for an example of how to apply filters, or {{#crossLink \"ColorMatrixFilter\"}}{{/crossLink}}\n\t * for an example of how to use ColorMatrix to change a DisplayObject's color.\n\t * @class ColorMatrix\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t * @constructor\n\t **/\n\tfunction ColorMatrix(brightness, contrast, saturation, hue) {\n\t\tthis.setColor(brightness, contrast, saturation, hue);\n\t}\n\tvar p = ColorMatrix.prototype;\n\n\t/**\n\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t * for details.\n\t *\n\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t *\n\t * @method initialize\n\t * @protected\n\t * @deprecated\n\t */\n\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\n\n// constants:\n\t/**\n\t * Array of delta values for contrast calculations.\n\t * @property DELTA_INDEX\n\t * @type Array\n\t * @protected\n\t * @static\n\t **/\n\tColorMatrix.DELTA_INDEX = [\n\t\t0,    0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1,  0.11,\n\t\t0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.20, 0.21, 0.22, 0.24,\n\t\t0.25, 0.27, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38, 0.40, 0.42,\n\t\t0.44, 0.46, 0.48, 0.5,  0.53, 0.56, 0.59, 0.62, 0.65, 0.68,\n\t\t0.71, 0.74, 0.77, 0.80, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98,\n\t\t1.0,  1.06, 1.12, 1.18, 1.24, 1.30, 1.36, 1.42, 1.48, 1.54,\n\t\t1.60, 1.66, 1.72, 1.78, 1.84, 1.90, 1.96, 2.0,  2.12, 2.25,\n\t\t2.37, 2.50, 2.62, 2.75, 2.87, 3.0,  3.2,  3.4,  3.6,  3.8,\n\t\t4.0,  4.3,  4.7,  4.9,  5.0,  5.5,  6.0,  6.5,  6.8,  7.0,\n\t\t7.3,  7.5,  7.8,  8.0,  8.4,  8.7,  9.0,  9.4,  9.6,  9.8,\n\t\t10.0\n\t];\n\n\t/**\n\t * Identity matrix values.\n\t * @property IDENTITY_MATRIX\n\t * @type Array\n\t * @protected\n\t * @static\n\t **/\n\tColorMatrix.IDENTITY_MATRIX = [\n\t\t1,0,0,0,0,\n\t\t0,1,0,0,0,\n\t\t0,0,1,0,0,\n\t\t0,0,0,1,0,\n\t\t0,0,0,0,1\n\t];\n\n\t/**\n\t * The constant length of a color matrix.\n\t * @property LENGTH\n\t * @type Number\n\t * @protected\n\t * @static\n\t **/\n\tColorMatrix.LENGTH = ColorMatrix.IDENTITY_MATRIX.length;\n\n\n// public methods:\n\t/**\n\t * Resets the instance with the specified values.\n\t * @method setColor\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tp.setColor = function(brightness,contrast,saturation,hue) {\n\t\treturn this.reset().adjustColor(brightness,contrast,saturation,hue);\n\t};\n\n\t/**\n\t * Resets the matrix to identity values.\n\t * @method reset\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tp.reset = function() {\n\t\treturn this.copy(ColorMatrix.IDENTITY_MATRIX);\n\t};\n\n\t/**\n\t * Shortcut method to adjust brightness, contrast, saturation and hue.\n\t * Equivalent to calling adjustHue(hue), adjustContrast(contrast),\n\t * adjustBrightness(brightness), adjustSaturation(saturation), in that order.\n\t * @method adjustColor\n\t * @param {Number} brightness\n\t * @param {Number} contrast\n\t * @param {Number} saturation\n\t * @param {Number} hue\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.adjustColor = function(brightness,contrast,saturation,hue) {\n\t\tthis.adjustHue(hue);\n\t\tthis.adjustContrast(contrast);\n\t\tthis.adjustBrightness(brightness);\n\t\treturn this.adjustSaturation(saturation);\n\t};\n\n\t/**\n\t * Adjusts the brightness of pixel color by adding the specified value to the red, green and blue channels.\n\t * Positive values will make the image brighter, negative values will make it darker.\n\t * @method adjustBrightness\n\t * @param {Number} value A value between -255 & 255 that will be added to the RGB channels.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.adjustBrightness = function(value) {\n\t\tif (value == 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value,255);\n\t\tthis._multiplyMatrix([\n\t\t\t1,0,0,0,value,\n\t\t\t0,1,0,0,value,\n\t\t\t0,0,1,0,value,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Adjusts the contrast of pixel color.\n\t * Positive values will increase contrast, negative values will decrease contrast.\n\t * @method adjustContrast\n\t * @param {Number} value A value between -100 & 100.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.adjustContrast = function(value) {\n\t\tif (value == 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value,100);\n\t\tvar x;\n\t\tif (value<0) {\n\t\t\tx = 127+value/100*127;\n\t\t} else {\n\t\t\tx = value%1;\n\t\t\tif (x == 0) {\n\t\t\t\tx = ColorMatrix.DELTA_INDEX[value];\n\t\t\t} else {\n\t\t\t\tx = ColorMatrix.DELTA_INDEX[(value<<0)]*(1-x)+ColorMatrix.DELTA_INDEX[(value<<0)+1]*x; // use linear interpolation for more granularity.\n\t\t\t}\n\t\t\tx = x*127+127;\n\t\t}\n\t\tthis._multiplyMatrix([\n\t\t\tx/127,0,0,0,0.5*(127-x),\n\t\t\t0,x/127,0,0,0.5*(127-x),\n\t\t\t0,0,x/127,0,0.5*(127-x),\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Adjusts the color saturation of the pixel.\n\t * Positive values will increase saturation, negative values will decrease saturation (trend towards greyscale).\n\t * @method adjustSaturation\n\t * @param {Number} value A value between -100 & 100.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.adjustSaturation = function(value) {\n\t\tif (value == 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value,100);\n\t\tvar x = 1+((value > 0) ? 3*value/100 : value/100);\n\t\tvar lumR = 0.3086;\n\t\tvar lumG = 0.6094;\n\t\tvar lumB = 0.0820;\n\t\tthis._multiplyMatrix([\n\t\t\tlumR*(1-x)+x,lumG*(1-x),lumB*(1-x),0,0,\n\t\t\tlumR*(1-x),lumG*(1-x)+x,lumB*(1-x),0,0,\n\t\t\tlumR*(1-x),lumG*(1-x),lumB*(1-x)+x,0,0,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t};\n\n\n\t/**\n\t * Adjusts the hue of the pixel color.\n\t * @method adjustHue\n\t * @param {Number} value A value between -180 & 180.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.adjustHue = function(value) {\n\t\tif (value == 0 || isNaN(value)) { return this; }\n\t\tvalue = this._cleanValue(value,180)/180*Math.PI;\n\t\tvar cosVal = Math.cos(value);\n\t\tvar sinVal = Math.sin(value);\n\t\tvar lumR = 0.213;\n\t\tvar lumG = 0.715;\n\t\tvar lumB = 0.072;\n\t\tthis._multiplyMatrix([\n\t\t\tlumR+cosVal*(1-lumR)+sinVal*(-lumR),lumG+cosVal*(-lumG)+sinVal*(-lumG),lumB+cosVal*(-lumB)+sinVal*(1-lumB),0,0,\n\t\t\tlumR+cosVal*(-lumR)+sinVal*(0.143),lumG+cosVal*(1-lumG)+sinVal*(0.140),lumB+cosVal*(-lumB)+sinVal*(-0.283),0,0,\n\t\t\tlumR+cosVal*(-lumR)+sinVal*(-(1-lumR)),lumG+cosVal*(-lumG)+sinVal*(lumG),lumB+cosVal*(1-lumB)+sinVal*(lumB),0,0,\n\t\t\t0,0,0,1,0,\n\t\t\t0,0,0,0,1\n\t\t]);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Concatenates (multiplies) the specified matrix with this one.\n\t * @method concat\n\t * @param {Array} matrix An array or ColorMatrix instance.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.concat = function(matrix) {\n\t\tmatrix = this._fixMatrix(matrix);\n\t\tif (matrix.length != ColorMatrix.LENGTH) { return this; }\n\t\tthis._multiplyMatrix(matrix);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns a clone of this ColorMatrix.\n\t * @method clone\n\t * @return {ColorMatrix} A clone of this ColorMatrix.\n\t **/\n\tp.clone = function() {\n\t\treturn (new ColorMatrix()).copy(this);\n\t};\n\n\t/**\n\t * Return a length 25 (5x5) array instance containing this matrix's values.\n\t * @method toArray\n\t * @return {Array} An array holding this matrix's values.\n\t **/\n\tp.toArray = function() {\n\t\tvar arr = [];\n\t\tfor (var i= 0, l=ColorMatrix.LENGTH; i<l; i++) {\n\t\t\tarr[i] = this[i];\n\t\t}\n\t\treturn arr;\n\t};\n\n\t/**\n\t * Copy the specified matrix's values to this matrix.\n\t * @method copy\n\t * @param {Array} matrix An array or ColorMatrix instance.\n\t * @return {ColorMatrix} The ColorMatrix instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t **/\n\tp.copy = function(matrix) {\n\t\tvar l = ColorMatrix.LENGTH;\n\t\tfor (var i=0;i<l;i++) {\n\t\t\tthis[i] = matrix[i];\n\t\t}\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t **/\n\tp.toString = function() {\n\t\treturn \"[ColorMatrix]\";\n\t};\n\n\n// private methods:\n\t/**\n\t * @method _multiplyMatrix\n\t * @param {Array} matrix\n\t * @protected\n\t **/\n\tp._multiplyMatrix = function(matrix) {\n\t\tvar i, j, k, col = [];\n\n\t\tfor (i=0;i<5;i++) {\n\t\t\tfor (j=0;j<5;j++) {\n\t\t\t\tcol[j] = this[j+i*5];\n\t\t\t}\n\t\t\tfor (j=0;j<5;j++) {\n\t\t\t\tvar val=0;\n\t\t\t\tfor (k=0;k<5;k++) {\n\t\t\t\t\tval += matrix[j+k*5]*col[k];\n\t\t\t\t}\n\t\t\t\tthis[j+i*5] = val;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Make sure values are within the specified range, hue has a limit of 180, brightness is 255, others are 100.\n\t * @method _cleanValue\n\t * @param {Number} value The raw number\n\t * @param {Number} limit The maximum that the number can be. The minimum is the limit * -1.\n\t * @protected\n\t **/\n\tp._cleanValue = function(value, limit) {\n\t\treturn Math.min(limit,Math.max(-limit,value));\n\t};\n\n\t/**\n\t * Makes sure matrixes are 5x5 (25 long).\n\t * @method _fixMatrix\n\t * @param {Array} matrix\n\t * @protected\n\t **/\n\tp._fixMatrix = function(matrix) {\n\t\tif (matrix instanceof ColorMatrix) { matrix = matrix.toArray(); }\n\t\tif (matrix.length < ColorMatrix.LENGTH) {\n\t\t\tmatrix = matrix.slice(0,matrix.length).concat(ColorMatrix.IDENTITY_MATRIX.slice(matrix.length,ColorMatrix.LENGTH));\n\t\t} else if (matrix.length > ColorMatrix.LENGTH) {\n\t\t\tmatrix = matrix.slice(0,ColorMatrix.LENGTH);\n\t\t}\n\t\treturn matrix;\n\t};\n\n\n\tcreatejs.ColorMatrix = ColorMatrix;\n}());\n\n//##############################################################################\n// ColorMatrixFilter.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n\t * Allows you to carry out complex color operations such as modifying saturation, brightness, or inverting. See the\n\t * {{#crossLink \"ColorMatrix\"}}{{/crossLink}} for more information on changing colors. For an easier color transform,\n\t * consider the {{#crossLink \"ColorFilter\"}}{{/crossLink}}.\n\t *\n\t * <h4>Example</h4>\n\t * This example creates a red circle, inverts its hue, and then saturates it to brighten it up.\n\t *\n\t *      var shape = new createjs.Shape().set({x:100,y:100});\n\t *      shape.graphics.beginFill(\"#ff0000\").drawCircle(0,0,50);\n\t *\n\t *      var matrix = new createjs.ColorMatrix().adjustHue(180).adjustSaturation(100);\n\t *      shape.filters = [\n\t *          new createjs.ColorMatrixFilter(matrix)\n\t *      ];\n\t *\n\t *      shape.cache(-50, -50, 100, 100);\n\t *\n\t * See {{#crossLink \"Filter\"}}{{/crossLink}} for an more information on applying filters.\n\t * @class ColorMatrixFilter\n\t * @constructor\n\t * @extends Filter\n\t * @param {Array | ColorMatrix} matrix A 4x5 matrix describing the color operation to perform. See also the {{#crossLink \"ColorMatrix\"}}{{/crossLink}}\n\t * class.\n\t **/\n\tfunction ColorMatrixFilter(matrix) {\n\t\n\t\t\n\t// public properties:\n\t\t/**\n\t\t * A 4x5 matrix describing the color operation to perform. See also the {{#crossLink \"ColorMatrix\"}}{{/crossLink}}\n\t\t * @property matrix\n\t\t * @type Array | ColorMatrix\n\t\t **/\n\t\tthis.matrix = matrix;\n\t}\n\tvar p = createjs.extend(ColorMatrixFilter, createjs.Filter);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\n\n// public methods:\n\t/** docced in super class **/\n\tp.toString = function() {\n\t\treturn \"[ColorMatrixFilter]\";\n\t};\n\n\t/** docced in super class **/\n\tp.clone = function() {\n\t\treturn new ColorMatrixFilter(this.matrix);\n\t};\n\n// private methods:\n\t/** docced in super class **/\n\tp._applyFilter = function(imageData) { \n\t\tvar data = imageData.data;\n\t\tvar l = data.length;\n\t\tvar r,g,b,a;\n\t\tvar mtx = this.matrix;\n\t\tvar m0 =  mtx[0],  m1 =  mtx[1],  m2 =  mtx[2],  m3 =  mtx[3],  m4 =  mtx[4];\n\t\tvar m5 =  mtx[5],  m6 =  mtx[6],  m7 =  mtx[7],  m8 =  mtx[8],  m9 =  mtx[9];\n\t\tvar m10 = mtx[10], m11 = mtx[11], m12 = mtx[12], m13 = mtx[13], m14 = mtx[14];\n\t\tvar m15 = mtx[15], m16 = mtx[16], m17 = mtx[17], m18 = mtx[18], m19 = mtx[19];\n\n\t\tfor (var i=0; i<l; i+=4) {\n\t\t\tr = data[i];\n\t\t\tg = data[i+1];\n\t\t\tb = data[i+2];\n\t\t\ta = data[i+3];\n\t\t\tdata[i] = r*m0+g*m1+b*m2+a*m3+m4; // red\n\t\t\tdata[i+1] = r*m5+g*m6+b*m7+a*m8+m9; // green\n\t\t\tdata[i+2] = r*m10+g*m11+b*m12+a*m13+m14; // blue\n\t\t\tdata[i+3] = r*m15+g*m16+b*m17+a*m18+m19; // alpha\n\t\t}\n\t\treturn true;\n\t};\n\n\n\tcreatejs.ColorMatrixFilter = createjs.promote(ColorMatrixFilter, \"Filter\");\n}());\n\n//##############################################################################\n// Touch.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\n// constructor:\n\t/**\n * Global utility for working with multi-touch enabled devices in EaselJS. Currently supports W3C Touch API (iOS and\n * modern Android browser) and the Pointer API (IE), including ms-prefixed events in IE10, and unprefixed in IE11.\n *\n * Ensure that you {{#crossLink \"Touch/disable\"}}{{/crossLink}} touch when cleaning up your application. You do not have\n * to check if touch is supported to enable it, as it will fail gracefully if it is not supported.\n *\n * <h4>Example</h4>\n *\n *      var stage = new createjs.Stage(\"canvasId\");\n *      createjs.Touch.enable(stage);\n *\n * <strong>Note:</strong> It is important to disable Touch on a stage that you are no longer using:\n *\n *      createjs.Touch.disable(stage);\n *\n * @class Touch\n * @static\n **/\n\tfunction Touch() {\n\t\tthrow \"Touch cannot be instantiated\";\n\t}\n\n\n// public static methods:\n\t/**\n\t * Returns `true` if touch is supported in the current browser.\n\t * @method isSupported\n\t * @return {Boolean} Indicates whether touch is supported in the current browser.\n\t * @static\n\t **/\n\tTouch.isSupported = function() {\n\t\treturn\t!!(('ontouchstart' in window) // iOS & Android\n\t\t\t|| (window.navigator['msPointerEnabled'] && window.navigator['msMaxTouchPoints'] > 0) // IE10\n\t\t\t|| (window.navigator['pointerEnabled'] && window.navigator['maxTouchPoints'] > 0)); // IE11+\n\t};\n\n\t/**\n\t * Enables touch interaction for the specified EaselJS {{#crossLink \"Stage\"}}{{/crossLink}}. Currently supports iOS\n\t * (and compatible browsers, such as modern Android browsers), and IE10/11. Supports both single touch and\n\t * multi-touch modes. Extends the EaselJS {{#crossLink \"MouseEvent\"}}{{/crossLink}} model, but without support for\n\t * double click or over/out events. See the MouseEvent {{#crossLink \"MouseEvent/pointerId:property\"}}{{/crossLink}}\n\t * for more information.\n\t * @method enable\n\t * @param {Stage} stage The {{#crossLink \"Stage\"}}{{/crossLink}} to enable touch on.\n\t * @param {Boolean} [singleTouch=false] If `true`, only a single touch will be active at a time.\n\t * @param {Boolean} [allowDefault=false] If `true`, then default gesture actions (ex. scrolling, zooming) will be\n\t * allowed when the user is interacting with the target canvas.\n\t * @return {Boolean} Returns `true` if touch was successfully enabled on the target stage.\n\t * @static\n\t **/\n\tTouch.enable = function(stage, singleTouch, allowDefault) {\n\t\tif (!stage || !stage.canvas || !Touch.isSupported()) { return false; }\n\t\tif (stage.__touch) { return true; }\n\n\t\t// inject required properties on stage:\n\t\tstage.__touch = {pointers:{}, multitouch:!singleTouch, preventDefault:!allowDefault, count:0};\n\n\t\t// note that in the future we may need to disable the standard mouse event model before adding\n\t\t// these to prevent duplicate calls. It doesn't seem to be an issue with iOS devices though.\n\t\tif ('ontouchstart' in window) { Touch._IOS_enable(stage); }\n\t\telse if (window.navigator['msPointerEnabled'] || window.navigator[\"pointerEnabled\"]) { Touch._IE_enable(stage); }\n\t\treturn true;\n\t};\n\n\t/**\n\t * Removes all listeners that were set up when calling `Touch.enable()` on a stage.\n\t * @method disable\n\t * @param {Stage} stage The {{#crossLink \"Stage\"}}{{/crossLink}} to disable touch on.\n\t * @static\n\t **/\n\tTouch.disable = function(stage) {\n\t\tif (!stage) { return; }\n\t\tif ('ontouchstart' in window) { Touch._IOS_disable(stage); }\n\t\telse if (window.navigator['msPointerEnabled'] || window.navigator[\"pointerEnabled\"]) { Touch._IE_disable(stage); }\n\t\t\n\t\tdelete stage.__touch;\n\t};\n\n\n// Private static methods:\n\t/**\n\t * @method _IOS_enable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t **/\n\tTouch._IOS_enable = function(stage) {\n\t\tvar canvas = stage.canvas;\n\t\tvar f = stage.__touch.f = function(e) { Touch._IOS_handleEvent(stage,e); };\n\t\tcanvas.addEventListener(\"touchstart\", f, false);\n\t\tcanvas.addEventListener(\"touchmove\", f, false);\n\t\tcanvas.addEventListener(\"touchend\", f, false);\n\t\tcanvas.addEventListener(\"touchcancel\", f, false);\n\t};\n\n\t/**\n\t * @method _IOS_disable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t **/\n\tTouch._IOS_disable = function(stage) {\n\t\tvar canvas = stage.canvas;\n\t\tif (!canvas) { return; }\n\t\tvar f = stage.__touch.f;\n\t\tcanvas.removeEventListener(\"touchstart\", f, false);\n\t\tcanvas.removeEventListener(\"touchmove\", f, false);\n\t\tcanvas.removeEventListener(\"touchend\", f, false);\n\t\tcanvas.removeEventListener(\"touchcancel\", f, false);\n\t};\n\n\t/**\n\t * @method _IOS_handleEvent\n\t * @param {Stage} stage\n\t * @param {Object} e The event to handle\n\t * @protected\n\t * @static\n\t **/\n\tTouch._IOS_handleEvent = function(stage, e) {\n\t\tif (!stage) { return; }\n\t\tif (stage.__touch.preventDefault) { e.preventDefault&&e.preventDefault(); }\n\t\tvar touches = e.changedTouches;\n\t\tvar type = e.type;\n\t\tfor (var i= 0,l=touches.length; i<l; i++) {\n\t\t\tvar touch = touches[i];\n\t\t\tvar id = touch.identifier;\n\t\t\tif (touch.target != stage.canvas) { continue; }\n\n\t\t\tif (type == \"touchstart\") {\n\t\t\t\tthis._handleStart(stage, id, e, touch.pageX, touch.pageY);\n\t\t\t} else if (type == \"touchmove\") {\n\t\t\t\tthis._handleMove(stage, id, e, touch.pageX, touch.pageY);\n\t\t\t} else if (type == \"touchend\" || type == \"touchcancel\") {\n\t\t\t\tthis._handleEnd(stage, id, e);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @method _IE_enable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t **/\n\tTouch._IE_enable = function(stage) {\n\t\tvar canvas = stage.canvas;\n\t\tvar f = stage.__touch.f = function(e) { Touch._IE_handleEvent(stage,e); };\n\n\t\tif (window.navigator[\"pointerEnabled\"] === undefined) {\n\t\t\tcanvas.addEventListener(\"MSPointerDown\", f, false);\n\t\t\twindow.addEventListener(\"MSPointerMove\", f, false);\n\t\t\twindow.addEventListener(\"MSPointerUp\", f, false);\n\t\t\twindow.addEventListener(\"MSPointerCancel\", f, false);\n\t\t\tif (stage.__touch.preventDefault) { canvas.style.msTouchAction = \"none\"; }\n\t\t} else {\n\t\t\tcanvas.addEventListener(\"pointerdown\", f, false);\n\t\t\twindow.addEventListener(\"pointermove\", f, false);\n\t\t\twindow.addEventListener(\"pointerup\", f, false);\n\t\t\twindow.addEventListener(\"pointercancel\", f, false);\n\t\t\tif (stage.__touch.preventDefault) { canvas.style.touchAction = \"none\"; }\n\n\t\t}\n\t\tstage.__touch.activeIDs = {};\n\t};\n\n\t/**\n\t * @method _IE_disable\n\t * @protected\n\t * @param {Stage} stage\n\t * @static\n\t **/\n\tTouch._IE_disable = function(stage) {\n\t\tvar f = stage.__touch.f;\n\n\t\tif (window.navigator[\"pointerEnabled\"] === undefined) {\n\t\t\twindow.removeEventListener(\"MSPointerMove\", f, false);\n\t\t\twindow.removeEventListener(\"MSPointerUp\", f, false);\n\t\t\twindow.removeEventListener(\"MSPointerCancel\", f, false);\n\t\t\tif (stage.canvas) {\n\t\t\t\tstage.canvas.removeEventListener(\"MSPointerDown\", f, false);\n\t\t\t}\n\t\t} else {\n\t\t\twindow.removeEventListener(\"pointermove\", f, false);\n\t\t\twindow.removeEventListener(\"pointerup\", f, false);\n\t\t\twindow.removeEventListener(\"pointercancel\", f, false);\n\t\t\tif (stage.canvas) {\n\t\t\t\tstage.canvas.removeEventListener(\"pointerdown\", f, false);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @method _IE_handleEvent\n\t * @param {Stage} stage\n\t * @param {Object} e The event to handle.\n\t * @protected\n\t * @static\n\t **/\n\tTouch._IE_handleEvent = function(stage, e) {\n\t\tif (!stage) { return; }\n\t\tif (stage.__touch.preventDefault) { e.preventDefault && e.preventDefault(); }\n\t\tvar type = e.type;\n\t\tvar id = e.pointerId;\n\t\tvar ids = stage.__touch.activeIDs;\n\n\t\tif (type == \"MSPointerDown\" || type == \"pointerdown\") {\n\t\t\tif (e.srcElement != stage.canvas) { return; }\n\t\t\tids[id] = true;\n\t\t\tthis._handleStart(stage, id, e, e.pageX, e.pageY);\n\t\t} else if (ids[id]) { // it's an id we're watching\n\t\t\tif (type == \"MSPointerMove\" || type == \"pointermove\") {\n\t\t\t\tthis._handleMove(stage, id, e, e.pageX, e.pageY);\n\t\t\t} else if (type == \"MSPointerUp\" || type == \"MSPointerCancel\"\n\t\t\t\t\t|| type == \"pointerup\" || type == \"pointercancel\") {\n\t\t\t\tdelete(ids[id]);\n\t\t\t\tthis._handleEnd(stage, id, e);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @method _handleStart\n\t * @param {Stage} stage\n\t * @param {String|Number} id\n\t * @param {Object} e\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @protected\n\t **/\n\tTouch._handleStart = function(stage, id, e, x, y) {\n\t\tvar props = stage.__touch;\n\t\tif (!props.multitouch && props.count) { return; }\n\t\tvar ids = props.pointers;\n\t\tif (ids[id]) { return; }\n\t\tids[id] = true;\n\t\tprops.count++;\n\t\tstage._handlePointerDown(id, e, x, y);\n\t};\n\n\t/**\n\t * @method _handleMove\n\t * @param {Stage} stage\n\t * @param {String|Number} id\n\t * @param {Object} e\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @protected\n\t **/\n\tTouch._handleMove = function(stage, id, e, x, y) {\n\t\tif (!stage.__touch.pointers[id]) { return; }\n\t\tstage._handlePointerMove(id, e, x, y);\n\t};\n\n\t/**\n\t * @method _handleEnd\n\t * @param {Stage} stage\n\t * @param {String|Number} id\n\t * @param {Object} e\n\t * @protected\n\t **/\n\tTouch._handleEnd = function(stage, id, e) {\n\t\t// TODO: cancel should be handled differently for proper UI (ex. an up would trigger a click, a cancel would more closely resemble an out).\n\t\tvar props = stage.__touch;\n\t\tvar ids = props.pointers;\n\t\tif (!ids[id]) { return; }\n\t\tprops.count--;\n\t\tstage._handlePointerUp(id, e, true);\n\t\tdelete(ids[id]);\n\t};\n\n\n\tcreatejs.Touch = Touch;\n}());\n\n//##############################################################################\n// version.js\n//##############################################################################\n\n(function (createjs) {\n\t\"use strict\";\n\n\t/**\n\t * Static class holding library specific information such as the version and buildDate of\n\t * the library.\n\t * @class EaselJS\n\t **/\n\tvar s = createjs.EaselJS = createjs.EaselJS || {};\n\n\t/**\n\t * The version string for this release.\n\t * @property version\n\t * @type String\n\t * @static\n\t **/\n\ts.version = /*=version*/\"0.8.2\"; // injected by build process\n\n\t/**\n\t * The build date for this release in UTC format.\n\t * @property buildDate\n\t * @type String\n\t * @static\n\t **/\n\ts.buildDate = /*=date*/\"Sat, 12 Nov 2016 06:45:03 GMT\"; // injected by build process\n\n})(scope.createjs);\n\n//##############################################################################\n// version.js\n//##############################################################################\n\n(function (createjs) {\n\t\"use strict\";\n\n\t/**\n\t * Static class holding library specific information such as the version and buildDate of the library.\n\t * @class PreloadJS\n\t **/\n\tvar s = createjs.PreloadJS = createjs.PreloadJS || {};\n\n\t/**\n\t * The version string for this release.\n\t * @property version\n\t * @type {String}\n\t * @static\n\t **/\n\ts.version = /*=version*/\"0.6.2\"; // injected by build process\n\n\t/**\n\t * The build date for this release in UTC format.\n\t * @property buildDate\n\t * @type {String}\n\t * @static\n\t **/\n\ts.buildDate = /*=date*/\"Sat, 12 Nov 2016 06:45:00 GMT\"; // injected by build process\n\n})(scope.createjs);\n\n//##############################################################################\n// proxy.js\n//##############################################################################\n\n/**\n * Various utilities that the CreateJS Suite uses. Utilities are created as separate files, and will be available on the\n * createjs namespace directly.\n *\n * <h4>Example</h4>\n *\n *      myObject.addEventListener(\"change\", createjs.proxy(myMethod, scope));\n *\n * @class Utility Methods\n * @main Utility Methods\n */\n\n(function() {\n\t\"use strict\";\n\n\t/**\n\t * A function proxy for methods. By default, JavaScript methods do not maintain scope, so passing a method as a\n\t * callback will result in the method getting called in the scope of the caller. Using a proxy ensures that the\n\t * method gets called in the correct scope.\n\t *\n\t * Additional arguments can be passed that will be applied to the function when it is called.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      myObject.addEventListener(\"event\", createjs.proxy(myHandler, this, arg1, arg2));\n\t *\n\t *      function myHandler(arg1, arg2) {\n\t *           // This gets called when myObject.myCallback is executed.\n\t *      }\n\t *\n\t * @method proxy\n\t * @param {Function} method The function to call\n\t * @param {Object} scope The scope to call the method name on\n\t * @param {mixed} [arg] * Arguments that are appended to the callback for additional params.\n\t * @public\n\t * @static\n\t */\n\tcreatejs.proxy = function (method, scope) {\n\t\tvar aArgs = Array.prototype.slice.call(arguments, 2);\n\t\treturn function () {\n\t\t\treturn method.apply(scope, Array.prototype.slice.call(arguments, 0).concat(aArgs));\n\t\t};\n\t}\n\n}());\n\n//##############################################################################\n// ErrorEvent.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\t/**\n\t * A general error {{#crossLink \"Event\"}}{{/crossLink}}, that describes an error that occurred, as well as any details.\n\t * @class ErrorEvent\n\t * @param {String} [title] The error title\n\t * @param {String} [message] The error description\n\t * @param {Object} [data] Additional error data\n\t * @constructor\n\t */\n\tfunction ErrorEvent(title, message, data) {\n\t\tthis.Event_constructor(\"error\");\n\n\t\t/**\n\t\t * The short error title, which indicates the type of error that occurred.\n\t\t * @property title\n\t\t * @type String\n\t\t */\n\t\tthis.title = title;\n\n\t\t/**\n\t\t * The verbose error message, containing details about the error.\n\t\t * @property message\n\t\t * @type String\n\t\t */\n\t\tthis.message = message;\n\n\t\t/**\n\t\t * Additional data attached to an error.\n\t\t * @property data\n\t\t * @type {Object}\n\t\t */\n\t\tthis.data = data;\n\t}\n\n\tvar p = createjs.extend(ErrorEvent, createjs.Event);\n\n\tp.clone = function() {\n\t\treturn new createjs.ErrorEvent(this.title, this.message, this.data);\n\t};\n\n\tcreatejs.ErrorEvent = createjs.promote(ErrorEvent, \"Event\");\n\n}());\n\n//##############################################################################\n// ProgressEvent.js\n//##############################################################################\n\n(function (scope) {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A CreateJS {{#crossLink \"Event\"}}{{/crossLink}} that is dispatched when progress changes.\n\t * @class ProgressEvent\n\t * @param {Number} loaded The amount that has been loaded. This can be any number relative to the total.\n\t * @param {Number} [total=1] The total amount that will load. This will default to 1, so if the `loaded` value is\n\t * a percentage (between 0 and 1), it can be omitted.\n\t * @todo Consider having this event be a \"fileprogress\" event as well\n\t * @constructor\n\t */\n\tfunction ProgressEvent(loaded, total) {\n\t\tthis.Event_constructor(\"progress\");\n\n\t\t/**\n\t\t * The amount that has been loaded (out of a total amount)\n\t\t * @property loaded\n\t\t * @type {Number}\n\t\t */\n\t\tthis.loaded = loaded;\n\n\t\t/**\n\t\t * The total \"size\" of the load.\n\t\t * @property total\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.total = (total == null) ? 1 : total;\n\n\t\t/**\n\t\t * The percentage (out of 1) that the load has been completed. This is calculated using `loaded/total`.\n\t\t * @property progress\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.progress = (total == 0) ? 0 : this.loaded / this.total;\n\t};\n\n\tvar p = createjs.extend(ProgressEvent, createjs.Event);\n\n\t/**\n\t * Returns a clone of the ProgressEvent instance.\n\t * @method clone\n\t * @return {ProgressEvent} a clone of the Event instance.\n\t **/\n\tp.clone = function() {\n\t\treturn new createjs.ProgressEvent(this.loaded, this.total);\n\t};\n\n\tcreatejs.ProgressEvent = createjs.promote(ProgressEvent, \"Event\");\n\n}(window));\n\n//##############################################################################\n// json3.js\n//##############################################################################\n\n/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n;(function () {\n  // Detect the `define` function exposed by asynchronous module loaders. The\n  // strict `define` check is necessary for compatibility with `r.js`.\n  var isLoader = typeof define === \"function\" && define.amd;\n\n  // A set of types used to distinguish objects from primitives.\n  var objectTypes = {\n    \"function\": true,\n    \"object\": true\n  };\n\n  // Detect the `exports` object exposed by CommonJS implementations.\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  // Use the `global` object exposed by Node (including Browserify via\n  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n  // and the `window` object in browsers. Rhino exports a `global` function\n  // instead.\n  var root = objectTypes[typeof window] && window || this,\n      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\n  if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  // Public: Initializes JSON 3 using the given `context` object, attaching the\n  // `stringify` and `parse` functions to the specified `exports` object.\n  function runInContext(context, exports) {\n    context || (context = root[\"Object\"]());\n    exports || (exports = root[\"Object\"]());\n\n    // Native constructor aliases.\n    var Number = context[\"Number\"] || root[\"Number\"],\n        String = context[\"String\"] || root[\"String\"],\n        Object = context[\"Object\"] || root[\"Object\"],\n        Date = context[\"Date\"] || root[\"Date\"],\n        SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n        TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n        Math = context[\"Math\"] || root[\"Math\"],\n        nativeJSON = context[\"JSON\"] || root[\"JSON\"];\n\n    // Delegate to the native `stringify` and `parse` implementations.\n    if (typeof nativeJSON == \"object\" && nativeJSON) {\n      exports.stringify = nativeJSON.stringify;\n      exports.parse = nativeJSON.parse;\n    }\n\n    // Convenience aliases.\n    var objectProto = Object.prototype,\n        getClass = objectProto.toString,\n        isProperty, forEach, undef;\n\n    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n    var isExtended = new Date(-3509827334573292);\n    try {\n      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n      // results for certain dates in Opera >= 10.53.\n      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n        // Safari < 2.0.2 stores the internal millisecond time value correctly,\n        // but clips the values returned by the date methods to the range of\n        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n    } catch (exception) {}\n\n    // Internal: Determines whether the native `JSON.stringify` and `parse`\n    // implementations are spec-compliant. Based on work by Ken Snyder.\n    function has(name) {\n      if (has[name] !== undef) {\n        // Return cached feature test result.\n        return has[name];\n      }\n      var isSupported;\n      if (name == \"bug-string-char-index\") {\n        // IE <= 7 doesn't support accessing string characters using square\n        // bracket notation. IE 8 only supports this for primitives.\n        isSupported = \"a\"[0] != \"a\";\n      } else if (name == \"json\") {\n        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n        // supported.\n        isSupported = has(\"json-stringify\") && has(\"json-parse\");\n      } else {\n        var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n        // Test `JSON.stringify`.\n        if (name == \"json-stringify\") {\n          var stringify = exports.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n          if (stringifySupported) {\n            // A test function object with a custom `toJSON` method.\n            (value = function () {\n              return 1;\n            }).toJSON = value;\n            try {\n              stringifySupported =\n                // Firefox 3.1b1 and b2 serialize string, number, and boolean\n                // primitives as object literals.\n                stringify(0) === \"0\" &&\n                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n                // literals.\n                stringify(new Number()) === \"0\" &&\n                stringify(new String()) == '\"\"' &&\n                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n                // does not define a canonical JSON representation (this applies to\n                // objects with `toJSON` properties as well, *unless* they are nested\n                // within an object or array).\n                stringify(getClass) === undef &&\n                // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n                // FF 3.1b3 pass this test.\n                stringify(undef) === undef &&\n                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n                // respectively, if the value is omitted entirely.\n                stringify() === undef &&\n                // FF 3.1b1, 2 throw an error if the given value is not a number,\n                // string, array, object, Boolean, or `null` literal. This applies to\n                // objects with custom `toJSON` methods as well, unless they are nested\n                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n                // methods entirely.\n                stringify(value) === \"1\" &&\n                stringify([value]) == \"[1]\" &&\n                // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n                // `\"[null]\"`.\n                stringify([undef]) == \"[null]\" &&\n                // YUI 3.0.0b1 fails to serialize `null` literals.\n                stringify(null) == \"null\" &&\n                // FF 3.1b1, 2 halts serialization if an array contains a function:\n                // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n                // elides non-JSON values from objects and arrays, unless they\n                // define custom `toJSON` methods.\n                stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n                // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n                stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n                stringify(null, value) === \"1\" &&\n                stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n                // serialize extended years.\n                stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n                // The milliseconds are optional in ES 5, but required in 5.1.\n                stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n                // four-digit years instead of six-digit years. Credits: @Yaffle.\n                stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n                // values less than 1000. Credits: @Yaffle.\n                stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n            } catch (exception) {\n              stringifySupported = false;\n            }\n          }\n          isSupported = stringifySupported;\n        }\n        // Test `JSON.parse`.\n        if (name == \"json-parse\") {\n          var parse = exports.parse;\n          if (typeof parse == \"function\") {\n            try {\n              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n              // Conforming implementations should also coerce the initial argument to\n              // a string prior to parsing.\n              if (parse(\"0\") === 0 && !parse(false)) {\n                // Simple parsing test.\n                value = parse(serialized);\n                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n                if (parseSupported) {\n                  try {\n                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                    parseSupported = !parse('\"\\t\"');\n                  } catch (exception) {}\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                      // certain octal literals.\n                      parseSupported = parse(\"01\") !== 1;\n                    } catch (exception) {}\n                  }\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                      // points. These environments, along with FF 3.1b1 and 2,\n                      // also allow trailing commas in JSON objects and arrays.\n                      parseSupported = parse(\"1.\") !== 1;\n                    } catch (exception) {}\n                  }\n                }\n              }\n            } catch (exception) {\n              parseSupported = false;\n            }\n          }\n          isSupported = parseSupported;\n        }\n      }\n      return has[name] = !!isSupported;\n    }\n\n    if (!has(\"json\")) {\n      // Common `[[Class]]` name aliases.\n      var functionClass = \"[object Function]\",\n          dateClass = \"[object Date]\",\n          numberClass = \"[object Number]\",\n          stringClass = \"[object String]\",\n          arrayClass = \"[object Array]\",\n          booleanClass = \"[object Boolean]\";\n\n      // Detect incomplete support for accessing string characters by index.\n      var charIndexBuggy = has(\"bug-string-char-index\");\n\n      // Define additional utility methods if the `Date` methods are buggy.\n      if (!isExtended) {\n        var floor = Math.floor;\n        // A mapping between the months of the year and the number of days between\n        // January 1st and the first of the respective month.\n        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n        // Internal: Calculates the number of days between the Unix epoch and the\n        // first day of the given month.\n        var getDay = function (year, month) {\n          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n        };\n      }\n\n      // Internal: Determines if a property is a direct property of the given\n      // object. Delegates to the native `Object#hasOwnProperty` method.\n      if (!(isProperty = objectProto.hasOwnProperty)) {\n        isProperty = function (property) {\n          var members = {}, constructor;\n          if ((members.__proto__ = null, members.__proto__ = {\n            // The *proto* property cannot be set multiple times in recent\n            // versions of Firefox and SeaMonkey.\n            \"toString\": 1\n          }, members).toString != getClass) {\n            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n            // supports the mutable *proto* property.\n            isProperty = function (property) {\n              // Capture and break the object's prototype chain (see section 8.6.2\n              // of the ES 5.1 spec). The parenthesized expression prevents an\n              // unsafe transformation by the Closure Compiler.\n              var original = this.__proto__, result = property in (this.__proto__ = null, this);\n              // Restore the original prototype chain.\n              this.__proto__ = original;\n              return result;\n            };\n          } else {\n            // Capture a reference to the top-level `Object` constructor.\n            constructor = members.constructor;\n            // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n            // other environments.\n            isProperty = function (property) {\n              var parent = (this.constructor || constructor).prototype;\n              return property in this && !(property in parent && this[property] === parent[property]);\n            };\n          }\n          members = null;\n          return isProperty.call(this, property);\n        };\n      }\n\n      // Internal: Normalizes the `for...in` iteration algorithm across\n      // environments. Each enumerated key is yielded to a `callback` function.\n      forEach = function (object, callback) {\n        var size = 0, Properties, members, property;\n\n        // Tests for bugs in the current environment's `for...in` algorithm. The\n        // `valueOf` property inherits the non-enumerable flag from\n        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n        (Properties = function () {\n          this.valueOf = 0;\n        }).prototype.valueOf = 0;\n\n        // Iterate over a new instance of the `Properties` class.\n        members = new Properties();\n        for (property in members) {\n          // Ignore all properties inherited from `Object.prototype`.\n          if (isProperty.call(members, property)) {\n            size++;\n          }\n        }\n        Properties = members = null;\n\n        // Normalize the iteration algorithm.\n        if (!size) {\n          // A list of non-enumerable properties inherited from `Object.prototype`.\n          members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n          // properties.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, length;\n            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n            for (property in object) {\n              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n              // certain conditions; IE does not.\n              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for each non-enumerable property.\n            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n          };\n        } else if (size == 2) {\n          // Safari <= 2.0.4 enumerates shadowed properties twice.\n          forEach = function (object, callback) {\n            // Create a set of iterated properties.\n            var members = {}, isFunction = getClass.call(object) == functionClass, property;\n            for (property in object) {\n              // Store each property name to prevent double enumeration. The\n              // `prototype` property of functions is not enumerated due to cross-\n              // environment inconsistencies.\n              if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n          };\n        } else {\n          // No bugs detected; use the standard `for...in` algorithm.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n            for (property in object) {\n              if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for the `constructor` property due to\n            // cross-environment inconsistencies.\n            if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n              callback(property);\n            }\n          };\n        }\n        return forEach(object, callback);\n      };\n\n      // Public: Serializes a JavaScript `value` as a JSON string. The optional\n      // `filter` argument may specify either a function that alters how object and\n      // array members are serialized, or an array of strings and numbers that\n      // indicates which properties should be serialized. The optional `width`\n      // argument may be either a string or number that specifies the indentation\n      // level of the output.\n      if (!has(\"json-stringify\")) {\n        // Internal: A map of control characters and their escaped equivalents.\n        var Escapes = {\n          92: \"\\\\\\\\\",\n          34: '\\\\\"',\n          8: \"\\\\b\",\n          12: \"\\\\f\",\n          10: \"\\\\n\",\n          13: \"\\\\r\",\n          9: \"\\\\t\"\n        };\n\n        // Internal: Converts `value` into a zero-padded string such that its\n        // length is at least equal to `width`. The `width` must be <= 6.\n        var leadingZeroes = \"000000\";\n        var toPaddedString = function (width, value) {\n          // The `|| 0` expression is necessary to work around a bug in\n          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n          return (leadingZeroes + (value || 0)).slice(-width);\n        };\n\n        // Internal: Double-quotes a string `value`, replacing all ASCII control\n        // characters (characters with code unit values between 0 and 31) with\n        // their escaped equivalents. This is an implementation of the\n        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n        var unicodePrefix = \"\\\\u00\";\n        var quote = function (value) {\n          var result = '\"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;\n          var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n          for (; index < length; index++) {\n            var charCode = value.charCodeAt(index);\n            // If the character is a control character, append its Unicode or\n            // shorthand escape sequence; otherwise, append the character as-is.\n            switch (charCode) {\n              case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n                result += Escapes[charCode];\n                break;\n              default:\n                if (charCode < 32) {\n                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                  break;\n                }\n                result += useCharIndex ? symbols[index] : value.charAt(index);\n            }\n          }\n          return result + '\"';\n        };\n\n        // Internal: Recursively serializes an object. Implements the\n        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n          try {\n            // Necessary for host object support.\n            value = object[property];\n          } catch (exception) {}\n          if (typeof value == \"object\" && value) {\n            className = getClass.call(value);\n            if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n              if (value > -1 / 0 && value < 1 / 0) {\n                // Dates are serialized according to the `Date#toJSON` method\n                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n                // for the ISO 8601 date time string format.\n                if (getDay) {\n                  // Manually compute the year, month, date, hours, minutes,\n                  // seconds, and milliseconds if the `getUTC*` methods are\n                  // buggy. Adapted from @Yaffle's `date-shim` project.\n                  date = floor(value / 864e5);\n                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n                  date = 1 + date - getDay(year, month);\n                  // The `time` value specifies the time within the day (see ES\n                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                  // to compute `A modulo B`, as the `%` operator does not\n                  // correspond to the `modulo` operation for negative numbers.\n                  time = (value % 864e5 + 864e5) % 864e5;\n                  // The hours, minutes, seconds, and milliseconds are obtained by\n                  // decomposing the time within the day. See section 15.9.1.10.\n                  hours = floor(time / 36e5) % 24;\n                  minutes = floor(time / 6e4) % 60;\n                  seconds = floor(time / 1e3) % 60;\n                  milliseconds = time % 1e3;\n                } else {\n                  year = value.getUTCFullYear();\n                  month = value.getUTCMonth();\n                  date = value.getUTCDate();\n                  hours = value.getUTCHours();\n                  minutes = value.getUTCMinutes();\n                  seconds = value.getUTCSeconds();\n                  milliseconds = value.getUTCMilliseconds();\n                }\n                // Serialize extended years correctly.\n                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n                  \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n                  // Months, dates, hours, minutes, and seconds should have two\n                  // digits; milliseconds should have three.\n                  \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n                  // Milliseconds are optional in ES 5.0, but required in 5.1.\n                  \".\" + toPaddedString(3, milliseconds) + \"Z\";\n              } else {\n                value = null;\n              }\n            } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n              // ignores all `toJSON` methods on these objects unless they are\n              // defined directly on an instance.\n              value = value.toJSON(property);\n            }\n          }\n          if (callback) {\n            // If a replacement function was provided, call it to obtain the value\n            // for serialization.\n            value = callback.call(object, property, value);\n          }\n          if (value === null) {\n            return \"null\";\n          }\n          className = getClass.call(value);\n          if (className == booleanClass) {\n            // Booleans are represented literally.\n            return \"\" + value;\n          } else if (className == numberClass) {\n            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n            // `\"null\"`.\n            return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n          } else if (className == stringClass) {\n            // Strings are double-quoted and escaped.\n            return quote(\"\" + value);\n          }\n          // Recursively serialize objects and arrays.\n          if (typeof value == \"object\") {\n            // Check for cyclic structures. This is a linear search; performance\n            // is inversely proportional to the number of unique nested objects.\n            for (length = stack.length; length--;) {\n              if (stack[length] === value) {\n                // Cyclic structures cannot be serialized by `JSON.stringify`.\n                throw TypeError();\n              }\n            }\n            // Add the object to the stack of traversed objects.\n            stack.push(value);\n            results = [];\n            // Save the current indentation level and indent one additional level.\n            prefix = indentation;\n            indentation += whitespace;\n            if (className == arrayClass) {\n              // Recursively serialize array elements.\n              for (index = 0, length = value.length; index < length; index++) {\n                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n                results.push(element === undef ? \"null\" : element);\n              }\n              result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n            } else {\n              // Recursively serialize object members. Members are selected from\n              // either a user-specified list of property names, or the object\n              // itself.\n              forEach(properties || value, function (property) {\n                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n                if (element !== undef) {\n                  // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                  // is not the empty string, let `member` {quote(property) + \":\"}\n                  // be the concatenation of `member` and the `space` character.\"\n                  // The \"`space` character\" refers to the literal space\n                  // character, not the `space` {width} argument provided to\n                  // `JSON.stringify`.\n                  results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n                }\n              });\n              result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n            }\n            // Remove the object from the traversed object stack.\n            stack.pop();\n            return result;\n          }\n        };\n\n        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n        exports.stringify = function (source, filter, width) {\n          var whitespace, callback, properties, className;\n          if (objectTypes[typeof filter] && filter) {\n            if ((className = getClass.call(filter)) == functionClass) {\n              callback = filter;\n            } else if (className == arrayClass) {\n              // Convert the property names array into a makeshift set.\n              properties = {};\n              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n            }\n          }\n          if (width) {\n            if ((className = getClass.call(width)) == numberClass) {\n              // Convert the `width` to an integer and create a string containing\n              // `width` number of space characters.\n              if ((width -= width % 1) > 0) {\n                for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n              }\n            } else if (className == stringClass) {\n              whitespace = width.length <= 10 ? width : width.slice(0, 10);\n            }\n          }\n          // Opera <= 7.54u2 discards the values associated with empty string keys\n          // (`\"\"`) only if they are used directly within an object member list\n          // (e.g., `!(\"\" in { \"\": 1})`).\n          return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n        };\n      }\n\n      // Public: Parses a JSON source string.\n      if (!has(\"json-parse\")) {\n        var fromCharCode = String.fromCharCode;\n\n        // Internal: A map of escaped control characters and their unescaped\n        // equivalents.\n        var Unescapes = {\n          92: \"\\\\\",\n          34: '\"',\n          47: \"/\",\n          98: \"\\b\",\n          116: \"\\t\",\n          110: \"\\n\",\n          102: \"\\f\",\n          114: \"\\r\"\n        };\n\n        // Internal: Stores the parser state.\n        var Index, Source;\n\n        // Internal: Resets the parser state and throws a `SyntaxError`.\n        var abort = function () {\n          Index = Source = null;\n          throw SyntaxError();\n        };\n\n        // Internal: Returns the next token, or `\"$\"` if the parser has reached\n        // the end of the source string. A token may be a string, number, `null`\n        // literal, or Boolean literal.\n        var lex = function () {\n          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n          while (Index < length) {\n            charCode = source.charCodeAt(Index);\n            switch (charCode) {\n              case 9: case 10: case 13: case 32:\n                // Skip whitespace tokens, including tabs, carriage returns, line\n                // feeds, and space characters.\n                Index++;\n                break;\n              case 123: case 125: case 91: case 93: case 58: case 44:\n                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n                // the current position.\n                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n                Index++;\n                return value;\n              case 34:\n                // `\"` delimits a JSON string; advance to the next character and\n                // begin parsing the string. String tokens are prefixed with the\n                // sentinel `@` character to distinguish them from punctuators and\n                // end-of-string tokens.\n                for (value = \"@\", Index++; Index < length;) {\n                  charCode = source.charCodeAt(Index);\n                  if (charCode < 32) {\n                    // Unescaped ASCII control characters (those with a code unit\n                    // less than the space character) are not permitted.\n                    abort();\n                  } else if (charCode == 92) {\n                    // A reverse solidus (`\\`) marks the beginning of an escaped\n                    // control character (including `\"`, `\\`, and `/`) or Unicode\n                    // escape sequence.\n                    charCode = source.charCodeAt(++Index);\n                    switch (charCode) {\n                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n                        // Revive escaped control characters.\n                        value += Unescapes[charCode];\n                        Index++;\n                        break;\n                      case 117:\n                        // `\\u` marks the beginning of a Unicode escape sequence.\n                        // Advance to the first character and validate the\n                        // four-digit code point.\n                        begin = ++Index;\n                        for (position = Index + 4; Index < position; Index++) {\n                          charCode = source.charCodeAt(Index);\n                          // A valid sequence comprises four hexdigits (case-\n                          // insensitive) that form a single hexadecimal value.\n                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                            // Invalid Unicode escape sequence.\n                            abort();\n                          }\n                        }\n                        // Revive the escaped character.\n                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                        break;\n                      default:\n                        // Invalid escape sequence.\n                        abort();\n                    }\n                  } else {\n                    if (charCode == 34) {\n                      // An unescaped double-quote character marks the end of the\n                      // string.\n                      break;\n                    }\n                    charCode = source.charCodeAt(Index);\n                    begin = Index;\n                    // Optimize for the common case where a string is valid.\n                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                      charCode = source.charCodeAt(++Index);\n                    }\n                    // Append the string as-is.\n                    value += source.slice(begin, Index);\n                  }\n                }\n                if (source.charCodeAt(Index) == 34) {\n                  // Advance to the next character and return the revived string.\n                  Index++;\n                  return value;\n                }\n                // Unterminated string.\n                abort();\n              default:\n                // Parse numbers and literals.\n                begin = Index;\n                // Advance past the negative sign, if one is specified.\n                if (charCode == 45) {\n                  isSigned = true;\n                  charCode = source.charCodeAt(++Index);\n                }\n                // Parse an integer or floating-point value.\n                if (charCode >= 48 && charCode <= 57) {\n                  // Leading zeroes are interpreted as octal literals.\n                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n                    // Illegal octal literal.\n                    abort();\n                  }\n                  isSigned = false;\n                  // Parse the integer component.\n                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n                  // Floats cannot contain a leading decimal point; however, this\n                  // case is already accounted for by the parser.\n                  if (source.charCodeAt(Index) == 46) {\n                    position = ++Index;\n                    // Parse the decimal component.\n                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal trailing decimal.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Parse exponents. The `e` denoting the exponent is\n                  // case-insensitive.\n                  charCode = source.charCodeAt(Index);\n                  if (charCode == 101 || charCode == 69) {\n                    charCode = source.charCodeAt(++Index);\n                    // Skip past the sign following the exponent, if one is\n                    // specified.\n                    if (charCode == 43 || charCode == 45) {\n                      Index++;\n                    }\n                    // Parse the exponential component.\n                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal empty exponent.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Coerce the parsed value to a JavaScript number.\n                  return +source.slice(begin, Index);\n                }\n                // A negative sign may only precede numbers.\n                if (isSigned) {\n                  abort();\n                }\n                // `true`, `false`, and `null` literals.\n                if (source.slice(Index, Index + 4) == \"true\") {\n                  Index += 4;\n                  return true;\n                } else if (source.slice(Index, Index + 5) == \"false\") {\n                  Index += 5;\n                  return false;\n                } else if (source.slice(Index, Index + 4) == \"null\") {\n                  Index += 4;\n                  return null;\n                }\n                // Unrecognized token.\n                abort();\n            }\n          }\n          // Return the sentinel `$` character if the parser has reached the end\n          // of the source string.\n          return \"$\";\n        };\n\n        // Internal: Parses a JSON `value` token.\n        var get = function (value) {\n          var results, hasMembers;\n          if (value == \"$\") {\n            // Unexpected end of input.\n            abort();\n          }\n          if (typeof value == \"string\") {\n            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n              // Remove the sentinel `@` character.\n              return value.slice(1);\n            }\n            // Parse object and array literals.\n            if (value == \"[\") {\n              // Parses a JSON array, returning a new JavaScript array.\n              results = [];\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing square bracket marks the end of the array literal.\n                if (value == \"]\") {\n                  break;\n                }\n                // If the array literal contains elements, the current token\n                // should be a comma separating the previous element from the\n                // next.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"]\") {\n                      // Unexpected trailing `,` in array literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each array element.\n                    abort();\n                  }\n                }\n                // Elisions and leading commas are not permitted.\n                if (value == \",\") {\n                  abort();\n                }\n                results.push(get(value));\n              }\n              return results;\n            } else if (value == \"{\") {\n              // Parses a JSON object, returning a new JavaScript object.\n              results = {};\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing curly brace marks the end of the object literal.\n                if (value == \"}\") {\n                  break;\n                }\n                // If the object literal contains members, the current token\n                // should be a comma separator.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"}\") {\n                      // Unexpected trailing `,` in object literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each object member.\n                    abort();\n                  }\n                }\n                // Leading commas are not permitted, object property names must be\n                // double-quoted strings, and a `:` must separate each property\n                // name and value.\n                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                  abort();\n                }\n                results[value.slice(1)] = get(lex());\n              }\n              return results;\n            }\n            // Unexpected token encountered.\n            abort();\n          }\n          return value;\n        };\n\n        // Internal: Updates a traversed object member.\n        var update = function (source, property, callback) {\n          var element = walk(source, property, callback);\n          if (element === undef) {\n            delete source[property];\n          } else {\n            source[property] = element;\n          }\n        };\n\n        // Internal: Recursively traverses a parsed JSON object, invoking the\n        // `callback` function for each value. This is an implementation of the\n        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n        var walk = function (source, property, callback) {\n          var value = source[property], length;\n          if (typeof value == \"object\" && value) {\n            // `forEach` can't be used to traverse an array in Opera <= 8.54\n            // because its `Object#hasOwnProperty` implementation returns `false`\n            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n            if (getClass.call(value) == arrayClass) {\n              for (length = value.length; length--;) {\n                update(value, length, callback);\n              }\n            } else {\n              forEach(value, function (property) {\n                update(value, property, callback);\n              });\n            }\n          }\n          return callback.call(source, property, value);\n        };\n\n        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n        exports.parse = function (source, callback) {\n          var result, value;\n          Index = 0;\n          Source = \"\" + source;\n          result = get(lex());\n          // If a JSON string contains multiple tokens, it is invalid.\n          if (lex() != \"$\") {\n            abort();\n          }\n          // Reset the parser state.\n          Index = Source = null;\n          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n        };\n      }\n    }\n\n    exports[\"runInContext\"] = runInContext;\n    return exports;\n  }\n\n  if (freeExports && !isLoader) {\n    // Export for CommonJS environments.\n    runInContext(root, freeExports);\n  } else {\n    // Export for web browsers and JavaScript engines.\n    var nativeJSON = root.JSON,\n        previousJSON = root[\"JSON3\"],\n        isRestored = false;\n\n    var JSON3 = runInContext(root, (root[\"JSON3\"] = {\n      // Public: Restores the original value of the global `JSON` object and\n      // returns a reference to the `JSON3` object.\n      \"noConflict\": function () {\n        if (!isRestored) {\n          isRestored = true;\n          root.JSON = nativeJSON;\n          root[\"JSON3\"] = previousJSON;\n          nativeJSON = previousJSON = null;\n        }\n        return JSON3;\n      }\n    }));\n\n    root.JSON = {\n      \"parse\": JSON3.parse,\n      \"stringify\": JSON3.stringify\n    };\n  }\n\n  // Export for asynchronous module loaders.\n  if (isLoader) {\n    define(function () {\n      return JSON3;\n    });\n  }\n}).call(this);\n\n//##############################################################################\n// Elements.js\n//##############################################################################\n\n(function () {\n\n\t/**\n\t * Convenience methods for creating various elements used by PrelaodJS.\n\t *\n\t * @class DomUtils\n\t */\n\tvar s = {};\n\n\ts.a = function() {\n\t\treturn s.el(\"a\");\n\t}\n\n\ts.svg = function() {\n\t\treturn s.el(\"svg\");\n\t}\n\n\ts.object = function() {\n\t\treturn s.el(\"object\");\n\t}\n\n\ts.image = function() {\n\t\treturn s.el(\"image\");\n\t}\n\n\ts.img = function() {\n\t\treturn s.el(\"img\");\n\t}\n\n\ts.style = function() {\n\t\treturn s.el(\"style\");\n\t}\n\n\ts.link = function() {\n\t\treturn s.el(\"link\");\n\t}\n\n\ts.script = function() {\n\t\treturn s.el(\"script\");\n\t}\n\n\ts.audio = function() {\n\t\treturn s.el(\"audio\");\n\t}\n\n\ts.video = function() {\n\t\treturn s.el(\"video\");\n\t}\n\n\ts.text = function(value) {\n\t\treturn document.createTextNode(value);\n\t}\n\n\ts.el = function(name) {\n\t\treturn document.createElement(name);\n\t}\n\n\tcreatejs.Elements = s;\n\n}());\n\n//##############################################################################\n// URLUtils.js\n//##############################################################################\n\n(function () {\n\n\t/**\n\t * Utilities that assist with parsing load items, and determining file types, etc.\n\t * @class URLUtils\n\t */\n\tvar s = {};\n\n\t/**\n\t * The Regular Expression used to test file URLS for an absolute path.\n\t * @property ABSOLUTE_PATH\n\t * @type {RegExp}\n\t * @static\n\t */\n\ts.ABSOLUTE_PATT = /^(?:\\w+:)?\\/{2}/i;\n\n\t/**\n\t * The Regular Expression used to test file URLS for a relative path.\n\t * @property RELATIVE_PATH\n\t * @type {RegExp}\n\t * @static\n\t */\n\ts.RELATIVE_PATT = (/^[./]*?\\//i);\n\n\t/**\n\t * The Regular Expression used to test file URLS for an extension. Note that URIs must already have the query string\n\t * removed.\n\t * @property EXTENSION_PATT\n\t * @type {RegExp}\n\t * @static\n\t */\n\ts.EXTENSION_PATT = /\\/?[^/]+\\.(\\w{1,5})$/i;\n\n\t/**\n\t * Parse a file path to determine the information we need to work with it. Currently, PreloadJS needs to know:\n\t * <ul>\n\t *     <li>If the path is absolute. Absolute paths start with a protocol (such as `http://`, `file://`, or\n\t *     `//networkPath`)</li>\n\t *     <li>If the path is relative. Relative paths start with `../` or `/path` (or similar)</li>\n\t *     <li>The file extension. This is determined by the filename with an extension. Query strings are dropped, and\n\t *     the file path is expected to follow the format `name.ext`.</li>\n\t * </ul>\n\t *\n\t * @method parseURI\n\t * @param {String} path\n\t * @returns {Object} An Object with an `absolute` and `relative` Boolean values,\n\t * \tthe pieces of the path (protocol, hostname, port, pathname, search, hash, host)\n\t * \tas well as an optional 'extension` property, which is the lowercase extension.\n\t *\n\t * @static\n\t */\n\ts.parseURI = function (path) {\n\t\tvar info = {\n\t\t\tabsolute: false,\n\t\t\trelative: false,\n\t\t\tprotocol: null,\n\t\t\thostname: null,\n\t\t\tport: null,\n\t\t\tpathname: null,\n\t\t\tsearch: null,\n\t\t\thash: null,\n\t\t\thost: null\n\t\t};\n\n\t\tif (path == null) { return info; }\n\n\t\t// Inject the path parts.\n\t\tvar parser = createjs.Elements.a();\n\t\tparser.href = path;\n\n\t\tfor (var n in info) {\n\t\t\tif (n in parser) {\n\t\t\t\tinfo[n] = parser[n];\n\t\t\t}\n\t\t}\n\n\t\t// Drop the query string\n\t\tvar queryIndex = path.indexOf(\"?\");\n\t\tif (queryIndex > -1) {\n\t\t\tpath = path.substr(0, queryIndex);\n\t\t}\n\n\t\t// Absolute\n\t\tvar match;\n\t\tif (s.ABSOLUTE_PATT.test(path)) {\n\t\t\tinfo.absolute = true;\n\n\t\t\t// Relative\n\t\t} else if (s.RELATIVE_PATT.test(path)) {\n\t\t\tinfo.relative = true;\n\t\t}\n\n\t\t// Extension\n\t\tif (match = path.match(s.EXTENSION_PATT)) {\n\t\t\tinfo.extension = match[1].toLowerCase();\n\t\t}\n\n\t\treturn info;\n\t};\n\n\t/**\n\t * Formats an object into a query string for either a POST or GET request.\n\t * @method formatQueryString\n\t * @param {Object} data The data to convert to a query string.\n\t * @param {Array} [query] Existing name/value pairs to append on to this query.\n\t * @static\n\t */\n\ts.formatQueryString = function (data, query) {\n\t\tif (data == null) {\n\t\t\tthrow new Error(\"You must specify data.\");\n\t\t}\n\t\tvar params = [];\n\t\tfor (var n in data) {\n\t\t\tparams.push(n + \"=\" + escape(data[n]));\n\t\t}\n\t\tif (query) {\n\t\t\tparams = params.concat(query);\n\t\t}\n\t\treturn params.join(\"&\");\n\t};\n\n\t/**\n\t * A utility method that builds a file path using a source and a data object, and formats it into a new path.\n\t * @method buildURI\n\t * @param {String} src The source path to add values to.\n\t * @param {Object} [data] Object used to append values to this request as a query string. Existing parameters on the\n\t * path will be preserved.\n\t * @returns {string} A formatted string that contains the path and the supplied parameters.\n\t * @static\n\t */\n\ts.buildURI = function (src, data) {\n\t\tif (data == null) {\n\t\t\treturn src;\n\t\t}\n\n\t\tvar query = [];\n\t\tvar idx = src.indexOf(\"?\");\n\n\t\tif (idx != -1) {\n\t\t\tvar q = src.slice(idx + 1);\n\t\t\tquery = query.concat(q.split(\"&\"));\n\t\t}\n\n\t\tif (idx != -1) {\n\t\t\treturn src.slice(0, idx) + \"?\" + this.formatQueryString(data, query);\n\t\t} else {\n\t\t\treturn src + \"?\" + this.formatQueryString(data, query);\n\t\t}\n\t};\n\n\t/**\n\t * @method isCrossDomain\n\t * @param {LoadItem|Object} item A load item with a `src` property.\n\t * @return {Boolean} If the load item is loading from a different domain than the current location.\n\t * @static\n\t */\n\ts.isCrossDomain = function (item) {\n\t\tvar target = createjs.Elements.a();\n\t\ttarget.href = item.src;\n\n\t\tvar host = createjs.Elements.a();\n\t\thost.href = location.href;\n\n\t\tvar crossdomain = (target.hostname != \"\") &&\n\t\t\t(target.port != host.port ||\n\t\t\ttarget.protocol != host.protocol ||\n\t\t\ttarget.hostname != host.hostname);\n\t\treturn crossdomain;\n\t};\n\n\t/**\n\t * @method isLocal\n\t * @param {LoadItem|Object} item A load item with a `src` property\n\t * @return {Boolean} If the load item is loading from the \"file:\" protocol. Assume that the host must be local as\n\t * well.\n\t * @static\n\t */\n\ts.isLocal = function (item) {\n\t\tvar target = createjs.Elements.a();\n\t\ttarget.href = item.src;\n\t\treturn target.hostname == \"\" && target.protocol == \"file:\";\n\t};\n\n\tcreatejs.URLUtils = s;\n\n}());\n\n//##############################################################################\n// DomUtils.js\n//##############################################################################\n\n(function () {\n\n\t/**\n\t * A few utilities for interacting with the dom.\n\t * @class DomUtils\n\t */\n\tvar s = {};\n\n\ts.appendToHead = function (el) {\n\t\ts.getHead().appendChild(el)\n\t}\n\n\ts.appendToBody = function (el) {\n\t\ts.getBody().appendChild(el)\n\t}\n\n\ts.getHead = function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}\n\n\ts.getBody = function () {\n\t\treturn document.body || document.getElementsByTagName(\"body\")[0];\n\t}\n\n\ts.removeChild = function(el) {\n\t\tif (el.parent) {\n\t\t\tel.parent.removeChild(el);\n\t\t}\n\t}\n\n\t/**\n\t * Check if item is a valid HTMLImageElement\n\t * @method isImageTag\n\t * @param {Object} item\n\t * @returns {Boolean}\n\t * @static\n\t */\n\ts.isImageTag = function(item) {\n\t\treturn item instanceof HTMLImageElement;\n\t};\n\n\t/**\n\t * Check if item is a valid HTMLAudioElement\n\t * @method isAudioTag\n\t * @param {Object} item\n\t * @returns {Boolean}\n\t * @static\n\t */\n\ts.isAudioTag = function(item) {\n\t\tif (window.HTMLAudioElement) {\n\t\t\treturn item instanceof HTMLAudioElement;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\t/**\n\t * Check if item is a valid HTMLVideoElement\n\t * @method isVideoTag\n\t * @param {Object} item\n\t * @returns {Boolean}\n\t * @static\n\t */\n\ts.isVideoTag = function(item) {\n\t\tif (window.HTMLVideoElement) {\n\t\t\treturn item instanceof HTMLVideoElement;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tcreatejs.DomUtils = s;\n\n}());\n\n//##############################################################################\n// DataUtils.js\n//##############################################################################\n\n(function () {\n\n\t/**\n\t * A few data utilities for formatting different data types.\n\t * @class DataUtils\n\t */\n\tvar s = {};\n\n\t// static methods\n\t/**\n\t * Parse XML using the DOM. This is required when preloading XML or SVG.\n\t * @method parseXML\n\t * @param {String} text The raw text or XML that is loaded by XHR.\n\t * @return {XML} An XML document\n\t * @static\n\t */\n\ts.parseXML = function (text) {\n\t\tvar xml = null;\n\t\t// CocoonJS does not support XML parsing with either method.\n\n\t\t// Most browsers will use DOMParser\n\t\t// IE fails on certain SVG files, so we have a fallback below.\n\t\ttry {\n\t\t\tif (window.DOMParser) {\n\t\t\t\tvar parser = new DOMParser();\n\t\t\t\txml = parser.parseFromString(text, \"text/xml\");\n\t\t\t}\n\t\t} catch (e) {\n\t\t}\n\n\t\t// Fallback for IE support.\n\t\tif (!xml) {\n\t\t\ttry {\n\t\t\t\txml = new ActiveXObject(\"Microsoft.XMLDOM\");\n\t\t\t\txml.async = false;\n\t\t\t\txml.loadXML(text);\n\t\t\t} catch (e) {\n\t\t\t\txml = null;\n\t\t\t}\n\t\t}\n\n\t\treturn xml;\n\t};\n\n\t/**\n\t * Parse a string into an Object.\n\t * @method parseJSON\n\t * @param {String} value The loaded JSON string\n\t * @returns {Object} A JavaScript object.\n\t */\n\ts.parseJSON = function (value) {\n\t\tif (value == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\ttry {\n\t\t\treturn JSON.parse(value);\n\t\t} catch (e) {\n\t\t\t// TODO; Handle this with a custom error?\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\tcreatejs.DataUtils = s;\n\n}());\n\n//##############################################################################\n// Types.js\n//##############################################################################\n\n(function() {\n\tvar s = {};\n\n\t/**\n\t * The preload type for generic binary types. Note that images are loaded as binary files when using XHR.\n\t * @property BINARY\n\t * @type {String}\n\t * @default binary\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.BINARY = \"binary\";\n\n\t/**\n\t * The preload type for css files. CSS files are loaded using a &lt;link&gt; when loaded with XHR, or a\n\t * &lt;style&gt; tag when loaded with tags.\n\t * @property CSS\n\t * @type {String}\n\t * @default css\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.CSS = \"css\";\n\n\t/**\n\t * The preload type for image files, usually png, gif, or jpg/jpeg. Images are loaded into an &lt;image&gt; tag.\n\t * @property IMAGE\n\t * @type {String}\n\t * @default image\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.IMAGE = \"image\";\n\n\t/**\n\t * The preload type for javascript files, usually with the \"js\" file extension. JavaScript files are loaded into a\n\t * &lt;script&gt; tag.\n\t *\n\t * Since version 0.4.1+, due to how tag-loaded scripts work, all JavaScript files are automatically injected into\n\t * the body of the document to maintain parity between XHR and tag-loaded scripts. In version 0.4.0 and earlier,\n\t * only tag-loaded scripts are injected.\n\t * @property JAVASCRIPT\n\t * @type {String}\n\t * @default javascript\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.JAVASCRIPT = \"javascript\";\n\n\t/**\n\t * The preload type for json files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\n\t * JavaScript object. Note that if a `callback` is present on the load item, the file will be loaded with JSONP,\n\t * no matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to, and the JSON\n\t * must contain a matching wrapper function.\n\t * @property JSON\n\t * @type {String}\n\t * @default json\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.JSON = \"json\";\n\n\t/**\n\t * The preload type for jsonp files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\n\t * JavaScript object. You are required to pass a callback parameter that matches the function wrapper in the JSON.\n\t * Note that JSONP will always be used if there is a callback present, no matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}}\n\t * property is set to.\n\t * @property JSONP\n\t * @type {String}\n\t * @default jsonp\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.JSONP = \"jsonp\";\n\n\t/**\n\t * The preload type for json-based manifest files, usually with the \"json\" file extension. The JSON data is loaded\n\t * and parsed into a JavaScript object. PreloadJS will then look for a \"manifest\" property in the JSON, which is an\n\t * Array of files to load, following the same format as the {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\n\t * method. If a \"callback\" is specified on the manifest object, then it will be loaded using JSONP instead,\n\t * regardless of what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to.\n\t * @property MANIFEST\n\t * @type {String}\n\t * @default manifest\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.MANIFEST = \"manifest\";\n\n\t/**\n\t * The preload type for sound files, usually mp3, ogg, or wav. When loading via tags, audio is loaded into an\n\t * &lt;audio&gt; tag.\n\t * @property SOUND\n\t * @type {String}\n\t * @default sound\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.SOUND = \"sound\";\n\n\t/**\n\t * The preload type for video files, usually mp4, ts, or ogg. When loading via tags, video is loaded into an\n\t * &lt;video&gt; tag.\n\t * @property VIDEO\n\t * @type {String}\n\t * @default video\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.VIDEO = \"video\";\n\n\t/**\n\t * The preload type for SpriteSheet files. SpriteSheet files are JSON files that contain string image paths.\n\t * @property SPRITESHEET\n\t * @type {String}\n\t * @default spritesheet\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.SPRITESHEET = \"spritesheet\";\n\n\t/**\n\t * The preload type for SVG files.\n\t * @property SVG\n\t * @type {String}\n\t * @default svg\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.SVG = \"svg\";\n\n\t/**\n\t * The preload type for text files, which is also the default file type if the type can not be determined. Text is\n\t * loaded as raw text.\n\t * @property TEXT\n\t * @type {String}\n\t * @default text\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.TEXT = \"text\";\n\n\t/**\n\t * The preload type for xml files. XML is loaded into an XML document.\n\t * @property XML\n\t * @type {String}\n\t * @default xml\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.XML = \"xml\";\n\n\tcreatejs.Types = s;\n}());\n\n//##############################################################################\n// Methods.js\n//##############################################################################\n\n(function() {\n\tvar s = {};\n\n\t/**\n\t * Defines a POST request, use for a method value when loading data.\n\t * @property POST\n\t * @type {string}\n\t * @default post\n\t * @static\n\t */\n\ts.POST = \"POST\";\n\n\t/**\n\t * Defines a GET request, use for a method value when loading data.\n\t * @property GET\n\t * @type {string}\n\t * @default get\n\t * @static\n\t */\n\ts.GET = \"GET\";\n\n\tcreatejs.Methods = s;\n}());\n\n//##############################################################################\n// LoadItem.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\t/**\n\t * All loaders accept an item containing the properties defined in this class. If a raw object is passed instead,\n\t * it will not be affected, but it must contain at least a {{#crossLink \"src:property\"}}{{/crossLink}} property. A\n\t * string path or HTML tag is also acceptable, but it will be automatically converted to a LoadItem using the\n\t * {{#crossLink \"create\"}}{{/crossLink}} method by {{#crossLink \"AbstractLoader\"}}{{/crossLink}}\n\t * @class LoadItem\n\t * @constructor\n\t * @since 0.6.0\n\t */\n\tfunction LoadItem() {\n\t\t/**\n\t\t * The source of the file that is being loaded. This property is <b>required</b>. The source can either be a\n\t\t * string (recommended), or an HTML tag.\n\t\t * This can also be an object, but in that case it has to include a type and be handled by a plugin.\n\t\t * @property src\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.src = null;\n\n\t\t/**\n\t\t * The type file that is being loaded. The type of the file is usually inferred by the extension, but can also\n\t\t * be set manually. This is helpful in cases where a file does not have an extension.\n\t\t * @property type\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.type = null;\n\n\t\t/**\n\t\t * A string identifier which can be used to reference the loaded object. If none is provided, this will be\n\t\t * automatically set to the {{#crossLink \"src:property\"}}{{/crossLink}}.\n\t\t * @property id\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.id = null;\n\n\t\t/**\n\t\t * Determines if a manifest will maintain the order of this item, in relation to other items in the manifest\n\t\t * that have also set the `maintainOrder` property to `true`. This only applies when the max connections has\n\t\t * been set above 1 (using {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}}). Everything with this\n\t\t * property set to `false` will finish as it is loaded. Ordered items are combined with script tags loading in\n\t\t * order when {{#crossLink \"LoadQueue/maintainScriptOrder:property\"}}{{/crossLink}} is set to `true`.\n\t\t * @property maintainOrder\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.maintainOrder = false;\n\n\t\t/**\n\t\t * A callback used by JSONP requests that defines what global method to call when the JSONP content is loaded.\n\t\t * @property callback\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.callback = null;\n\n\t\t/**\n\t\t * An arbitrary data object, which is included with the loaded object.\n\t\t * @property data\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis.data = null;\n\n\t\t/**\n\t\t * The request method used for HTTP calls. Both {{#crossLink \"AbstractLoader/GET:property\"}}{{/crossLink}} or\n\t\t * {{#crossLink \"AbstractLoader/POST:property\"}}{{/crossLink}} request types are supported, and are defined as\n\t\t * constants on {{#crossLink \"AbstractLoader\"}}{{/crossLink}}.\n\t\t * @property method\n\t\t * @type {String}\n\t\t * @default GET\n\t\t */\n\t\tthis.method = createjs.LoadItem.GET;\n\n\t\t/**\n\t\t * An object hash of name/value pairs to send to the server.\n\t\t * @property values\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis.values = null;\n\n\t\t/**\n\t\t * An object hash of headers to attach to an XHR request. PreloadJS will automatically attach some default\n\t\t * headers when required, including \"Origin\", \"Content-Type\", and \"X-Requested-With\". You may override the\n\t\t * default headers by including them in your headers object.\n\t\t * @property headers\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis.headers = null;\n\n\t\t/**\n\t\t * Enable credentials for XHR requests.\n\t\t * @property withCredentials\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.withCredentials = false;\n\n\t\t/**\n\t\t * Set the mime type of XHR-based requests. This is automatically set to \"text/plain; charset=utf-8\" for text\n\t\t * based files (json, xml, text, css, js).\n\t\t * @property mimeType\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.mimeType = null;\n\n\t\t/**\n\t\t * Sets the crossOrigin attribute for CORS-enabled images loading cross-domain.\n\t\t * @property crossOrigin\n\t\t * @type {boolean}\n\t\t * @default Anonymous\n\t\t */\n\t\tthis.crossOrigin = null;\n\n\t\t/**\n\t\t * The duration in milliseconds to wait before a request times out. This only applies to tag-based and and XHR\n\t\t * (level one) loading, as XHR (level 2) provides its own timeout event.\n\t\t * @property loadTimeout\n\t\t * @type {Number}\n\t\t * @default 8000 (8 seconds)\n\t\t */\n\t\tthis.loadTimeout = s.LOAD_TIMEOUT_DEFAULT;\n\t};\n\n\tvar p = LoadItem.prototype = {};\n\tvar s = LoadItem;\n\n\t/**\n\t * Default duration in milliseconds to wait before a request times out. This only applies to tag-based and and XHR\n\t * (level one) loading, as XHR (level 2) provides its own timeout event.\n\t * @property LOAD_TIMEOUT_DEFAULT\n\t * @type {number}\n\t * @static\n\t */\n\ts.LOAD_TIMEOUT_DEFAULT = 8000;\n\n\t/**\n\t * Create a LoadItem.\n\t * <ul>\n\t *     <li>String-based items are converted to a LoadItem with a populated {{#crossLink \"src:property\"}}{{/crossLink}}.</li>\n\t *     <li>LoadItem instances are returned as-is</li>\n\t *     <li>Objects are returned with any needed properties added</li>\n\t * </ul>\n\t * @method create\n\t * @param {LoadItem|String|Object} value The load item value\n\t * @returns {LoadItem|Object}\n\t * @static\n\t */\n\ts.create = function (value) {\n\t\tif (typeof value == \"string\") {\n\t\t\tvar item = new LoadItem();\n\t\t\titem.src = value;\n\t\t\treturn item;\n\t\t} else if (value instanceof s) {\n\t\t\treturn value;\n\t\t} else if (value instanceof Object && value.src) {\n\t\t\tif (value.loadTimeout == null) {\n\t\t\t\tvalue.loadTimeout = s.LOAD_TIMEOUT_DEFAULT;\n\t\t\t}\n\t\t\treturn value;\n\t\t} else {\n\t\t\tthrow new Error(\"Type not recognized.\");\n\t\t}\n\t};\n\n\t/**\n\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var loadItem = new createjs.LoadItem().set({src:\"image.png\", maintainOrder:true});\n\t *\n\t * @method set\n\t * @param {Object} props A generic object containing properties to copy to the LoadItem instance.\n\t * @return {LoadItem} Returns the instance the method is called on (useful for chaining calls.)\n\t*/\n\tp.set = function(props) {\n\t\tfor (var n in props) { this[n] = props[n]; }\n\t\treturn this;\n\t};\n\n\tcreatejs.LoadItem = s;\n\n}());\n\n//##############################################################################\n// RequestUtils.js\n//##############################################################################\n\n(function () {\n\n\t/**\n\t * Utilities that assist with parsing load items, and determining file types, etc.\n\t * @class RequestUtils\n\t */\n\tvar s = {};\n\n\t/**\n\t * Determine if a specific type should be loaded as a binary file. Currently, only images and items marked\n\t * specifically as \"binary\" are loaded as binary. Note that audio is <b>not</b> a binary type, as we can not play\n\t * back using an audio tag if it is loaded as binary. Plugins can change the item type to binary to ensure they get\n\t * a binary result to work with. Binary files are loaded using XHR2. Types are defined as static constants on\n\t * {{#crossLink \"AbstractLoader\"}}{{/crossLink}}.\n\t * @method isBinary\n\t * @param {String} type The item type.\n\t * @return {Boolean} If the specified type is binary.\n\t * @static\n\t */\n\ts.isBinary = function (type) {\n\t\tswitch (type) {\n\t\t\tcase createjs.AbstractLoader.IMAGE:\n\t\t\tcase createjs.AbstractLoader.BINARY:\n\t\t\t\treturn true;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t};\n\n\t/**\n\t * Determine if a specific type is a text-based asset, and should be loaded as UTF-8.\n\t * @method isText\n\t * @param {String} type The item type.\n\t * @return {Boolean} If the specified type is text.\n\t * @static\n\t */\n\ts.isText = function (type) {\n\t\tswitch (type) {\n\t\t\tcase createjs.AbstractLoader.TEXT:\n\t\t\tcase createjs.AbstractLoader.JSON:\n\t\t\tcase createjs.AbstractLoader.MANIFEST:\n\t\t\tcase createjs.AbstractLoader.XML:\n\t\t\tcase createjs.AbstractLoader.CSS:\n\t\t\tcase createjs.AbstractLoader.SVG:\n\t\t\tcase createjs.AbstractLoader.JAVASCRIPT:\n\t\t\tcase createjs.AbstractLoader.SPRITESHEET:\n\t\t\t\treturn true;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t};\n\n\t/**\n\t * Determine the type of the object using common extensions. Note that the type can be passed in with the load item\n\t * if it is an unusual extension.\n\t * @method getTypeByExtension\n\t * @param {String} extension The file extension to use to determine the load type.\n\t * @return {String} The determined load type (for example, <code>AbstractLoader.IMAGE</code>). Will return `null` if\n\t * the type can not be determined by the extension.\n\t * @static\n\t */\n\ts.getTypeByExtension = function (extension) {\n\t\tif (extension == null) {\n\t\t\treturn createjs.AbstractLoader.TEXT;\n\t\t}\n\n\t\tswitch (extension.toLowerCase()) {\n\t\t\tcase \"jpeg\":\n\t\t\tcase \"jpg\":\n\t\t\tcase \"gif\":\n\t\t\tcase \"png\":\n\t\t\tcase \"webp\":\n\t\t\tcase \"bmp\":\n\t\t\t\treturn createjs.AbstractLoader.IMAGE;\n\t\t\tcase \"ogg\":\n\t\t\tcase \"mp3\":\n\t\t\tcase \"webm\":\n\t\t\t\treturn createjs.AbstractLoader.SOUND;\n\t\t\tcase \"mp4\":\n\t\t\tcase \"webm\":\n\t\t\tcase \"ts\":\n\t\t\t\treturn createjs.AbstractLoader.VIDEO;\n\t\t\tcase \"json\":\n\t\t\t\treturn createjs.AbstractLoader.JSON;\n\t\t\tcase \"xml\":\n\t\t\t\treturn createjs.AbstractLoader.XML;\n\t\t\tcase \"css\":\n\t\t\t\treturn createjs.AbstractLoader.CSS;\n\t\t\tcase \"js\":\n\t\t\t\treturn createjs.AbstractLoader.JAVASCRIPT;\n\t\t\tcase 'svg':\n\t\t\t\treturn createjs.AbstractLoader.SVG;\n\t\t\tdefault:\n\t\t\t\treturn createjs.AbstractLoader.TEXT;\n\t\t}\n\t};\n\n\tcreatejs.RequestUtils = s;\n\n}());\n\n//##############################################################################\n// AbstractLoader.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n// constructor\n\t/**\n\t * The base loader, which defines all the generic methods, properties, and events. All loaders extend this class,\n\t * including the {{#crossLink \"LoadQueue\"}}{{/crossLink}}.\n\t * @class AbstractLoader\n\t * @param {LoadItem|object|string} loadItem The item to be loaded.\n\t * @param {Boolean} [preferXHR] Determines if the LoadItem should <em>try</em> and load using XHR, or take a\n\t * tag-based approach, which can be better in cross-domain situations. Not all loaders can load using one or the\n\t * other, so this is a suggested directive.\n\t * @param {String} [type] The type of loader. Loader types are defined as constants on the AbstractLoader class,\n\t * such as {{#crossLink \"IMAGE:property\"}}{{/crossLink}}, {{#crossLink \"CSS:property\"}}{{/crossLink}}, etc.\n\t * @extends EventDispatcher\n\t */\n\tfunction AbstractLoader(loadItem, preferXHR, type) {\n\t\tthis.EventDispatcher_constructor();\n\n\t\t// public properties\n\t\t/**\n\t\t * If the loader has completed loading. This provides a quick check, but also ensures that the different approaches\n\t\t * used for loading do not pile up resulting in more than one `complete` {{#crossLink \"Event\"}}{{/crossLink}}.\n\t\t * @property loaded\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.loaded = false;\n\n\t\t/**\n\t\t * Determine if the loader was canceled. Canceled loads will not fire complete events. Note that this property\n\t\t * is readonly, so {{#crossLink \"LoadQueue\"}}{{/crossLink}} queues should be closed using {{#crossLink \"LoadQueue/close\"}}{{/crossLink}}\n\t\t * instead.\n\t\t * @property canceled\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.canceled = false;\n\n\t\t/**\n\t\t * The current load progress (percentage) for this item. This will be a number between 0 and 1.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *     var queue = new createjs.LoadQueue();\n\t\t *     queue.loadFile(\"largeImage.png\");\n\t\t *     queue.on(\"progress\", function() {\n\t\t *         console.log(\"Progress:\", queue.progress, event.progress);\n\t\t *     });\n\t\t *\n\t\t * @property progress\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.progress = 0;\n\n\t\t/**\n\t\t * The type of item this loader will load. See {{#crossLink \"AbstractLoader\"}}{{/crossLink}} for a full list of\n\t\t * supported types.\n\t\t * @property type\n\t\t * @type {String}\n\t\t */\n\t\tthis.type = type;\n\n\t\t/**\n\t\t * A formatter function that converts the loaded raw result into the final result. For example, the JSONLoader\n\t\t * converts a string of text into a JavaScript object. Not all loaders have a resultFormatter, and this property\n\t\t * can be overridden to provide custom formatting.\n\t\t *\n\t\t * Optionally, a resultFormatter can return a callback function in cases where the formatting needs to be\n\t\t * asynchronous, such as creating a new image. The callback function is passed 2 parameters, which are callbacks\n\t\t * to handle success and error conditions in the resultFormatter. Note that the resultFormatter method is\n\t\t * called in the current scope, as well as the success and error callbacks.\n\t\t *\n\t\t * <h4>Example asynchronous resultFormatter</h4>\n\t\t *\n\t\t * \tfunction _formatResult(loader) {\n\t\t * \t\treturn function(success, error) {\n\t\t * \t\t\tif (errorCondition) { error(errorDetailEvent); }\n\t\t * \t\t\tsuccess(result);\n\t\t * \t\t}\n\t\t * \t}\n\t\t * @property resultFormatter\n\t\t * @type {Function}\n\t\t * @default null\n\t\t */\n\t\tthis.resultFormatter = null;\n\n\t\t// protected properties\n\t\t/**\n\t\t * The {{#crossLink \"LoadItem\"}}{{/crossLink}} this loader represents. Note that this is null in a {{#crossLink \"LoadQueue\"}}{{/crossLink}},\n\t\t * but will be available on loaders such as {{#crossLink \"XMLLoader\"}}{{/crossLink}} and {{#crossLink \"ImageLoader\"}}{{/crossLink}}.\n\t\t * @property _item\n\t\t * @type {LoadItem|Object}\n\t\t * @private\n\t\t */\n\t\tif (loadItem) {\n\t\t\tthis._item = createjs.LoadItem.create(loadItem);\n\t\t} else {\n\t\t\tthis._item = null;\n\t\t}\n\n\t\t/**\n\t\t * Whether the loader will try and load content using XHR (true) or HTML tags (false).\n\t\t * @property _preferXHR\n\t\t * @type {Boolean}\n\t\t * @private\n\t\t */\n\t\tthis._preferXHR = preferXHR;\n\n\t\t/**\n\t\t * The loaded result after it is formatted by an optional {{#crossLink \"resultFormatter\"}}{{/crossLink}}. For\n\t\t * items that are not formatted, this will be the same as the {{#crossLink \"_rawResult:property\"}}{{/crossLink}}.\n\t\t * The result is accessed using the {{#crossLink \"getResult\"}}{{/crossLink}} method.\n\t\t * @property _result\n\t\t * @type {Object|String}\n\t\t * @private\n\t\t */\n\t\tthis._result = null;\n\n\t\t/**\n\t\t * The loaded result before it is formatted. The rawResult is accessed using the {{#crossLink \"getResult\"}}{{/crossLink}}\n\t\t * method, and passing `true`.\n\t\t * @property _rawResult\n\t\t * @type {Object|String}\n\t\t * @private\n\t\t */\n\t\tthis._rawResult = null;\n\n\t\t/**\n\t\t * A list of items that loaders load behind the scenes. This does not include the main item the loader is\n\t\t * responsible for loading. Examples of loaders that have sub-items include the {{#crossLink \"SpriteSheetLoader\"}}{{/crossLink}} and\n\t\t * {{#crossLink \"ManifestLoader\"}}{{/crossLink}}.\n\t\t * @property _loadItems\n\t\t * @type {null}\n\t\t * @protected\n\t\t */\n\t\tthis._loadedItems = null;\n\n\t\t/**\n\t\t * The attribute the items loaded using tags use for the source.\n\t\t * @type {string}\n\t\t * @default null\n\t\t * @private\n\t\t */\n\t\tthis._tagSrcAttribute = null;\n\n\t\t/**\n\t\t * An HTML tag (or similar) that a loader may use to load HTML content, such as images, scripts, etc.\n\t\t * @property _tag\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._tag = null;\n\t};\n\n\tvar p = createjs.extend(AbstractLoader, createjs.EventDispatcher);\n\tvar s = AbstractLoader;\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n\t/**\n\t * Defines a POST request, use for a method value when loading data.\n\t * @property POST\n\t * @type {string}\n\t * @default post\n\t * @deprecated Use Methods.POST instead\n\t * @static\n\t */\n\ts.POST = createjs.Methods.POST;\n\n\t/**\n\t * Defines a GET request, use for a method value when loading data.\n\t * @property GET\n\t * @type {string}\n\t * @default get\n\t * @deprecated Use Methods.GET instead\n\t * @static\n\t */\n\ts.GET = createjs.Methods.GET;\n\n\t/**\n\t * The preload type for generic binary types. Note that images are loaded as binary files when using XHR.\n\t * @property BINARY\n\t * @type {String}\n\t * @default binary\n\t * @static\n\t * @deprecated Use createjs.Types.BINARY instead\n\t * @since 0.6.0\n\t */\n\ts.BINARY = createjs.Types.BINARY;\n\n\t/**\n\t * The preload type for css files. CSS files are loaded using a &lt;link&gt; when loaded with XHR, or a\n\t * &lt;style&gt; tag when loaded with tags.\n\t * @property CSS\n\t * @type {String}\n\t * @default css\n\t * @static\n\t * @deprecated Use createjs.Types.CSS instead\n\t * @since 0.6.0\n\t */\n\ts.CSS = createjs.Types.CSS;\n\n\t/**\n\t * The preload type for image files, usually png, gif, or jpg/jpeg. Images are loaded into an &lt;image&gt; tag.\n\t * @property IMAGE\n\t * @type {String}\n\t * @default image\n\t * @static\n\t * @deprecated Use createjs.Types.IMAGE instead\n\t * @since 0.6.0\n\t */\n\ts.IMAGE = createjs.Types.IMAGE;\n\n\t/**\n\t * The preload type for javascript files, usually with the \"js\" file extension. JavaScript files are loaded into a\n\t * &lt;script&gt; tag.\n\t *\n\t * Since version 0.4.1+, due to how tag-loaded scripts work, all JavaScript files are automatically injected into\n\t * the body of the document to maintain parity between XHR and tag-loaded scripts. In version 0.4.0 and earlier,\n\t * only tag-loaded scripts are injected.\n\t * @property JAVASCRIPT\n\t * @type {String}\n\t * @default javascript\n\t * @static\n\t * @deprecated Use createjs.Types.JAVASCRIPT instead\n\t * @since 0.6.0\n\t */\n\ts.JAVASCRIPT = createjs.Types.JAVASCRIPT;\n\n\t/**\n\t * The preload type for json files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\n\t * JavaScript object. Note that if a `callback` is present on the load item, the file will be loaded with JSONP,\n\t * no matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to, and the JSON\n\t * must contain a matching wrapper function.\n\t * @property JSON\n\t * @type {String}\n\t * @default json\n\t * @static\n\t * @deprecated Use createjs.Types.JSON instead\n\t * @since 0.6.0\n\t */\n\ts.JSON = createjs.Types.JSON;\n\n\t/**\n\t * The preload type for jsonp files, usually with the \"json\" file extension. JSON data is loaded and parsed into a\n\t * JavaScript object. You are required to pass a callback parameter that matches the function wrapper in the JSON.\n\t * Note that JSONP will always be used if there is a callback present, no matter what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}}\n\t * property is set to.\n\t * @property JSONP\n\t * @type {String}\n\t * @default jsonp\n\t * @static\n\t * @deprecated Use createjs.Types.JSONP instead\n\t * @since 0.6.0\n\t */\n\ts.JSONP = createjs.Types.JSONP;\n\n\t/**\n\t * The preload type for json-based manifest files, usually with the \"json\" file extension. The JSON data is loaded\n\t * and parsed into a JavaScript object. PreloadJS will then look for a \"manifest\" property in the JSON, which is an\n\t * Array of files to load, following the same format as the {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\n\t * method. If a \"callback\" is specified on the manifest object, then it will be loaded using JSONP instead,\n\t * regardless of what the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property is set to.\n\t * @property MANIFEST\n\t * @type {String}\n\t * @default manifest\n\t * @static\n\t * @deprecated Use createjs.Types.MANIFEST instead\n\t * @since 0.6.0\n\t */\n\ts.MANIFEST = \"manifest\";\n\n\t/**\n\t * The preload type for sound files, usually mp3, ogg, or wav. When loading via tags, audio is loaded into an\n\t * &lt;audio&gt; tag.\n\t * @property SOUND\n\t * @type {String}\n\t * @default sound\n\t * @static\n\t * @deprecated Use createjs.Types.SOUND instead\n\t * @since 0.6.0\n\t */\n\ts.SOUND = createjs.Types.SOUND;\n\n\t/**\n\t * The preload type for video files, usually mp4, ts, or ogg. When loading via tags, video is loaded into an\n\t * &lt;video&gt; tag.\n\t * @property VIDEO\n\t * @type {String}\n\t * @default video\n\t * @static\n\t * @deprecated Use createjs.Types.VIDEO instead\n\t * @since 0.6.0\n\t */\n\ts.VIDEO = createjs.Types.VIDEO;\n\n\t/**\n\t * The preload type for SpriteSheet files. SpriteSheet files are JSON files that contain string image paths.\n\t * @property SPRITESHEET\n\t * @type {String}\n\t * @default spritesheet\n\t * @static\n\t * @deprecated Use createjs.Types.SPRITESHEET instead\n\t * @since 0.6.0\n\t */\n\ts.SPRITESHEET = createjs.Types.SPRITESHEET;\n\n\t/**\n\t * The preload type for SVG files.\n\t * @property SVG\n\t * @type {String}\n\t * @default svg\n\t * @static\n\t * @deprecated Use createjs.Types.SVG instead\n\t * @since 0.6.0\n\t */\n\ts.SVG = createjs.Types.SVG;\n\n\t/**\n\t * The preload type for text files, which is also the default file type if the type can not be determined. Text is\n\t * loaded as raw text.\n\t * @property TEXT\n\t * @type {String}\n\t * @default text\n\t * @static\n\t * @deprecated Use createjs.Types.TEXT instead\n\t * @since 0.6.0\n\t */\n\ts.TEXT = createjs.Types.TEXT;\n\n\t/**\n\t * The preload type for xml files. XML is loaded into an XML document.\n\t * @property XML\n\t * @type {String}\n\t * @default xml\n\t * @static\n\t * @deprecated Use createjs.Types.XML instead\n\t * @since 0.6.0\n\t */\n\ts.XML = createjs.Types.XML;\n\n// Events\n\t/**\n\t * The {{#crossLink \"ProgressEvent\"}}{{/crossLink}} that is fired when the overall progress changes. Prior to\n\t * version 0.6.0, this was just a regular {{#crossLink \"Event\"}}{{/crossLink}}.\n\t * @event progress\n\t * @since 0.3.0\n\t */\n\n\t/**\n\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when a load starts.\n\t * @event loadstart\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @since 0.3.1\n\t */\n\n\t/**\n\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when the entire queue has been loaded.\n\t * @event complete\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @since 0.3.0\n\t */\n\n\t/**\n\t * The {{#crossLink \"ErrorEvent\"}}{{/crossLink}} that is fired when the loader encounters an error. If the error was\n\t * encountered by a file, the event will contain the item that caused the error. Prior to version 0.6.0, this was\n\t * just a regular {{#crossLink \"Event\"}}{{/crossLink}}.\n\t * @event error\n\t * @since 0.3.0\n\t */\n\n\t/**\n\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when the loader encounters an internal file load error.\n\t * This enables loaders to maintain internal queues, and surface file load errors.\n\t * @event fileerror\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The even type (\"fileerror\")\n\t * @param {LoadItem|object} The item that encountered the error\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired when a loader internally loads a file. This enables\n\t * loaders such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}} to maintain internal {{#crossLink \"LoadQueue\"}}{{/crossLink}}s\n\t * and notify when they have loaded a file. The {{#crossLink \"LoadQueue\"}}{{/crossLink}} class dispatches a\n\t * slightly different {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event.\n\t * @event fileload\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type (\"fileload\")\n\t * @param {Object} item The file item which was specified in the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n\t * or {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}} call. If only a string path or tag was specified, the\n\t * object will contain that value as a `src` property.\n\t * @param {Object} result The HTML tag or parsed result of the loaded item.\n\t * @param {Object} rawResult The unprocessed result, usually the raw text or binary data before it is converted\n\t * to a usable object.\n\t * @since 0.6.0\n\t */\n\n\t/**\n\t * The {{#crossLink \"Event\"}}{{/crossLink}} that is fired after the internal request is created, but before a load.\n\t * This allows updates to the loader for specific loading needs, such as binary or XHR image loading.\n\t * @event initialize\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type (\"initialize\")\n\t * @param {AbstractLoader} loader The loader that has been initialized.\n\t */\n\n\n\t/**\n\t * Get a reference to the manifest item that is loaded by this loader. In some cases this will be the value that was\n\t * passed into {{#crossLink \"LoadQueue\"}}{{/crossLink}} using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} or\n\t * {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}. However if only a String path was passed in, then it will\n\t * be a {{#crossLink \"LoadItem\"}}{{/crossLink}}.\n\t * @method getItem\n\t * @return {Object} The manifest item that this loader is responsible for loading.\n\t * @since 0.6.0\n\t */\n\tp.getItem = function () {\n\t\treturn this._item;\n\t};\n\n\t/**\n\t * Get a reference to the content that was loaded by the loader (only available after the {{#crossLink \"complete:event\"}}{{/crossLink}}\n\t * event is dispatched.\n\t * @method getResult\n\t * @param {Boolean} [raw=false] Determines if the returned result will be the formatted content, or the raw loaded\n\t * data (if it exists).\n\t * @return {Object}\n\t * @since 0.6.0\n\t */\n\tp.getResult = function (raw) {\n\t\treturn raw ? this._rawResult : this._result;\n\t};\n\n\t/**\n\t * Return the `tag` this object creates or uses for loading.\n\t * @method getTag\n\t * @return {Object} The tag instance\n\t * @since 0.6.0\n\t */\n\tp.getTag = function () {\n\t\treturn this._tag;\n\t};\n\n\t/**\n\t * Set the `tag` this item uses for loading.\n\t * @method setTag\n\t * @param {Object} tag The tag instance\n\t * @since 0.6.0\n\t */\n\tp.setTag = function(tag) {\n\t  this._tag = tag;\n\t};\n\n\t/**\n\t * Begin loading the item. This method is required when using a loader by itself.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var queue = new createjs.LoadQueue();\n\t *      queue.on(\"complete\", handleComplete);\n\t *      queue.loadManifest(fileArray, false); // Note the 2nd argument that tells the queue not to start loading yet\n\t *      queue.load();\n\t *\n\t * @method load\n\t */\n\tp.load = function () {\n\t\tthis._createRequest();\n\n\t\tthis._request.on(\"complete\", this, this);\n\t\tthis._request.on(\"progress\", this, this);\n\t\tthis._request.on(\"loadStart\", this, this);\n\t\tthis._request.on(\"abort\", this, this);\n\t\tthis._request.on(\"timeout\", this, this);\n\t\tthis._request.on(\"error\", this, this);\n\n\t\tvar evt = new createjs.Event(\"initialize\");\n\t\tevt.loader = this._request;\n\t\tthis.dispatchEvent(evt);\n\n\t\tthis._request.load();\n\t};\n\n\t/**\n\t * Close the the item. This will stop any open requests (although downloads using HTML tags may still continue in\n\t * the background), but events will not longer be dispatched.\n\t * @method cancel\n\t */\n\tp.cancel = function () {\n\t\tthis.canceled = true;\n\t\tthis.destroy();\n\t};\n\n\t/**\n\t * Clean up the loader.\n\t * @method destroy\n\t */\n\tp.destroy = function() {\n\t\tif (this._request) {\n\t\t\tthis._request.removeAllEventListeners();\n\t\t\tthis._request.destroy();\n\t\t}\n\n\t\tthis._request = null;\n\n\t\tthis._item = null;\n\t\tthis._rawResult = null;\n\t\tthis._result = null;\n\n\t\tthis._loadItems = null;\n\n\t\tthis.removeAllEventListeners();\n\t};\n\n\t/**\n\t * Get any items loaded internally by the loader. The enables loaders such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}}\n\t * to expose items it loads internally.\n\t * @method getLoadedItems\n\t * @return {Array} A list of the items loaded by the loader.\n\t * @since 0.6.0\n\t */\n\tp.getLoadedItems = function () {\n\t\treturn this._loadedItems;\n\t};\n\n\n\t// Private methods\n\t/**\n\t * Create an internal request used for loading. By default, an {{#crossLink \"XHRRequest\"}}{{/crossLink}} or\n\t * {{#crossLink \"TagRequest\"}}{{/crossLink}} is created, depending on the value of {{#crossLink \"preferXHR:property\"}}{{/crossLink}}.\n\t * Other loaders may override this to use different request types, such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}},\n\t * which uses {{#crossLink \"JSONLoader\"}}{{/crossLink}} or {{#crossLink \"JSONPLoader\"}}{{/crossLink}} under the hood.\n\t * @method _createRequest\n\t * @protected\n\t */\n\tp._createRequest = function() {\n\t\tif (!this._preferXHR) {\n\t\t\tthis._request = new createjs.TagRequest(this._item, this._tag || this._createTag(), this._tagSrcAttribute);\n\t\t} else {\n\t\t\tthis._request = new createjs.XHRRequest(this._item);\n\t\t}\n\t};\n\n\t/**\n\t * Create the HTML tag used for loading. This method does nothing by default, and needs to be implemented\n\t * by loaders that require tag loading.\n\t * @method _createTag\n\t * @param {String} src The tag source\n\t * @return {HTMLElement} The tag that was created\n\t * @protected\n\t */\n\tp._createTag = function(src) { return null; };\n\n\t/**\n\t * Dispatch a loadstart {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/loadstart:event\"}}{{/crossLink}}\n\t * event for details on the event payload.\n\t * @method _sendLoadStart\n\t * @protected\n\t */\n\tp._sendLoadStart = function () {\n\t\tif (this._isCanceled()) { return; }\n\t\tthis.dispatchEvent(\"loadstart\");\n\t};\n\n\t/**\n\t * Dispatch a {{#crossLink \"ProgressEvent\"}}{{/crossLink}}.\n\t * @method _sendProgress\n\t * @param {Number | Object} value The progress of the loaded item, or an object containing <code>loaded</code>\n\t * and <code>total</code> properties.\n\t * @protected\n\t */\n\tp._sendProgress = function (value) {\n\t\tif (this._isCanceled()) { return; }\n\t\tvar event = null;\n\t\tif (typeof(value) == \"number\") {\n\t\t\tthis.progress = value;\n\t\t\tevent = new createjs.ProgressEvent(this.progress);\n\t\t} else {\n\t\t\tevent = value;\n\t\t\tthis.progress = value.loaded / value.total;\n\t\t\tevent.progress = this.progress;\n\t\t\tif (isNaN(this.progress) || this.progress == Infinity) { this.progress = 0; }\n\t\t}\n\t\tthis.hasEventListener(\"progress\") && this.dispatchEvent(event);\n\t};\n\n\t/**\n\t * Dispatch a complete {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}} event\n\t * @method _sendComplete\n\t * @protected\n\t */\n\tp._sendComplete = function () {\n\t\tif (this._isCanceled()) { return; }\n\n\t\tthis.loaded = true;\n\n\t\tvar event = new createjs.Event(\"complete\");\n\t\tevent.rawResult = this._rawResult;\n\n\t\tif (this._result != null) {\n\t\t\tevent.result = this._result;\n\t\t}\n\n\t\tthis.dispatchEvent(event);\n\t};\n\n\t/**\n\t * Dispatch an error {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"AbstractLoader/error:event\"}}{{/crossLink}}\n\t * event for details on the event payload.\n\t * @method _sendError\n\t * @param {ErrorEvent} event The event object containing specific error properties.\n\t * @protected\n\t */\n\tp._sendError = function (event) {\n\t\tif (this._isCanceled() || !this.hasEventListener(\"error\")) { return; }\n\t\tif (event == null) {\n\t\t\tevent = new createjs.ErrorEvent(\"PRELOAD_ERROR_EMPTY\"); // TODO: Populate error\n\t\t}\n\t\tthis.dispatchEvent(event);\n\t};\n\n\t/**\n\t * Determine if the load has been canceled. This is important to ensure that method calls or asynchronous events\n\t * do not cause issues after the queue has been cleaned up.\n\t * @method _isCanceled\n\t * @return {Boolean} If the loader has been canceled.\n\t * @protected\n\t */\n\tp._isCanceled = function () {\n\t\tif (window.createjs == null || this.canceled) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * A custom result formatter function, which is called just before a request dispatches its complete event. Most\n\t * loader types already have an internal formatter, but this can be user-overridden for custom formatting. The\n\t * formatted result will be available on Loaders using {{#crossLink \"getResult\"}}{{/crossLink}}, and passing `true`.\n\t * @property resultFormatter\n\t * @type Function\n\t * @return {Object} The formatted result\n\t * @since 0.6.0\n\t */\n\tp.resultFormatter = null;\n\n\t/**\n\t * Handle events from internal requests. By default, loaders will handle, and redispatch the necessary events, but\n\t * this method can be overridden for custom behaviours.\n\t * @method handleEvent\n\t * @param {Event} event The event that the internal request dispatches.\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp.handleEvent = function (event) {\n\t\tswitch (event.type) {\n\t\t\tcase \"complete\":\n\t\t\t\tthis._rawResult = event.target._response;\n\t\t\t\tvar result = this.resultFormatter && this.resultFormatter(this);\n\t\t\t\tif (result instanceof Function) {\n\t\t\t\t\tresult.call(this,\n\t\t\t\t\t\t\tcreatejs.proxy(this._resultFormatSuccess, this),\n\t\t\t\t\t\t\tcreatejs.proxy(this._resultFormatFailed, this)\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis._result =  result || this._rawResult;\n\t\t\t\t\tthis._sendComplete();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"progress\":\n\t\t\t\tthis._sendProgress(event);\n\t\t\t\tbreak;\n\t\t\tcase \"error\":\n\t\t\t\tthis._sendError(event);\n\t\t\t\tbreak;\n\t\t\tcase \"loadstart\":\n\t\t\t\tthis._sendLoadStart();\n\t\t\t\tbreak;\n\t\t\tcase \"abort\":\n\t\t\tcase \"timeout\":\n\t\t\t\tif (!this._isCanceled()) {\n\t\t\t\t\tthis.dispatchEvent(new createjs.ErrorEvent(\"PRELOAD_\" + event.type.toUpperCase() + \"_ERROR\"));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\t/**\n\t * The \"success\" callback passed to {{#crossLink \"AbstractLoader/resultFormatter\"}}{{/crossLink}} asynchronous\n\t * functions.\n\t * @method _resultFormatSuccess\n\t * @param {Object} result The formatted result\n\t * @private\n\t */\n\tp._resultFormatSuccess = function (result) {\n\t\tthis._result = result;\n\t\tthis._sendComplete();\n\t};\n\n\t/**\n\t * The \"error\" callback passed to {{#crossLink \"AbstractLoader/resultFormatter\"}}{{/crossLink}} asynchronous\n\t * functions.\n\t * @method _resultFormatSuccess\n\t * @param {Object} error The error event\n\t * @private\n\t */\n\tp._resultFormatFailed = function (event) {\n\t\tthis._sendError(event);\n\t};\n\n\t/**\n\t * @method buildPath\n\t * @protected\n\t * @deprecated Use the {{#crossLink \"URLUtils\"}}{{/crossLink}} method {{#crossLink \"URLUtils/buildURI\"}}{{/crossLink}}\n\t * instead.\n\t */\n\tp.buildPath = function (src, data) {\n\t\treturn createjs.URLUtils.buildURI(src, data);\n\t};\n\n\t/**\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\tp.toString = function () {\n\t\treturn \"[PreloadJS AbstractLoader]\";\n\t};\n\n\tcreatejs.AbstractLoader = createjs.promote(AbstractLoader, \"EventDispatcher\");\n\n}());\n\n//##############################################################################\n// AbstractMediaLoader.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * The AbstractMediaLoader is a base class that handles some of the shared methods and properties of loaders that\n\t * handle HTML media elements, such as Video and Audio.\n\t * @class AbstractMediaLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @param {Boolean} preferXHR\n\t * @param {String} type The type of media to load. Usually \"video\" or \"audio\".\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction AbstractMediaLoader(loadItem, preferXHR, type) {\n\t\tthis.AbstractLoader_constructor(loadItem, preferXHR, type);\n\n\t\t// public properties\n\t\tthis.resultFormatter = this._formatResult;\n\n\t\t// protected properties\n\t\tthis._tagSrcAttribute = \"src\";\n\n        this.on(\"initialize\", this._updateXHR, this);\n\t};\n\n\tvar p = createjs.extend(AbstractMediaLoader, createjs.AbstractLoader);\n\n\t// static properties\n\t// public methods\n\tp.load = function () {\n\t\t// TagRequest will handle most of this, but Sound / Video need a few custom properties, so just handle them here.\n\t\tif (!this._tag) {\n\t\t\tthis._tag = this._createTag(this._item.src);\n\t\t}\n\n\t\tthis._tag.preload = \"auto\";\n\t\tthis._tag.load();\n\n\t\tthis.AbstractLoader_load();\n\t};\n\n\t// protected methods\n\t/**\n\t * Creates a new tag for loading if it doesn't exist yet.\n\t * @method _createTag\n\t * @private\n\t */\n\tp._createTag = function () {};\n\n\n\tp._createRequest = function() {\n\t\tif (!this._preferXHR) {\n\t\t\tthis._request = new createjs.MediaTagRequest(this._item, this._tag || this._createTag(), this._tagSrcAttribute);\n\t\t} else {\n\t\t\tthis._request = new createjs.XHRRequest(this._item);\n\t\t}\n\t};\n\n    // protected methods\n    /**\n     * Before the item loads, set its mimeType and responseType.\n     * @property _updateXHR\n     * @param {Event} event\n     * @private\n     */\n    p._updateXHR = function (event) {\n        // Only exists for XHR\n        if (event.loader.setResponseType) {\n            event.loader.setResponseType(\"blob\");\n        }\n    };\n\n\t/**\n\t * The result formatter for media files.\n\t * @method _formatResult\n\t * @param {AbstractLoader} loader\n\t * @returns {HTMLVideoElement|HTMLAudioElement}\n\t * @private\n\t */\n\tp._formatResult = function (loader) {\n\t\tthis._tag.removeEventListener && this._tag.removeEventListener(\"canplaythrough\", this._loadedHandler);\n\t\tthis._tag.onstalled = null;\n\t\tif (this._preferXHR) {\n            var URL = window.URL || window.webkitURL;\n            var result = loader.getResult(true);\n\n\t\t\tloader.getTag().src = URL.createObjectURL(result);\n\t\t}\n\t\treturn loader.getTag();\n\t};\n\n\tcreatejs.AbstractMediaLoader = createjs.promote(AbstractMediaLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// AbstractRequest.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\t/**\n\t * A base class for actual data requests, such as {{#crossLink \"XHRRequest\"}}{{/crossLink}}, {{#crossLink \"TagRequest\"}}{{/crossLink}},\n\t * and {{#crossLink \"MediaRequest\"}}{{/crossLink}}. PreloadJS loaders will typically use a data loader under the\n\t * hood to get data.\n\t * @class AbstractRequest\n\t * @param {LoadItem} item\n\t * @constructor\n\t */\n\tvar AbstractRequest = function (item) {\n\t\tthis._item = item;\n\t};\n\n\tvar p = createjs.extend(AbstractRequest, createjs.EventDispatcher);\n\n\t// public methods\n\t/**\n\t * Begin a load.\n\t * @method load\n\t */\n\tp.load =  function() {};\n\n\t/**\n\t * Clean up a request.\n\t * @method destroy\n\t */\n\tp.destroy = function() {};\n\n\t/**\n\t * Cancel an in-progress request.\n\t * @method cancel\n\t */\n\tp.cancel = function() {};\n\n\tcreatejs.AbstractRequest = createjs.promote(AbstractRequest, \"EventDispatcher\");\n\n}());\n\n//##############################################################################\n// TagRequest.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * An {{#crossLink \"AbstractRequest\"}}{{/crossLink}} that loads HTML tags, such as images and scripts.\n\t * @class TagRequest\n\t * @param {LoadItem} loadItem\n\t * @param {HTMLElement} tag\n\t * @param {String} srcAttribute The tag attribute that specifies the source, such as \"src\", \"href\", etc.\n\t */\n\tfunction TagRequest(loadItem, tag, srcAttribute) {\n\t\tthis.AbstractRequest_constructor(loadItem);\n\n\t\t// protected properties\n\t\t/**\n\t\t * The HTML tag instance that is used to load.\n\t\t * @property _tag\n\t\t * @type {HTMLElement}\n\t\t * @protected\n\t\t */\n\t\tthis._tag = tag;\n\n\t\t/**\n\t\t * The tag attribute that specifies the source, such as \"src\", \"href\", etc.\n\t\t * @property _tagSrcAttribute\n\t\t * @type {String}\n\t\t * @protected\n\t\t */\n\t\tthis._tagSrcAttribute = srcAttribute;\n\n\t\t/**\n\t\t * A method closure used for handling the tag load event.\n\t\t * @property _loadedHandler\n\t\t * @type {Function}\n\t\t * @private\n\t\t */\n\t\tthis._loadedHandler = createjs.proxy(this._handleTagComplete, this);\n\n\t\t/**\n\t\t * Determines if the element was added to the DOM automatically by PreloadJS, so it can be cleaned up after.\n\t\t * @property _addedToDOM\n\t\t * @type {Boolean}\n\t\t * @private\n\t\t */\n\t\tthis._addedToDOM = false;\n\n\t\t/**\n\t\t * Determines what the tags initial style.visibility was, so we can set it correctly after a load.\n\t\t *\n\t\t * @type {null}\n\t\t * @private\n\t\t */\n\t\tthis._startTagVisibility = null;\n\t};\n\n\tvar p = createjs.extend(TagRequest, createjs.AbstractRequest);\n\n\t// public methods\n\tp.load = function () {\n\t\tthis._tag.onload = createjs.proxy(this._handleTagComplete, this);\n\t\tthis._tag.onreadystatechange = createjs.proxy(this._handleReadyStateChange, this);\n\t\tthis._tag.onerror = createjs.proxy(this._handleError, this);\n\n\t\tvar evt = new createjs.Event(\"initialize\");\n\t\tevt.loader = this._tag;\n\n\t\tthis.dispatchEvent(evt);\n\n\t\tthis._hideTag();\n\n\t\tthis._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout);\n\n\t\tthis._tag[this._tagSrcAttribute] = this._item.src;\n\n\t\t// wdg:: Append the tag AFTER setting the src, or SVG loading on iOS will fail.\n\t\tif (this._tag.parentNode == null) {\n\t\t\tcreatejs.DomUtils.appendToBody(this._tag);\n\t\t\tthis._addedToDOM = true;\n\t\t}\n\t};\n\n\tp.destroy = function() {\n\t\tthis._clean();\n\t\tthis._tag = null;\n\n\t\tthis.AbstractRequest_destroy();\n\t};\n\n\t// private methods\n\t/**\n\t * Handle the readyStateChange event from a tag. We need this in place of the `onload` callback (mainly SCRIPT\n\t * and LINK tags), but other cases may exist.\n\t * @method _handleReadyStateChange\n\t * @private\n\t */\n\tp._handleReadyStateChange = function () {\n\t\tclearTimeout(this._loadTimeout);\n\t\t// This is strictly for tags in browsers that do not support onload.\n\t\tvar tag = this._tag;\n\n\t\t// Complete is for old IE support.\n\t\tif (tag.readyState == \"loaded\" || tag.readyState == \"complete\") {\n\t\t\tthis._handleTagComplete();\n\t\t}\n\t};\n\n\t/**\n\t * Handle any error events from the tag.\n\t * @method _handleError\n\t * @protected\n\t */\n\tp._handleError = function() {\n\t\tthis._clean();\n\t\tthis.dispatchEvent(\"error\");\n\t};\n\n\t/**\n\t * Handle the tag's onload callback.\n\t * @method _handleTagComplete\n\t * @private\n\t */\n\tp._handleTagComplete = function () {\n\t\tthis._rawResult = this._tag;\n\t\tthis._result = this.resultFormatter && this.resultFormatter(this) || this._rawResult;\n\n\t\tthis._clean();\n\t\tthis._showTag();\n\n\t\tthis.dispatchEvent(\"complete\");\n\t};\n\n\t/**\n\t * The tag request has not loaded within the time specified in loadTimeout.\n\t * @method _handleError\n\t * @param {Object} event The XHR error event.\n\t * @private\n\t */\n\tp._handleTimeout = function () {\n\t\tthis._clean();\n\t\tthis.dispatchEvent(new createjs.Event(\"timeout\"));\n\t};\n\n\t/**\n\t * Remove event listeners, but don't destroy the request object\n\t * @method _clean\n\t * @private\n\t */\n\tp._clean = function() {\n\t\tthis._tag.onload = null;\n\t\tthis._tag.onreadystatechange = null;\n\t\tthis._tag.onerror = null;\n\t\tif (this._addedToDOM && this._tag.parentNode != null) {\n\t\t\tthis._tag.parentNode.removeChild(this._tag);\n\t\t}\n\t\tclearTimeout(this._loadTimeout);\n\t};\n\n\tp._hideTag = function() {\n\t\tthis._startTagVisibility = this._tag.style.visibility;\n\t\tthis._tag.style.visibility = \"hidden\";\n\t};\n\n\tp._showTag = function() {\n\t\tthis._tag.style.visibility = this._startTagVisibility;\n\t};\n\n\t/**\n\t * Handle a stalled audio event. The main place this happens is with HTMLAudio in Chrome when playing back audio\n\t * that is already in a load, but not complete.\n\t * @method _handleStalled\n\t * @private\n\t */\n\tp._handleStalled = function () {\n\t\t//Ignore, let the timeout take care of it. Sometimes its not really stopped.\n\t};\n\n\tcreatejs.TagRequest = createjs.promote(TagRequest, \"AbstractRequest\");\n\n}());\n\n//##############################################################################\n// MediaTagRequest.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * An {{#crossLink \"TagRequest\"}}{{/crossLink}} that loads HTML tags for video and audio.\n\t * @class MediaTagRequest\n\t * @param {LoadItem} loadItem\n\t * @param {HTMLAudioElement|HTMLVideoElement} tag\n\t * @param {String} srcAttribute The tag attribute that specifies the source, such as \"src\", \"href\", etc.\n\t * @constructor\n\t */\n\tfunction MediaTagRequest(loadItem, tag, srcAttribute) {\n\t\tthis.AbstractRequest_constructor(loadItem);\n\n\t\t// protected properties\n\t\tthis._tag = tag;\n\t\tthis._tagSrcAttribute = srcAttribute;\n\t\tthis._loadedHandler = createjs.proxy(this._handleTagComplete, this);\n\t};\n\n\tvar p = createjs.extend(MediaTagRequest, createjs.TagRequest);\n\tvar s = MediaTagRequest;\n\n\t// public methods\n\tp.load = function () {\n\t\tvar sc = createjs.proxy(this._handleStalled, this);\n\t\tthis._stalledCallback = sc;\n\n\t\tvar pc = createjs.proxy(this._handleProgress, this);\n\t\tthis._handleProgress = pc;\n\n\t\tthis._tag.addEventListener(\"stalled\", sc);\n\t\tthis._tag.addEventListener(\"progress\", pc);\n\n\t\t// This will tell us when audio is buffered enough to play through, but not when its loaded.\n\t\t// The tag doesn't keep loading in Chrome once enough has buffered, and we have decided that behaviour is sufficient.\n\t\tthis._tag.addEventListener && this._tag.addEventListener(\"canplaythrough\", this._loadedHandler, false); // canplaythrough callback doesn't work in Chrome, so we use an event.\n\n\t\tthis.TagRequest_load();\n\t};\n\n\t// private methods\n\tp._handleReadyStateChange = function () {\n\t\tclearTimeout(this._loadTimeout);\n\t\t// This is strictly for tags in browsers that do not support onload.\n\t\tvar tag = this._tag;\n\n\t\t// Complete is for old IE support.\n\t\tif (tag.readyState == \"loaded\" || tag.readyState == \"complete\") {\n\t\t\tthis._handleTagComplete();\n\t\t}\n\t};\n\n\tp._handleStalled = function () {\n\t\t//Ignore, let the timeout take care of it. Sometimes its not really stopped.\n\t};\n\n\t/**\n\t * An XHR request has reported progress.\n\t * @method _handleProgress\n\t * @param {Object} event The XHR progress event.\n\t * @private\n\t */\n\tp._handleProgress = function (event) {\n\t\tif (!event || event.loaded > 0 && event.total == 0) {\n\t\t\treturn; // Sometimes we get no \"total\", so just ignore the progress event.\n\t\t}\n\n\t\tvar newEvent = new createjs.ProgressEvent(event.loaded, event.total);\n\t\tthis.dispatchEvent(newEvent);\n\t};\n\n\t// protected methods\n\tp._clean = function () {\n\t\tthis._tag.removeEventListener && this._tag.removeEventListener(\"canplaythrough\", this._loadedHandler);\n\t\tthis._tag.removeEventListener(\"stalled\", this._stalledCallback);\n\t\tthis._tag.removeEventListener(\"progress\", this._progressCallback);\n\n\t\tthis.TagRequest__clean();\n\t};\n\n\tcreatejs.MediaTagRequest = createjs.promote(MediaTagRequest, \"TagRequest\");\n\n}());\n\n//##############################################################################\n// XHRRequest.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n// constructor\n\t/**\n\t * A preloader that loads items using XHR requests, usually XMLHttpRequest. However XDomainRequests will be used\n\t * for cross-domain requests if possible, and older versions of IE fall back on to ActiveX objects when necessary.\n\t * XHR requests load the content as text or binary data, provide progress and consistent completion events, and\n\t * can be canceled during load. Note that XHR is not supported in IE 6 or earlier, and is not recommended for\n\t * cross-domain loading.\n\t * @class XHRRequest\n\t * @constructor\n\t * @param {Object} item The object that defines the file to load. Please see the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n\t * for an overview of supported file properties.\n\t * @extends AbstractLoader\n\t */\n\tfunction XHRRequest (item) {\n\t\tthis.AbstractRequest_constructor(item);\n\n\t\t// protected properties\n\t\t/**\n\t\t * A reference to the XHR request used to load the content.\n\t\t * @property _request\n\t\t * @type {XMLHttpRequest | XDomainRequest | ActiveX.XMLHTTP}\n\t\t * @private\n\t\t */\n\t\tthis._request = null;\n\n\t\t/**\n\t\t * A manual load timeout that is used for browsers that do not support the onTimeout event on XHR (XHR level 1,\n\t\t * typically IE9).\n\t\t * @property _loadTimeout\n\t\t * @type {Number}\n\t\t * @private\n\t\t */\n\t\tthis._loadTimeout = null;\n\n\t\t/**\n\t\t * The browser's XHR (XMLHTTPRequest) version. Supported versions are 1 and 2. There is no official way to detect\n\t\t * the version, so we use capabilities to make a best guess.\n\t\t * @property _xhrLevel\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t * @private\n\t\t */\n\t\tthis._xhrLevel = 1;\n\n\t\t/**\n\t\t * The response of a loaded file. This is set because it is expensive to look up constantly. This property will be\n\t\t * null until the file is loaded.\n\t\t * @property _response\n\t\t * @type {mixed}\n\t\t * @private\n\t\t */\n\t\tthis._response = null;\n\n\t\t/**\n\t\t * The response of the loaded file before it is modified. In most cases, content is converted from raw text to\n\t\t * an HTML tag or a formatted object which is set to the <code>result</code> property, but the developer may still\n\t\t * want to access the raw content as it was loaded.\n\t\t * @property _rawResponse\n\t\t * @type {String|Object}\n\t\t * @private\n\t\t */\n\t\tthis._rawResponse = null;\n\n\t\tthis._canceled = false;\n\n\t\t// Setup our event handlers now.\n\t\tthis._handleLoadStartProxy = createjs.proxy(this._handleLoadStart, this);\n\t\tthis._handleProgressProxy = createjs.proxy(this._handleProgress, this);\n\t\tthis._handleAbortProxy = createjs.proxy(this._handleAbort, this);\n\t\tthis._handleErrorProxy = createjs.proxy(this._handleError, this);\n\t\tthis._handleTimeoutProxy = createjs.proxy(this._handleTimeout, this);\n\t\tthis._handleLoadProxy = createjs.proxy(this._handleLoad, this);\n\t\tthis._handleReadyStateChangeProxy = createjs.proxy(this._handleReadyStateChange, this);\n\n\t\tif (!this._createXHR(item)) {\n\t\t\t//TODO: Throw error?\n\t\t}\n\t};\n\n\tvar p = createjs.extend(XHRRequest, createjs.AbstractRequest);\n\n// static properties\n\t/**\n\t * A list of XMLHTTP object IDs to try when building an ActiveX object for XHR requests in earlier versions of IE.\n\t * @property ACTIVEX_VERSIONS\n\t * @type {Array}\n\t * @since 0.4.2\n\t * @private\n\t */\n\tXHRRequest.ACTIVEX_VERSIONS = [\n\t\t\"Msxml2.XMLHTTP.6.0\",\n\t\t\"Msxml2.XMLHTTP.5.0\",\n\t\t\"Msxml2.XMLHTTP.4.0\",\n\t\t\"MSXML2.XMLHTTP.3.0\",\n\t\t\"MSXML2.XMLHTTP\",\n\t\t\"Microsoft.XMLHTTP\"\n\t];\n\n// Public methods\n\t/**\n\t * Look up the loaded result.\n\t * @method getResult\n\t * @param {Boolean} [raw=false] Return a raw result instead of a formatted result. This applies to content\n\t * loaded via XHR such as scripts, XML, CSS, and Images. If there is no raw result, the formatted result will be\n\t * returned instead.\n\t * @return {Object} A result object containing the content that was loaded, such as:\n\t * <ul>\n\t *      <li>An image tag (&lt;image /&gt;) for images</li>\n\t *      <li>A script tag for JavaScript (&lt;script /&gt;). Note that scripts loaded with tags may be added to the\n\t *      HTML head.</li>\n\t *      <li>A style tag for CSS (&lt;style /&gt;)</li>\n\t *      <li>Raw text for TEXT</li>\n\t *      <li>A formatted JavaScript object defined by JSON</li>\n\t *      <li>An XML document</li>\n\t *      <li>An binary arraybuffer loaded by XHR</li>\n\t * </ul>\n\t * Note that if a raw result is requested, but not found, the result will be returned instead.\n\t */\n\tp.getResult = function (raw) {\n\t\tif (raw && this._rawResponse) {\n\t\t\treturn this._rawResponse;\n\t\t}\n\t\treturn this._response;\n\t};\n\n\t// Overrides abstract method in AbstractRequest\n\tp.cancel = function () {\n\t\tthis.canceled = true;\n\t\tthis._clean();\n\t\tthis._request.abort();\n\t};\n\n\t// Overrides abstract method in AbstractLoader\n\tp.load = function () {\n\t\tif (this._request == null) {\n\t\t\tthis._handleError();\n\t\t\treturn;\n\t\t}\n\n\t\t//Events\n\t\tif (this._request.addEventListener != null) {\n\t\t\tthis._request.addEventListener(\"loadstart\", this._handleLoadStartProxy, false);\n\t\t\tthis._request.addEventListener(\"progress\", this._handleProgressProxy, false);\n\t\t\tthis._request.addEventListener(\"abort\", this._handleAbortProxy, false);\n\t\t\tthis._request.addEventListener(\"error\", this._handleErrorProxy, false);\n\t\t\tthis._request.addEventListener(\"timeout\", this._handleTimeoutProxy, false);\n\n\t\t\t// Note: We don't get onload in all browsers (earlier FF and IE). onReadyStateChange handles these.\n\t\t\tthis._request.addEventListener(\"load\", this._handleLoadProxy, false);\n\t\t\tthis._request.addEventListener(\"readystatechange\", this._handleReadyStateChangeProxy, false);\n\t\t} else {\n\t\t\t// IE9 support\n\t\t\tthis._request.onloadstart = this._handleLoadStartProxy;\n\t\t\tthis._request.onprogress = this._handleProgressProxy;\n\t\t\tthis._request.onabort = this._handleAbortProxy;\n\t\t\tthis._request.onerror = this._handleErrorProxy;\n\t\t\tthis._request.ontimeout = this._handleTimeoutProxy;\n\n\t\t\t// Note: We don't get onload in all browsers (earlier FF and IE). onReadyStateChange handles these.\n\t\t\tthis._request.onload = this._handleLoadProxy;\n\t\t\tthis._request.onreadystatechange = this._handleReadyStateChangeProxy;\n\t\t}\n\n\t\t// Set up a timeout if we don't have XHR2\n\t\tif (this._xhrLevel == 1) {\n\t\t\tthis._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout);\n\t\t}\n\n\t\t// Sometimes we get back 404s immediately, particularly when there is a cross origin request.  // note this does not catch in Chrome\n\t\ttry {\n\t\t\tif (!this._item.values) {\n\t\t\t\tthis._request.send();\n\t\t\t} else {\n\t\t\t\tthis._request.send(createjs.URLUtils.formatQueryString(this._item.values));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.dispatchEvent(new createjs.ErrorEvent(\"XHR_SEND\", null, error));\n\t\t}\n\t};\n\n\tp.setResponseType = function (type) {\n\t\t// Some old browsers doesn't support blob, so we convert arraybuffer to blob after response is downloaded\n\t\tif (type === 'blob') {\n\t\t\ttype = window.URL ? 'blob' : 'arraybuffer';\n\t\t\tthis._responseType = type;\n\t\t}\n\t\tthis._request.responseType = type;\n\t};\n\n\t/**\n\t * Get all the response headers from the XmlHttpRequest.\n\t *\n\t * <strong>From the docs:</strong> Return all the HTTP headers, excluding headers that are a case-insensitive match\n\t * for Set-Cookie or Set-Cookie2, as a single string, with each header line separated by a U+000D CR U+000A LF pair,\n\t * excluding the status line, and with each header name and header value separated by a U+003A COLON U+0020 SPACE\n\t * pair.\n\t * @method getAllResponseHeaders\n\t * @return {String}\n\t * @since 0.4.1\n\t */\n\tp.getAllResponseHeaders = function () {\n\t\tif (this._request.getAllResponseHeaders instanceof Function) {\n\t\t\treturn this._request.getAllResponseHeaders();\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\t/**\n\t * Get a specific response header from the XmlHttpRequest.\n\t *\n\t * <strong>From the docs:</strong> Returns the header field value from the response of which the field name matches\n\t * header, unless the field name is Set-Cookie or Set-Cookie2.\n\t * @method getResponseHeader\n\t * @param {String} header The header name to retrieve.\n\t * @return {String}\n\t * @since 0.4.1\n\t */\n\tp.getResponseHeader = function (header) {\n\t\tif (this._request.getResponseHeader instanceof Function) {\n\t\t\treturn this._request.getResponseHeader(header);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n// protected methods\n\t/**\n\t * The XHR request has reported progress.\n\t * @method _handleProgress\n\t * @param {Object} event The XHR progress event.\n\t * @private\n\t */\n\tp._handleProgress = function (event) {\n\t\tif (!event || event.loaded > 0 && event.total == 0) {\n\t\t\treturn; // Sometimes we get no \"total\", so just ignore the progress event.\n\t\t}\n\n\t\tvar newEvent = new createjs.ProgressEvent(event.loaded, event.total);\n\t\tthis.dispatchEvent(newEvent);\n\t};\n\n\t/**\n\t * The XHR request has reported a load start.\n\t * @method _handleLoadStart\n\t * @param {Object} event The XHR loadStart event.\n\t * @private\n\t */\n\tp._handleLoadStart = function (event) {\n\t\tclearTimeout(this._loadTimeout);\n\t\tthis.dispatchEvent(\"loadstart\");\n\t};\n\n\t/**\n\t * The XHR request has reported an abort event.\n\t * @method handleAbort\n\t * @param {Object} event The XHR abort event.\n\t * @private\n\t */\n\tp._handleAbort = function (event) {\n\t\tthis._clean();\n\t\tthis.dispatchEvent(new createjs.ErrorEvent(\"XHR_ABORTED\", null, event));\n\t};\n\n\t/**\n\t * The XHR request has reported an error event.\n\t * @method _handleError\n\t * @param {Object} event The XHR error event.\n\t * @private\n\t */\n\tp._handleError = function (event) {\n\t\tthis._clean();\n\t\tthis.dispatchEvent(new createjs.ErrorEvent(event.message));\n\t};\n\n\t/**\n\t * The XHR request has reported a readyState change. Note that older browsers (IE 7 & 8) do not provide an onload\n\t * event, so we must monitor the readyStateChange to determine if the file is loaded.\n\t * @method _handleReadyStateChange\n\t * @param {Object} event The XHR readyStateChange event.\n\t * @private\n\t */\n\tp._handleReadyStateChange = function (event) {\n\t\tif (this._request.readyState == 4) {\n\t\t\tthis._handleLoad();\n\t\t}\n\t};\n\n\t/**\n\t * The XHR request has completed. This is called by the XHR request directly, or by a readyStateChange that has\n\t * <code>request.readyState == 4</code>. Only the first call to this method will be processed.\n\t * @method _handleLoad\n\t * @param {Object} event The XHR load event.\n\t * @private\n\t */\n\tp._handleLoad = function (event) {\n\t\tif (this.loaded) {\n\t\t\treturn;\n\t\t}\n\t\tthis.loaded = true;\n\n\t\tvar error = this._checkError();\n\t\tif (error) {\n\t\t\tthis._handleError(error);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._response = this._getResponse();\n\t\t// Convert arraybuffer back to blob\n\t\tif (this._responseType === 'arraybuffer') {\n\t\t\ttry {\n\t\t\t\tthis._response = new Blob([this._response]);\n\t\t\t} catch (e) {\n\t\t\t\t// Fallback to use BlobBuilder if Blob constructor is not supported\n\t\t\t\t// Tested on Android 2.3 ~ 4.2 and iOS5 safari\n\t\t\t\twindow.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n\t\t\t\tif (e.name === 'TypeError' && window.BlobBuilder) {\n\t\t\t\t\tvar builder = new BlobBuilder();\n\t\t\t\t\tbuilder.append(this._response);\n\t\t\t\t\tthis._response = builder.getBlob();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._clean();\n\n\t\tthis.dispatchEvent(new createjs.Event(\"complete\"));\n\t};\n\n\t/**\n\t * The XHR request has timed out. This is called by the XHR request directly, or via a <code>setTimeout</code>\n\t * callback.\n\t * @method _handleTimeout\n\t * @param {Object} [event] The XHR timeout event. This is occasionally null when called by the backup setTimeout.\n\t * @private\n\t */\n\tp._handleTimeout = function (event) {\n\t\tthis._clean();\n\t\tthis.dispatchEvent(new createjs.ErrorEvent(\"PRELOAD_TIMEOUT\", null, event));\n\t};\n\n// Protected\n\t/**\n\t * Determine if there is an error in the current load. This checks the status of the request for problem codes. Note\n\t * that this does not check for an actual response. Currently, it only checks for error codes between 400 and 599\n\t * @method _checkError\n\t * @return {int} If the request status returns an error code.\n\t * @private\n\t */\n\tp._checkError = function () {\n\t\tvar status = parseInt(this._request.status);\n\t\tif (status >= 400 && status <= 599) {\n\t\t\treturn new Error(status);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\n\t/**\n\t * Validate the response. Different browsers have different approaches, some of which throw errors when accessed\n\t * in other browsers. If there is no response, the <code>_response</code> property will remain null.\n\t * @method _getResponse\n\t * @private\n\t */\n\tp._getResponse = function () {\n\t\tif (this._response != null) {\n\t\t\treturn this._response;\n\t\t}\n\n\t\tif (this._request.response != null) {\n\t\t\treturn this._request.response;\n\t\t}\n\n\t\t// Android 2.2 uses .responseText\n\t\ttry {\n\t\t\tif (this._request.responseText != null) {\n\t\t\t\treturn this._request.responseText;\n\t\t\t}\n\t\t} catch (e) {\n\t\t}\n\n\t\t// When loading XML, IE9 does not return .response, instead it returns responseXML.xml\n\t\ttry {\n\t\t\tif (this._request.responseXML != null) {\n\t\t\t\treturn this._request.responseXML;\n\t\t\t}\n\t\t} catch (e) {\n\t\t}\n\n\t\treturn null;\n\t};\n\n\t/**\n\t * Create an XHR request. Depending on a number of factors, we get totally different results.\n\t * <ol><li>Some browsers get an <code>XDomainRequest</code> when loading cross-domain.</li>\n\t *      <li>XMLHttpRequest are created when available.</li>\n\t *      <li>ActiveX.XMLHTTP objects are used in older IE browsers.</li>\n\t *      <li>Text requests override the mime type if possible</li>\n\t *      <li>Origin headers are sent for crossdomain requests in some browsers.</li>\n\t *      <li>Binary loads set the response type to \"arraybuffer\"</li></ol>\n\t * @method _createXHR\n\t * @param {Object} item The requested item that is being loaded.\n\t * @return {Boolean} If an XHR request or equivalent was successfully created.\n\t * @private\n\t */\n\tp._createXHR = function (item) {\n\t\t// Check for cross-domain loads. We can't fully support them, but we can try.\n\t\tvar crossdomain = createjs.URLUtils.isCrossDomain(item);\n\t\tvar headers = {};\n\n\t\t// Create the request. Fallback to whatever support we have.\n\t\tvar req = null;\n\t\tif (window.XMLHttpRequest) {\n\t\t\treq = new XMLHttpRequest();\n\t\t\t// This is 8 or 9, so use XDomainRequest instead.\n\t\t\tif (crossdomain && req.withCredentials === undefined && window.XDomainRequest) {\n\t\t\t\treq = new XDomainRequest();\n\t\t\t}\n\t\t} else { // Old IE versions use a different approach\n\t\t\tfor (var i = 0, l = s.ACTIVEX_VERSIONS.length; i < l; i++) {\n\t\t\t\tvar axVersion = s.ACTIVEX_VERSIONS[i];\n\t\t\t\ttry {\n\t\t\t\t\treq = new ActiveXObject(axVersion);\n\t\t\t\t\tbreak;\n\t\t\t\t} catch (e) {\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (req == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Default to utf-8 for Text requests.\n\t\tif (item.mimeType == null && createjs.RequestUtils.isText(item.type)) {\n\t\t\titem.mimeType = \"text/plain; charset=utf-8\";\n\t\t}\n\n\t\t// IE9 doesn't support overrideMimeType(), so we need to check for it.\n\t\tif (item.mimeType && req.overrideMimeType) {\n\t\t\treq.overrideMimeType(item.mimeType);\n\t\t}\n\n\t\t// Determine the XHR level\n\t\tthis._xhrLevel = (typeof req.responseType === \"string\") ? 2 : 1;\n\n\t\tvar src = null;\n\t\tif (item.method == createjs.AbstractLoader.GET) {\n\t\t\tsrc = createjs.URLUtils.buildURI(item.src, item.values);\n\t\t} else {\n\t\t\tsrc = item.src;\n\t\t}\n\n\t\t// Open the request.  Set cross-domain flags if it is supported (XHR level 1 only)\n\t\treq.open(item.method || createjs.AbstractLoader.GET, src, true);\n\n\t\tif (crossdomain && req instanceof XMLHttpRequest && this._xhrLevel == 1) {\n\t\t\theaders[\"Origin\"] = location.origin;\n\t\t}\n\n\t\t// To send data we need to set the Content-type header)\n\t\tif (item.values && item.method == createjs.AbstractLoader.POST) {\n\t\t\theaders[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n\t\t}\n\n\t\tif (!crossdomain && !headers[\"X-Requested-With\"]) {\n\t\t\theaders[\"X-Requested-With\"] = \"XMLHttpRequest\";\n\t\t}\n\n\t\tif (item.headers) {\n\t\t\tfor (var n in item.headers) {\n\t\t\t\theaders[n] = item.headers[n];\n\t\t\t}\n\t\t}\n\n\t\tfor (n in headers) {\n\t\t\treq.setRequestHeader(n, headers[n])\n\t\t}\n\n\t\tif (req instanceof XMLHttpRequest && item.withCredentials !== undefined) {\n\t\t\treq.withCredentials = item.withCredentials;\n\t\t}\n\n\t\tthis._request = req;\n\n\t\treturn true;\n\t};\n\n\t/**\n\t * A request has completed (or failed or canceled), and needs to be disposed.\n\t * @method _clean\n\t * @private\n\t */\n\tp._clean = function () {\n\t\tclearTimeout(this._loadTimeout);\n\n\t\tif (this._request.removeEventListener != null) {\n\t\t\tthis._request.removeEventListener(\"loadstart\", this._handleLoadStartProxy);\n\t\t\tthis._request.removeEventListener(\"progress\", this._handleProgressProxy);\n\t\t\tthis._request.removeEventListener(\"abort\", this._handleAbortProxy);\n\t\t\tthis._request.removeEventListener(\"error\", this._handleErrorProxy);\n\t\t\tthis._request.removeEventListener(\"timeout\", this._handleTimeoutProxy);\n\t\t\tthis._request.removeEventListener(\"load\", this._handleLoadProxy);\n\t\t\tthis._request.removeEventListener(\"readystatechange\", this._handleReadyStateChangeProxy);\n\t\t} else {\n\t\t\tthis._request.onloadstart = null;\n\t\t\tthis._request.onprogress = null;\n\t\t\tthis._request.onabort = null;\n\t\t\tthis._request.onerror = null;\n\t\t\tthis._request.ontimeout = null;\n\t\t\tthis._request.onload = null;\n\t\t\tthis._request.onreadystatechange = null;\n\t\t}\n\t};\n\n\tp.toString = function () {\n\t\treturn \"[PreloadJS XHRRequest]\";\n\t};\n\n\tcreatejs.XHRRequest = createjs.promote(XHRRequest, \"AbstractRequest\");\n\n}());\n\n//##############################################################################\n// LoadQueue.js\n//##############################################################################\n\n/*\n TODO: WINDOWS ISSUES\n * No error for HTML audio in IE 678\n * SVG no failure error in IE 67 (maybe 8) TAGS AND XHR\n * No script complete handler in IE 67 TAGS (XHR is fine)\n * No XML/JSON in IE6 TAGS\n * Need to hide loading SVG in Opera TAGS\n * No CSS onload/readystatechange in Safari or Android TAGS (requires rule checking)\n * SVG no load or failure in Opera XHR\n * Reported issues with IE7/8\n */\n\n(function () {\n\t\"use strict\";\n\n// constructor\n\t/**\n\t * The LoadQueue class is the main API for preloading content. LoadQueue is a load manager, which can preload either\n\t * a single file, or queue of files.\n\t *\n\t * <b>Creating a Queue</b><br />\n\t * To use LoadQueue, create a LoadQueue instance. If you want to force tag loading where possible, set the preferXHR\n\t * argument to false.\n\t *\n\t *      var queue = new createjs.LoadQueue(true);\n\t *\n\t * <b>Listening for Events</b><br />\n\t * Add any listeners you want to the queue. Since PreloadJS 0.3.0, the {{#crossLink \"EventDispatcher\"}}{{/crossLink}}\n\t * lets you add as many listeners as you want for events. You can subscribe to the following events:<ul>\n\t *     <li>{{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}}: fired when a queue completes loading all\n\t *     files</li>\n\t *     <li>{{#crossLink \"AbstractLoader/error:event\"}}{{/crossLink}}: fired when the queue encounters an error with\n\t *     any file.</li>\n\t *     <li>{{#crossLink \"AbstractLoader/progress:event\"}}{{/crossLink}}: Progress for the entire queue has\n\t *     changed.</li>\n\t *     <li>{{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}}: A single file has completed loading.</li>\n\t *     <li>{{#crossLink \"LoadQueue/fileprogress:event\"}}{{/crossLink}}: Progress for a single file has changes. Note\n\t *     that only files loaded with XHR (or possibly by plugins) will fire progress events other than 0 or 100%.</li>\n\t * </ul>\n\t *\n\t *      queue.on(\"fileload\", handleFileLoad, this);\n\t *      queue.on(\"complete\", handleComplete, this);\n\t *\n\t * <b>Adding files and manifests</b><br />\n\t * Add files you want to load using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} or add multiple files at a\n\t * time using a list or a manifest definition using {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}. Files are\n\t * appended to the end of the active queue, so you can use these methods as many times as you like, whenever you\n\t * like.\n\t *\n\t *      queue.loadFile(\"filePath/file.jpg\");\n\t *      queue.loadFile({id:\"image\", src:\"filePath/file.jpg\"});\n\t *      queue.loadManifest([\"filePath/file.jpg\", {id:\"image\", src:\"filePath/file.jpg\"}]);\n\t *\n\t *      // Use an external manifest\n\t *      queue.loadManifest(\"path/to/manifest.json\");\n\t *      queue.loadManifest({src:\"manifest.json\", type:\"manifest\"});\n\t *\n\t * If you pass `false` as the `loadNow` parameter, the queue will not kick of the load of the files, but it will not\n\t * stop if it has already been started. Call the {{#crossLink \"AbstractLoader/load\"}}{{/crossLink}} method to begin\n\t * a paused queue. Note that a paused queue will automatically resume when new files are added to it with a\n\t * `loadNow` argument of `true`.\n\t *\n\t *      queue.load();\n\t *\n\t * <b>File Types</b><br />\n\t * The file type of a manifest item is auto-determined by the file extension. The pattern matching in PreloadJS\n\t * should handle the majority of standard file and url formats, and works with common file extensions. If you have\n\t * either a non-standard file extension, or are serving the file using a proxy script, then you can pass in a\n\t * <code>type</code> property with any manifest item.\n\t *\n\t *      queue.loadFile({src:\"path/to/myFile.mp3x\", type:createjs.AbstractLoader.SOUND});\n\t *\n\t *      // Note that PreloadJS will not read a file extension from the query string\n\t *      queue.loadFile({src:\"http://server.com/proxy?file=image.jpg\", type:createjs.AbstractLoader.IMAGE});\n\t *\n\t * Supported types are defined on the {{#crossLink \"AbstractLoader\"}}{{/crossLink}} class, and include:\n\t * <ul>\n\t *     <li>{{#crossLink \"AbstractLoader/BINARY:property\"}}{{/crossLink}}: Raw binary data via XHR</li>\n\t *     <li>{{#crossLink \"AbstractLoader/CSS:property\"}}{{/crossLink}}: CSS files</li>\n\t *     <li>{{#crossLink \"AbstractLoader/IMAGE:property\"}}{{/crossLink}}: Common image formats</li>\n\t *     <li>{{#crossLink \"AbstractLoader/JAVASCRIPT:property\"}}{{/crossLink}}: JavaScript files</li>\n\t *     <li>{{#crossLink \"AbstractLoader/JSON:property\"}}{{/crossLink}}: JSON data</li>\n\t *     <li>{{#crossLink \"AbstractLoader/JSONP:property\"}}{{/crossLink}}: JSON files cross-domain</li>\n\t *     <li>{{#crossLink \"AbstractLoader/MANIFEST:property\"}}{{/crossLink}}: A list of files to load in JSON format, see\n\t *     {{#crossLink \"AbstractLoader/loadManifest\"}}{{/crossLink}}</li>\n\t *     <li>{{#crossLink \"AbstractLoader/SOUND:property\"}}{{/crossLink}}: Audio file formats</li>\n\t *     <li>{{#crossLink \"AbstractLoader/SPRITESHEET:property\"}}{{/crossLink}}: JSON SpriteSheet definitions. This\n\t *     will also load sub-images, and provide a {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance.</li>\n\t *     <li>{{#crossLink \"AbstractLoader/SVG:property\"}}{{/crossLink}}: SVG files</li>\n\t *     <li>{{#crossLink \"AbstractLoader/TEXT:property\"}}{{/crossLink}}: Text files - XHR only</li>\n     *     <li>{{#crossLink \"AbstractLoader/VIDEO:property\"}}{{/crossLink}}: Video objects</li>\n\t *     <li>{{#crossLink \"AbstractLoader/XML:property\"}}{{/crossLink}}: XML data</li>\n\t * </ul>\n\t *\n\t * <em>Note: Loader types used to be defined on LoadQueue, but have been moved to AbstractLoader for better\n\t * portability of loader classes, which can be used individually now. The properties on LoadQueue still exist, but\n\t * are deprecated.</em>\n\t *\n\t * <b>Handling Results</b><br />\n\t * When a file is finished downloading, a {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event is\n\t * dispatched. In an example above, there is an event listener snippet for fileload. Loaded files are usually a\n\t * formatted object that can be used immediately, including:\n\t * <ul>\n\t *     <li>Binary: The binary loaded result</li>\n\t *     <li>CSS: A &lt;link /&gt; tag</li>\n\t *     <li>Image: An &lt;img /&gt; tag</li>\n\t *     <li>JavaScript: A &lt;script /&gt; tag</li>\n\t *     <li>JSON/JSONP: A formatted JavaScript Object</li>\n\t *     <li>Manifest: A JavaScript object.\n\t *     <li>Sound: An &lt;audio /&gt; tag</a>\n\t *     <li>SpriteSheet: A {{#crossLink \"SpriteSheet\"}}{{/crossLink}} instance, containing loaded images.\n\t *     <li>SVG: An &lt;object /&gt; tag</li>\n\t *     <li>Text: Raw text</li>\n     *     <li>Video: A Video DOM node</li>\n\t *     <li>XML: An XML DOM node</li>\n\t * </ul>\n\t *\n\t *      function handleFileLoad(event) {\n\t *          var item = event.item; // A reference to the item that was passed in to the LoadQueue\n\t *          var type = item.type;\n\t *\n\t *          // Add any images to the page body.\n\t *          if (type == createjs.LoadQueue.IMAGE) {\n\t *              document.body.appendChild(event.result);\n\t *          }\n\t *      }\n\t *\n\t * At any time after the file has been loaded (usually after the queue has completed), any result can be looked up\n\t * via its \"id\" using {{#crossLink \"LoadQueue/getResult\"}}{{/crossLink}}. If no id was provided, then the\n\t * \"src\" or file path can be used instead, including the `path` defined by a manifest, but <strong>not including</strong>\n\t * a base path defined on the LoadQueue. It is recommended to always pass an id if you want to look up content.\n\t *\n\t *      var image = queue.getResult(\"image\");\n\t *      document.body.appendChild(image);\n\t *\n\t * Raw loaded content can be accessed using the <code>rawResult</code> property of the {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}}\n\t * event, or can be looked up using {{#crossLink \"LoadQueue/getResult\"}}{{/crossLink}}, passing `true` as the 2nd\n\t * argument. This is only applicable for content that has been parsed for the browser, specifically: JavaScript,\n\t * CSS, XML, SVG, and JSON objects, or anything loaded with XHR.\n\t *\n\t *      var image = queue.getResult(\"image\", true); // load the binary image data loaded with XHR.\n\t *\n\t * <b>Plugins</b><br />\n\t * LoadQueue has a simple plugin architecture to help process and preload content. For example, to preload audio,\n\t * make sure to install the <a href=\"http://soundjs.com\">SoundJS</a> Sound class, which will help load HTML audio,\n\t * Flash audio, and WebAudio files. This should be installed <strong>before</strong> loading any audio files.\n\t *\n\t *      queue.installPlugin(createjs.Sound);\n\t *\n\t * <h4>Known Browser Issues</h4>\n\t * <ul>\n\t *     <li>Browsers without audio support can not load audio files.</li>\n\t *     <li>Safari on Mac OS X can only play HTML audio if QuickTime is installed</li>\n\t *     <li>HTML Audio tags will only download until their <code>canPlayThrough</code> event is fired. Browsers other\n\t *     than Chrome will continue to download in the background.</li>\n\t *     <li>When loading scripts using tags, they are automatically added to the document.</li>\n\t *     <li>Scripts loaded via XHR may not be properly inspectable with browser tools.</li>\n\t *     <li>IE6 and IE7 (and some other browsers) may not be able to load XML, Text, or JSON, since they require\n\t *     XHR to work.</li>\n\t *     <li>Content loaded via tags will not show progress, and will continue to download in the background when\n\t *     canceled, although no events will be dispatched.</li>\n\t * </ul>\n\t *\n\t * @class LoadQueue\n\t * @param {Boolean} [preferXHR=true] Determines whether the preload instance will favor loading with XHR (XML HTTP\n\t * Requests), or HTML tags. When this is `false`, the queue will use tag loading when possible, and fall back on XHR\n\t * when necessary.\n\t * @param {String} [basePath=\"\"] A path that will be prepended on to the source parameter of all items in the queue\n\t * before they are loaded.  Sources beginning with a protocol such as `http://` or a relative path such as `../`\n\t * will not receive a base path.\n\t * @param {String|Boolean} [crossOrigin=\"\"] An optional flag to support images loaded from a CORS-enabled server. To\n\t * use it, set this value to `true`, which will default the crossOrigin property on images to \"Anonymous\". Any\n\t * string value will be passed through, but only \"\" and \"Anonymous\" are recommended. <strong>Note: The crossOrigin\n\t * parameter is deprecated. Use LoadItem.crossOrigin instead</strong>\n\t *\n\t * @constructor\n\t * @extends AbstractLoader\n\t */\n\tfunction LoadQueue (preferXHR, basePath, crossOrigin) {\n\t\tthis.AbstractLoader_constructor();\n\n\t\t/**\n\t\t * An array of the plugins registered using {{#crossLink \"LoadQueue/installPlugin\"}}{{/crossLink}}.\n\t\t * @property _plugins\n\t\t * @type {Array}\n\t\t * @private\n\t\t * @since 0.6.1\n\t\t */\n\t\tthis._plugins = [];\n\n\t\t/**\n\t\t * An object hash of callbacks that are fired for each file type before the file is loaded, giving plugins the\n\t\t * ability to override properties of the load. Please see the {{#crossLink \"LoadQueue/installPlugin\"}}{{/crossLink}}\n\t\t * method for more information.\n\t\t * @property _typeCallbacks\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._typeCallbacks = {};\n\n\t\t/**\n\t\t * An object hash of callbacks that are fired for each file extension before the file is loaded, giving plugins the\n\t\t * ability to override properties of the load. Please see the {{#crossLink \"LoadQueue/installPlugin\"}}{{/crossLink}}\n\t\t * method for more information.\n\t\t * @property _extensionCallbacks\n\t\t * @type {null}\n\t\t * @private\n\t\t */\n\t\tthis._extensionCallbacks = {};\n\n\t\t/**\n\t\t * The next preload queue to process when this one is complete. If an error is thrown in the current queue, and\n\t\t * {{#crossLink \"LoadQueue/stopOnError:property\"}}{{/crossLink}} is `true`, the next queue will not be processed.\n\t\t * @property next\n\t\t * @type {LoadQueue}\n\t\t * @default null\n\t\t */\n\t\tthis.next = null;\n\n\t\t/**\n\t\t * Ensure loaded scripts \"complete\" in the order they are specified. Loaded scripts are added to the document head\n\t\t * once they are loaded. Scripts loaded via tags will load one-at-a-time when this property is `true`, whereas\n\t\t * scripts loaded using XHR can load in any order, but will \"finish\" and be added to the document in the order\n\t\t * specified.\n\t\t *\n\t\t * Any items can be set to load in order by setting the {{#crossLink \"maintainOrder:property\"}}{{/crossLink}}\n\t\t * property on the load item, or by ensuring that only one connection can be open at a time using\n\t\t * {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}}. Note that when the `maintainScriptOrder` property\n\t\t * is set to `true`, scripts items are automatically set to `maintainOrder=true`, and changing the\n\t\t * `maintainScriptOrder` to `false` during a load will not change items already in a queue.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      var queue = new createjs.LoadQueue();\n\t\t *      queue.setMaxConnections(3); // Set a higher number to load multiple items at once\n\t\t *      queue.maintainScriptOrder = true; // Ensure scripts are loaded in order\n\t\t *      queue.loadManifest([\n\t\t *          \"script1.js\",\n\t\t *          \"script2.js\",\n\t\t *          \"image.png\", // Load any time\n\t\t *          {src: \"image2.png\", maintainOrder: true} // Will wait for script2.js\n\t\t *          \"image3.png\",\n\t\t *          \"script3.js\" // Will wait for image2.png before loading (or completing when loading with XHR)\n\t\t *      ]);\n\t\t *\n\t\t * @property maintainScriptOrder\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.maintainScriptOrder = true;\n\n\t\t/**\n\t\t * Determines if the LoadQueue will stop processing the current queue when an error is encountered.\n\t\t * @property stopOnError\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.stopOnError = false;\n\n\t\t/**\n\t\t * The number of maximum open connections that a loadQueue tries to maintain. Please see\n\t\t * {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}} for more information.\n\t\t * @property _maxConnections\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t * @private\n\t\t */\n\t\tthis._maxConnections = 1;\n\n\t\t/**\n\t\t * An internal list of all the default Loaders that are included with PreloadJS. Before an item is loaded, the\n\t\t * available loader list is iterated, in the order they are included, and as soon as a loader indicates it can\n\t\t * handle the content, it will be selected. The default loader, ({{#crossLink \"TextLoader\"}}{{/crossLink}} is\n\t\t * last in the list, so it will be used if no other match is found. Typically, loaders will match based on the\n\t\t * {{#crossLink \"LoadItem/type\"}}{{/crossLink}}, which is automatically determined using the file extension of\n\t\t * the {{#crossLink \"LoadItem/src:property\"}}{{/crossLink}}.\n\t\t *\n\t\t * Loaders can be removed from PreloadJS by simply not including them.\n\t\t *\n\t\t * Custom loaders installed using {{#crossLink \"registerLoader\"}}{{/crossLink}} will be prepended to this list\n\t\t * so that they are checked first.\n\t\t * @property _availableLoaders\n\t\t * @type {Array}\n\t\t * @private\n\t\t * @since 0.6.0\n\t\t */\n\t\tthis._availableLoaders = [\n\t\t\tcreatejs.ImageLoader,\n\t\t\tcreatejs.JavaScriptLoader,\n\t\t\tcreatejs.CSSLoader,\n\t\t\tcreatejs.JSONLoader,\n\t\t\tcreatejs.JSONPLoader,\n\t\t\tcreatejs.SoundLoader,\n\t\t\tcreatejs.ManifestLoader,\n\t\t\tcreatejs.SpriteSheetLoader,\n\t\t\tcreatejs.XMLLoader,\n\t\t\tcreatejs.SVGLoader,\n\t\t\tcreatejs.BinaryLoader,\n\t\t\tcreatejs.VideoLoader,\n\t\t\tcreatejs.TextLoader\n\t\t];\n\n\t\t/**\n\t\t * The number of built in loaders, so they can't be removed by {{#crossLink \"unregisterLoader\"}}{{/crossLink}.\n\t\t\t\t * @property _defaultLoaderLength\n\t\t * @type {Number}\n\t\t * @private\n\t\t * @since 0.6.0\n\t\t */\n\t\tthis._defaultLoaderLength = this._availableLoaders.length;\n\n\t\tthis.init(preferXHR, basePath, crossOrigin);\n\t}\n\n\tvar p = createjs.extend(LoadQueue, createjs.AbstractLoader);\n\tvar s = LoadQueue;\n\n\t/**\n\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t * for details.\n\t *\n\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t *\n\t * @method initialize\n\t * @protected\n\t * @deprecated\n\t */\n\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\n\t/**\n\t * An internal initialization method, which is used for initial set up, but also to reset the LoadQueue.\n\t * @method init\n\t * @param preferXHR\n\t * @param basePath\n\t * @param crossOrigin\n\t * @private\n\t */\n\tp.init = function (preferXHR, basePath, crossOrigin) {\n\n\t\t// public properties\n\t\t/**\n\t\t * @property useXHR\n\t\t * @type {Boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t * @deprecated Use preferXHR instead.\n\t\t */\n\t\tthis.useXHR = true;\n\n\t\t/**\n\t\t * Try and use XMLHttpRequest (XHR) when possible. Note that LoadQueue will default to tag loading or XHR\n\t\t * loading depending on the requirements for a media type. For example, HTML audio can not be loaded with XHR,\n\t\t * and plain text can not be loaded with tags, so it will default the the correct type instead of using the\n\t\t * user-defined type.\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t * @since 0.6.0\n\t\t */\n\t\tthis.preferXHR = true; //TODO: Get/Set\n\t\tthis._preferXHR = true;\n\t\tthis.setPreferXHR(preferXHR);\n\n\t\t// protected properties\n\t\t/**\n\t\t * Whether the queue is currently paused or not.\n\t\t * @property _paused\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._paused = false;\n\n\t\t/**\n\t\t * A path that will be prepended on to the item's {{#crossLink \"LoadItem/src:property\"}}{{/crossLink}}. The\n\t\t * `_basePath` property will only be used if an item's source is relative, and does not include a protocol such\n\t\t * as `http://`, or a relative path such as `../`.\n\t\t * @property _basePath\n\t\t * @type {String}\n\t\t * @private\n\t\t * @since 0.3.1\n\t\t */\n\t\tthis._basePath = basePath;\n\n\t\t/**\n\t\t * An optional flag to set on images that are loaded using PreloadJS, which enables CORS support. Images loaded\n\t\t * cross-domain by servers that support CORS require the crossOrigin flag to be loaded and interacted with by\n\t\t * a canvas. When loading locally, or with a server with no CORS support, this flag can cause other security issues,\n\t\t * so it is recommended to only set it if you are sure the server supports it. Currently, supported values are \"\"\n\t\t * and \"Anonymous\".\n\t\t * @property _crossOrigin\n\t\t * @type {String}\n\t\t * @default \"\"\n\t\t * @private\n\t\t * @since 0.4.1\n\t\t */\n\t\tthis._crossOrigin = crossOrigin;\n\n\t\t/**\n\t\t * Determines if the loadStart event was dispatched already. This event is only fired one time, when the first\n\t\t * file is requested.\n\t\t * @property _loadStartWasDispatched\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @private\n\t\t */\n\t\tthis._loadStartWasDispatched = false;\n\n\t\t/**\n\t\t * Determines if there is currently a script loading. This helps ensure that only a single script loads at once when\n\t\t * using a script tag to do preloading.\n\t\t * @property _currentlyLoadingScript\n\t\t * @type {Boolean}\n\t\t * @private\n\t\t */\n\t\tthis._currentlyLoadingScript = null;\n\n\t\t/**\n\t\t * An array containing the currently downloading files.\n\t\t * @property _currentLoads\n\t\t * @type {Array}\n\t\t * @private\n\t\t */\n\t\tthis._currentLoads = [];\n\n\t\t/**\n\t\t * An array containing the queued items that have not yet started downloading.\n\t\t * @property _loadQueue\n\t\t * @type {Array}\n\t\t * @private\n\t\t */\n\t\tthis._loadQueue = [];\n\n\t\t/**\n\t\t * An array containing downloads that have not completed, so that the LoadQueue can be properly reset.\n\t\t * @property _loadQueueBackup\n\t\t * @type {Array}\n\t\t * @private\n\t\t */\n\t\tthis._loadQueueBackup = [];\n\n\t\t/**\n\t\t * An object hash of items that have finished downloading, indexed by the {{#crossLink \"LoadItem\"}}{{/crossLink}}\n\t\t * id.\n\t\t * @property _loadItemsById\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._loadItemsById = {};\n\n\t\t/**\n\t\t * An object hash of items that have finished downloading, indexed by {{#crossLink \"LoadItem\"}}{{/crossLink}}\n\t\t * source.\n\t\t * @property _loadItemsBySrc\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._loadItemsBySrc = {};\n\n\t\t/**\n\t\t * An object hash of loaded items, indexed by the ID of the {{#crossLink \"LoadItem\"}}{{/crossLink}}.\n\t\t * @property _loadedResults\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._loadedResults = {};\n\n\t\t/**\n\t\t * An object hash of un-parsed loaded items, indexed by the ID of the {{#crossLink \"LoadItem\"}}{{/crossLink}}.\n\t\t * @property _loadedRawResults\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._loadedRawResults = {};\n\n\t\t/**\n\t\t * The number of items that have been requested. This helps manage an overall progress without knowing how large\n\t\t * the files are before they are downloaded. This does not include items inside of loaders such as the\n\t\t * {{#crossLink \"ManifestLoader\"}}{{/crossLink}}.\n\t\t * @property _numItems\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @private\n\t\t */\n\t\tthis._numItems = 0;\n\n\t\t/**\n\t\t * The number of items that have completed loaded. This helps manage an overall progress without knowing how large\n\t\t * the files are before they are downloaded.\n\t\t * @property _numItemsLoaded\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @private\n\t\t */\n\t\tthis._numItemsLoaded = 0;\n\n\t\t/**\n\t\t * A list of scripts in the order they were requested. This helps ensure that scripts are \"completed\" in the right\n\t\t * order.\n\t\t * @property _scriptOrder\n\t\t * @type {Array}\n\t\t * @private\n\t\t */\n\t\tthis._scriptOrder = [];\n\n\t\t/**\n\t\t * A list of scripts that have been loaded. Items are added to this list as <code>null</code> when they are\n\t\t * requested, contain the loaded item if it has completed, but not been dispatched to the user, and <code>true</true>\n\t\t * once they are complete and have been dispatched.\n\t\t * @property _loadedScripts\n\t\t * @type {Array}\n\t\t * @private\n\t\t */\n\t\tthis._loadedScripts = [];\n\n\t\t/**\n\t\t * The last progress amount. This is used to suppress duplicate progress events.\n\t\t * @property _lastProgress\n\t\t * @type {Number}\n\t\t * @private\n\t\t * @since 0.6.0\n\t\t */\n\t\tthis._lastProgress = NaN;\n\n\t};\n\n// static properties\n\t/**\n\t * The time in milliseconds to assume a load has failed. An {{#crossLink \"AbstractLoader/error:event\"}}{{/crossLink}}\n\t * event is dispatched if the timeout is reached before any data is received.\n\t * @property loadTimeout\n\t * @type {Number}\n\t * @default 8000\n\t * @static\n\t * @since 0.4.1\n\t * @deprecated In favour of the LoadItem.LOAD_TIMEOUT_DEFAULT property.\n\t */\n\ts.loadTimeout = 8000;\n\n\t/**\n\t * The time in milliseconds to assume a load has failed.\n\t * @property LOAD_TIMEOUT\n\t * @type {Number}\n\t * @default 0\n\t * @deprecated in favor of the LoadQueue.loadTimeout property.\n\t */\n\ts.LOAD_TIMEOUT = 0;\n\n// Preload Types\n\t/**\n\t * @property BINARY\n\t * @type {String}\n\t * @default binary\n\t * @static\n\t * @deprecated Use the AbstractLoader.BINARY property instead.\n\t */\n\ts.BINARY = createjs.AbstractLoader.BINARY;\n\n\t/**\n\t * @property CSS\n\t * @type {String}\n\t * @default css\n\t * @static\n\t * @deprecated Use the AbstractLoader.CSS property instead.\n\t */\n\ts.CSS = createjs.AbstractLoader.CSS;\n\n\t/**\n\t * @property IMAGE\n\t * @type {String}\n\t * @default image\n\t * @static\n\t * @deprecated Use the AbstractLoader.IMAGE property instead.\n\t */\n\ts.IMAGE = createjs.AbstractLoader.IMAGE;\n\n\t/**\n\t * @property JAVASCRIPT\n\t * @type {String}\n\t * @default javascript\n\t * @static\n\t * @deprecated Use the AbstractLoader.JAVASCRIPT property instead.\n\t */\n\ts.JAVASCRIPT = createjs.AbstractLoader.JAVASCRIPT;\n\n\t/**\n\t * @property JSON\n\t * @type {String}\n\t * @default json\n\t * @static\n\t * @deprecated Use the AbstractLoader.JSON property instead.\n\t */\n\ts.JSON = createjs.AbstractLoader.JSON;\n\n\t/**\n\t * @property JSONP\n\t * @type {String}\n\t * @default jsonp\n\t * @static\n\t * @deprecated Use the AbstractLoader.JSONP property instead.\n\t */\n\ts.JSONP = createjs.AbstractLoader.JSONP;\n\n\t/**\n\t * @property MANIFEST\n\t * @type {String}\n\t * @default manifest\n\t * @static\n\t * @since 0.4.1\n\t * @deprecated Use the AbstractLoader.MANIFEST property instead.\n\t */\n\ts.MANIFEST = createjs.AbstractLoader.MANIFEST;\n\n\t/**\n\t * @property SOUND\n\t * @type {String}\n\t * @default sound\n\t * @static\n\t * @deprecated Use the AbstractLoader.SOUND property instead.\n\t */\n\ts.SOUND = createjs.AbstractLoader.SOUND;\n\n\t/**\n\t * @property VIDEO\n\t * @type {String}\n\t * @default video\n\t * @static\n\t * @deprecated Use the AbstractLoader.VIDEO instead.\n\t */\n\ts.VIDEO = createjs.AbstractLoader.VIDEO;\n\n\t/**\n\t * @property SVG\n\t * @type {String}\n\t * @default svg\n\t * @static\n\t * @deprecated Use the AbstractLoader.SVG property instead.\n\t */\n\ts.SVG = createjs.AbstractLoader.SVG;\n\n\t/**\n\t * @property TEXT\n\t * @type {String}\n\t * @default text\n\t * @static\n\t * @deprecated Use the AbstractLoader.TEXT instead.\n\t */\n\ts.TEXT = createjs.AbstractLoader.TEXT;\n\n\t/**\n\t * @property XML\n\t * @type {String}\n\t * @default xml\n\t * @static\n\t * @deprecated Use the AbstractLoader.XML instead.\n\t */\n\ts.XML = createjs.AbstractLoader.XML;\n\n\t/**\n\t * @property POST\n\t * @type {string}\n\t * @deprecated Use the AbstractLoader.POST property instead.\n\t */\n\ts.POST = createjs.AbstractLoader.POST;\n\n\t/**\n\t * @property GET\n\t * @type {string}\n\t * @deprecated Use the AbstractLoader.GET property instead.\n\t */\n\ts.GET = createjs.AbstractLoader.GET;\n\n// events\n\t/**\n\t * This event is fired when an individual file has loaded, and been processed.\n\t * @event fileload\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {Object} item The file item which was specified in the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n\t * or {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}} call. If only a string path or tag was specified, the\n\t * object will contain that value as a `src` property.\n\t * @param {Object} result The HTML tag or parsed result of the loaded item.\n\t * @param {Object} rawResult The unprocessed result, usually the raw text or binary data before it is converted\n\t * to a usable object.\n\t * @since 0.3.0\n\t */\n\n\t/**\n\t * This {{#crossLink \"ProgressEvent\"}}{{/crossLink}} that is fired when an an individual file's progress changes.\n\t * @event fileprogress\n\t * @since 0.3.0\n\t */\n\n\t/**\n\t * This event is fired when an individual file starts to load.\n\t * @event filestart\n\t * @param {Object} The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {Object} item The file item which was specified in the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n\t * or {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}} call. If only a string path or tag was specified, the\n\t * object will contain that value as a property.\n\t */\n\n\t/**\n\t * Although it extends {{#crossLink \"AbstractLoader\"}}{{/crossLink}}, the `initialize` event is never fired from\n\t * a LoadQueue instance.\n\t * @event initialize\n\t * @private\n\t */\n\n// public methods\n\t/**\n\t * Register a custom loaders class. New loaders are given precedence over loaders added earlier and default loaders.\n\t * It is recommended that loaders extend {{#crossLink \"AbstractLoader\"}}{{/crossLink}}. Loaders can only be added\n\t * once, and will be prepended to the list of available loaders.\n\t * @method registerLoader\n\t * @param {Function|AbstractLoader} loader The AbstractLoader class to add.\n\t * @since 0.6.0\n\t */\n\tp.registerLoader = function (loader) {\n\t\tif (!loader || !loader.canLoadItem) {\n\t\t\tthrow new Error(\"loader is of an incorrect type.\");\n\t\t} else if (this._availableLoaders.indexOf(loader) != -1) {\n\t\t\tthrow new Error(\"loader already exists.\"); //LM: Maybe just silently fail here\n\t\t}\n\n\t\tthis._availableLoaders.unshift(loader);\n\t};\n\n\t/**\n\t * Remove a custom loader added using {{#crossLink \"registerLoader\"}}{{/crossLink}}. Only custom loaders can be\n\t * unregistered, the default loaders will always be available.\n\t * @method unregisterLoader\n\t * @param {Function|AbstractLoader} loader The AbstractLoader class to remove\n\t */\n\tp.unregisterLoader = function (loader) {\n\t\tvar idx = this._availableLoaders.indexOf(loader);\n\t\tif (idx != -1 && idx < this._defaultLoaderLength - 1) {\n\t\t\tthis._availableLoaders.splice(idx, 1);\n\t\t}\n\t};\n\n\t/**\n\t * @method setUseXHR\n\t * @param {Boolean} value The new useXHR value to set.\n\t * @return {Boolean} The new useXHR value. If XHR is not supported by the browser, this will return false, even if\n\t * the provided value argument was true.\n\t * @since 0.3.0\n\t * @deprecated use the {{#crossLink \"LoadQueue/preferXHR:property\"}}{{/crossLink}} property, or the\n\t * {{#crossLink \"LoadQueue/setUseXHR\"}}{{/crossLink}} method instead.\n\t */\n\tp.setUseXHR = function (value) {\n\t\treturn this.setPreferXHR(value);\n\t};\n\n\t/**\n\t * Change the {{#crossLink \"preferXHR:property\"}}{{/crossLink}} value. Note that if this is set to `true`, it may\n\t * fail, or be ignored depending on the browser's capabilities and the load type.\n\t * @method setPreferXHR\n\t * @param {Boolean} value\n\t * @returns {Boolean} The value of {{#crossLink \"preferXHR\"}}{{/crossLink}} that was successfully set.\n\t * @since 0.6.0\n\t */\n\tp.setPreferXHR = function (value) {\n\t\t// Determine if we can use XHR. XHR defaults to TRUE, but the browser may not support it.\n\t\t//TODO: Should we be checking for the other XHR types? Might have to do a try/catch on the different types similar to createXHR.\n\t\tthis.preferXHR = (value != false && window.XMLHttpRequest != null);\n\t\treturn this.preferXHR;\n\t};\n\n\t/**\n\t * Stops all queued and loading items, and clears the queue. This also removes all internal references to loaded\n\t * content, and allows the queue to be used again.\n\t * @method removeAll\n\t * @since 0.3.0\n\t */\n\tp.removeAll = function () {\n\t\tthis.remove();\n\t};\n\n\t/**\n\t * Stops an item from being loaded, and removes it from the queue. If nothing is passed, all items are removed.\n\t * This also removes internal references to loaded item(s).\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      queue.loadManifest([\n\t *          {src:\"test.png\", id:\"png\"},\n\t *          {src:\"test.jpg\", id:\"jpg\"},\n\t *          {src:\"test.mp3\", id:\"mp3\"}\n\t *      ]);\n\t *      queue.remove(\"png\"); // Single item by ID\n\t *      queue.remove(\"png\", \"test.jpg\"); // Items as arguments. Mixed id and src.\n\t *      queue.remove([\"test.png\", \"jpg\"]); // Items in an Array. Mixed id and src.\n\t *\n\t * @method remove\n\t * @param {String | Array} idsOrUrls* The id or ids to remove from this queue. You can pass an item, an array of\n\t * items, or multiple items as arguments.\n\t * @since 0.3.0\n\t */\n\tp.remove = function (idsOrUrls) {\n\t\tvar args = null;\n\n\t\tif (idsOrUrls && !Array.isArray(idsOrUrls)) {\n\t\t\targs = [idsOrUrls];\n\t\t} else if (idsOrUrls) {\n\t\t\targs = idsOrUrls;\n\t\t} else if (arguments.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar itemsWereRemoved = false;\n\n\t\t// Destroy everything\n\t\tif (!args) {\n\t\t\tthis.close();\n\t\t\tfor (var n in this._loadItemsById) {\n\t\t\t\tthis._disposeItem(this._loadItemsById[n]);\n\t\t\t}\n\t\t\tthis.init(this.preferXHR, this._basePath);\n\n\t\t\t// Remove specific items\n\t\t} else {\n\t\t\twhile (args.length) {\n\t\t\t\tvar item = args.pop();\n\t\t\t\tvar r = this.getResult(item);\n\n\t\t\t\t//Remove from the main load Queue\n\t\t\t\tfor (i = this._loadQueue.length - 1; i >= 0; i--) {\n\t\t\t\t\tloadItem = this._loadQueue[i].getItem();\n\t\t\t\t\tif (loadItem.id == item || loadItem.src == item) {\n\t\t\t\t\t\tthis._loadQueue.splice(i, 1)[0].cancel();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//Remove from the backup queue\n\t\t\t\tfor (i = this._loadQueueBackup.length - 1; i >= 0; i--) {\n\t\t\t\t\tloadItem = this._loadQueueBackup[i].getItem();\n\t\t\t\t\tif (loadItem.id == item || loadItem.src == item) {\n\t\t\t\t\t\tthis._loadQueueBackup.splice(i, 1)[0].cancel();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (r) {\n\t\t\t\t\tthis._disposeItem(this.getItem(item));\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i = this._currentLoads.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tvar loadItem = this._currentLoads[i].getItem();\n\t\t\t\t\t\tif (loadItem.id == item || loadItem.src == item) {\n\t\t\t\t\t\t\tthis._currentLoads.splice(i, 1)[0].cancel();\n\t\t\t\t\t\t\titemsWereRemoved = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If this was called during a load, try to load the next item.\n\t\t\tif (itemsWereRemoved) {\n\t\t\t\tthis._loadNext();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Stops all open loads, destroys any loaded items, and resets the queue, so all items can\n\t * be reloaded again by calling {{#crossLink \"AbstractLoader/load\"}}{{/crossLink}}. Items are not removed from the\n\t * queue. To remove items use the {{#crossLink \"LoadQueue/remove\"}}{{/crossLink}} or\n\t * {{#crossLink \"LoadQueue/removeAll\"}}{{/crossLink}} method.\n\t * @method reset\n\t * @since 0.3.0\n\t */\n\tp.reset = function () {\n\t\tthis.close();\n\t\tfor (var n in this._loadItemsById) {\n\t\t\tthis._disposeItem(this._loadItemsById[n]);\n\t\t}\n\n\t\t//Reset the queue to its start state\n\t\tvar a = [];\n\t\tfor (var i = 0, l = this._loadQueueBackup.length; i < l; i++) {\n\t\t\ta.push(this._loadQueueBackup[i].getItem());\n\t\t}\n\n\t\tthis.loadManifest(a, false);\n\t};\n\n\t/**\n\t * Register a plugin. Plugins can map to load types (sound, image, etc), or specific extensions (png, mp3, etc).\n\t * Currently, only one plugin can exist per type/extension.\n\t *\n\t * When a plugin is installed, a <code>getPreloadHandlers()</code> method will be called on it. For more information\n\t * on this method, check out the {{#crossLink \"SamplePlugin/getPreloadHandlers\"}}{{/crossLink}} method in the\n\t * {{#crossLink \"SamplePlugin\"}}{{/crossLink}} class.\n\t *\n\t * Before a file is loaded, a matching plugin has an opportunity to modify the load. If a `callback` is returned\n\t * from the {{#crossLink \"SamplePlugin/getPreloadHandlers\"}}{{/crossLink}} method, it will be invoked first, and its\n\t * result may cancel or modify the item. The callback method can also return a `completeHandler` to be fired when\n\t * the file is loaded, or a `tag` object, which will manage the actual download. For more information on these\n\t * methods, check out the {{#crossLink \"SamplePlugin/preloadHandler\"}}{{/crossLink}} and {{#crossLink \"SamplePlugin/fileLoadHandler\"}}{{/crossLink}}\n\t * methods on the {{#crossLink \"SamplePlugin\"}}{{/crossLink}}.\n\t *\n\t * @method installPlugin\n\t * @param {Function} plugin The plugin class to install.\n\t */\n\tp.installPlugin = function (plugin) {\n\t\tif (plugin == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (plugin.getPreloadHandlers != null) {\n\t\t\tthis._plugins.push(plugin);\n\t\t\tvar map = plugin.getPreloadHandlers();\n\t\t\tmap.scope = plugin;\n\n\t\t\tif (map.types != null) {\n\t\t\t\tfor (var i = 0, l = map.types.length; i < l; i++) {\n\t\t\t\t\tthis._typeCallbacks[map.types[i]] = map;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (map.extensions != null) {\n\t\t\t\tfor (i = 0, l = map.extensions.length; i < l; i++) {\n\t\t\t\t\tthis._extensionCallbacks[map.extensions[i]] = map;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Set the maximum number of concurrent connections. Note that browsers and servers may have a built-in maximum\n\t * number of open connections, so any additional connections may remain in a pending state until the browser\n\t * opens the connection. When loading scripts using tags, and when {{#crossLink \"LoadQueue/maintainScriptOrder:property\"}}{{/crossLink}}\n\t * is `true`, only one script is loaded at a time due to browser limitations.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var queue = new createjs.LoadQueue();\n\t *      queue.setMaxConnections(10); // Allow 10 concurrent loads\n\t *\n\t * @method setMaxConnections\n\t * @param {Number} value The number of concurrent loads to allow. By default, only a single connection per LoadQueue\n\t * is open at any time.\n\t */\n\tp.setMaxConnections = function (value) {\n\t\tthis._maxConnections = value;\n\t\tif (!this._paused && this._loadQueue.length > 0) {\n\t\t\tthis._loadNext();\n\t\t}\n\t};\n\n\t/**\n\t * Load a single file. To add multiple files at once, use the {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\n\t * method.\n\t *\n\t * Files are always appended to the current queue, so this method can be used multiple times to add files.\n\t * To clear the queue first, use the {{#crossLink \"AbstractLoader/close\"}}{{/crossLink}} method.\n\t * @method loadFile\n\t * @param {LoadItem|Object|String} file The file object or path to load. A file can be either\n\t * <ul>\n\t *     <li>A {{#crossLink \"LoadItem\"}}{{/crossLink}} instance</li>\n\t *     <li>An object containing properties defined by {{#crossLink \"LoadItem\"}}{{/crossLink}}</li>\n\t *     <li>OR A string path to a resource. Note that this kind of load item will be converted to a {{#crossLink \"LoadItem\"}}{{/crossLink}}\n\t *     in the background.</li>\n\t * </ul>\n\t * @param {Boolean} [loadNow=true] Kick off an immediate load (true) or wait for a load call (false). The default\n\t * value is true. If the queue is paused using {{#crossLink \"LoadQueue/setPaused\"}}{{/crossLink}}, and the value is\n\t * `true`, the queue will resume automatically.\n\t * @param {String} [basePath] A base path that will be prepended to each file. The basePath argument overrides the\n\t * path specified in the constructor. Note that if you load a manifest using a file of type {{#crossLink \"AbstractLoader/MANIFEST:property\"}}{{/crossLink}},\n\t * its files will <strong>NOT</strong> use the basePath parameter. <strong>The basePath parameter is deprecated.</strong>\n\t * This parameter will be removed in a future version. Please either use the `basePath` parameter in the LoadQueue\n\t * constructor, or a `path` property in a manifest definition.\n\t */\n\tp.loadFile = function (file, loadNow, basePath) {\n\t\tif (file == null) {\n\t\t\tvar event = new createjs.ErrorEvent(\"PRELOAD_NO_FILE\");\n\t\t\tthis._sendError(event);\n\t\t\treturn;\n\t\t}\n\t\tthis._addItem(file, null, basePath);\n\n\t\tif (loadNow !== false) {\n\t\t\tthis.setPaused(false);\n\t\t} else {\n\t\t\tthis.setPaused(true);\n\t\t}\n\t};\n\n\t/**\n\t * Load an array of files. To load a single file, use the {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} method.\n\t * The files in the manifest are requested in the same order, but may complete in a different order if the max\n\t * connections are set above 1 using {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}}. Scripts will load\n\t * in the right order as long as {{#crossLink \"LoadQueue/maintainScriptOrder\"}}{{/crossLink}} is true (which is\n\t * default).\n\t *\n\t * Files are always appended to the current queue, so this method can be used multiple times to add files.\n\t * To clear the queue first, use the {{#crossLink \"AbstractLoader/close\"}}{{/crossLink}} method.\n\t * @method loadManifest\n\t * @param {Array|String|Object} manifest An list of files to load. The loadManifest call supports four types of\n\t * manifests:\n\t * <ol>\n\t *     <li>A string path, which points to a manifest file, which is a JSON file that contains a \"manifest\" property,\n\t *     which defines the list of files to load, and can optionally contain a \"path\" property, which will be\n\t *     prepended to each file in the list.</li>\n\t *     <li>An object which defines a \"src\", which is a JSON or JSONP file. A \"callback\" can be defined for JSONP\n\t *     file. The JSON/JSONP file should contain a \"manifest\" property, which defines the list of files to load,\n\t *     and can optionally contain a \"path\" property, which will be prepended to each file in the list.</li>\n\t *     <li>An object which contains a \"manifest\" property, which defines the list of files to load, and can\n\t *     optionally contain a \"path\" property, which will be prepended to each file in the list.</li>\n\t *     <li>An Array of files to load.</li>\n\t * </ol>\n\t *\n\t * Each \"file\" in a manifest can be either:\n\t * <ul>\n\t *     <li>A {{#crossLink \"LoadItem\"}}{{/crossLink}} instance</li>\n\t *     <li>An object containing properties defined by {{#crossLink \"LoadItem\"}}{{/crossLink}}</li>\n\t *     <li>OR A string path to a resource. Note that this kind of load item will be converted to a {{#crossLink \"LoadItem\"}}{{/crossLink}}\n\t *     in the background.</li>\n\t * </ul>\n\t *\n\t * @param {Boolean} [loadNow=true] Kick off an immediate load (true) or wait for a load call (false). The default\n\t * value is true. If the queue is paused using {{#crossLink \"LoadQueue/setPaused\"}}{{/crossLink}} and this value is\n\t * `true`, the queue will resume automatically.\n\t * @param {String} [basePath] A base path that will be prepended to each file. The basePath argument overrides the\n\t * path specified in the constructor. Note that if you load a manifest using a file of type {{#crossLink \"LoadQueue/MANIFEST:property\"}}{{/crossLink}},\n\t * its files will <strong>NOT</strong> use the basePath parameter. <strong>The basePath parameter is deprecated.</strong>\n\t * This parameter will be removed in a future version. Please either use the `basePath` parameter in the LoadQueue\n\t * constructor, or a `path` property in a manifest definition.\n\t */\n\tp.loadManifest = function (manifest, loadNow, basePath) {\n\t\tvar fileList = null;\n\t\tvar path = null;\n\n\t\t// Array-based list of items\n\t\tif (Array.isArray(manifest)) {\n\t\t\tif (manifest.length == 0) {\n\t\t\t\tvar event = new createjs.ErrorEvent(\"PRELOAD_MANIFEST_EMPTY\");\n\t\t\t\tthis._sendError(event);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfileList = manifest;\n\n\t\t\t// String-based. Only file manifests can be specified this way. Any other types will cause an error when loaded.\n\t\t} else if (typeof(manifest) === \"string\") {\n\t\t\tfileList = [\n\t\t\t\t{\n\t\t\t\t\tsrc: manifest,\n\t\t\t\t\ttype: s.MANIFEST\n\t\t\t\t}\n\t\t\t];\n\n\t\t} else if (typeof(manifest) == \"object\") {\n\n\t\t\t// An object that defines a manifest path\n\t\t\tif (manifest.src !== undefined) {\n\t\t\t\tif (manifest.type == null) {\n\t\t\t\t\tmanifest.type = s.MANIFEST;\n\t\t\t\t} else if (manifest.type != s.MANIFEST) {\n\t\t\t\t\tvar event = new createjs.ErrorEvent(\"PRELOAD_MANIFEST_TYPE\");\n\t\t\t\t\tthis._sendError(event);\n\t\t\t\t}\n\t\t\t\tfileList = [manifest];\n\n\t\t\t\t// An object that defines a manifest\n\t\t\t} else if (manifest.manifest !== undefined) {\n\t\t\t\tfileList = manifest.manifest;\n\t\t\t\tpath = manifest.path;\n\t\t\t}\n\n\t\t\t// Unsupported. This will throw an error.\n\t\t} else {\n\t\t\tvar event = new createjs.ErrorEvent(\"PRELOAD_MANIFEST_NULL\");\n\t\t\tthis._sendError(event);\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var i = 0, l = fileList.length; i < l; i++) {\n\t\t\tthis._addItem(fileList[i], path, basePath);\n\t\t}\n\n\t\tif (loadNow !== false) {\n\t\t\tthis.setPaused(false);\n\t\t} else {\n\t\t\tthis.setPaused(true);\n\t\t}\n\n\t};\n\n\t/**\n\t * Start a LoadQueue that was created, but not automatically started.\n\t * @method load\n\t */\n\tp.load = function () {\n\t\tthis.setPaused(false);\n\t};\n\n\t/**\n\t * Look up a {{#crossLink \"LoadItem\"}}{{/crossLink}} using either the \"id\" or \"src\" that was specified when loading it. Note that if no \"id\" was\n\t * supplied with the load item, the ID will be the \"src\", including a `path` property defined by a manifest. The\n\t * `basePath` will not be part of the ID.\n\t * @method getItem\n\t * @param {String} value The <code>id</code> or <code>src</code> of the load item.\n\t * @return {Object} The load item that was initially requested using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}}\n\t * or {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}. This object is also returned via the {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}}\n\t * event as the `item` parameter.\n\t */\n\tp.getItem = function (value) {\n\t\treturn this._loadItemsById[value] || this._loadItemsBySrc[value];\n\t};\n\n\t/**\n\t * Look up a loaded result using either the \"id\" or \"src\" that was specified when loading it. Note that if no \"id\"\n\t * was supplied with the load item, the ID will be the \"src\", including a `path` property defined by a manifest. The\n\t * `basePath` will not be part of the ID.\n\t * @method getResult\n\t * @param {String} value The <code>id</code> or <code>src</code> of the load item.\n\t * @param {Boolean} [rawResult=false] Return a raw result instead of a formatted result. This applies to content\n\t * loaded via XHR such as scripts, XML, CSS, and Images. If there is no raw result, the formatted result will be\n\t * returned instead.\n\t * @return {Object} A result object containing the content that was loaded, such as:\n\t * <ul>\n\t *      <li>An image tag (&lt;image /&gt;) for images</li>\n\t *      <li>A script tag for JavaScript (&lt;script /&gt;). Note that scripts are automatically added to the HTML\n\t *      DOM.</li>\n\t *      <li>A style tag for CSS (&lt;style /&gt; or &lt;link &gt;)</li>\n\t *      <li>Raw text for TEXT</li>\n\t *      <li>A formatted JavaScript object defined by JSON</li>\n\t *      <li>An XML document</li>\n\t *      <li>A binary arraybuffer loaded by XHR</li>\n\t *      <li>An audio tag (&lt;audio &gt;) for HTML audio. Note that it is recommended to use SoundJS APIs to play\n\t *      loaded audio. Specifically, audio loaded by Flash and WebAudio will return a loader object using this method\n\t *      which can not be used to play audio back.</li>\n\t * </ul>\n\t * This object is also returned via the {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event as the 'item`\n\t * parameter. Note that if a raw result is requested, but not found, the result will be returned instead.\n\t */\n\tp.getResult = function (value, rawResult) {\n\t\tvar item = this._loadItemsById[value] || this._loadItemsBySrc[value];\n\t\tif (item == null) {\n\t\t\treturn null;\n\t\t}\n\t\tvar id = item.id;\n\t\tif (rawResult && this._loadedRawResults[id]) {\n\t\t\treturn this._loadedRawResults[id];\n\t\t}\n\t\treturn this._loadedResults[id];\n\t};\n\n\t/**\n\t * Generate an list of items loaded by this queue.\n\t * @method getItems\n\t * @param {Boolean} loaded Determines if only items that have been loaded should be returned. If false, in-progress\n\t * and failed load items will also be included.\n\t * @returns {Array} A list of objects that have been loaded. Each item includes the {{#crossLink \"LoadItem\"}}{{/crossLink}},\n\t * result, and rawResult.\n\t * @since 0.6.0\n\t */\n\tp.getItems = function (loaded) {\n\t\tvar arr = [];\n\t\tfor (var n in this._loadItemsById) {\n\t\t\tvar item = this._loadItemsById[n];\n\t\t\tvar result = this.getResult(n);\n\t\t\tif (loaded === true && result == null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tarr.push({\n\t\t\t\titem: item,\n\t\t\t\tresult: result,\n\t\t\t\trawResult: this.getResult(n, true)\n\t\t\t});\n\t\t}\n\t\treturn arr;\n\t};\n\n\t/**\n\t * Pause or resume the current load. Active loads will not be cancelled, but the next items in the queue will not\n\t * be processed when active loads complete. LoadQueues are not paused by default.\n\t *\n\t * Note that if new items are added to the queue using {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} or\n\t * {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}, a paused queue will be resumed, unless the `loadNow`\n\t * argument is `false`.\n\t * @method setPaused\n\t * @param {Boolean} value Whether the queue should be paused or not.\n\t */\n\tp.setPaused = function (value) {\n\t\tthis._paused = value;\n\t\tif (!this._paused) {\n\t\t\tthis._loadNext();\n\t\t}\n\t};\n\n\t/**\n\t * Close the active queue. Closing a queue completely empties the queue, and prevents any remaining items from\n\t * starting to download. Note that currently any active loads will remain open, and events may be processed.\n\t *\n\t * To stop and restart a queue, use the {{#crossLink \"LoadQueue/setPaused\"}}{{/crossLink}} method instead.\n\t * @method close\n\t */\n\tp.close = function () {\n\t\twhile (this._currentLoads.length) {\n\t\t\tthis._currentLoads.pop().cancel();\n\t\t}\n\t\tthis._scriptOrder.length = 0;\n\t\tthis._loadedScripts.length = 0;\n\t\tthis.loadStartWasDispatched = false;\n\t\tthis._itemCount = 0;\n\t\tthis._lastProgress = NaN;\n\t};\n\n// protected methods\n\t/**\n\t * Add an item to the queue. Items are formatted into a usable object containing all the properties necessary to\n\t * load the content. The load queue is populated with the loader instance that handles preloading, and not the load\n\t * item that was passed in by the user. To look up the load item by id or src, use the {{#crossLink \"LoadQueue.getItem\"}}{{/crossLink}}\n\t * method.\n\t * @method _addItem\n\t * @param {String|Object} value The item to add to the queue.\n\t * @param {String} [path] An optional path prepended to the `src`. The path will only be prepended if the src is\n\t * relative, and does not start with a protocol such as `http://`, or a path like `../`. If the LoadQueue was\n\t * provided a {{#crossLink \"_basePath\"}}{{/crossLink}}, then it will optionally be prepended after.\n\t * @param {String} [basePath] <strong>Deprecated</strong>An optional basePath passed into a {{#crossLink \"LoadQueue/loadManifest\"}}{{/crossLink}}\n\t * or {{#crossLink \"LoadQueue/loadFile\"}}{{/crossLink}} call. This parameter will be removed in a future tagged\n\t * version.\n\t * @private\n\t */\n\tp._addItem = function (value, path, basePath) {\n\t\tvar item = this._createLoadItem(value, path, basePath); // basePath and manifest path are added to the src.\n\t\tif (item == null) {\n\t\t\treturn;\n\t\t} // Sometimes plugins or types should be skipped.\n\t\tvar loader = this._createLoader(item);\n\t\tif (loader != null) {\n\t\t\tif (\"plugins\" in loader) {\n\t\t\t\tloader.plugins = this._plugins;\n\t\t\t}\n\t\t\titem._loader = loader;\n\t\t\tthis._loadQueue.push(loader);\n\t\t\tthis._loadQueueBackup.push(loader);\n\n\t\t\tthis._numItems++;\n\t\t\tthis._updateProgress();\n\n\t\t\t// Only worry about script order when using XHR to load scripts. Tags are only loading one at a time.\n\t\t\tif ((this.maintainScriptOrder\n\t\t\t\t\t&& item.type == createjs.LoadQueue.JAVASCRIPT\n\t\t\t\t\t\t//&& loader instanceof createjs.XHRLoader //NOTE: Have to track all JS files this way\n\t\t\t\t\t)\n\t\t\t\t\t|| item.maintainOrder === true) {\n\t\t\t\tthis._scriptOrder.push(item);\n\t\t\t\tthis._loadedScripts.push(null);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Create a refined {{#crossLink \"LoadItem\"}}{{/crossLink}}, which contains all the required properties. The type of\n\t * item is determined by browser support, requirements based on the file type, and developer settings. For example,\n\t * XHR is only used for file types that support it in new browsers.\n\t *\n\t * Before the item is returned, any plugins registered to handle the type or extension will be fired, which may\n\t * alter the load item.\n\t * @method _createLoadItem\n\t * @param {String | Object | HTMLAudioElement | HTMLImageElement} value The item that needs to be preloaded.\n\t * @param {String} [path] A path to prepend to the item's source. Sources beginning with http:// or similar will\n\t * not receive a path. Since PreloadJS 0.4.1, the src will be modified to include the `path` and {{#crossLink \"LoadQueue/_basePath:property\"}}{{/crossLink}}\n\t * when it is added.\n\t * @param {String} [basePath] <strong>Deprectated</strong> A base path to prepend to the items source in addition to\n\t * the path argument.\n\t * @return {Object} The loader instance that will be used.\n\t * @private\n\t */\n\tp._createLoadItem = function (value, path, basePath) {\n\t\tvar item = createjs.LoadItem.create(value);\n\t\tif (item == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar bp = \"\"; // Store the generated basePath\n\t\tvar useBasePath = basePath || this._basePath;\n\n\t\tif (item.src instanceof Object) {\n\t\t\tif (!item.type) {\n\t\t\t\treturn null;\n\t\t\t} // the the src is an object, type is required to pass off to plugin\n\t\t\tif (path) {\n\t\t\t\tbp = path;\n\t\t\t\tvar pathMatch = createjs.URLUtils.parseURI(path);\n\t\t\t\t// Also append basePath\n\t\t\t\tif (useBasePath != null && !pathMatch.absolute && !pathMatch.relative) {\n\t\t\t\t\tbp = useBasePath + bp;\n\t\t\t\t}\n\t\t\t} else if (useBasePath != null) {\n\t\t\t\tbp = useBasePath;\n\t\t\t}\n\t\t} else {\n\t\t\t// Determine Extension, etc.\n\t\t\tvar match = createjs.URLUtils.parseURI(item.src);\n\t\t\tif (match.extension) {\n\t\t\t\titem.ext = match.extension;\n\t\t\t}\n\t\t\tif (item.type == null) {\n\t\t\t\titem.type = createjs.RequestUtils.getTypeByExtension(item.ext);\n\t\t\t}\n\n\t\t\t// Inject path & basePath\n\t\t\tvar autoId = item.src;\n\t\t\tif (!match.absolute && !match.relative) {\n\t\t\t\tif (path) {\n\t\t\t\t\tbp = path;\n\t\t\t\t\tvar pathMatch = createjs.URLUtils.parseURI(path);\n\t\t\t\t\tautoId = path + autoId;\n\t\t\t\t\t// Also append basePath\n\t\t\t\t\tif (useBasePath != null && !pathMatch.absolute && !pathMatch.relative) {\n\t\t\t\t\t\tbp = useBasePath + bp;\n\t\t\t\t\t}\n\t\t\t\t} else if (useBasePath != null) {\n\t\t\t\t\tbp = useBasePath;\n\t\t\t\t}\n\t\t\t}\n\t\t\titem.src = bp + item.src;\n\t\t}\n\t\titem.path = bp;\n\n\t\t// If there's no id, set one now.\n\t\tif (item.id === undefined || item.id === null || item.id === \"\") {\n\t\t\titem.id = autoId;\n\t\t}\n\n\t\t// Give plugins a chance to modify the loadItem:\n\t\tvar customHandler = this._typeCallbacks[item.type] || this._extensionCallbacks[item.ext];\n\t\tif (customHandler) {\n\t\t\t// Plugins are now passed both the full source, as well as a combined path+basePath (appropriately)\n\t\t\tvar result = customHandler.callback.call(customHandler.scope, item, this);\n\n\t\t\t// The plugin will handle the load, or has canceled it. Ignore it.\n\t\t\tif (result === false) {\n\t\t\t\treturn null;\n\n\t\t\t\t// Load as normal:\n\t\t\t} else if (result === true) {\n\t\t\t\t// Do Nothing\n\n\t\t\t\t// Result is a loader class:\n\t\t\t} else if (result != null) {\n\t\t\t\titem._loader = result;\n\t\t\t}\n\n\t\t\t// Update the extension in case the type changed:\n\t\t\tmatch = createjs.URLUtils.parseURI(item.src);\n\t\t\tif (match.extension != null) {\n\t\t\t\titem.ext = match.extension;\n\t\t\t}\n\t\t}\n\n\t\t// Store the item for lookup. This also helps clean-up later.\n\t\tthis._loadItemsById[item.id] = item;\n\t\tthis._loadItemsBySrc[item.src] = item;\n\n\t\tif (item.crossOrigin == null) {\n\t\t\titem.crossOrigin = this._crossOrigin;\n\t\t}\n\n\t\treturn item;\n\t};\n\n\t/**\n\t * Create a loader for a load item.\n\t * @method _createLoader\n\t * @param {Object} item A formatted load item that can be used to generate a loader.\n\t * @return {AbstractLoader} A loader that can be used to load content.\n\t * @private\n\t */\n\tp._createLoader = function (item) {\n\t\tif (item._loader != null) { // A plugin already specified a loader\n\t\t\treturn item._loader;\n\t\t}\n\n\t\t// Initially, try and use the provided/supported XHR mode:\n\t\tvar preferXHR = this.preferXHR;\n\n\t\tfor (var i = 0; i < this._availableLoaders.length; i++) {\n\t\t\tvar loader = this._availableLoaders[i];\n\t\t\tif (loader && loader.canLoadItem(item)) {\n\t\t\t\treturn new loader(item, preferXHR);\n\t\t\t}\n\t\t}\n\n\t\t// TODO: Log error (requires createjs.log)\n\t\treturn null;\n\t};\n\n\t/**\n\t * Load the next item in the queue. If the queue is empty (all items have been loaded), then the complete event\n\t * is processed. The queue will \"fill up\" any empty slots, up to the max connection specified using\n\t * {{#crossLink \"LoadQueue.setMaxConnections\"}}{{/crossLink}} method. The only exception is scripts that are loaded\n\t * using tags, which have to be loaded one at a time to maintain load order.\n\t * @method _loadNext\n\t * @private\n\t */\n\tp._loadNext = function () {\n\t\tif (this._paused) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Only dispatch loadstart event when the first file is loaded.\n\t\tif (!this._loadStartWasDispatched) {\n\t\t\tthis._sendLoadStart();\n\t\t\tthis._loadStartWasDispatched = true;\n\t\t}\n\n\t\t// The queue has completed.\n\t\tif (this._numItems == this._numItemsLoaded) {\n\t\t\tthis.loaded = true;\n\t\t\tthis._sendComplete();\n\n\t\t\t// Load the next queue, if it has been defined.\n\t\t\tif (this.next && this.next.load) {\n\t\t\t\tthis.next.load();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.loaded = false;\n\t\t}\n\n\t\t// Must iterate forwards to load in the right order.\n\t\tfor (var i = 0; i < this._loadQueue.length; i++) {\n\t\t\tif (this._currentLoads.length >= this._maxConnections) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar loader = this._loadQueue[i];\n\n\t\t\t// Determine if we should be only loading one tag-script at a time:\n\t\t\t// Note: maintainOrder items don't do anything here because we can hold onto their loaded value\n\t\t\tif (!this._canStartLoad(loader)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis._loadQueue.splice(i, 1);\n\t\t\ti--;\n\t\t\tthis._loadItem(loader);\n\t\t}\n\t};\n\n\t/**\n\t * Begin loading an item. Event listeners are not added to the loaders until the load starts.\n\t * @method _loadItem\n\t * @param {AbstractLoader} loader The loader instance to start. Currently, this will be an XHRLoader or TagLoader.\n\t * @private\n\t */\n\tp._loadItem = function (loader) {\n\t\tloader.on(\"fileload\", this._handleFileLoad, this);\n\t\tloader.on(\"progress\", this._handleProgress, this);\n\t\tloader.on(\"complete\", this._handleFileComplete, this);\n\t\tloader.on(\"error\", this._handleError, this);\n\t\tloader.on(\"fileerror\", this._handleFileError, this);\n\t\tthis._currentLoads.push(loader);\n\t\tthis._sendFileStart(loader.getItem());\n\t\tloader.load();\n\t};\n\n\t/**\n\t * The callback that is fired when a loader loads a file. This enables loaders like {{#crossLink \"ManifestLoader\"}}{{/crossLink}}\n\t * to maintain internal queues, but for this queue to dispatch the {{#crossLink \"fileload:event\"}}{{/crossLink}}\n\t * events.\n\t * @param {Event} event The {{#crossLink \"AbstractLoader/fileload:event\"}}{{/crossLink}} event from the loader.\n\t * @private\n\t * @since 0.6.0\n\t */\n\tp._handleFileLoad = function (event) {\n\t\tevent.target = null;\n\t\tthis.dispatchEvent(event);\n\t};\n\n\t/**\n\t * The callback that is fired when a loader encounters an error from an internal file load operation. This enables\n\t * loaders like M\n\t * @param event\n\t * @private\n\t */\n\tp._handleFileError = function (event) {\n\t\tvar newEvent = new createjs.ErrorEvent(\"FILE_LOAD_ERROR\", null, event.item);\n\t\tthis._sendError(newEvent);\n\t};\n\n\t/**\n\t * The callback that is fired when a loader encounters an error. The queue will continue loading unless {{#crossLink \"LoadQueue/stopOnError:property\"}}{{/crossLink}}\n\t * is set to `true`.\n\t * @method _handleError\n\t * @param {ErrorEvent} event The error event, containing relevant error information.\n\t * @private\n\t */\n\tp._handleError = function (event) {\n\t\tvar loader = event.target;\n\t\tthis._numItemsLoaded++;\n\n\t\tthis._finishOrderedItem(loader, true);\n\t\tthis._updateProgress();\n\n\t\tvar newEvent = new createjs.ErrorEvent(\"FILE_LOAD_ERROR\", null, loader.getItem());\n\t\t// TODO: Propagate actual error message.\n\n\t\tthis._sendError(newEvent);\n\n\t\tif (!this.stopOnError) {\n\t\t\tthis._removeLoadItem(loader);\n\t\t\tthis._cleanLoadItem(loader);\n\t\t\tthis._loadNext();\n\t\t} else {\n\t\t\tthis.setPaused(true);\n\t\t}\n\t};\n\n\t/**\n\t * An item has finished loading. We can assume that it is totally loaded, has been parsed for immediate use, and\n\t * is available as the \"result\" property on the load item. The raw text result for a parsed item (such as JSON, XML,\n\t * CSS, JavaScript, etc) is available as the \"rawResult\" property, and can also be looked up using {{#crossLink \"LoadQueue/getResult\"}}{{/crossLink}}.\n\t * @method _handleFileComplete\n\t * @param {Event} event The event object from the loader.\n\t * @private\n\t */\n\tp._handleFileComplete = function (event) {\n\t\tvar loader = event.target;\n\t\tvar item = loader.getItem();\n\n\t\tvar result = loader.getResult();\n\t\tthis._loadedResults[item.id] = result;\n\t\tvar rawResult = loader.getResult(true);\n\t\tif (rawResult != null && rawResult !== result) {\n\t\t\tthis._loadedRawResults[item.id] = rawResult;\n\t\t}\n\n\t\tthis._saveLoadedItems(loader);\n\n\t\t// Remove the load item\n\t\tthis._removeLoadItem(loader);\n\n\t\tif (!this._finishOrderedItem(loader)) {\n\t\t\t// The item was NOT managed, so process it now\n\t\t\tthis._processFinishedLoad(item, loader);\n\t\t}\n\n\t\t// Clean up the load item\n\t\tthis._cleanLoadItem(loader);\n\t};\n\n\t/**\n\t * Some loaders might load additional content, other than the item they were passed (such as {{#crossLink \"ManifestLoader\"}}{{/crossLink}}).\n\t * Any items exposed by the loader using {{#crossLink \"AbstractLoader/getLoadItems\"}}{{/crossLink}} are added to the\n\t * LoadQueue's look-ups, including {{#crossLink \"getItem\"}}{{/crossLink}} and {{#crossLink \"getResult\"}}{{/crossLink}}\n\t * methods.\n\t * @method _saveLoadedItems\n\t * @param {AbstractLoader} loader\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._saveLoadedItems = function (loader) {\n\t\t// TODO: Not sure how to handle this. Would be nice to expose the items.\n\t\t// Loaders may load sub-items. This adds them to this queue\n\t\tvar list = loader.getLoadedItems();\n\t\tif (list === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\tvar item = list[i].item;\n\n\t\t\t// Store item lookups\n\t\t\tthis._loadItemsBySrc[item.src] = item;\n\t\t\tthis._loadItemsById[item.id] = item;\n\n\t\t\t// Store loaded content\n\t\t\tthis._loadedResults[item.id] = list[i].result;\n\t\t\tthis._loadedRawResults[item.id] = list[i].rawResult;\n\t\t}\n\t};\n\n\t/**\n\t * Flag an item as finished. If the item's order is being managed, then ensure that it is allowed to finish, and if\n\t * so, trigger prior items to trigger as well.\n\t * @method _finishOrderedItem\n\t * @param {AbstractLoader} loader\n\t * @param {Boolean} loadFailed\n\t * @return {Boolean} If the item's order is being managed. This allows the caller to take an alternate\n\t * behaviour if it is.\n\t * @private\n\t */\n\tp._finishOrderedItem = function (loader, loadFailed) {\n\t\tvar item = loader.getItem();\n\n\t\tif ((this.maintainScriptOrder && item.type == createjs.LoadQueue.JAVASCRIPT)\n\t\t\t\t|| item.maintainOrder) {\n\n\t\t\t//TODO: Evaluate removal of the _currentlyLoadingScript\n\t\t\tif (loader instanceof createjs.JavaScriptLoader) {\n\t\t\t\tthis._currentlyLoadingScript = false;\n\t\t\t}\n\n\t\t\tvar index = createjs.indexOf(this._scriptOrder, item);\n\t\t\tif (index == -1) {\n\t\t\t\treturn false;\n\t\t\t} // This loader no longer exists\n\t\t\tthis._loadedScripts[index] = (loadFailed === true) ? true : item;\n\n\t\t\tthis._checkScriptLoadOrder();\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\t/**\n\t * Ensure the scripts load and dispatch in the correct order. When using XHR, scripts are stored in an array in the\n\t * order they were added, but with a \"null\" value. When they are completed, the value is set to the load item,\n\t * and then when they are processed and dispatched, the value is set to `true`. This method simply\n\t * iterates the array, and ensures that any loaded items that are not preceded by a `null` value are\n\t * dispatched.\n\t * @method _checkScriptLoadOrder\n\t * @private\n\t */\n\tp._checkScriptLoadOrder = function () {\n\t\tvar l = this._loadedScripts.length;\n\n\t\tfor (var i = 0; i < l; i++) {\n\t\t\tvar item = this._loadedScripts[i];\n\t\t\tif (item === null) {\n\t\t\t\tbreak;\n\t\t\t} // This is still loading. Do not process further.\n\t\t\tif (item === true) {\n\t\t\t\tcontinue;\n\t\t\t} // This has completed, and been processed. Move on.\n\n\t\t\tvar loadItem = this._loadedResults[item.id];\n\t\t\tif (item.type == createjs.LoadQueue.JAVASCRIPT) {\n\t\t\t\t// Append script tags to the head automatically.\n\t\t\t\tcreatejs.DomUtils.appendToHead(loadItem);\n\t\t\t}\n\n\t\t\tvar loader = item._loader;\n\t\t\tthis._processFinishedLoad(item, loader);\n\t\t\tthis._loadedScripts[i] = true;\n\t\t}\n\t};\n\n\t/**\n\t * A file has completed loading, and the LoadQueue can move on. This triggers the complete event, and kick-starts\n\t * the next item.\n\t * @method _processFinishedLoad\n\t * @param {LoadItem|Object} item\n\t * @param {AbstractLoader} loader\n\t * @protected\n\t */\n\tp._processFinishedLoad = function (item, loader) {\n\t\tthis._numItemsLoaded++;\n\n\t\t// Since LoadQueue needs maintain order, we can't append scripts in the loader.\n\t\t// So we do it here instead. Or in _checkScriptLoadOrder();\n\t\tif (!this.maintainScriptOrder && item.type == createjs.LoadQueue.JAVASCRIPT) {\n\t\t\tvar tag = loader.getTag();\n\t\t\tcreatejs.DomUtils.appendToHead(tag);\n\t\t}\n\n\t\tthis._updateProgress();\n\t\tthis._sendFileComplete(item, loader);\n\t\tthis._loadNext();\n\t};\n\n\t/**\n\t * Ensure items with `maintainOrder=true` that are before the specified item have loaded. This only applies to\n\t * JavaScript items that are being loaded with a TagLoader, since they have to be loaded and completed <strong>before</strong>\n\t * the script can even be started, since it exist in the DOM while loading.\n\t * @method _canStartLoad\n\t * @param {AbstractLoader} loader The loader for the item\n\t * @return {Boolean} Whether the item can start a load or not.\n\t * @private\n\t */\n\tp._canStartLoad = function (loader) {\n\t\tif (!this.maintainScriptOrder || loader.preferXHR) {\n\t\t\treturn true;\n\t\t}\n\t\tvar item = loader.getItem();\n\t\tif (item.type != createjs.LoadQueue.JAVASCRIPT) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this._currentlyLoadingScript) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar index = this._scriptOrder.indexOf(item);\n\t\tvar i = 0;\n\t\twhile (i < index) {\n\t\t\tvar checkItem = this._loadedScripts[i];\n\t\t\tif (checkItem == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\tthis._currentlyLoadingScript = true;\n\t\treturn true;\n\t};\n\n\t/**\n\t * A load item is completed or was canceled, and needs to be removed from the LoadQueue.\n\t * @method _removeLoadItem\n\t * @param {AbstractLoader} loader A loader instance to remove.\n\t * @private\n\t */\n\tp._removeLoadItem = function (loader) {\n\t\tvar l = this._currentLoads.length;\n\t\tfor (var i = 0; i < l; i++) {\n\t\t\tif (this._currentLoads[i] == loader) {\n\t\t\t\tthis._currentLoads.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Remove unneeded references from a loader.\n\t *\n\t * @param loader\n\t * @private\n\t */\n\tp._cleanLoadItem = function(loader) {\n\t\tvar item = loader.getItem();\n\t\tif (item) {\n\t\t\tdelete item._loader;\n\t\t}\n\t}\n\n\t/**\n\t * An item has dispatched progress. Propagate that progress, and update the LoadQueue's overall progress.\n\t * @method _handleProgress\n\t * @param {ProgressEvent} event The progress event from the item.\n\t * @private\n\t */\n\tp._handleProgress = function (event) {\n\t\tvar loader = event.target;\n\t\tthis._sendFileProgress(loader.getItem(), loader.progress);\n\t\tthis._updateProgress();\n\t};\n\n\t/**\n\t * Overall progress has changed, so determine the new progress amount and dispatch it. This changes any time an\n\t * item dispatches progress or completes. Note that since we don't always know the actual filesize of items before\n\t * they are loaded. In this case, we define a \"slot\" for each item (1 item in 10 would get 10%), and then append\n\t * loaded progress on top of the already-loaded items.\n\t *\n\t * For example, if 5/10 items have loaded, and item 6 is 20% loaded, the total progress would be:\n\t * <ul>\n\t *      <li>5/10 of the items in the queue (50%)</li>\n\t *      <li>plus 20% of item 6's slot (2%)</li>\n\t *      <li>equals 52%</li>\n\t * </ul>\n\t * @method _updateProgress\n\t * @private\n\t */\n\tp._updateProgress = function () {\n\t\tvar loaded = this._numItemsLoaded / this._numItems; // Fully Loaded Progress\n\t\tvar remaining = this._numItems - this._numItemsLoaded;\n\t\tif (remaining > 0) {\n\t\t\tvar chunk = 0;\n\t\t\tfor (var i = 0, l = this._currentLoads.length; i < l; i++) {\n\t\t\t\tchunk += this._currentLoads[i].progress;\n\t\t\t}\n\t\t\tloaded += (chunk / remaining) * (remaining / this._numItems);\n\t\t}\n\n\t\tif (this._lastProgress != loaded) {\n\t\t\tthis._sendProgress(loaded);\n\t\t\tthis._lastProgress = loaded;\n\t\t}\n\t};\n\n\t/**\n\t * Clean out item results, to free them from memory. Mainly, the loaded item and results are cleared from internal\n\t * hashes.\n\t * @method _disposeItem\n\t * @param {LoadItem|Object} item The item that was passed in for preloading.\n\t * @private\n\t */\n\tp._disposeItem = function (item) {\n\t\tdelete this._loadedResults[item.id];\n\t\tdelete this._loadedRawResults[item.id];\n\t\tdelete this._loadItemsById[item.id];\n\t\tdelete this._loadItemsBySrc[item.src];\n\t};\n\n\t/**\n\t * Dispatch a \"fileprogress\" {{#crossLink \"Event\"}}{{/crossLink}}. Please see the LoadQueue {{#crossLink \"LoadQueue/fileprogress:event\"}}{{/crossLink}}\n\t * event for details on the event payload.\n\t * @method _sendFileProgress\n\t * @param {LoadItem|Object} item The item that is being loaded.\n\t * @param {Number} progress The amount the item has been loaded (between 0 and 1).\n\t * @protected\n\t */\n\tp._sendFileProgress = function (item, progress) {\n\t\tif (this._isCanceled() || this._paused) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.hasEventListener(\"fileprogress\")) {\n\t\t\treturn;\n\t\t}\n\n\t\t//LM: Rework ProgressEvent to support this?\n\t\tvar event = new createjs.Event(\"fileprogress\");\n\t\tevent.progress = progress;\n\t\tevent.loaded = progress;\n\t\tevent.total = 1;\n\t\tevent.item = item;\n\n\t\tthis.dispatchEvent(event);\n\t};\n\n\t/**\n\t * Dispatch a fileload {{#crossLink \"Event\"}}{{/crossLink}}. Please see the {{#crossLink \"LoadQueue/fileload:event\"}}{{/crossLink}} event for\n\t * details on the event payload.\n\t * @method _sendFileComplete\n\t * @param {LoadItemObject} item The item that is being loaded.\n\t * @param {AbstractLoader} loader\n\t * @protected\n\t */\n\tp._sendFileComplete = function (item, loader) {\n\t\tif (this._isCanceled() || this._paused) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar event = new createjs.Event(\"fileload\");\n\t\tevent.loader = loader;\n\t\tevent.item = item;\n\t\tevent.result = this._loadedResults[item.id];\n\t\tevent.rawResult = this._loadedRawResults[item.id];\n\n\t\t// This calls a handler specified on the actual load item. Currently, the SoundJS plugin uses this.\n\t\tif (item.completeHandler) {\n\t\t\titem.completeHandler(event);\n\t\t}\n\n\t\tthis.hasEventListener(\"fileload\") && this.dispatchEvent(event);\n\t};\n\n\t/**\n\t * Dispatch a filestart {{#crossLink \"Event\"}}{{/crossLink}} immediately before a file starts to load. Please see\n\t * the {{#crossLink \"LoadQueue/filestart:event\"}}{{/crossLink}} event for details on the event payload.\n\t * @method _sendFileStart\n\t * @param {LoadItem|Object} item The item that is being loaded.\n\t * @protected\n\t */\n\tp._sendFileStart = function (item) {\n\t\tvar event = new createjs.Event(\"filestart\");\n\t\tevent.item = item;\n\t\tthis.hasEventListener(\"filestart\") && this.dispatchEvent(event);\n\t};\n\n\tp.toString = function () {\n\t\treturn \"[PreloadJS LoadQueue]\";\n\t};\n\n\tcreatejs.LoadQueue = createjs.promote(LoadQueue, \"AbstractLoader\");\n}());\n\n//##############################################################################\n// TextLoader.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for Text files.\n\t * @class TextLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction TextLoader(loadItem) {\n\t\tthis.AbstractLoader_constructor(loadItem, true, createjs.AbstractLoader.TEXT);\n\t};\n\n\tvar p = createjs.extend(TextLoader, createjs.AbstractLoader);\n\tvar s = TextLoader;\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader loads items that are of type {{#crossLink \"AbstractLoader/TEXT:property\"}}{{/crossLink}},\n\t * but is also the default loader if a file type can not be determined.\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.AbstractLoader.TEXT;\n\t};\n\n\tcreatejs.TextLoader = createjs.promote(TextLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// BinaryLoader.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for binary files. This is useful for loading web audio, or content that requires an ArrayBuffer.\n\t * @class BinaryLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction BinaryLoader(loadItem) {\n\t\tthis.AbstractLoader_constructor(loadItem, true, createjs.AbstractLoader.BINARY);\n\t\tthis.on(\"initialize\", this._updateXHR, this);\n\t};\n\n\tvar p = createjs.extend(BinaryLoader, createjs.AbstractLoader);\n\tvar s = BinaryLoader;\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"AbstractLoader/BINARY:property\"}}{{/crossLink}}\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.AbstractLoader.BINARY;\n\t};\n\n\t// private methods\n\t/**\n\t * Before the item loads, set the response type to \"arraybuffer\"\n\t * @property _updateXHR\n\t * @param {Event} event\n\t * @private\n\t */\n\tp._updateXHR = function (event) {\n\t\tevent.loader.setResponseType(\"arraybuffer\");\n\t};\n\n\tcreatejs.BinaryLoader = createjs.promote(BinaryLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// CSSLoader.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for CSS files.\n\t * @class CSSLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @param {Boolean} preferXHR\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction CSSLoader(loadItem, preferXHR) {\n\t\tthis.AbstractLoader_constructor(loadItem, preferXHR, createjs.AbstractLoader.CSS);\n\n\t\t// public properties\n\t\tthis.resultFormatter = this._formatResult;\n\n\t\t// protected properties\n\t\tthis._tagSrcAttribute = \"href\";\n\n\t\tif (preferXHR) {\n\t\t\tthis._tag = createjs.Elements.style();\n\t\t} else {\n\t\t\tthis._tag = createjs.Elements.link();\n\t\t}\n\n\t\tthis._tag.rel = \"stylesheet\";\n\t\tthis._tag.type = \"text/css\";\n\t};\n\n\tvar p = createjs.extend(CSSLoader, createjs.AbstractLoader);\n\tvar s = CSSLoader;\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"AbstractLoader/CSS:property\"}}{{/crossLink}}.\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.AbstractLoader.CSS;\n\t};\n\n\t// protected methods\n\t/**\n\t * The result formatter for CSS files.\n\t * @method _formatResult\n\t * @param {AbstractLoader} loader\n\t * @returns {HTMLLinkElement|HTMLStyleElement}\n\t * @private\n\t */\n\tp._formatResult = function (loader) {\n\t\tif (this._preferXHR) {\n\t\t\tvar tag = loader.getTag();\n\n\t\t\tif (tag.styleSheet) { // IE\n\t\t\t\ttag.styleSheet.cssText = loader.getResult(true);\n\t\t\t} else {\n\t\t\t\tvar textNode = createjs.Elements.text(loader.getResult(true));\n\t\t\t\ttag.appendChild(textNode);\n\t\t\t}\n\t\t} else {\n\t\t\ttag = this._tag;\n\t\t}\n\n\t\tcreatejs.DomUtils.appendToHead(tag);\n\n\t\treturn tag;\n\t};\n\n\tcreatejs.CSSLoader = createjs.promote(CSSLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// ImageLoader.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for image files.\n\t * @class ImageLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @param {Boolean} preferXHR\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction ImageLoader (loadItem, preferXHR) {\n\t\tthis.AbstractLoader_constructor(loadItem, preferXHR, createjs.AbstractLoader.IMAGE);\n\n\t\t// public properties\n\t\tthis.resultFormatter = this._formatResult;\n\n\t\t// protected properties\n\t\tthis._tagSrcAttribute = \"src\";\n\n\t\t// Check if the preload item is already a tag.\n\t\tif (createjs.DomUtils.isImageTag(loadItem)) {\n\t\t\tthis._tag = loadItem;\n\t\t} else if (createjs.DomUtils.isImageTag(loadItem.src)) {\n\t\t\tthis._tag = loadItem.src;\n\t\t} else if (createjs.DomUtils.isImageTag(loadItem.tag)) {\n\t\t\tthis._tag = loadItem.tag;\n\t\t}\n\n\t\tif (this._tag != null) {\n\t\t\tthis._preferXHR = false;\n\t\t} else {\n\t\t\tthis._tag = createjs.Elements.img();\n\t\t}\n\n\t\tthis.on(\"initialize\", this._updateXHR, this);\n\t};\n\n\tvar p = createjs.extend(ImageLoader, createjs.AbstractLoader);\n\tvar s = ImageLoader;\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"AbstractLoader/IMAGE:property\"}}{{/crossLink}}.\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.AbstractLoader.IMAGE;\n\t};\n\n\t// public methods\n\tp.load = function () {\n\t\tif (this._tag.src != \"\" && this._tag.complete) {\n\t\t\tthis._sendComplete();\n\t\t\treturn;\n\t\t}\n\n\t\tvar crossOrigin = this._item.crossOrigin;\n\t\tif (crossOrigin == true) { crossOrigin = \"Anonymous\"; }\n\t\tif (crossOrigin != null && !createjs.URLUtils.isLocal(this._item)) {\n\t\t\tthis._tag.crossOrigin = crossOrigin;\n\t\t}\n\n\t\tthis.AbstractLoader_load();\n\t};\n\n\t// protected methods\n\t/**\n\t * Before the item loads, set its mimeType and responseType.\n\t * @property _updateXHR\n\t * @param {Event} event\n\t * @private\n\t */\n\tp._updateXHR = function (event) {\n\t\tevent.loader.mimeType = 'text/plain; charset=x-user-defined-binary';\n\n\t\t// Only exists for XHR\n\t\tif (event.loader.setResponseType) {\n\t\t\tevent.loader.setResponseType(\"blob\");\n\t\t}\n\t};\n\n\t/**\n\t * The result formatter for Image files.\n\t * @method _formatResult\n\t * @param {AbstractLoader} loader\n\t * @returns {HTMLImageElement}\n\t * @private\n\t */\n\tp._formatResult = function (loader) {\n\t\treturn this._formatImage;\n\t};\n\n\t/**\n\t * The asynchronous image formatter function. This is required because images have\n\t * a short delay before they are ready.\n\t * @method _formatImage\n\t * @param {Function} successCallback The method to call when the result has finished formatting\n\t * @param {Function} errorCallback The method to call if an error occurs during formatting\n\t * @private\n\t */\n\tp._formatImage = function (successCallback, errorCallback) {\n\t\tvar tag = this._tag;\n\t\tvar URL = window.URL || window.webkitURL;\n\n\t\tif (!this._preferXHR) {\n\n\t\t\t//document.body.removeChild(tag);\n\t\t} else if (URL) {\n\t\t\tvar objURL = URL.createObjectURL(this.getResult(true));\n\t\t\ttag.src = objURL;\n\n\t\t\ttag.addEventListener(\"load\", this._cleanUpURL, false);\n\t\t\ttag.addEventListener(\"error\", this._cleanUpURL, false);\n\t\t} else {\n\t\t\ttag.src = this._item.src;\n\t\t}\n\n\t\tif (tag.complete) {\n\t\t\tsuccessCallback(tag);\n\t\t} else {\n            tag.onload = createjs.proxy(function() {\n                successCallback(this._tag);\n            }, this);\n\n            tag.onerror = createjs.proxy(function() {\n                errorCallback(this._tag);\n            }, this);\n\t\t}\n\t};\n\n\t/**\n\t * Clean up the ObjectURL, the tag is done with it. Note that this function is run\n\t * as an event listener without a proxy/closure, as it doesn't require it - so do not\n\t * include any functionality that requires scope without changing it.\n\t * @method _cleanUpURL\n\t * @param event\n\t * @private\n\t */\n\tp._cleanUpURL = function (event) {\n\t\tvar URL = window.URL || window.webkitURL;\n\t\tURL.revokeObjectURL(event.target.src);\n\t};\n\n\tcreatejs.ImageLoader = createjs.promote(ImageLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// JavaScriptLoader.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for JavaScript files.\n\t * @class JavaScriptLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @param {Boolean} preferXHR\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction JavaScriptLoader(loadItem, preferXHR) {\n\t\tthis.AbstractLoader_constructor(loadItem, preferXHR, createjs.AbstractLoader.JAVASCRIPT);\n\n\t\t// public properties\n\t\tthis.resultFormatter = this._formatResult;\n\n\t\t// protected properties\n\t\tthis._tagSrcAttribute = \"src\";\n\t\tthis.setTag(createjs.Elements.script());\n\t};\n\n\tvar p = createjs.extend(JavaScriptLoader, createjs.AbstractLoader);\n\tvar s = JavaScriptLoader;\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"AbstractLoader/JAVASCRIPT:property\"}}{{/crossLink}}\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.AbstractLoader.JAVASCRIPT;\n\t};\n\n\t// protected methods\n\t/**\n\t * The result formatter for JavaScript files.\n\t * @method _formatResult\n\t * @param {AbstractLoader} loader\n\t * @returns {HTMLLinkElement|HTMLStyleElement}\n\t * @private\n\t */\n\tp._formatResult = function (loader) {\n\t\tvar tag = loader.getTag();\n\t\tif (this._preferXHR) {\n\t\t\ttag.text = loader.getResult(true);\n\t\t}\n\t\treturn tag;\n\t};\n\n\tcreatejs.JavaScriptLoader = createjs.promote(JavaScriptLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// JSONLoader.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for JSON files. To load JSON cross-domain, use JSONP and the {{#crossLink \"JSONPLoader\"}}{{/crossLink}}\n\t * instead. To load JSON-formatted manifests, use {{#crossLink \"ManifestLoader\"}}{{/crossLink}}, and to\n\t * load EaselJS SpriteSheets, use {{#crossLink \"SpriteSheetLoader\"}}{{/crossLink}}.\n\t * @class JSONLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction JSONLoader(loadItem) {\n\t\tthis.AbstractLoader_constructor(loadItem, true, createjs.AbstractLoader.JSON);\n\n\t\t// public properties\n\t\tthis.resultFormatter = this._formatResult;\n\t};\n\n\tvar p = createjs.extend(JSONLoader, createjs.AbstractLoader);\n\tvar s = JSONLoader;\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"AbstractLoader/JSON:property\"}}{{/crossLink}}.\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.AbstractLoader.JSON;\n\t};\n\n\t// protected methods\n\t/**\n\t * The result formatter for JSON files.\n\t * @method _formatResult\n\t * @param {AbstractLoader} loader\n\t * @returns {HTMLLinkElement|HTMLStyleElement}\n\t * @private\n\t */\n\tp._formatResult = function (loader) {\n\t\tvar json = null;\n\t\ttry {\n\t\t\tjson = createjs.DataUtils.parseJSON(loader.getResult(true));\n\t\t} catch (e) {\n\t\t\tvar event = new createjs.ErrorEvent(\"JSON_FORMAT\", null, e);\n\t\t\tthis._sendError(event);\n\t\t\treturn e;\n\t\t}\n\n\t\treturn json;\n\t};\n\n\tcreatejs.JSONLoader = createjs.promote(JSONLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// JSONPLoader.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for JSONP files, which are JSON-formatted text files, wrapped in a callback. To load regular JSON\n\t * without a callback use the {{#crossLink \"JSONLoader\"}}{{/crossLink}} instead. To load JSON-formatted manifests,\n\t * use {{#crossLink \"ManifestLoader\"}}{{/crossLink}}, and to load EaselJS SpriteSheets, use\n\t * {{#crossLink \"SpriteSheetLoader\"}}{{/crossLink}}.\n\t *\n\t * JSONP is a format that provides a solution for loading JSON files cross-domain <em>without</em> requiring CORS.\n\t * JSONP files are loaded as JavaScript, and the \"callback\" is executed once they are loaded. The callback in the\n\t * JSONP must match the callback passed to the loadItem.\n\t *\n\t * <h4>Example JSONP</h4>\n\t *\n\t * \t\tcallbackName({\n\t * \t\t\t\"name\": \"value\",\n\t *\t \t\t\"num\": 3,\n\t *\t\t\t\"obj\": { \"bool\":true }\n\t * \t\t});\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \t\tvar loadItem = {id:\"json\", type:\"jsonp\", src:\"http://server.com/text.json\", callback:\"callbackName\"}\n\t * \t\tvar queue = new createjs.LoadQueue();\n\t * \t\tqueue.on(\"complete\", handleComplete);\n\t * \t\tqueue.loadItem(loadItem);\n\t *\n\t * \t\tfunction handleComplete(event) }\n\t * \t\t\tvar json = queue.getResult(\"json\");\n\t * \t\t\tconsole.log(json.obj.bool); // true\n\t * \t\t}\n\t *\n\t * Note that JSONP files loaded concurrently require a <em>unique</em> callback. To ensure JSONP files are loaded\n\t * in order, either use the {{#crossLink \"LoadQueue/setMaxConnections\"}}{{/crossLink}} method (set to 1),\n\t * or set {{#crossLink \"LoadItem/maintainOrder:property\"}}{{/crossLink}} on items with the same callback.\n\t *\n\t * @class JSONPLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction JSONPLoader(loadItem) {\n\t\tthis.AbstractLoader_constructor(loadItem, false, createjs.AbstractLoader.JSONP);\n\t\tthis.setTag(createjs.Elements.script());\n\t\tthis.getTag().type = \"text/javascript\";\n\t};\n\n\tvar p = createjs.extend(JSONPLoader, createjs.AbstractLoader);\n\tvar s = JSONPLoader;\n\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"AbstractLoader/JSONP:property\"}}{{/crossLink}}.\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.AbstractLoader.JSONP;\n\t};\n\n\t// public methods\n\tp.cancel = function () {\n\t\tthis.AbstractLoader_cancel();\n\t\tthis._dispose();\n\t};\n\n\t/**\n\t * Loads the JSONp file.  Because of the unique loading needs of JSONp\n\t * we don't use the AbstractLoader.load() method.\n\t *\n\t * @method load\n\t *\n\t */\n\tp.load = function () {\n\t\tif (this._item.callback == null) {\n\t\t\tthrow new Error('callback is required for loading JSONP requests.');\n\t\t}\n\n\t\t// TODO: Look into creating our own iFrame to handle the load\n\t\t// In the first attempt, FF did not get the result\n\t\t//   result instanceof Object did not work either\n\t\t//   so we would need to clone the result.\n\t\tif (window[this._item.callback] != null) {\n\t\t\tthrow new Error(\n\t\t\t\t\"JSONP callback '\" +\n\t\t\t\tthis._item.callback +\n\t\t\t\t\"' already exists on window. You need to specify a different callback or re-name the current one.\");\n\t\t}\n\n\t\twindow[this._item.callback] = createjs.proxy(this._handleLoad, this);\n\t\tcreatejs.DomUtils.appendToBody(this._tag);\n\n\t\tthis._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout);\n\n\t\t// Load the tag\n\t\tthis._tag.src = this._item.src;\n\t};\n\n\t// private methods\n\t/**\n\t * Handle the JSONP callback, which is a public method defined on `window`.\n\t * @method _handleLoad\n\t * @param {Object} data The formatted JSON data.\n\t * @private\n\t */\n\tp._handleLoad = function (data) {\n\t\tthis._result = this._rawResult = data;\n\t\tthis._sendComplete();\n\n\t\tthis._dispose();\n\t};\n\n\t/**\n\t * The tag request has not loaded within the time specfied in loadTimeout.\n\t * @method _handleError\n\t * @param {Object} event The XHR error event.\n\t * @private\n\t */\n\tp._handleTimeout = function () {\n\t\tthis._dispose();\n\t\tthis.dispatchEvent(new createjs.ErrorEvent(\"timeout\"));\n\t};\n\n\t/**\n\t * Clean up the JSONP load. This clears out the callback and script tag that this loader creates.\n\t * @method _dispose\n\t * @private\n\t */\n\tp._dispose = function () {\n\t\tcreatejs.DomUtils.removeChild(this._tag);\n\t\tdelete window[this._item.callback];\n\n\t\tclearTimeout(this._loadTimeout);\n\t};\n\n\tcreatejs.JSONPLoader = createjs.promote(JSONPLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// ManifestLoader.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for JSON manifests. Items inside the manifest are loaded before the loader completes. To load manifests\n\t * using JSONP, specify a {{#crossLink \"LoadItem/callback:property\"}}{{/crossLink}} as part of the\n\t * {{#crossLink \"LoadItem\"}}{{/crossLink}}.\n\t *\n\t * The list of files in the manifest must be defined on the top-level JSON object in a `manifest` property. This\n\t * example shows a sample manifest definition, as well as how to to include a sub-manifest.\n\t *\n\t * \t\t{\n\t * \t\t\t\"path\": \"assets/\",\n\t *\t \t    \"manifest\": [\n\t *\t\t\t\t\"image.png\",\n\t *\t\t\t\t{\"src\": \"image2.png\", \"id\":\"image2\"},\n\t *\t\t\t\t{\"src\": \"sub-manifest.json\", \"type\":\"manifest\", \"callback\":\"jsonCallback\"}\n\t *\t \t    ]\n\t *\t \t}\n\t *\n\t * When a ManifestLoader has completed loading, the parent loader (usually a {{#crossLink \"LoadQueue\"}}{{/crossLink}},\n\t * but could also be another ManifestLoader) will inherit all the loaded items, so you can access them directly.\n\t *\n\t * Note that the {{#crossLink \"JSONLoader\"}}{{/crossLink}} and {{#crossLink \"JSONPLoader\"}}{{/crossLink}} are\n\t * higher priority loaders, so manifests <strong>must</strong> set the {{#crossLink \"LoadItem\"}}{{/crossLink}}\n\t * {{#crossLink \"LoadItem/type:property\"}}{{/crossLink}} property to {{#crossLink \"AbstractLoader/MANIFEST:property\"}}{{/crossLink}}.\n\t * @class ManifestLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction ManifestLoader(loadItem) {\n\t\tthis.AbstractLoader_constructor(loadItem, null, createjs.AbstractLoader.MANIFEST);\n\n\t// Public Properties\n\t\t/**\n\t\t * An array of the plugins registered using {{#crossLink \"LoadQueue/installPlugin\"}}{{/crossLink}},\n\t\t * used to pass plugins to new LoadQueues that may be created.\n\t\t * @property _plugins\n\t\t * @type {Array}\n\t\t * @private\n\t\t * @since 0.6.1\n\t\t */\n\t\tthis.plugins = null;\n\n\n\t// Protected Properties\n\t\t/**\n\t\t * An internal {{#crossLink \"LoadQueue\"}}{{/crossLink}} that loads the contents of the manifest.\n\t\t * @property _manifestQueue\n\t\t * @type {LoadQueue}\n\t\t * @private\n\t\t */\n\t\tthis._manifestQueue = null;\n\t};\n\n\tvar p = createjs.extend(ManifestLoader, createjs.AbstractLoader);\n\tvar s = ManifestLoader;\n\n\t// static properties\n\t/**\n\t * The amount of progress that the manifest itself takes up.\n\t * @property MANIFEST_PROGRESS\n\t * @type {number}\n\t * @default 0.25 (25%)\n\t * @private\n\t * @static\n\t */\n\ts.MANIFEST_PROGRESS = 0.25;\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"AbstractLoader/MANIFEST:property\"}}{{/crossLink}}\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.AbstractLoader.MANIFEST;\n\t};\n\n\t// public methods\n\tp.load = function () {\n\t\tthis.AbstractLoader_load();\n\t};\n\n\t// protected methods\n\tp._createRequest = function() {\n\t\tvar callback = this._item.callback;\n\t\tif (callback != null) {\n\t\t\tthis._request = new createjs.JSONPLoader(this._item);\n\t\t} else {\n\t\t\tthis._request = new createjs.JSONLoader(this._item);\n\t\t}\n\t};\n\n\tp.handleEvent = function (event) {\n\t\tswitch (event.type) {\n\t\t\tcase \"complete\":\n\t\t\t\tthis._rawResult = event.target.getResult(true);\n\t\t\t\tthis._result = event.target.getResult();\n\t\t\t\tthis._sendProgress(s.MANIFEST_PROGRESS);\n\t\t\t\tthis._loadManifest(this._result);\n\t\t\t\treturn;\n\t\t\tcase \"progress\":\n\t\t\t\tevent.loaded *= s.MANIFEST_PROGRESS;\n\t\t\t\tthis.progress = event.loaded / event.total;\n\t\t\t\tif (isNaN(this.progress) || this.progress == Infinity) { this.progress = 0; }\n\t\t\t\tthis._sendProgress(event);\n\t\t\t\treturn;\n\t\t}\n\t\tthis.AbstractLoader_handleEvent(event);\n\t};\n\n\tp.destroy = function() {\n\t\tthis.AbstractLoader_destroy();\n\t\tthis._manifestQueue.close();\n\t};\n\n\t/**\n\t * Create and load the manifest items once the actual manifest has been loaded.\n\t * @method _loadManifest\n\t * @param {Object} json\n\t * @private\n\t */\n\tp._loadManifest = function (json) {\n\t\tif (json && json.manifest) {\n\t\t\tvar queue = this._manifestQueue = new createjs.LoadQueue();\n\t\t\tqueue.on(\"fileload\", this._handleManifestFileLoad, this);\n\t\t\tqueue.on(\"progress\", this._handleManifestProgress, this);\n\t\t\tqueue.on(\"complete\", this._handleManifestComplete, this, true);\n\t\t\tqueue.on(\"error\", this._handleManifestError, this, true);\n\t\t\tfor(var i = 0, l = this.plugins.length; i < l; i++) {\t// conserve order of plugins\n\t\t\t\tqueue.installPlugin(this.plugins[i]);\n\t\t\t}\n\t\t\tqueue.loadManifest(json);\n\t\t} else {\n\t\t\tthis._sendComplete();\n\t\t}\n\t};\n\n\t/**\n\t * An item from the {{#crossLink \"_manifestQueue:property\"}}{{/crossLink}} has completed.\n\t * @method _handleManifestFileLoad\n\t * @param {Event} event\n\t * @private\n\t */\n\tp._handleManifestFileLoad = function (event) {\n\t\tevent.target = null;\n\t\tthis.dispatchEvent(event);\n\t};\n\n\t/**\n\t * The manifest has completed loading. This triggers the {{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}}\n\t * {{#crossLink \"Event\"}}{{/crossLink}} from the ManifestLoader.\n\t * @method _handleManifestComplete\n\t * @param {Event} event\n\t * @private\n\t */\n\tp._handleManifestComplete = function (event) {\n\t\tthis._loadedItems = this._manifestQueue.getItems(true);\n\t\tthis._sendComplete();\n\t};\n\n\t/**\n\t * The manifest has reported progress.\n\t * @method _handleManifestProgress\n\t * @param {ProgressEvent} event\n\t * @private\n\t */\n\tp._handleManifestProgress = function (event) {\n\t\tthis.progress = event.progress * (1 - s.MANIFEST_PROGRESS) + s.MANIFEST_PROGRESS;\n\t\tthis._sendProgress(this.progress);\n\t};\n\n\t/**\n\t * The manifest has reported an error with one of the files.\n\t * @method _handleManifestError\n\t * @param {ErrorEvent} event\n\t * @private\n\t */\n\tp._handleManifestError = function (event) {\n\t\tvar newEvent = new createjs.Event(\"fileerror\");\n\t\tnewEvent.item = event.data;\n\t\tthis.dispatchEvent(newEvent);\n\t};\n\n\tcreatejs.ManifestLoader = createjs.promote(ManifestLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// SoundLoader.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for HTML audio files. PreloadJS can not load WebAudio files, as a WebAudio context is required, which\n\t * should be created by either a library playing the sound (such as <a href=\"http://soundjs.com\">SoundJS</a>, or an\n\t * external framework that handles audio playback. To load content that can be played by WebAudio, use the\n\t * {{#crossLink \"BinaryLoader\"}}{{/crossLink}}, and handle the audio context decoding manually.\n\t * @class SoundLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @param {Boolean} preferXHR\n\t * @extends AbstractMediaLoader\n\t * @constructor\n\t */\n\tfunction SoundLoader(loadItem, preferXHR) {\n\t\tthis.AbstractMediaLoader_constructor(loadItem, preferXHR, createjs.AbstractLoader.SOUND);\n\n\t\t// protected properties\n\t\tif (createjs.DomUtils.isAudioTag(loadItem)) {\n\t\t\tthis._tag = loadItem;\n\t\t} else if (createjs.DomUtils.isAudioTag(loadItem.src)) {\n\t\t\tthis._tag = loadItem;\n\t\t} else if (createjs.DomUtils.isAudioTag(loadItem.tag)) {\n\t\t\tthis._tag = createjs.DomUtils.isAudioTag(loadItem) ? loadItem : loadItem.src;\n\t\t}\n\n\t\tif (this._tag != null) {\n\t\t\tthis._preferXHR = false;\n\t\t}\n\t};\n\n\tvar p = createjs.extend(SoundLoader, createjs.AbstractMediaLoader);\n\tvar s = SoundLoader;\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"AbstractLoader/SOUND:property\"}}{{/crossLink}}.\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.AbstractLoader.SOUND;\n\t};\n\n\t// protected methods\n\tp._createTag = function (src) {\n\t\tvar tag = createjs.Elements.audio();\n\t\ttag.autoplay = false;\n\t\ttag.preload = \"none\";\n\n\t\t//LM: Firefox fails when this the preload=\"none\" for other tags, but it needs to be \"none\" to ensure PreloadJS works.\n\t\ttag.src = src;\n\t\treturn tag;\n\t};\n\n\tcreatejs.SoundLoader = createjs.promote(SoundLoader, \"AbstractMediaLoader\");\n\n}());\n\n//##############################################################################\n// VideoLoader.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for video files.\n\t * @class VideoLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @param {Boolean} preferXHR\n\t * @extends AbstractMediaLoader\n\t * @constructor\n\t */\n\tfunction VideoLoader(loadItem, preferXHR) {\n\t\tthis.AbstractMediaLoader_constructor(loadItem, preferXHR, createjs.AbstractLoader.VIDEO);\n\n\t\tif (createjs.DomUtils.isVideoTag(loadItem) || createjs.DomUtils.isVideoTag(loadItem.src)) {\n\t\t\tthis.setTag(createjs.DomUtils.isVideoTag(loadItem)?loadItem:loadItem.src);\n\n\t\t\t// We can't use XHR for a tag that's passed in.\n\t\t\tthis._preferXHR = false;\n\t\t} else {\n\t\t\tthis.setTag(this._createTag());\n\t\t}\n\t};\n\n\tvar p = createjs.extend(VideoLoader, createjs.AbstractMediaLoader);\n\tvar s = VideoLoader;\n\n\t/**\n\t * Create a new video tag\n\t *\n\t * @returns {HTMLElement}\n\t * @private\n\t */\n\tp._createTag = function () {\n\t\treturn createjs.Elements.video();\n\t};\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"AbstractLoader/VIDEO:property\"}}{{/crossLink}}.\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.AbstractLoader.VIDEO;\n\t};\n\n\tcreatejs.VideoLoader = createjs.promote(VideoLoader, \"AbstractMediaLoader\");\n\n}());\n\n//##############################################################################\n// SpriteSheetLoader.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for EaselJS SpriteSheets. Images inside the spritesheet definition are loaded before the loader\n\t * completes. To load SpriteSheets using JSONP, specify a {{#crossLink \"LoadItem/callback:property\"}}{{/crossLink}}\n\t * as part of the {{#crossLink \"LoadItem\"}}{{/crossLink}}. Note that the {{#crossLink \"JSONLoader\"}}{{/crossLink}}\n\t * and {{#crossLink \"JSONPLoader\"}}{{/crossLink}} are higher priority loaders, so SpriteSheets <strong>must</strong>\n\t * set the {{#crossLink \"LoadItem\"}}{{/crossLink}} {{#crossLink \"LoadItem/type:property\"}}{{/crossLink}} property\n\t * to {{#crossLink \"AbstractLoader/SPRITESHEET:property\"}}{{/crossLink}}.\n\t *\n\t * The {{#crossLink \"LoadItem\"}}{{/crossLink}} {{#crossLink \"LoadItem/crossOrigin:property\"}}{{/crossLink}} as well\n\t * as the {{#crossLink \"LoadQueue's\"}}{{/crossLink}} `basePath` argument and {{#crossLink \"LoadQueue/_preferXHR\"}}{{/crossLink}}\n\t * property supplied to the {{#crossLink \"LoadQueue\"}}{{/crossLink}} are passed on to the sub-manifest that loads\n\t * the SpriteSheet images.\n\t *\n\t * Note that the SpriteSheet JSON does not respect the {{#crossLink \"LoadQueue/_preferXHR:property\"}}{{/crossLink}}\n\t * property, which should instead be determined by the presence of a {{#crossLink \"LoadItem/callback:property\"}}{{/crossLink}}\n\t * property on the SpriteSheet load item. This is because the JSON loaded will have a different format depending on\n\t * if it is loaded as JSON, so just changing `preferXHR` is not enough to change how it is loaded.\n\t * @class SpriteSheetLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction SpriteSheetLoader(loadItem, preferXHR) {\n\t\tthis.AbstractLoader_constructor(loadItem, preferXHR, createjs.AbstractLoader.SPRITESHEET);\n\n\t\t// protected properties\n\t\t/**\n\t\t * An internal queue which loads the SpriteSheet's images.\n\t\t * @method _manifestQueue\n\t\t * @type {LoadQueue}\n\t\t * @private\n\t\t */\n\t\tthis._manifestQueue = null;\n\t}\n\n\tvar p = createjs.extend(SpriteSheetLoader, createjs.AbstractLoader);\n\tvar s = SpriteSheetLoader;\n\n\t// static properties\n\t/**\n\t * The amount of progress that the manifest itself takes up.\n\t * @property SPRITESHEET_PROGRESS\n\t * @type {number}\n\t * @default 0.25 (25%)\n\t * @private\n\t * @static\n\t */\n\ts.SPRITESHEET_PROGRESS = 0.25;\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"AbstractLoader/SPRITESHEET:property\"}}{{/crossLink}}\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.AbstractLoader.SPRITESHEET;\n\t};\n\n\t// public methods\n\tp.destroy = function() {\n\t\tthis.AbstractLoader_destroy();\n\t\tthis._manifestQueue.close();\n\t};\n\n\t// protected methods\n\tp._createRequest = function() {\n\t\tvar callback = this._item.callback;\n\t\tif (callback != null) {\n\t\t\tthis._request = new createjs.JSONPLoader(this._item);\n\t\t} else {\n\t\t\tthis._request = new createjs.JSONLoader(this._item);\n\t\t}\n\t};\n\n\tp.handleEvent = function (event) {\n\t\tswitch (event.type) {\n\t\t\tcase \"complete\":\n\t\t\t\tthis._rawResult = event.target.getResult(true);\n\t\t\t\tthis._result = event.target.getResult();\n\t\t\t\tthis._sendProgress(s.SPRITESHEET_PROGRESS);\n\t\t\t\tthis._loadManifest(this._result);\n\t\t\t\treturn;\n\t\t\tcase \"progress\":\n\t\t\t\tevent.loaded *= s.SPRITESHEET_PROGRESS;\n\t\t\t\tthis.progress = event.loaded / event.total;\n\t\t\t\tif (isNaN(this.progress) || this.progress == Infinity) { this.progress = 0; }\n\t\t\t\tthis._sendProgress(event);\n\t\t\t\treturn;\n\t\t}\n\t\tthis.AbstractLoader_handleEvent(event);\n\t};\n\n\t/**\n\t * Create and load the images once the SpriteSheet JSON has been loaded.\n\t * @method _loadManifest\n\t * @param {Object} json\n\t * @private\n\t */\n\tp._loadManifest = function (json) {\n\t\tif (json && json.images) {\n\t\t\tvar queue = this._manifestQueue = new createjs.LoadQueue(this._preferXHR, this._item.path, this._item.crossOrigin);\n\t\t\tqueue.on(\"complete\", this._handleManifestComplete, this, true);\n\t\t\tqueue.on(\"fileload\", this._handleManifestFileLoad, this);\n\t\t\tqueue.on(\"progress\", this._handleManifestProgress, this);\n\t\t\tqueue.on(\"error\", this._handleManifestError, this, true);\n\t\t\tqueue.loadManifest(json.images);\n\t\t}\n\t};\n\n\t/**\n\t * An item from the {{#crossLink \"_manifestQueue:property\"}}{{/crossLink}} has completed.\n\t * @method _handleManifestFileLoad\n\t * @param {Event} event\n\t * @private\n\t */\n\tp._handleManifestFileLoad = function (event) {\n\t\tvar image = event.result;\n\t\tif (image != null) {\n\t\t\tvar images = this.getResult().images;\n\t\t\tvar pos = images.indexOf(event.item.src);\n\t\t\timages[pos] = image;\n\t\t}\n\t};\n\n\t/**\n\t * The images have completed loading. This triggers the {{#crossLink \"AbstractLoader/complete:event\"}}{{/crossLink}}\n\t * {{#crossLink \"Event\"}}{{/crossLink}} from the SpriteSheetLoader.\n\t * @method _handleManifestComplete\n\t * @param {Event} event\n\t * @private\n\t */\n\tp._handleManifestComplete = function (event) {\n\t\tthis._result = new createjs.SpriteSheet(this._result);\n\t\tthis._loadedItems = this._manifestQueue.getItems(true);\n\t\tthis._sendComplete();\n\t};\n\n\t/**\n\t * The images {{#crossLink \"LoadQueue\"}}{{/crossLink}} has reported progress.\n\t * @method _handleManifestProgress\n\t * @param {ProgressEvent} event\n\t * @private\n\t */\n\tp._handleManifestProgress = function (event) {\n\t\tthis.progress = event.progress * (1 - s.SPRITESHEET_PROGRESS) + s.SPRITESHEET_PROGRESS;\n\t\tthis._sendProgress(this.progress);\n\t};\n\n\t/**\n\t * An image has reported an error.\n\t * @method _handleManifestError\n\t * @param {ErrorEvent} event\n\t * @private\n\t */\n\tp._handleManifestError = function (event) {\n\t\tvar newEvent = new createjs.Event(\"fileerror\");\n\t\tnewEvent.item = event.data;\n\t\tthis.dispatchEvent(newEvent);\n\t};\n\n\tcreatejs.SpriteSheetLoader = createjs.promote(SpriteSheetLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// SVGLoader.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for SVG files.\n\t * @class SVGLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @param {Boolean} preferXHR\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction SVGLoader(loadItem, preferXHR) {\n\t\tthis.AbstractLoader_constructor(loadItem, preferXHR, createjs.AbstractLoader.SVG);\n\n\t\t// public properties\n\t\tthis.resultFormatter = this._formatResult;\n\n\t\t// protected properties\n\t\tthis._tagSrcAttribute = \"data\";\n\n\t\tif (preferXHR) {\n\t\t\tthis.setTag(createjs.Elements.svg());\n\t\t} else {\n\t\t\tthis.setTag(createjs.Elements.object());\n\t\t\tthis.getTag().type = \"image/svg+xml\";\n\t\t}\n\t};\n\n\tvar p = createjs.extend(SVGLoader, createjs.AbstractLoader);\n\tvar s = SVGLoader;\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"AbstractLoader/SVG:property\"}}{{/crossLink}}\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.AbstractLoader.SVG;\n\t};\n\n\t// protected methods\n\t/**\n\t * The result formatter for SVG files.\n\t * @method _formatResult\n\t * @param {AbstractLoader} loader\n\t * @returns {Object}\n\t * @private\n\t */\n\tp._formatResult = function (loader) {\n\t\t// mime should be image/svg+xml, but Opera requires text/xml\n\t\tvar xml = createjs.DataUtils.parseXML(loader.getResult(true));\n\t\tvar tag = loader.getTag();\n\n\t\tif (!this._preferXHR && document.body.contains(tag)) {\n\t\t\tdocument.body.removeChild(tag);\n\t\t}\n\n\t\tif (xml.documentElement != null) {\n\t\t\ttag.appendChild(xml.documentElement);\n\t\t\ttag.style.visibility = \"visible\";\n\t\t\treturn tag;\n\t\t} else { // For browsers that don't support SVG, just give them the XML. (IE 9-8)\n\t\t\treturn xml;\n\t\t}\n\t};\n\n\tcreatejs.SVGLoader = createjs.promote(SVGLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// XMLLoader.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\t// constructor\n\t/**\n\t * A loader for CSS files.\n\t * @class XMLLoader\n\t * @param {LoadItem|Object} loadItem\n\t * @extends AbstractLoader\n\t * @constructor\n\t */\n\tfunction XMLLoader(loadItem) {\n\t\tthis.AbstractLoader_constructor(loadItem, true, createjs.AbstractLoader.XML);\n\n\t\t// public properties\n\t\tthis.resultFormatter = this._formatResult;\n\t};\n\n\tvar p = createjs.extend(XMLLoader, createjs.AbstractLoader);\n\tvar s = XMLLoader;\n\n\t// static methods\n\t/**\n\t * Determines if the loader can load a specific item. This loader can only load items that are of type\n\t * {{#crossLink \"AbstractLoader/XML:property\"}}{{/crossLink}}.\n\t * @method canLoadItem\n\t * @param {LoadItem|Object} item The LoadItem that a LoadQueue is trying to load.\n\t * @returns {Boolean} Whether the loader can load the item.\n\t * @static\n\t */\n\ts.canLoadItem = function (item) {\n\t\treturn item.type == createjs.AbstractLoader.XML;\n\t};\n\n\t// protected methods\n\t/**\n\t * The result formatter for XML files.\n\t * @method _formatResult\n\t * @param {AbstractLoader} loader\n\t * @returns {XMLDocument}\n\t * @private\n\t */\n\tp._formatResult = function (loader) {\n\t\treturn createjs.DataUtils.parseXML(loader.getResult(true));\n\t};\n\n\tcreatejs.XMLLoader = createjs.promote(XMLLoader, \"AbstractLoader\");\n\n}());\n\n//##############################################################################\n// version.js\n//##############################################################################\n\n(function (createjs) {\n\n\t/**\n\t * Static class holding library specific information such as the version and buildDate of the library.\n\t * The SoundJS class has been renamed {{#crossLink \"Sound\"}}{{/crossLink}}.  Please see {{#crossLink \"Sound\"}}{{/crossLink}}\n\t * for information on using sound.\n\t * @class SoundJS\n\t **/\n\tvar s = createjs.SoundJS = createjs.SoundJS || {};\n\n\t/**\n\t * The version string for this release.\n\t * @property version\n\t * @type String\n\t * @static\n\t **/\n\ts.version = /*=version*/\"0.6.2\"; // injected by build process\n\n\t/**\n\t * The build date for this release in UTC format.\n\t * @property buildDate\n\t * @type String\n\t * @static\n\t **/\n\ts.buildDate = /*=date*/\"Sat, 12 Nov 2016 06:45:00 GMT\"; // injected by build process\n\n})(scope.createjs);\n\n//##############################################################################\n// IndexOf.js\n//##############################################################################\n\n/**\n * @class Utility Methods\n */\n\n/**\n * Finds the first occurrence of a specified value searchElement in the passed in array, and returns the index of\n * that value.  Returns -1 if value is not found.\n *\n *      var i = createjs.indexOf(myArray, myElementToFind);\n *\n * @method indexOf\n * @param {Array} array Array to search for searchElement\n * @param searchElement Element to find in array.\n * @return {Number} The first index of searchElement in array.\n */\ncreatejs.indexOf = function (array, searchElement){\n\t\"use strict\";\n\n\tfor (var i = 0,l=array.length; i < l; i++) {\n\t\tif (searchElement === array[i]) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\n\n//##############################################################################\n// Proxy.js\n//##############################################################################\n\n/**\n * Various utilities that the CreateJS Suite uses. Utilities are created as separate files, and will be available on the\n * createjs namespace directly.\n *\n * <h4>Example</h4>\n *\n *      myObject.addEventListener(\"change\", createjs.proxy(myMethod, scope));\n *\n * @class Utility Methods\n * @main Utility Methods\n */\n\n(function() {\n\t\"use strict\";\n\n\t/**\n\t * A function proxy for methods. By default, JavaScript methods do not maintain scope, so passing a method as a\n\t * callback will result in the method getting called in the scope of the caller. Using a proxy ensures that the\n\t * method gets called in the correct scope.\n\t *\n\t * Additional arguments can be passed that will be applied to the function when it is called.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      myObject.addEventListener(\"event\", createjs.proxy(myHandler, this, arg1, arg2));\n\t *\n\t *      function myHandler(arg1, arg2) {\n\t *           // This gets called when myObject.myCallback is executed.\n\t *      }\n\t *\n\t * @method proxy\n\t * @param {Function} method The function to call\n\t * @param {Object} scope The scope to call the method name on\n\t * @param {mixed} [arg] * Arguments that are appended to the callback for additional params.\n\t * @public\n\t * @static\n\t */\n\tcreatejs.proxy = function (method, scope) {\n\t\tvar aArgs = Array.prototype.slice.call(arguments, 2);\n\t\treturn function () {\n\t\t\treturn method.apply(scope, Array.prototype.slice.call(arguments, 0).concat(aArgs));\n\t\t};\n\t}\n\n}());\n\n//##############################################################################\n// BrowserDetect.js\n//##############################################################################\n\n/**\n * @class Utility Methods\n */\n(function() {\n\t\"use strict\";\n\n\t/**\n\t * An object that determines the current browser, version, operating system, and other environment\n\t * variables via user agent string.\n\t *\n\t * Used for audio because feature detection is unable to detect the many limitations of mobile devices.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      if (createjs.BrowserDetect.isIOS) { // do stuff }\n\t *\n\t * @property BrowserDetect\n\t * @type {Object}\n\t * @param {Boolean} isFirefox True if our browser is Firefox.\n\t * @param {Boolean} isOpera True if our browser is opera.\n\t * @param {Boolean} isChrome True if our browser is Chrome.  Note that Chrome for Android returns true, but is a\n\t * completely different browser with different abilities.\n\t * @param {Boolean} isIOS True if our browser is safari for iOS devices (iPad, iPhone, and iPod).\n\t * @param {Boolean} isAndroid True if our browser is Android.\n\t * @param {Boolean} isBlackberry True if our browser is Blackberry.\n\t * @constructor\n\t * @static\n\t */\n\tfunction BrowserDetect() {\n\t\tthrow \"BrowserDetect cannot be instantiated\";\n\t};\n\n\tvar agent = BrowserDetect.agent = window.navigator.userAgent;\n\tBrowserDetect.isWindowPhone = (agent.indexOf(\"IEMobile\") > -1) || (agent.indexOf(\"Windows Phone\") > -1);\n\tBrowserDetect.isFirefox = (agent.indexOf(\"Firefox\") > -1);\n\tBrowserDetect.isOpera = (window.opera != null);\n\tBrowserDetect.isChrome = (agent.indexOf(\"Chrome\") > -1);  // NOTE that Chrome on Android returns true but is a completely different browser with different abilities\n\tBrowserDetect.isIOS = (agent.indexOf(\"iPod\") > -1 || agent.indexOf(\"iPhone\") > -1 || agent.indexOf(\"iPad\") > -1) && !BrowserDetect.isWindowPhone;\n\tBrowserDetect.isAndroid = (agent.indexOf(\"Android\") > -1) && !BrowserDetect.isWindowPhone;\n\tBrowserDetect.isBlackberry = (agent.indexOf(\"Blackberry\") > -1);\n\n\tcreatejs.BrowserDetect = BrowserDetect;\n\n}());\n\n//##############################################################################\n// AudioSprite.js\n//##############################################################################\n\n//  NOTE this is \"Class\" is purely to document audioSprite Setup and usage.\n\n\n/**\n * <strong>Note: AudioSprite is not a class, but its usage is easily lost in the documentation, so it has been called\n * out here for quick reference.</strong>\n *\n * Audio sprites are much like CSS sprites or image sprite sheets: multiple audio assets grouped into a single file.\n * Audio sprites work around limitations in certain browsers, where only a single sound can be loaded and played at a\n * time. We recommend at least 300ms of silence between audio clips to deal with HTML audio tag inaccuracy, and to prevent\n * accidentally playing bits of the neighbouring clips.\n *\n * <strong>Benefits of Audio Sprites:</strong>\n * <ul>\n *     <li>More robust support for older browsers and devices that only allow a single audio instance, such as iOS 5.</li>\n *     <li>They provide a work around for the Internet Explorer 9 audio tag limit, which restricts how many different\n *     sounds that could be loaded at once.</li>\n *     <li>Faster loading by only requiring a single network request for several sounds, especially on mobile devices\n * where the network round trip for each file can add significant latency.</li>\n * </ul>\n *\n * <strong>Drawbacks of Audio Sprites</strong>\n * <ul>\n *     <li>No guarantee of smooth looping when using HTML or Flash audio. If you have a track that needs to loop\n * \t\tsmoothly and you are supporting non-web audio browsers, do not use audio sprites for that sound if you can avoid\n * \t\tit.</li>\n *     <li>No guarantee that HTML audio will play back immediately, especially the first time. In some browsers\n *     (Chrome!), HTML audio will only load enough to play through at the current download speed – so we rely on the\n *     `canplaythrough` event to determine if the audio is loaded. Since audio sprites must jump ahead to play specific\n *     sounds, the audio may not yet have downloaded fully.</li>\n *     <li>Audio sprites share the same core source, so if you have a sprite with 5 sounds and are limited to 2\n * \t\tconcurrently playing instances, you can only play 2 of the sounds at the same time.</li>\n * </ul>\n *\n * <h4>Example</h4>\n *\n *\t\tcreatejs.Sound.initializeDefaultPlugins();\n *\t\tvar assetsPath = \"./assets/\";\n *\t\tvar sounds = [{\n *\t\t\tsrc:\"MyAudioSprite.ogg\", data: {\n *\t\t\t\taudioSprite: [\n *\t\t\t\t\t{id:\"sound1\", startTime:0, duration:500},\n *\t\t\t\t\t{id:\"sound2\", startTime:1000, duration:400},\n *\t\t\t\t\t{id:\"sound3\", startTime:1700, duration: 1000}\n *\t\t\t\t]}\n *\t\t\t}\n *\t\t];\n *\t\tcreatejs.Sound.alternateExtensions = [\"mp3\"];\n *\t\tcreatejs.Sound.on(\"fileload\", loadSound);\n *\t\tcreatejs.Sound.registerSounds(sounds, assetsPath);\n *\t\t// after load is complete\n *\t\tcreatejs.Sound.play(\"sound2\");\n *\n * You can also create audio sprites on the fly by setting the startTime and duration when creating an new AbstractSoundInstance.\n *\n * \t\tcreatejs.Sound.play(\"MyAudioSprite\", {startTime: 1000, duration: 400});\n *\n * The excellent CreateJS community has created a tool to create audio sprites, available at\n * <a href=\"https://github.com/tonistiigi/audiosprite\" target=\"_blank\">https://github.com/tonistiigi/audiosprite</a>,\n * as well as a <a href=\"http://jsfiddle.net/bharat_battu/g8fFP/12/\" target=\"_blank\">jsfiddle</a> to convert the output\n * to SoundJS format.\n *\n * @class AudioSprite\n * @since 0.6.0\n */\n\n//##############################################################################\n// PlayPropsConfig.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\t/**\n\t * A class to store the optional play properties passed in {{#crossLink \"Sound/play\"}}{{/crossLink}} and\n\t * {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}} calls.\n\t *\n\t * Optional Play Properties Include:\n\t * <ul>\n\t * <li>interrupt - How to interrupt any currently playing instances of audio with the same source,\n\t * if the maximum number of instances of the sound are already playing. Values are defined as <code>INTERRUPT_TYPE</code>\n\t * constants on the Sound class, with the default defined by {{#crossLink \"Sound/defaultInterruptBehavior:property\"}}{{/crossLink}}.</li>\n\t * <li>delay - The amount of time to delay the start of audio playback, in milliseconds.</li>\n\t * <li>offset - The offset from the start of the audio to begin playback, in milliseconds.</li>\n\t * <li>loop - How many times the audio loops when it reaches the end of playback. The default is 0 (no\n\t * loops), and -1 can be used for infinite playback.</li>\n\t * <li>volume - The volume of the sound, between 0 and 1. Note that the master volume is applied\n\t * against the individual volume.</li>\n\t * <li>pan - The left-right pan of the sound (if supported), between -1 (left) and 1 (right).</li>\n\t * <li>startTime - To create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.</li>\n\t * <li>duration - To create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.</li>\n\t * </ul>\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \tvar ppc = new createjs.PlayPropsConfig().set({interrupt: createjs.Sound.INTERRUPT_ANY, loop: -1, volume: 0.5})\n\t * \tcreatejs.Sound.play(\"mySound\", ppc);\n\t * \tmySoundInstance.play(ppc);\n\t *\n\t * @class PlayPropsConfig\n\t * @constructor\n\t * @since 0.6.1\n\t */\n\t// TODO think of a better name for this class\n\tvar PlayPropsConfig = function () {\n// Public Properties\n\t\t/**\n\t\t * How to interrupt any currently playing instances of audio with the same source,\n\t\t * if the maximum number of instances of the sound are already playing. Values are defined as\n\t\t * <code>INTERRUPT_TYPE</code> constants on the Sound class, with the default defined by\n\t\t * {{#crossLink \"Sound/defaultInterruptBehavior:property\"}}{{/crossLink}}.\n\t\t * @property interrupt\n\t\t * @type {string}\n\t\t * @default null\n\t\t */\n\t\tthis.interrupt = null;\n\n\t\t/**\n\t\t * The amount of time to delay the start of audio playback, in milliseconds.\n\t\t * @property delay\n\t\t * @type {Number}\n\t\t * @default null\n\t\t */\n\t\tthis.delay = null;\n\n\t\t/**\n\t\t * The offset from the start of the audio to begin playback, in milliseconds.\n\t\t * @property offset\n\t\t * @type {number}\n\t\t * @default null\n\t\t */\n\t\tthis.offset = null;\n\n\t\t/**\n\t\t * How many times the audio loops when it reaches the end of playback. The default is 0 (no\n\t\t * loops), and -1 can be used for infinite playback.\n\t\t * @property loop\n\t\t * @type {number}\n\t\t * @default null\n\t\t */\n\t\tthis.loop = null;\n\n\t\t/**\n\t\t * The volume of the sound, between 0 and 1. Note that the master volume is applied\n\t\t * against the individual volume.\n\t\t * @property volume\n\t\t * @type {number}\n\t\t * @default null\n\t\t */\n\t\tthis.volume = null;\n\n\t\t/**\n\t\t * The left-right pan of the sound (if supported), between -1 (left) and 1 (right).\n\t\t * @property pan\n\t\t * @type {number}\n\t\t * @default null\n\t\t */\n\t\tthis.pan = null;\n\n\t\t/**\n\t\t * Used to create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.\n\t\t * @property startTime\n\t\t * @type {number}\n\t\t * @default null\n\t\t */\n\t\tthis.startTime = null;\n\n\t\t/**\n\t\t * Used to create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.\n\t\t * @property duration\n\t\t * @type {number}\n\t\t * @default null\n\t\t */\n\t\tthis.duration = null;\n\t};\n\tvar p = PlayPropsConfig.prototype = {};\n\tvar s = PlayPropsConfig;\n\n\n// Static Methods\n\t/**\n\t * Creates a PlayPropsConfig from another PlayPropsConfig or an Object.\n\t *\n\t * @method create\n\t * @param {PlayPropsConfig|Object} value The play properties\n\t * @returns {PlayPropsConfig}\n\t * @static\n\t */\n\ts.create = function (value) {\n\t\tif (value instanceof s || value instanceof Object) {\n\t\t\tvar ppc = new createjs.PlayPropsConfig();\n\t\t\tppc.set(value);\n\t\t\treturn ppc;\n\t\t} else {\n\t\t\tthrow new Error(\"Type not recognized.\");\n\t\t}\n\t};\n\n// Public Methods\n\t/**\n\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var PlayPropsConfig = new createjs.PlayPropsConfig().set({loop:-1, volume:0.7});\n\t *\n\t * @method set\n\t * @param {Object} props A generic object containing properties to copy to the PlayPropsConfig instance.\n\t * @return {PlayPropsConfig} Returns the instance the method is called on (useful for chaining calls.)\n\t*/\n\tp.set = function(props) {\n\t\tfor (var n in props) { this[n] = props[n]; }\n\t\treturn this;\n\t};\n\n\tp.toString = function() {\n\t\treturn \"[PlayPropsConfig]\";\n\t};\n\n\tcreatejs.PlayPropsConfig = s;\n\n}());\n\n//##############################################################################\n// Sound.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\t/**\n\t * The Sound class is the public API for creating sounds, controlling the overall sound levels, and managing plugins.\n\t * All Sound APIs on this class are static.\n\t *\n\t * <b>Registering and Preloading</b><br />\n\t * Before you can play a sound, it <b>must</b> be registered. You can do this with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}},\n\t * or register multiple sounds using {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}. If you don't register a\n\t * sound prior to attempting to play it using {{#crossLink \"Sound/play\"}}{{/crossLink}} or create it using {{#crossLink \"Sound/createInstance\"}}{{/crossLink}},\n\t * the sound source will be automatically registered but playback will fail as the source will not be ready. If you use\n\t * <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>, registration is handled for you when the sound is\n\t * preloaded. It is recommended to preload sounds either internally using the register functions or externally using\n\t * PreloadJS so they are ready when you want to use them.\n\t *\n\t * <b>Playback</b><br />\n\t * To play a sound once it's been registered and preloaded, use the {{#crossLink \"Sound/play\"}}{{/crossLink}} method.\n\t * This method returns a {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} which can be paused, resumed, muted, etc.\n\t * Please see the {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} documentation for more on the instance control APIs.\n\t *\n\t * <b>Plugins</b><br />\n\t * By default, the {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} or the {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}\n\t * are used (when available), although developers can change plugin priority or add new plugins (such as the\n\t * provided {{#crossLink \"FlashAudioPlugin\"}}{{/crossLink}}). Please see the {{#crossLink \"Sound\"}}{{/crossLink}} API\n\t * methods for more on the playback and plugin APIs. To install plugins, or specify a different plugin order, see\n\t * {{#crossLink \"Sound/installPlugins\"}}{{/crossLink}}.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.FlashAudioPlugin.swfPath = \"../src/soundjs/flashaudio\";\n\t *      createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.FlashAudioPlugin]);\n\t *      createjs.Sound.alternateExtensions = [\"mp3\"];\n\t *      createjs.Sound.on(\"fileload\", this.loadHandler, this);\n\t *      createjs.Sound.registerSound(\"path/to/mySound.ogg\", \"sound\");\n\t *      function loadHandler(event) {\n     *          // This is fired for each sound that is registered.\n     *          var instance = createjs.Sound.play(\"sound\");  // play using id.  Could also use full source path or event.src.\n     *          instance.on(\"complete\", this.handleComplete, this);\n     *          instance.volume = 0.5;\n\t *      }\n\t *\n\t * The maximum number of concurrently playing instances of the same sound can be specified in the \"data\" argument\n\t * of {{#crossLink \"Sound/registerSound\"}}{{/crossLink}}.  Note that if not specified, the active plugin will apply\n\t * a default limit.  Currently HTMLAudioPlugin sets a default limit of 2, while WebAudioPlugin and FlashAudioPlugin set a\n\t * default limit of 100.\n\t *\n\t *      createjs.Sound.registerSound(\"sound.mp3\", \"soundId\", 4);\n\t *\n\t * Sound can be used as a plugin with PreloadJS to help preload audio properly. Audio preloaded with PreloadJS is\n\t * automatically registered with the Sound class. When audio is not preloaded, Sound will do an automatic internal\n\t * load. As a result, it may fail to play the first time play is called if the audio is not finished loading. Use\n\t * the {{#crossLink \"Sound/fileload:event\"}}{{/crossLink}} event to determine when a sound has finished internally\n\t * preloading. It is recommended that all audio is preloaded before it is played.\n\t *\n\t *      var queue = new createjs.LoadQueue();\n\t *\t\tqueue.installPlugin(createjs.Sound);\n\t *\n\t * <b>Audio Sprites</b><br />\n\t * SoundJS has added support for {{#crossLink \"AudioSprite\"}}{{/crossLink}}, available as of version 0.6.0.\n\t * For those unfamiliar with audio sprites, they are much like CSS sprites or sprite sheets: multiple audio assets\n\t * grouped into a single file.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *\t\tvar assetsPath = \"./assets/\";\n\t *\t\tvar sounds = [{\n\t *\t\t\tsrc:\"MyAudioSprite.ogg\", data: {\n\t *\t\t\t\taudioSprite: [\n\t *\t\t\t\t\t{id:\"sound1\", startTime:0, duration:500},\n\t *\t\t\t\t\t{id:\"sound2\", startTime:1000, duration:400},\n\t *\t\t\t\t\t{id:\"sound3\", startTime:1700, duration: 1000}\n\t *\t\t\t\t]}\n \t *\t\t\t}\n\t *\t\t];\n\t *\t\tcreatejs.Sound.alternateExtensions = [\"mp3\"];\n\t *\t\tcreatejs.Sound.on(\"fileload\", loadSound);\n\t *\t\tcreatejs.Sound.registerSounds(sounds, assetsPath);\n\t *\t\t// after load is complete\n\t *\t\tcreatejs.Sound.play(\"sound2\");\n\t *\n\t * <b>Mobile Playback</b><br />\n\t * Devices running iOS require the WebAudio context to be \"unlocked\" by playing at least one sound inside of a user-\n\t * initiated event (such as touch/click). Earlier versions of SoundJS included a \"MobileSafe\" sample, but this is no\n\t * longer necessary as of SoundJS 0.6.2.\n\t * <ul>\n\t *     <li>\n\t *         In SoundJS 0.4.1 and above, you can either initialize plugins or use the {{#crossLink \"WebAudioPlugin/playEmptySound\"}}{{/crossLink}}\n\t *         method in the call stack of a user input event to manually unlock the audio context.\n\t *     </li>\n\t *     <li>\n\t *         In SoundJS 0.6.2 and above, SoundJS will automatically listen for the first document-level \"mousedown\"\n\t *         and \"touchend\" event, and unlock WebAudio. This will continue to check these events until the WebAudio\n\t *         context becomes \"unlocked\" (changes from \"suspended\" to \"running\")\n\t *     </li>\n\t *     <li>\n\t *         Both the \"mousedown\" and \"touchend\" events can be used to unlock audio in iOS9+, the \"touchstart\" event\n\t *         will work in iOS8 and below. The \"touchend\" event will only work in iOS9 when the gesture is interpreted\n\t *         as a \"click\", so if the user long-presses the button, it will no longer work.\n\t *     </li>\n\t *     <li>\n\t *         When using the <a href=\"http://www.createjs.com/docs/easeljs/classes/Touch.html\">EaselJS Touch class</a>,\n\t *         the \"mousedown\" event will not fire when a canvas is clicked, since MouseEvents are prevented, to ensure\n\t *         only touch events fire. To get around this, you can either rely on \"touchend\", or:\n\t *         <ol>\n\t *             <li>Set the `allowDefault` property on the Touch class constructor to `true` (defaults to `false`).</li>\n\t *             <li>Set the `preventSelection` property on the EaselJS `Stage` to `false`.</li>\n\t *         </ol>\n\t *         These settings may change how your application behaves, and are not recommended.\n\t *     </li>\n\t * </ul>\n\t *\n\t * <b>Loading Alternate Paths and Extension-less Files</b><br />\n\t * SoundJS supports loading alternate paths and extension-less files by passing an object instead of a string for\n\t * the `src` property, which is a hash using the format `{extension:\"path\", extension2:\"path2\"}`. These labels are\n\t * how SoundJS determines if the browser will support the sound. This also enables multiple formats to live in\n\t * different folders, or on CDNs, which often has completely different filenames for each file.\n\t *\n\t * Priority is determined by the property order (first property is tried first).  This is supported by both internal loading\n\t * and loading with PreloadJS.\n\t *\n\t * <em>Note: an id is required for playback.</em>\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *\t\tvar sounds = {path:\"./audioPath/\",\n\t * \t\t\t\tmanifest: [\n\t *\t\t\t\t{id: \"cool\", src: {mp3:\"mp3/awesome.mp3\", ogg:\"noExtensionOggFile\"}}\n\t *\t\t]};\n\t *\n\t *\t\tcreatejs.Sound.alternateExtensions = [\"mp3\"];\n\t *\t\tcreatejs.Sound.addEventListener(\"fileload\", handleLoad);\n\t *\t\tcreatejs.Sound.registerSounds(sounds);\n\t *\n\t * <h3>Known Browser and OS issues</h3>\n\t * <b>IE 9 HTML Audio limitations</b><br />\n\t * <ul><li>There is a delay in applying volume changes to tags that occurs once playback is started. So if you have\n\t * muted all sounds, they will all play during this delay until the mute applies internally. This happens regardless of\n\t * when or how you apply the volume change, as the tag seems to need to play to apply it.</li>\n     * <li>MP3 encoding will not always work for audio tags, particularly in Internet Explorer. We've found default\n\t * encoding with 64kbps works.</li>\n\t * <li>Occasionally very short samples will get cut off.</li>\n\t * <li>There is a limit to how many audio tags you can load and play at once, which appears to be determined by\n\t * hardware and browser settings.  See {{#crossLink \"HTMLAudioPlugin.MAX_INSTANCES\"}}{{/crossLink}} for a safe\n\t * estimate.</li></ul>\n\t *\n\t * <b>Firefox 25 Web Audio limitations</b>\n\t * <ul><li>mp3 audio files do not load properly on all windows machines, reported\n\t * <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=929969\" target=\"_blank\">here</a>. </br>\n\t * For this reason it is recommended to pass another FF supported type (ie ogg) first until this bug is resolved, if\n\t * possible.</li></ul>\n\n\t * <b>Safari limitations</b><br />\n\t * <ul><li>Safari requires Quicktime to be installed for audio playback.</li></ul>\n\t *\n\t * <b>iOS 6 Web Audio limitations</b><br />\n\t * <ul><li>Sound is initially locked, and must be unlocked via a user-initiated event. Please see the section on\n\t * Mobile Playback above.</li>\n\t * <li>A bug exists that will distort un-cached web audio when a video element is present in the DOM that has audio\n\t * at a different sampleRate.</li>\n\t * </ul>\n\t *\n\t * <b>Android HTML Audio limitations</b><br />\n\t * <ul><li>We have no control over audio volume. Only the user can set volume on their device.</li>\n\t * <li>We can only play audio inside a user event (touch/click).  This currently means you cannot loop sound or use\n\t * a delay.</li></ul>\n\t *\n\t * <b>Web Audio and PreloadJS</b><br />\n\t * <ul><li>Web Audio must be loaded through XHR, therefore when used with PreloadJS, tag loading is not possible.\n\t * This means that tag loading can not be used to avoid cross domain issues.</li><ul>\n\t *\n\t * @class Sound\n\t * @static\n\t * @uses EventDispatcher\n\t */\n\tfunction Sound() {\n\t\tthrow \"Sound cannot be instantiated\";\n\t}\n\n\tvar s = Sound;\n\n\n// Static Properties\n\t/**\n\t * The interrupt value to interrupt any currently playing instance with the same source, if the maximum number of\n\t * instances of the sound are already playing.\n\t * @property INTERRUPT_ANY\n\t * @type {String}\n\t * @default any\n\t * @static\n\t */\n\ts.INTERRUPT_ANY = \"any\";\n\n\t/**\n\t * The interrupt value to interrupt the earliest currently playing instance with the same source that progressed the\n\t * least distance in the audio track, if the maximum number of instances of the sound are already playing.\n\t * @property INTERRUPT_EARLY\n\t * @type {String}\n\t * @default early\n\t * @static\n\t */\n\ts.INTERRUPT_EARLY = \"early\";\n\n\t/**\n\t * The interrupt value to interrupt the currently playing instance with the same source that progressed the most\n\t * distance in the audio track, if the maximum number of instances of the sound are already playing.\n\t * @property INTERRUPT_LATE\n\t * @type {String}\n\t * @default late\n\t * @static\n\t */\n\ts.INTERRUPT_LATE = \"late\";\n\n\t/**\n\t * The interrupt value to not interrupt any currently playing instances with the same source, if the maximum number of\n\t * instances of the sound are already playing.\n\t * @property INTERRUPT_NONE\n\t * @type {String}\n\t * @default none\n\t * @static\n\t */\n\ts.INTERRUPT_NONE = \"none\";\n\n\t/**\n\t * Defines the playState of an instance that is still initializing.\n\t * @property PLAY_INITED\n\t * @type {String}\n\t * @default playInited\n\t * @static\n\t */\n\ts.PLAY_INITED = \"playInited\";\n\n\t/**\n\t * Defines the playState of an instance that is currently playing or paused.\n\t * @property PLAY_SUCCEEDED\n\t * @type {String}\n\t * @default playSucceeded\n\t * @static\n\t */\n\ts.PLAY_SUCCEEDED = \"playSucceeded\";\n\n\t/**\n\t * Defines the playState of an instance that was interrupted by another instance.\n\t * @property PLAY_INTERRUPTED\n\t * @type {String}\n\t * @default playInterrupted\n\t * @static\n\t */\n\ts.PLAY_INTERRUPTED = \"playInterrupted\";\n\n\t/**\n\t * Defines the playState of an instance that completed playback.\n\t * @property PLAY_FINISHED\n\t * @type {String}\n\t * @default playFinished\n\t * @static\n\t */\n\ts.PLAY_FINISHED = \"playFinished\";\n\n\t/**\n\t * Defines the playState of an instance that failed to play. This is usually caused by a lack of available channels\n\t * when the interrupt mode was \"INTERRUPT_NONE\", the playback stalled, or the sound could not be found.\n\t * @property PLAY_FAILED\n\t * @type {String}\n\t * @default playFailed\n\t * @static\n\t */\n\ts.PLAY_FAILED = \"playFailed\";\n\n\t/**\n\t * A list of the default supported extensions that Sound will <i>try</i> to play. Plugins will check if the browser\n\t * can play these types, so modifying this list before a plugin is initialized will allow the plugins to try to\n\t * support additional media types.\n\t *\n\t * NOTE this does not currently work for {{#crossLink \"FlashAudioPlugin\"}}{{/crossLink}}.\n\t *\n\t * More details on file formats can be found at <a href=\"http://en.wikipedia.org/wiki/Audio_file_format\" target=\"_blank\">http://en.wikipedia.org/wiki/Audio_file_format</a>.<br />\n\t * A very detailed list of file formats can be found at <a href=\"http://www.fileinfo.com/filetypes/audio\" target=\"_blank\">http://www.fileinfo.com/filetypes/audio</a>.\n\t * @property SUPPORTED_EXTENSIONS\n\t * @type {Array[String]}\n\t * @default [\"mp3\", \"ogg\", \"opus\", \"mpeg\", \"wav\", \"m4a\", \"mp4\", \"aiff\", \"wma\", \"mid\"]\n\t * @since 0.4.0\n\t * @static\n\t */\n\ts.SUPPORTED_EXTENSIONS = [\"mp3\", \"ogg\", \"opus\", \"mpeg\", \"wav\", \"m4a\", \"mp4\", \"aiff\", \"wma\", \"mid\"];\n\n\t/**\n\t * Some extensions use another type of extension support to play (one of them is a codex).  This allows you to map\n\t * that support so plugins can accurately determine if an extension is supported.  Adding to this list can help\n\t * plugins determine more accurately if an extension is supported.\n\t *\n \t * A useful list of extensions for each format can be found at <a href=\"http://html5doctor.com/html5-audio-the-state-of-play/\" target=\"_blank\">http://html5doctor.com/html5-audio-the-state-of-play/</a>.\n\t * @property EXTENSION_MAP\n\t * @type {Object}\n\t * @since 0.4.0\n\t * @default {m4a:\"mp4\"}\n\t * @static\n\t */\n\ts.EXTENSION_MAP = {\n\t\tm4a:\"mp4\"\n\t};\n\n\t/**\n\t * The RegExp pattern used to parse file URIs. This supports simple file names, as well as full domain URIs with\n\t * query strings. The resulting match is: protocol:$1 domain:$2 path:$3 file:$4 extension:$5 query:$6.\n\t * @property FILE_PATTERN\n\t * @type {RegExp}\n\t * @static\n\t * @protected\n\t */\n\ts.FILE_PATTERN = /^(?:(\\w+:)\\/{2}(\\w+(?:\\.\\w+)*\\/?))?([/.]*?(?:[^?]+)?\\/)?((?:[^/?]+)\\.(\\w+))(?:\\?(\\S+)?)?$/;\n\n\n// Class Public properties\n\t/**\n\t * Determines the default behavior for interrupting other currently playing instances with the same source, if the\n\t * maximum number of instances of the sound are already playing.  Currently the default is {{#crossLink \"Sound/INTERRUPT_NONE:property\"}}{{/crossLink}}\n\t * but this can be set and will change playback behavior accordingly.  This is only used when {{#crossLink \"Sound/play\"}}{{/crossLink}}\n\t * is called without passing a value for interrupt.\n\t * @property defaultInterruptBehavior\n\t * @type {String}\n\t * @default Sound.INTERRUPT_NONE, or \"none\"\n\t * @static\n\t * @since 0.4.0\n\t */\n\ts.defaultInterruptBehavior = s.INTERRUPT_NONE;  // OJR does s.INTERRUPT_ANY make more sense as default?  Needs game dev testing to see which case makes more sense.\n\n\t/**\n\t * An array of extensions to attempt to use when loading sound, if the default is unsupported by the active plugin.\n\t * These are applied in order, so if you try to Load Thunder.ogg in a browser that does not support ogg, and your\n\t * extensions array is [\"mp3\", \"m4a\", \"wav\"] it will check mp3 support, then m4a, then wav. The audio files need\n\t * to exist in the same location, as only the extension is altered.\n\t *\n\t * Note that regardless of which file is loaded, you can call {{#crossLink \"Sound/createInstance\"}}{{/crossLink}}\n\t * and {{#crossLink \"Sound/play\"}}{{/crossLink}} using the same id or full source path passed for loading.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *\tvar sounds = [\n\t *\t\t{src:\"myPath/mySound.ogg\", id:\"example\"},\n\t *\t];\n\t *\tcreatejs.Sound.alternateExtensions = [\"mp3\"]; // now if ogg is not supported, SoundJS will try asset0.mp3\n\t *\tcreatejs.Sound.on(\"fileload\", handleLoad); // call handleLoad when each sound loads\n\t *\tcreatejs.Sound.registerSounds(sounds, assetPath);\n\t *\t// ...\n\t *\tcreatejs.Sound.play(\"myPath/mySound.ogg\"); // works regardless of what extension is supported.  Note calling with ID is a better approach\n\t *\n\t * @property alternateExtensions\n\t * @type {Array}\n\t * @since 0.5.2\n\t * @static\n\t */\n\ts.alternateExtensions = [];\n\n\t/**\n\t * The currently active plugin. If this is null, then no plugin could be initialized. If no plugin was specified,\n\t * Sound attempts to apply the default plugins: {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}, followed by\n\t * {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.\n\t * @property activePlugin\n\t * @type {Object}\n\t * @static\n\t */\n    s.activePlugin = null;\n\n\n// class getter / setter properties\n\t/**\n\t * Set the master volume of Sound. The master volume is multiplied against each sound's individual volume.  For\n\t * example, if master volume is 0.5 and a sound's volume is 0.5, the resulting volume is 0.25. To set individual\n\t * sound volume, use AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/volume:property\"}}{{/crossLink}} instead.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *     createjs.Sound.volume = 0.5;\n\t *\n\t *\n\t * @property volume\n\t * @type {Number}\n\t * @default 1\n\t * @since 0.6.1\n\t */\n\ts._masterVolume = 1;\n\tObject.defineProperty(s, \"volume\", {\n\t\tget: function () {return this._masterVolume;},\n\t\tset: function (value) {\n\t\t\t\tif (Number(value) == null) {return false;}\n\t\t\t\tvalue = Math.max(0, Math.min(1, value));\n\t\t\t\ts._masterVolume = value;\n\t\t\t\tif (!this.activePlugin || !this.activePlugin.setVolume || !this.activePlugin.setVolume(value)) {\n\t\t\t\t\tvar instances = this._instances;\n\t\t\t\t\tfor (var i = 0, l = instances.length; i < l; i++) {\n\t\t\t\t\t\tinstances[i].setMasterVolume(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t});\n\n\t/**\n\t * Mute/Unmute all audio. Note that muted audio still plays at 0 volume. This global mute value is maintained\n\t * separately and when set will override, but not change the mute property of individual instances. To mute an individual\n\t * instance, use AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/muted:property\"}}{{/crossLink}} instead.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *     createjs.Sound.muted = true;\n\t *\n\t *\n\t * @property muted\n\t * @type {Boolean}\n\t * @default false\n\t * @since 0.6.1\n\t */\n\ts._masterMute = false;\n\t// OJR references to the methods were not working, so the code had to be duplicated here\n\tObject.defineProperty(s, \"muted\", {\n\t\tget: function () {return this._masterMute;},\n\t\tset: function (value) {\n\t\t\t\tif (value == null) {return false;}\n\n\t\t\t\tthis._masterMute = value;\n\t\t\t\tif (!this.activePlugin || !this.activePlugin.setMute || !this.activePlugin.setMute(value)) {\n\t\t\t\t\tvar instances = this._instances;\n\t\t\t\t\tfor (var i = 0, l = instances.length; i < l; i++) {\n\t\t\t\t\t\tinstances[i].setMasterMute(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t});\n\n\t/**\n\t * Get the active plugins capabilities, which help determine if a plugin can be used in the current environment,\n\t * or if the plugin supports a specific feature. Capabilities include:\n\t * <ul>\n\t *     <li><b>panning:</b> If the plugin can pan audio from left to right</li>\n\t *     <li><b>volume;</b> If the plugin can control audio volume.</li>\n\t *     <li><b>tracks:</b> The maximum number of audio tracks that can be played back at a time. This will be -1\n\t *     if there is no known limit.</li>\n\t * <br />An entry for each file type in {{#crossLink \"Sound/SUPPORTED_EXTENSIONS:property\"}}{{/crossLink}}:\n\t *     <li><b>mp3:</b> If MP3 audio is supported.</li>\n\t *     <li><b>ogg:</b> If OGG audio is supported.</li>\n\t *     <li><b>wav:</b> If WAV audio is supported.</li>\n\t *     <li><b>mpeg:</b> If MPEG audio is supported.</li>\n\t *     <li><b>m4a:</b> If M4A audio is supported.</li>\n\t *     <li><b>mp4:</b> If MP4 audio is supported.</li>\n\t *     <li><b>aiff:</b> If aiff audio is supported.</li>\n\t *     <li><b>wma:</b> If wma audio is supported.</li>\n\t *     <li><b>mid:</b> If mid audio is supported.</li>\n\t * </ul>\n\t *\n\t * You can get a specific capability of the active plugin using standard object notation\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var mp3 = createjs.Sound.capabilities.mp3;\n\t *\n\t * Note this property is read only.\n\t *\n\t * @property capabilities\n\t * @type {Object}\n\t * @static\n\t * @readOnly\n\t * @since 0.6.1\n\t */\n\tObject.defineProperty(s, \"capabilities\", {\n\t\tget: function () {\n\t\t\t\t\tif (s.activePlugin == null) {return null;}\n\t\t\t\t\treturn s.activePlugin._capabilities;\n\t\t\t\t},\n\t\tset: function (value) { return false;}\n\t});\n\n\n// Class Private properties\n\t/**\n\t * Determines if the plugins have been registered. If false, the first call to play() will instantiate the default\n\t * plugins ({{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}, followed by {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}).\n\t * If plugins have been registered, but none are applicable, then sound playback will fail.\n\t * @property _pluginsRegistered\n\t * @type {Boolean}\n\t * @default false\n\t * @static\n\t * @protected\n\t */\n\ts._pluginsRegistered = false;\n\n\t/**\n\t * Used internally to assign unique IDs to each AbstractSoundInstance.\n\t * @property _lastID\n\t * @type {Number}\n\t * @static\n\t * @protected\n\t */\n\ts._lastID = 0;\n\n\t/**\n\t * An array containing all currently playing instances. This allows Sound to control the volume, mute, and playback of\n\t * all instances when using static APIs like {{#crossLink \"Sound/stop\"}}{{/crossLink}} and {{#crossLink \"Sound/setVolume\"}}{{/crossLink}}.\n\t * When an instance has finished playback, it gets removed via the {{#crossLink \"Sound/finishedPlaying\"}}{{/crossLink}}\n\t * method. If the user replays an instance, it gets added back in via the {{#crossLink \"Sound/_beginPlaying\"}}{{/crossLink}}\n\t * method.\n\t * @property _instances\n\t * @type {Array}\n\t * @protected\n\t * @static\n\t */\n\ts._instances = [];\n\n\t/**\n\t * An object hash storing objects with sound sources, startTime, and duration via there corresponding ID.\n\t * @property _idHash\n\t * @type {Object}\n\t * @protected\n\t * @static\n\t */\n\ts._idHash = {};\n\n\t/**\n\t * An object hash that stores preloading sound sources via the parsed source that is passed to the plugin.  Contains the\n\t * source, id, and data that was passed in by the user.  Parsed sources can contain multiple instances of source, id,\n\t * and data.\n\t * @property _preloadHash\n\t * @type {Object}\n\t * @protected\n\t * @static\n\t */\n\ts._preloadHash = {};\n\n\t/**\n\t * An object hash storing {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} via the parsed source that is passed as defaultPlayProps in\n\t * {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} and {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n\t * @property _defaultPlayPropsHash\n\t * @type {Object}\n\t * @protected\n\t * @static\n\t * @since 0.6.1\n\t */\n\ts._defaultPlayPropsHash = {};\n\n\n// EventDispatcher methods:\n\ts.addEventListener = null;\n\ts.removeEventListener = null;\n\ts.removeAllEventListeners = null;\n\ts.dispatchEvent = null;\n\ts.hasEventListener = null;\n\ts._listeners = null;\n\n\tcreatejs.EventDispatcher.initialize(s); // inject EventDispatcher methods.\n\n\n// Events\n\t/**\n\t * This event is fired when a file finishes loading internally. This event is fired for each loaded sound,\n\t * so any handler methods should look up the <code>event.src</code> to handle a particular sound.\n\t * @event fileload\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {String} src The source of the sound that was loaded.\n\t * @param {String} [id] The id passed in when the sound was registered. If one was not provided, it will be null.\n\t * @param {Number|Object} [data] Any additional data associated with the item. If not provided, it will be undefined.\n\t * @since 0.4.1\n\t */\n\n\t/**\n\t * This event is fired when a file fails loading internally. This event is fired for each loaded sound,\n\t * so any handler methods should look up the <code>event.src</code> to handle a particular sound.\n\t * @event fileerror\n\t * @param {Object} target The object that dispatched the event.\n\t * @param {String} type The event type.\n\t * @param {String} src The source of the sound that was loaded.\n\t * @param {String} [id] The id passed in when the sound was registered. If one was not provided, it will be null.\n\t * @param {Number|Object} [data] Any additional data associated with the item. If not provided, it will be undefined.\n\t * @since 0.6.0\n\t */\n\n\n// Class Public Methods\n\t/**\n\t * Get the preload rules to allow Sound to be used as a plugin by <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.\n\t * Any load calls that have the matching type or extension will fire the callback method, and use the resulting\n\t * object, which is potentially modified by Sound. This helps when determining the correct path, as well as\n\t * registering the audio instance(s) with Sound. This method should not be called, except by PreloadJS.\n\t * @method getPreloadHandlers\n\t * @return {Object} An object containing:\n\t * <ul><li>callback: A preload callback that is fired when a file is added to PreloadJS, which provides\n\t *      Sound a mechanism to modify the load parameters, select the correct file format, register the sound, etc.</li>\n\t *      <li>types: A list of file types that are supported by Sound (currently supports \"sound\").</li>\n\t *      <li>extensions: A list of file extensions that are supported by Sound (see {{#crossLink \"Sound/SUPPORTED_EXTENSIONS:property\"}}{{/crossLink}}).</li></ul>\n\t * @static\n\t * @protected\n\t */\n\ts.getPreloadHandlers = function () {\n\t\treturn {\n\t\t\tcallback:createjs.proxy(s.initLoad, s),\n\t\t\ttypes:[\"sound\"],\n\t\t\textensions:s.SUPPORTED_EXTENSIONS\n\t\t};\n\t};\n\n\t/**\n\t * Used to dispatch fileload events from internal loading.\n\t * @method _handleLoadComplete\n\t * @param event A loader event.\n\t * @protected\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts._handleLoadComplete = function(event) {\n\t\tvar src = event.target.getItem().src;\n\t\tif (!s._preloadHash[src]) {return;}\n\n\t\tfor (var i = 0, l = s._preloadHash[src].length; i < l; i++) {\n\t\t\tvar item = s._preloadHash[src][i];\n\t\t\ts._preloadHash[src][i] = true;\n\n\t\t\tif (!s.hasEventListener(\"fileload\")) { continue; }\n\n\t\t\tvar event = new createjs.Event(\"fileload\");\n\t\t\tevent.src = item.src;\n\t\t\tevent.id = item.id;\n\t\t\tevent.data = item.data;\n\t\t\tevent.sprite = item.sprite;\n\n\t\t\ts.dispatchEvent(event);\n\t\t}\n\t};\n\n\t/**\n\t * Used to dispatch error events from internal preloading.\n\t * @param event\n\t * @protected\n\t * @since 0.6.0\n\t * @static\n\t */\n\ts._handleLoadError = function(event) {\n\t\tvar src = event.target.getItem().src;\n\t\tif (!s._preloadHash[src]) {return;}\n\n\t\tfor (var i = 0, l = s._preloadHash[src].length; i < l; i++) {\n\t\t\tvar item = s._preloadHash[src][i];\n\t\t\ts._preloadHash[src][i] = false;\n\n\t\t\tif (!s.hasEventListener(\"fileerror\")) { continue; }\n\n\t\t\tvar event = new createjs.Event(\"fileerror\");\n\t\t\tevent.src = item.src;\n\t\t\tevent.id = item.id;\n\t\t\tevent.data = item.data;\n\t\t\tevent.sprite = item.sprite;\n\n\t\t\ts.dispatchEvent(event);\n\t\t}\n\t};\n\n\t/**\n\t * Used by {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} to register a Sound plugin.\n\t *\n\t * @method _registerPlugin\n\t * @param {Object} plugin The plugin class to install.\n\t * @return {Boolean} Whether the plugin was successfully initialized.\n\t * @static\n\t * @private\n\t */\n\ts._registerPlugin = function (plugin) {\n\t\t// Note: Each plugin is passed in as a class reference, but we store the activePlugin as an instance\n\t\tif (plugin.isSupported()) {\n\t\t\ts.activePlugin = new plugin();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * Register a list of Sound plugins, in order of precedence. To register a single plugin, pass a single element in the array.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.FlashAudioPlugin.swfPath = \"../src/soundjs/flashaudio/\";\n\t *      createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\n\t *\n\t * @method registerPlugins\n\t * @param {Array} plugins An array of plugins classes to install.\n\t * @return {Boolean} Whether a plugin was successfully initialized.\n\t * @static\n\t */\n\ts.registerPlugins = function (plugins) {\n\t\ts._pluginsRegistered = true;\n\t\tfor (var i = 0, l = plugins.length; i < l; i++) {\n\t\t\tif (s._registerPlugin(plugins[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * Initialize the default plugins. This method is automatically called when any audio is played or registered before\n\t * the user has manually registered plugins, and enables Sound to work without manual plugin setup. Currently, the\n\t * default plugins are {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} followed by {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \tif (!createjs.initializeDefaultPlugins()) { return; }\n\t *\n\t * @method initializeDefaultPlugins\n\t * @returns {Boolean} True if a plugin was initialized, false otherwise.\n\t * @since 0.4.0\n\t * @static\n\t */\n\ts.initializeDefaultPlugins = function () {\n\t\tif (s.activePlugin != null) {return true;}\n\t\tif (s._pluginsRegistered) {return false;}\n\t\tif (s.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin])) {return true;}\n\t\treturn false;\n\t};\n\n\t/**\n\t * Determines if Sound has been initialized, and a plugin has been activated.\n\t *\n\t * <h4>Example</h4>\n\t * This example sets up a Flash fallback, but only if there is no plugin specified yet.\n\t *\n\t * \tif (!createjs.Sound.isReady()) {\n\t *\t\tcreatejs.FlashAudioPlugin.swfPath = \"../src/soundjs/flashaudio/\";\n\t * \t\tcreatejs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\n\t *\t}\n\t *\n\t * @method isReady\n\t * @return {Boolean} If Sound has initialized a plugin.\n\t * @static\n\t */\n\ts.isReady = function () {\n\t\treturn (s.activePlugin != null);\n\t};\n\n\t/**\n\t * Deprecated, please use {{#crossLink \"Sound/capabilities:property\"}}{{/crossLink}} instead.\n\t *\n\t * @method getCapabilities\n\t * @return {Object} An object containing the capabilities of the active plugin.\n\t * @static\n\t * @deprecated\n\t */\n\ts.getCapabilities = function () {\n\t\tif (s.activePlugin == null) {return null;}\n\t\treturn s.activePlugin._capabilities;\n\t};\n\n\t/**\n\t * Deprecated, please use {{#crossLink \"Sound/capabilities:property\"}}{{/crossLink}} instead.\n\t *\n\t * @method getCapability\n\t * @param {String} key The capability to retrieve\n\t * @return {Number|Boolean} The value of the capability.\n\t * @static\n\t * @see getCapabilities\n\t * @deprecated\n\t */\n\ts.getCapability = function (key) {\n\t\tif (s.activePlugin == null) {return null;}\n\t\treturn s.activePlugin._capabilities[key];\n\t};\n\n\t/**\n\t * Process manifest items from <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>. This method is intended\n\t * for usage by a plugin, and not for direct interaction.\n\t * @method initLoad\n\t * @param {Object} src The object to load.\n\t * @return {Object|AbstractLoader} An instance of AbstractLoader.\n\t * @protected\n\t * @static\n\t */\n\ts.initLoad = function (loadItem) {\n\t\treturn s._registerSound(loadItem);\n\t};\n\n\t/**\n\t * Internal method for loading sounds.  This should not be called directly.\n\t *\n\t * @method _registerSound\n\t * @param {Object} src The object to load, containing src property and optionally containing id and data.\n\t * @return {Object} An object with the modified values that were passed in, which defines the sound.\n\t * Returns false if the source cannot be parsed or no plugins can be initialized.\n\t * Returns true if the source is already loaded.\n\t * @static\n\t * @private\n\t * @since 0.6.0\n\t */\n\n\ts._registerSound = function (loadItem) {\n\t\tif (!s.initializeDefaultPlugins()) {return false;}\n\n\t\tvar details;\n\t\tif (loadItem.src instanceof Object) {\n\t\t\tdetails = s._parseSrc(loadItem.src);\n\t\t\tdetails.src = loadItem.path + details.src;\n\t\t} else {\n\t\t\tdetails = s._parsePath(loadItem.src);\n\t\t}\n\t\tif (details == null) {return false;}\n\t\tloadItem.src = details.src;\n\t\tloadItem.type = \"sound\";\n\n\t\tvar data = loadItem.data;\n\t\tvar numChannels = null;\n\t\tif (data != null) {\n\t\t\tif (!isNaN(data.channels)) {\n\t\t\t\tnumChannels = parseInt(data.channels);\n\t\t\t} else if (!isNaN(data)) {\n\t\t\t\tnumChannels = parseInt(data);\n\t\t\t}\n\n\t\t\tif(data.audioSprite) {\n\t\t\t\tvar sp;\n\t\t\t\tfor(var i = data.audioSprite.length; i--; ) {\n\t\t\t\t\tsp = data.audioSprite[i];\n\t\t\t\t\ts._idHash[sp.id] = {src: loadItem.src, startTime: parseInt(sp.startTime), duration: parseInt(sp.duration)};\n\n\t\t\t\t\tif (sp.defaultPlayProps) {\n\t\t\t\t\t\ts._defaultPlayPropsHash[sp.id] = createjs.PlayPropsConfig.create(sp.defaultPlayProps);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (loadItem.id != null) {s._idHash[loadItem.id] = {src: loadItem.src}};\n\t\tvar loader = s.activePlugin.register(loadItem);\n\n\t\tSoundChannel.create(loadItem.src, numChannels);\n\n\t\t// return the number of instances to the user.  This will also be returned in the load event.\n\t\tif (data == null || !isNaN(data)) {\n\t\t\tloadItem.data = numChannels || SoundChannel.maxPerChannel();\n\t\t} else {\n\t\t\tloadItem.data.channels = numChannels || SoundChannel.maxPerChannel();\n\t\t}\n\n\t\tif (loader.type) {loadItem.type = loader.type;}\n\n\t\tif (loadItem.defaultPlayProps) {\n\t\t\ts._defaultPlayPropsHash[loadItem.src] = createjs.PlayPropsConfig.create(loadItem.defaultPlayProps);\n\t\t}\n\t\treturn loader;\n\t};\n\n\t/**\n\t * Register an audio file for loading and future playback in Sound. This is automatically called when using\n\t * <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.  It is recommended to register all sounds that\n\t * need to be played back in order to properly prepare and preload them. Sound does internal preloading when required.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.Sound.alternateExtensions = [\"mp3\"];\n\t *      createjs.Sound.on(\"fileload\", handleLoad); // add an event listener for when load is completed\n\t *      createjs.Sound.registerSound(\"myAudioPath/mySound.ogg\", \"myID\", 3);\n\t *      createjs.Sound.registerSound({ogg:\"path1/mySound.ogg\", mp3:\"path2/mySoundNoExtension\"}, \"myID\", 3);\n\t *\n\t *\n\t * @method registerSound\n\t * @param {String | Object} src The source or an Object with a \"src\" property or an Object with multiple extension labeled src properties.\n\t * @param {String} [id] An id specified by the user to play the sound later.  Note id is required for when src is multiple extension labeled src properties.\n\t * @param {Number | Object} [data] Data associated with the item. Sound uses the data parameter as the number of\n\t * channels for an audio instance, however a \"channels\" property can be appended to the data object if it is used\n\t * for other information. The audio channels will set a default based on plugin if no value is found.\n\t * Sound also uses the data property to hold an {{#crossLink \"AudioSprite\"}}{{/crossLink}} array of objects in the following format {id, startTime, duration}.<br/>\n\t *   id used to play the sound later, in the same manner as a sound src with an id.<br/>\n\t *   startTime is the initial offset to start playback and loop from, in milliseconds.<br/>\n\t *   duration is the amount of time to play the clip for, in milliseconds.<br/>\n\t * This allows Sound to support audio sprites that are played back by id.\n\t * @param {string} basePath Set a path that will be prepended to src for loading.\n\t * @param {Object | PlayPropsConfig} defaultPlayProps Optional Playback properties that will be set as the defaults on any new AbstractSoundInstance.\n\t * See {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} for options.\n\t * @return {Object} An object with the modified values that were passed in, which defines the sound.\n\t * Returns false if the source cannot be parsed or no plugins can be initialized.\n\t * Returns true if the source is already loaded.\n\t * @static\n\t * @since 0.4.0\n\t */\n\ts.registerSound = function (src, id, data, basePath, defaultPlayProps) {\n\t\tvar loadItem = {src: src, id: id, data:data, defaultPlayProps:defaultPlayProps};\n\t\tif (src instanceof Object && src.src) {\n\t\t\tbasePath = id;\n\t\t\tloadItem = src;\n\t\t}\n\t\tloadItem = createjs.LoadItem.create(loadItem);\n\t\tloadItem.path = basePath;\n\n\t\tif (basePath != null && !(loadItem.src instanceof Object)) {loadItem.src = basePath + loadItem.src;}\n\n\t\tvar loader = s._registerSound(loadItem);\n\t\tif(!loader) {return false;}\n\n\t\tif (!s._preloadHash[loadItem.src]) { s._preloadHash[loadItem.src] = [];}\n\t\ts._preloadHash[loadItem.src].push(loadItem);\n\t\tif (s._preloadHash[loadItem.src].length == 1) {\n\t\t\t// OJR note this will disallow reloading a sound if loading fails or the source changes\n\t\t\tloader.on(\"complete\", this._handleLoadComplete, this);\n\t\t\tloader.on(\"error\", this._handleLoadError, this);\n\t\t\ts.activePlugin.preload(loader);\n\t\t} else {\n\t\t\tif (s._preloadHash[loadItem.src][0] == true) {return true;}\n\t\t}\n\n\t\treturn loadItem;\n\t};\n\n\t/**\n\t * Register an array of audio files for loading and future playback in Sound. It is recommended to register all\n\t * sounds that need to be played back in order to properly prepare and preload them. Sound does internal preloading\n\t * when required.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \t\tvar assetPath = \"./myAudioPath/\";\n\t *      var sounds = [\n\t *          {src:\"asset0.ogg\", id:\"example\"},\n\t *          {src:\"asset1.ogg\", id:\"1\", data:6},\n\t *          {src:\"asset2.mp3\", id:\"works\"}\n\t *          {src:{mp3:\"path1/asset3.mp3\", ogg:\"path2/asset3NoExtension\"}, id:\"better\"}\n\t *      ];\n\t *      createjs.Sound.alternateExtensions = [\"mp3\"];\t// if the passed extension is not supported, try this extension\n\t *      createjs.Sound.on(\"fileload\", handleLoad); // call handleLoad when each sound loads\n\t *      createjs.Sound.registerSounds(sounds, assetPath);\n\t *\n\t * @method registerSounds\n\t * @param {Array} sounds An array of objects to load. Objects are expected to be in the format needed for\n\t * {{#crossLink \"Sound/registerSound\"}}{{/crossLink}}: <code>{src:srcURI, id:ID, data:Data}</code>\n\t * with \"id\" and \"data\" being optional.\n\t * You can also pass an object with path and manifest properties, where path is a basePath and manifest is an array of objects to load.\n\t * Note id is required if src is an object with extension labeled src properties.\n\t * @param {string} basePath Set a path that will be prepended to each src when loading.  When creating, playing, or removing\n\t * audio that was loaded with a basePath by src, the basePath must be included.\n\t * @return {Object} An array of objects with the modified values that were passed in, which defines each sound.\n\t * Like registerSound, it will return false for any values when the source cannot be parsed or if no plugins can be initialized.\n\t * Also, it will return true for any values when the source is already loaded.\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.registerSounds = function (sounds, basePath) {\n\t\tvar returnValues = [];\n\t\tif (sounds.path) {\n\t\t\tif (!basePath) {\n\t\t\t\tbasePath = sounds.path;\n\t\t\t} else {\n\t\t\t\tbasePath = basePath + sounds.path;\n\t\t\t}\n\t\t\tsounds = sounds.manifest;\n\t\t\t// TODO document this feature\n\t\t}\n\t\tfor (var i = 0, l = sounds.length; i < l; i++) {\n\t\t\treturnValues[i] = createjs.Sound.registerSound(sounds[i].src, sounds[i].id, sounds[i].data, basePath, sounds[i].defaultPlayProps);\n\t\t}\n\t\treturn returnValues;\n\t};\n\n\t/**\n\t * Remove a sound that has been registered with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} or\n\t * {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n\t * <br />Note this will stop playback on active instances playing this sound before deleting them.\n\t * <br />Note if you passed in a basePath, you need to pass it or prepend it to the src here.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.Sound.removeSound(\"myID\");\n\t *      createjs.Sound.removeSound(\"myAudioBasePath/mySound.ogg\");\n\t *      createjs.Sound.removeSound(\"myPath/myOtherSound.mp3\", \"myBasePath/\");\n\t *      createjs.Sound.removeSound({mp3:\"musicNoExtension\", ogg:\"music.ogg\"}, \"myBasePath/\");\n\t *\n\t * @method removeSound\n\t * @param {String | Object} src The src or ID of the audio, or an Object with a \"src\" property, or an Object with multiple extension labeled src properties.\n\t * @param {string} basePath Set a path that will be prepended to each src when removing.\n\t * @return {Boolean} True if sound is successfully removed.\n\t * @static\n\t * @since 0.4.1\n\t */\n\ts.removeSound = function(src, basePath) {\n\t\tif (s.activePlugin == null) {return false;}\n\n\t\tif (src instanceof Object && src.src) {src = src.src;}\n\n\t\tvar details;\n\t\tif (src instanceof Object) {\n\t\t\tdetails = s._parseSrc(src);\n\t\t} else {\n\t\t\tsrc = s._getSrcById(src).src;\n\t\t\tdetails = s._parsePath(src);\n\t\t}\n\t\tif (details == null) {return false;}\n\t\tsrc = details.src;\n\t\tif (basePath != null) {src = basePath + src;}\n\n\t\tfor(var prop in s._idHash){\n\t\t\tif(s._idHash[prop].src == src) {\n\t\t\t\tdelete(s._idHash[prop]);\n\t\t\t}\n\t\t}\n\n\t\t// clear from SoundChannel, which also stops and deletes all instances\n\t\tSoundChannel.removeSrc(src);\n\n\t\tdelete(s._preloadHash[src]);\n\n\t\ts.activePlugin.removeSound(src);\n\n\t\treturn true;\n\t};\n\n\t/**\n\t * Remove an array of audio files that have been registered with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} or\n\t * {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n\t * <br />Note this will stop playback on active instances playing this audio before deleting them.\n\t * <br />Note if you passed in a basePath, you need to pass it or prepend it to the src here.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t * \t\tassetPath = \"./myPath/\";\n\t *      var sounds = [\n\t *          {src:\"asset0.ogg\", id:\"example\"},\n\t *          {src:\"asset1.ogg\", id:\"1\", data:6},\n\t *          {src:\"asset2.mp3\", id:\"works\"}\n\t *      ];\n\t *      createjs.Sound.removeSounds(sounds, assetPath);\n\t *\n\t * @method removeSounds\n\t * @param {Array} sounds An array of objects to remove. Objects are expected to be in the format needed for\n\t * {{#crossLink \"Sound/removeSound\"}}{{/crossLink}}: <code>{srcOrID:srcURIorID}</code>.\n\t * You can also pass an object with path and manifest properties, where path is a basePath and manifest is an array of objects to remove.\n\t * @param {string} basePath Set a path that will be prepended to each src when removing.\n\t * @return {Object} An array of Boolean values representing if the sounds with the same array index were\n\t * successfully removed.\n\t * @static\n\t * @since 0.4.1\n\t */\n\ts.removeSounds = function (sounds, basePath) {\n\t\tvar returnValues = [];\n\t\tif (sounds.path) {\n\t\t\tif (!basePath) {\n\t\t\t\tbasePath = sounds.path;\n\t\t\t} else {\n\t\t\t\tbasePath = basePath + sounds.path;\n\t\t\t}\n\t\t\tsounds = sounds.manifest;\n\t\t}\n\t\tfor (var i = 0, l = sounds.length; i < l; i++) {\n\t\t\treturnValues[i] = createjs.Sound.removeSound(sounds[i].src, basePath);\n\t\t}\n\t\treturn returnValues;\n\t};\n\n\t/**\n\t * Remove all sounds that have been registered with {{#crossLink \"Sound/registerSound\"}}{{/crossLink}} or\n\t * {{#crossLink \"Sound/registerSounds\"}}{{/crossLink}}.\n\t * <br />Note this will stop playback on all active sound instances before deleting them.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *     createjs.Sound.removeAllSounds();\n\t *\n\t * @method removeAllSounds\n\t * @static\n\t * @since 0.4.1\n\t */\n\ts.removeAllSounds = function() {\n\t\ts._idHash = {};\n\t\ts._preloadHash = {};\n\t\tSoundChannel.removeAll();\n\t\tif (s.activePlugin) {s.activePlugin.removeAllSounds();}\n\t};\n\n\t/**\n\t * Check if a source has been loaded by internal preloaders. This is necessary to ensure that sounds that are\n\t * not completed preloading will not kick off a new internal preload if they are played.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *     var mySound = \"assetPath/asset0.ogg\";\n\t *     if(createjs.Sound.loadComplete(mySound) {\n\t *         createjs.Sound.play(mySound);\n\t *     }\n\t *\n\t * @method loadComplete\n\t * @param {String} src The src or id that is being loaded.\n\t * @return {Boolean} If the src is already loaded.\n\t * @since 0.4.0\n\t * @static\n\t */\n\ts.loadComplete = function (src) {\n\t\tif (!s.isReady()) { return false; }\n\t\tvar details = s._parsePath(src);\n\t\tif (details) {\n\t\t\tsrc = s._getSrcById(details.src).src;\n\t\t} else {\n\t\t\tsrc = s._getSrcById(src).src;\n\t\t}\n\t\tif(s._preloadHash[src] == undefined) {return false;}\n\t\treturn (s._preloadHash[src][0] == true);  // src only loads once, so if it's true for the first it's true for all\n\t};\n\n\t/**\n\t * Parse the path of a sound. Alternate extensions will be attempted in order if the\n\t * current extension is not supported\n\t * @method _parsePath\n\t * @param {String} value The path to an audio source.\n\t * @return {Object} A formatted object that can be registered with the {{#crossLink \"Sound/activePlugin:property\"}}{{/crossLink}}\n\t * and returned to a preloader like <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.\n\t * @protected\n\t * @static\n\t */\n\ts._parsePath = function (value) {\n\t\tif (typeof(value) != \"string\") {value = value.toString();}\n\n\t\tvar match = value.match(s.FILE_PATTERN);\n\t\tif (match == null) {return false;}\n\n\t\tvar name = match[4];\n\t\tvar ext = match[5];\n\t\tvar c = s.capabilities;\n\t\tvar i = 0;\n\t\twhile (!c[ext]) {\n\t\t\text = s.alternateExtensions[i++];\n\t\t\tif (i > s.alternateExtensions.length) { return null;}\t// no extensions are supported\n\t\t}\n\t\tvalue = value.replace(\".\"+match[5], \".\"+ext);\n\n\t\tvar ret = {name:name, src:value, extension:ext};\n\t\treturn ret;\n\t};\n\n\t/**\n\t * Parse the path of a sound based on properties of src matching with supported extensions.\n\t * Returns false if none of the properties are supported\n\t * @method _parseSrc\n\t * @param {Object} value The paths to an audio source, indexed by extension type.\n\t * @return {Object} A formatted object that can be registered with the {{#crossLink \"Sound/activePlugin:property\"}}{{/crossLink}}\n\t * and returned to a preloader like <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>.\n\t * @protected\n\t * @static\n\t */\n\ts._parseSrc = function (value) {\n\t\tvar ret = {name:undefined, src:undefined, extension:undefined};\n\t\tvar c = s.capabilities;\n\n\t\tfor (var prop in value) {\n\t\t  if(value.hasOwnProperty(prop) && c[prop]) {\n\t\t\t\tret.src = value[prop];\n\t\t\t\tret.extension = prop;\n\t\t\t\tbreak;\n\t\t  }\n\t\t}\n\t\tif (!ret.src) {return false;}\t// no matches\n\n\t\tvar i = ret.src.lastIndexOf(\"/\");\n\t\tif (i != -1) {\n\t\t\tret.name = ret.src.slice(i+1);\n\t\t} else {\n\t\t\tret.name = ret.src;\n\t\t}\n\n\t\treturn ret;\n\t};\n\n\t/* ---------------\n\t Static API.\n\t --------------- */\n\t/**\n\t * Play a sound and get a {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} to control. If the sound fails to play, a\n\t * AbstractSoundInstance will still be returned, and have a playState of {{#crossLink \"Sound/PLAY_FAILED:property\"}}{{/crossLink}}.\n\t * Note that even on sounds with failed playback, you may still be able to call AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}},\n\t * since the failure could be due to lack of available channels. If the src does not have a supported extension or\n\t * if there is no available plugin, a default AbstractSoundInstance will be returned which will not play any audio, but will not generate errors.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      createjs.Sound.on(\"fileload\", handleLoad);\n\t *      createjs.Sound.registerSound(\"myAudioPath/mySound.mp3\", \"myID\", 3);\n\t *      function handleLoad(event) {\n\t *      \tcreatejs.Sound.play(\"myID\");\n\t *      \t// store off AbstractSoundInstance for controlling\n\t *      \tvar myInstance = createjs.Sound.play(\"myID\", {interrupt: createjs.Sound.INTERRUPT_ANY, loop:-1});\n\t *      }\n\t *\n\t * NOTE to create an audio sprite that has not already been registered, both startTime and duration need to be set.\n\t * This is only when creating a new audio sprite, not when playing using the id of an already registered audio sprite.\n\t *\n\t * <b>Parameters Deprecated</b><br />\n\t * The parameters for this method are deprecated in favor of a single parameter that is an Object or {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}}.\n\t *\n\t * @method play\n\t * @param {String} src The src or ID of the audio.\n\t * @param {String | Object} [interrupt=\"none\"|options] <b>This parameter will be renamed playProps in the next release.</b><br />\n\t * This parameter can be an instance of {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} or an Object that contains any or all optional properties by name,\n\t * including: interrupt, delay, offset, loop, volume, pan, startTime, and duration (see the above code sample).\n\t * <br /><strong>OR</strong><br />\n\t * <b>Deprecated</b> How to interrupt any currently playing instances of audio with the same source,\n\t * if the maximum number of instances of the sound are already playing. Values are defined as <code>INTERRUPT_TYPE</code>\n\t * constants on the Sound class, with the default defined by {{#crossLink \"Sound/defaultInterruptBehavior:property\"}}{{/crossLink}}.\n\t * @param {Number} [delay=0] <b>Deprecated</b> The amount of time to delay the start of audio playback, in milliseconds.\n\t * @param {Number} [offset=0] <b>Deprecated</b> The offset from the start of the audio to begin playback, in milliseconds.\n\t * @param {Number} [loop=0] <b>Deprecated</b> How many times the audio loops when it reaches the end of playback. The default is 0 (no\n\t * loops), and -1 can be used for infinite playback.\n\t * @param {Number} [volume=1] <b>Deprecated</b> The volume of the sound, between 0 and 1. Note that the master volume is applied\n\t * against the individual volume.\n\t * @param {Number} [pan=0] <b>Deprecated</b> The left-right pan of the sound (if supported), between -1 (left) and 1 (right).\n\t * @param {Number} [startTime=null] <b>Deprecated</b> To create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.\n\t * @param {Number} [duration=null] <b>Deprecated</b> To create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.\n\t * @return {AbstractSoundInstance} A {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} that can be controlled after it is created.\n\t * @static\n\t */\n\ts.play = function (src, interrupt, delay, offset, loop, volume, pan, startTime, duration) {\n\t\tvar playProps;\n\t\tif (interrupt instanceof Object || interrupt instanceof createjs.PlayPropsConfig) {\n\t\t\tplayProps = createjs.PlayPropsConfig.create(interrupt);\n\t\t} else {\n\t\t\tplayProps = createjs.PlayPropsConfig.create({interrupt:interrupt, delay:delay, offset:offset, loop:loop, volume:volume, pan:pan, startTime:startTime, duration:duration});\n\t\t}\n\t\tvar instance = s.createInstance(src, playProps.startTime, playProps.duration);\n\t\tvar ok = s._playInstance(instance, playProps);\n\t\tif (!ok) {instance._playFailed();}\n\t\treturn instance;\n\t};\n\n\t/**\n\t * Creates a {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} using the passed in src. If the src does not have a\n\t * supported extension or if there is no available plugin, a default AbstractSoundInstance will be returned that can be\n\t * called safely but does nothing.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var myInstance = null;\n\t *      createjs.Sound.on(\"fileload\", handleLoad);\n\t *      createjs.Sound.registerSound(\"myAudioPath/mySound.mp3\", \"myID\", 3);\n\t *      function handleLoad(event) {\n\t *      \tmyInstance = createjs.Sound.createInstance(\"myID\");\n\t *      \t// alternately we could call the following\n\t *      \tmyInstance = createjs.Sound.createInstance(\"myAudioPath/mySound.mp3\");\n\t *      }\n\t *\n\t * NOTE to create an audio sprite that has not already been registered, both startTime and duration need to be set.\n\t * This is only when creating a new audio sprite, not when playing using the id of an already registered audio sprite.\n\t *\n\t * @method createInstance\n\t * @param {String} src The src or ID of the audio.\n\t * @param {Number} [startTime=null] To create an audio sprite (with duration), the initial offset to start playback and loop from, in milliseconds.\n\t * @param {Number} [duration=null] To create an audio sprite (with startTime), the amount of time to play the clip for, in milliseconds.\n\t * @return {AbstractSoundInstance} A {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} that can be controlled after it is created.\n\t * Unsupported extensions will return the default AbstractSoundInstance.\n\t * @since 0.4.0\n\t * @static\n\t */\n\ts.createInstance = function (src, startTime, duration) {\n\t\tif (!s.initializeDefaultPlugins()) {return new createjs.DefaultSoundInstance(src, startTime, duration);}\n\n\t\tvar defaultPlayProps = s._defaultPlayPropsHash[src];\t// for audio sprites, which create and store defaults by id\n\t\tsrc = s._getSrcById(src);\n\n\t\tvar details = s._parsePath(src.src);\n\n\t\tvar instance = null;\n\t\tif (details != null && details.src != null) {\n\t\t\tSoundChannel.create(details.src);\n\t\t\tif (startTime == null) {startTime = src.startTime;}\n\t\t\tinstance = s.activePlugin.create(details.src, startTime, duration || src.duration);\n\n\t\t\tdefaultPlayProps = defaultPlayProps || s._defaultPlayPropsHash[details.src];\n\t\t\tif(defaultPlayProps) {\n\t\t\t\tinstance.applyPlayProps(defaultPlayProps);\n\t\t\t}\n\t\t} else {\n\t\t\tinstance = new createjs.DefaultSoundInstance(src, startTime, duration);\n\t\t}\n\n\t\tinstance.uniqueId = s._lastID++;\n\n\t\treturn instance;\n\t};\n\n\t/**\n\t * Stop all audio (global stop). Stopped audio is reset, and not paused. To play audio that has been stopped,\n\t * call AbstractSoundInstance {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}}.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *     createjs.Sound.stop();\n\t *\n\t * @method stop\n\t * @static\n\t */\n\ts.stop = function () {\n\t\tvar instances = this._instances;\n\t\tfor (var i = instances.length; i--; ) {\n\t\t\tinstances[i].stop();  // NOTE stop removes instance from this._instances\n\t\t}\n\t};\n\n\t/**\n\t * Deprecated, please use {{#crossLink \"Sound/volume:property\"}}{{/crossLink}} instead.\n\t *\n\t * @method setVolume\n\t * @param {Number} value The master volume value. The acceptable range is 0-1.\n\t * @static\n\t * @deprecated\n\t */\n\ts.setVolume = function (value) {\n\t\tif (Number(value) == null) {return false;}\n\t\tvalue = Math.max(0, Math.min(1, value));\n\t\ts._masterVolume = value;\n\t\tif (!this.activePlugin || !this.activePlugin.setVolume || !this.activePlugin.setVolume(value)) {\n\t\t\tvar instances = this._instances;\n\t\t\tfor (var i = 0, l = instances.length; i < l; i++) {\n\t\t\t\tinstances[i].setMasterVolume(value);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Deprecated, please use {{#crossLink \"Sound/volume:property\"}}{{/crossLink}} instead.\n\t *\n\t * @method getVolume\n\t * @return {Number} The master volume, in a range of 0-1.\n\t * @static\n\t * @deprecated\n\t */\n\ts.getVolume = function () {\n\t\treturn this._masterVolume;\n\t};\n\n\t/**\n\t * Deprecated, please use {{#crossLink \"Sound/muted:property\"}}{{/crossLink}} instead.\n\t *\n\t * @method setMute\n\t * @param {Boolean} value Whether the audio should be muted or not.\n\t * @return {Boolean} If the mute was set.\n\t * @static\n\t * @since 0.4.0\n\t * @deprecated\n\t */\n\ts.setMute = function (value) {\n\t\tif (value == null) {return false;}\n\n\t\tthis._masterMute = value;\n\t\tif (!this.activePlugin || !this.activePlugin.setMute || !this.activePlugin.setMute(value)) {\n\t\t\tvar instances = this._instances;\n\t\t\tfor (var i = 0, l = instances.length; i < l; i++) {\n\t\t\t\tinstances[i].setMasterMute(value);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t};\n\n\t/**\n\t * Deprecated, please use {{#crossLink \"Sound/muted:property\"}}{{/crossLink}} instead.\n\t *\n\t * @method getMute\n\t * @return {Boolean} The mute value of Sound.\n\t * @static\n\t * @since 0.4.0\n\t * @deprecated\n\t */\n\ts.getMute = function () {\n\t\treturn this._masterMute;\n\t};\n\n\t/**\n\t * Set the default playback properties for all new SoundInstances of the passed in src or ID.\n\t * See {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} for available properties.\n\t *\n\t * @method setDefaultPlayProps\n\t * @param {String} src The src or ID used to register the audio.\n\t * @param {Object | PlayPropsConfig} playProps The playback properties you would like to set.\n\t * @since 0.6.1\n\t */\n\ts.setDefaultPlayProps = function(src, playProps) {\n\t\tsrc = s._getSrcById(src);\n\t\ts._defaultPlayPropsHash[s._parsePath(src.src).src] = createjs.PlayPropsConfig.create(playProps);\n\t};\n\n\t/**\n\t * Get the default playback properties for the passed in src or ID.  These properties are applied to all\n\t * new SoundInstances.  Returns null if default does not exist.\n\t *\n\t * @method getDefaultPlayProps\n\t * @param {String} src The src or ID used to register the audio.\n\t * @returns {PlayPropsConfig} returns an existing PlayPropsConfig or null if one does not exist\n\t * @since 0.6.1\n\t */\n\ts.getDefaultPlayProps = function(src) {\n\t\tsrc = s._getSrcById(src);\n\t\treturn s._defaultPlayPropsHash[s._parsePath(src.src).src];\n\t};\n\n\n\t/* ---------------\n\t Internal methods\n\t --------------- */\n\t/**\n\t * Play an instance. This is called by the static API, as well as from plugins. This allows the core class to\n\t * control delays.\n\t * @method _playInstance\n\t * @param {AbstractSoundInstance} instance The {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} to start playing.\n\t * @param {PlayPropsConfig} playProps A PlayPropsConfig object.\n\t * @return {Boolean} If the sound can start playing. Sounds that fail immediately will return false. Sounds that\n\t * have a delay will return true, but may still fail to play.\n\t * @protected\n\t * @static\n\t */\n\ts._playInstance = function (instance, playProps) {\n\t\tvar defaultPlayProps = s._defaultPlayPropsHash[instance.src] || {};\n\t\tif (playProps.interrupt == null) {playProps.interrupt = defaultPlayProps.interrupt || s.defaultInterruptBehavior};\n\t\tif (playProps.delay == null) {playProps.delay = defaultPlayProps.delay || 0;}\n\t\tif (playProps.offset == null) {playProps.offset = instance.getPosition();}\n\t\tif (playProps.loop == null) {playProps.loop = instance.loop;}\n\t\tif (playProps.volume == null) {playProps.volume = instance.volume;}\n\t\tif (playProps.pan == null) {playProps.pan = instance.pan;}\n\n\t\tif (playProps.delay == 0) {\n\t\t\tvar ok = s._beginPlaying(instance, playProps);\n\t\t\tif (!ok) {return false;}\n\t\t} else {\n\t\t\t//Note that we can't pass arguments to proxy OR setTimeout (IE only), so just wrap the function call.\n\t\t\t// OJR WebAudio may want to handle this differently, so it might make sense to move this functionality into the plugins in the future\n\t\t\tvar delayTimeoutId = setTimeout(function () {\n\t\t\t\ts._beginPlaying(instance, playProps);\n\t\t\t}, playProps.delay);\n\t\t\tinstance.delayTimeoutId = delayTimeoutId;\n\t\t}\n\n\t\tthis._instances.push(instance);\n\n\t\treturn true;\n\t};\n\n\t/**\n\t * Begin playback. This is called immediately or after delay by {{#crossLink \"Sound/playInstance\"}}{{/crossLink}}.\n\t * @method _beginPlaying\n\t * @param {AbstractSoundInstance} instance A {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} to begin playback.\n\t * @param {PlayPropsConfig} playProps A PlayPropsConfig object.\n\t * @return {Boolean} If the sound can start playing. If there are no available channels, or the instance fails to\n\t * start, this will return false.\n\t * @protected\n\t * @static\n\t */\n\ts._beginPlaying = function (instance, playProps) {\n\t\tif (!SoundChannel.add(instance, playProps.interrupt)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar result = instance._beginPlaying(playProps);\n\t\tif (!result) {\n\t\t\tvar index = createjs.indexOf(this._instances, instance);\n\t\t\tif (index > -1) {this._instances.splice(index, 1);}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t};\n\n\t/**\n\t * Get the source of a sound via the ID passed in with a register call. If no ID is found the value is returned\n\t * instead.\n\t * @method _getSrcById\n\t * @param {String} value The ID the sound was registered with.\n\t * @return {String} The source of the sound if it has been registered with this ID or the value that was passed in.\n\t * @protected\n\t * @static\n\t */\n\ts._getSrcById = function (value) {\n\t\treturn s._idHash[value] || {src: value};\n\t};\n\n\t/**\n\t * A sound has completed playback, been interrupted, failed, or been stopped. This method removes the instance from\n\t * Sound management. It will be added again, if the sound re-plays. Note that this method is called from the\n\t * instances themselves.\n\t * @method _playFinished\n\t * @param {AbstractSoundInstance} instance The instance that finished playback.\n\t * @protected\n\t * @static\n\t */\n\ts._playFinished = function (instance) {\n\t\tSoundChannel.remove(instance);\n\t\tvar index = createjs.indexOf(this._instances, instance);\n\t\tif (index > -1) {this._instances.splice(index, 1);}\t// OJR this will always be > -1, there is no way for an instance to exist without being added to this._instances\n\t};\n\n\tcreatejs.Sound = Sound;\n\n\t/**\n\t * An internal class that manages the number of active {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} instances for\n\t * each sound type. This method is only used internally by the {{#crossLink \"Sound\"}}{{/crossLink}} class.\n\t *\n\t * The number of sounds is artificially limited by Sound in order to prevent over-saturation of a\n\t * single sound, as well as to stay within hardware limitations, although the latter may disappear with better\n\t * browser support.\n\t *\n\t * When a sound is played, this class ensures that there is an available instance, or interrupts an appropriate\n\t * sound that is already playing.\n\t * #class SoundChannel\n\t * @param {String} src The source of the instances\n\t * @param {Number} [max=1] The number of instances allowed\n\t * @constructor\n\t * @protected\n\t */\n\tfunction SoundChannel(src, max) {\n\t\tthis.init(src, max);\n\t}\n\n\t/* ------------\n\t Static API\n\t ------------ */\n\t/**\n\t * A hash of channel instances indexed by source.\n\t * #property channels\n\t * @type {Object}\n\t * @static\n\t */\n\tSoundChannel.channels = {};\n\n\t/**\n\t * Create a sound channel. Note that if the sound channel already exists, this will fail.\n\t * #method create\n\t * @param {String} src The source for the channel\n\t * @param {Number} max The maximum amount this channel holds. The default is {{#crossLink \"SoundChannel.maxDefault\"}}{{/crossLink}}.\n\t * @return {Boolean} If the channels were created.\n\t * @static\n\t */\n\tSoundChannel.create = function (src, max) {\n\t\tvar channel = SoundChannel.get(src);\n\t\tif (channel == null) {\n\t\t\tSoundChannel.channels[src] = new SoundChannel(src, max);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\t/**\n\t * Delete a sound channel, stop and delete all related instances. Note that if the sound channel does not exist, this will fail.\n\t * #method remove\n\t * @param {String} src The source for the channel\n\t * @return {Boolean} If the channels were deleted.\n\t * @static\n\t */\n\tSoundChannel.removeSrc = function (src) {\n\t\tvar channel = SoundChannel.get(src);\n\t\tif (channel == null) {return false;}\n\t\tchannel._removeAll();\t// this stops and removes all active instances\n\t\tdelete(SoundChannel.channels[src]);\n\t\treturn true;\n\t};\n\t/**\n\t * Delete all sound channels, stop and delete all related instances.\n\t * #method removeAll\n\t * @static\n\t */\n\tSoundChannel.removeAll = function () {\n\t\tfor(var channel in SoundChannel.channels) {\n\t\t\tSoundChannel.channels[channel]._removeAll();\t// this stops and removes all active instances\n\t\t}\n\t\tSoundChannel.channels = {};\n\t};\n\t/**\n\t * Add an instance to a sound channel.\n\t * #method add\n\t * @param {AbstractSoundInstance} instance The instance to add to the channel\n\t * @param {String} interrupt The interrupt value to use. Please see the {{#crossLink \"Sound/play\"}}{{/crossLink}}\n\t * for details on interrupt modes.\n\t * @return {Boolean} The success of the method call. If the channel is full, it will return false.\n\t * @static\n\t */\n\tSoundChannel.add = function (instance, interrupt) {\n\t\tvar channel = SoundChannel.get(instance.src);\n\t\tif (channel == null) {return false;}\n\t\treturn channel._add(instance, interrupt);\n\t};\n\t/**\n\t * Remove an instance from the channel.\n\t * #method remove\n\t * @param {AbstractSoundInstance} instance The instance to remove from the channel\n\t * @return The success of the method call. If there is no channel, it will return false.\n\t * @static\n\t */\n\tSoundChannel.remove = function (instance) {\n\t\tvar channel = SoundChannel.get(instance.src);\n\t\tif (channel == null) {return false;}\n\t\tchannel._remove(instance);\n\t\treturn true;\n\t};\n\t/**\n\t * Get the maximum number of sounds you can have in a channel.\n\t * #method maxPerChannel\n\t * @return {Number} The maximum number of sounds you can have in a channel.\n\t */\n\tSoundChannel.maxPerChannel = function () {\n\t\treturn p.maxDefault;\n\t};\n\t/**\n\t * Get a channel instance by its src.\n\t * #method get\n\t * @param {String} src The src to use to look up the channel\n\t * @static\n\t */\n\tSoundChannel.get = function (src) {\n\t\treturn SoundChannel.channels[src];\n\t};\n\n\tvar p = SoundChannel.prototype;\n\tp.constructor = SoundChannel;\n\n\t/**\n\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t * for details.\n\t *\n\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t *\n\t * @method initialize\n\t * @protected\n\t * @deprecated\n\t */\n\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\n\n\t/**\n\t * The source of the channel.\n\t * #property src\n\t * @type {String}\n\t */\n\tp.src = null;\n\n\t/**\n\t * The maximum number of instances in this channel.  -1 indicates no limit\n\t * #property max\n\t * @type {Number}\n\t */\n\tp.max = null;\n\n\t/**\n\t * The default value to set for max, if it isn't passed in.  Also used if -1 is passed.\n\t * #property maxDefault\n\t * @type {Number}\n\t * @default 100\n\t * @since 0.4.0\n\t */\n\tp.maxDefault = 100;\n\n\t/**\n\t * The current number of active instances.\n\t * #property length\n\t * @type {Number}\n\t */\n\tp.length = 0;\n\n\t/**\n\t * Initialize the channel.\n\t * #method init\n\t * @param {String} src The source of the channel\n\t * @param {Number} max The maximum number of instances in the channel\n\t * @protected\n\t */\n\tp.init = function (src, max) {\n\t\tthis.src = src;\n\t\tthis.max = max || this.maxDefault;\n\t\tif (this.max == -1) {this.max = this.maxDefault;}\n\t\tthis._instances = [];\n\t};\n\n\t/**\n\t * Get an instance by index.\n\t * #method get\n\t * @param {Number} index The index to return.\n\t * @return {AbstractSoundInstance} The AbstractSoundInstance at a specific instance.\n\t */\n\tp._get = function (index) {\n\t\treturn this._instances[index];\n\t};\n\n\t/**\n\t * Add a new instance to the channel.\n\t * #method add\n\t * @param {AbstractSoundInstance} instance The instance to add.\n\t * @return {Boolean} The success of the method call. If the channel is full, it will return false.\n\t */\n\tp._add = function (instance, interrupt) {\n\t\tif (!this._getSlot(interrupt, instance)) {return false;}\n\t\tthis._instances.push(instance);\n\t\tthis.length++;\n\t\treturn true;\n\t};\n\n\t/**\n\t * Remove an instance from the channel, either when it has finished playing, or it has been interrupted.\n\t * #method remove\n\t * @param {AbstractSoundInstance} instance The instance to remove\n\t * @return {Boolean} The success of the remove call. If the instance is not found in this channel, it will\n\t * return false.\n\t */\n\tp._remove = function (instance) {\n\t\tvar index = createjs.indexOf(this._instances, instance);\n\t\tif (index == -1) {return false;}\n\t\tthis._instances.splice(index, 1);\n\t\tthis.length--;\n\t\treturn true;\n\t};\n\n\t/**\n\t * Stop playback and remove all instances from the channel.  Usually in response to a delete call.\n\t * #method removeAll\n\t */\n\tp._removeAll = function () {\n\t\t// Note that stop() removes the item from the list\n\t\tfor (var i=this.length-1; i>=0; i--) {\n\t\t\tthis._instances[i].stop();\n\t\t}\n\t};\n\n\t/**\n\t * Get an available slot depending on interrupt value and if slots are available.\n\t * #method getSlot\n\t * @param {String} interrupt The interrupt value to use.\n\t * @param {AbstractSoundInstance} instance The sound instance that will go in the channel if successful.\n\t * @return {Boolean} Determines if there is an available slot. Depending on the interrupt mode, if there are no slots,\n\t * an existing AbstractSoundInstance may be interrupted. If there are no slots, this method returns false.\n\t */\n\tp._getSlot = function (interrupt, instance) {\n\t\tvar target, replacement;\n\n\t\tif (interrupt != Sound.INTERRUPT_NONE) {\n\t\t\t// First replacement candidate\n\t\t\treplacement = this._get(0);\n\t\t\tif (replacement == null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0, l = this.max; i < l; i++) {\n\t\t\ttarget = this._get(i);\n\n\t\t\t// Available Space\n\t\t\tif (target == null) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Audio is complete or not playing\n\t\t\tif (target.playState == Sound.PLAY_FINISHED ||\n\t\t\t\ttarget.playState == Sound.PLAY_INTERRUPTED ||\n\t\t\t\ttarget.playState == Sound.PLAY_FAILED) {\n\t\t\t\treplacement = target;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (interrupt == Sound.INTERRUPT_NONE) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Audio is a better candidate than the current target, according to playhead\n\t\t\tif ((interrupt == Sound.INTERRUPT_EARLY && target.getPosition() < replacement.getPosition()) ||\n\t\t\t\t(interrupt == Sound.INTERRUPT_LATE && target.getPosition() > replacement.getPosition())) {\n\t\t\t\t\treplacement = target;\n\t\t\t}\n\t\t}\n\n\t\tif (replacement != null) {\n\t\t\treplacement._interrupt();\n\t\t\tthis._remove(replacement);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tp.toString = function () {\n\t\treturn \"[Sound SoundChannel]\";\n\t};\n\t// do not add SoundChannel to namespace\n\n}());\n\n//##############################################################################\n// AbstractSoundInstance.js\n//##############################################################################\n\n/**\n * A AbstractSoundInstance is created when any calls to the Sound API method {{#crossLink \"Sound/play\"}}{{/crossLink}} or\n * {{#crossLink \"Sound/createInstance\"}}{{/crossLink}} are made. The AbstractSoundInstance is returned by the active plugin\n * for control by the user.\n *\n * <h4>Example</h4>\n *\n *      var myInstance = createjs.Sound.play(\"myAssetPath/mySrcFile.mp3\");\n *\n * A number of additional parameters provide a quick way to determine how a sound is played. Please see the Sound\n * API method {{#crossLink \"Sound/play\"}}{{/crossLink}} for a list of arguments.\n *\n * Once a AbstractSoundInstance is created, a reference can be stored that can be used to control the audio directly through\n * the AbstractSoundInstance. If the reference is not stored, the AbstractSoundInstance will play out its audio (and any loops), and\n * is then de-referenced from the {{#crossLink \"Sound\"}}{{/crossLink}} class so that it can be cleaned up. If audio\n * playback has completed, a simple call to the {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}} instance method\n * will rebuild the references the Sound class need to control it.\n *\n *      var myInstance = createjs.Sound.play(\"myAssetPath/mySrcFile.mp3\", {loop:2});\n *      myInstance.on(\"loop\", handleLoop);\n *      function handleLoop(event) {\n *          myInstance.volume = myInstance.volume * 0.5;\n *      }\n *\n * Events are dispatched from the instance to notify when the sound has completed, looped, or when playback fails\n *\n *      var myInstance = createjs.Sound.play(\"myAssetPath/mySrcFile.mp3\");\n *      myInstance.on(\"complete\", handleComplete);\n *      myInstance.on(\"loop\", handleLoop);\n *      myInstance.on(\"failed\", handleFailed);\n *\n *\n * @class AbstractSoundInstance\n * @param {String} src The path to and file name of the sound.\n * @param {Number} startTime Audio sprite property used to apply an offset, in milliseconds.\n * @param {Number} duration Audio sprite property used to set the time the clip plays for, in milliseconds.\n * @param {Object} playbackResource Any resource needed by plugin to support audio playback.\n * @extends EventDispatcher\n * @constructor\n */\n\n(function () {\n\t\"use strict\";\n\n\n// Constructor:\n\tvar AbstractSoundInstance = function (src, startTime, duration, playbackResource) {\n\t\tthis.EventDispatcher_constructor();\n\n\n\t// public properties:\n\t\t/**\n\t\t * The source of the sound.\n\t\t * @property src\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.src = src;\n\n\t\t/**\n\t\t * The unique ID of the instance. This is set by {{#crossLink \"Sound\"}}{{/crossLink}}.\n\t\t * @property uniqueId\n\t\t * @type {String} | Number\n\t\t * @default -1\n\t\t */\n\t\tthis.uniqueId = -1;\n\n\t\t/**\n\t\t * The play state of the sound. Play states are defined as constants on {{#crossLink \"Sound\"}}{{/crossLink}}.\n\t\t * @property playState\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.playState = null;\n\n\t\t/**\n\t\t * A Timeout created by {{#crossLink \"Sound\"}}{{/crossLink}} when this AbstractSoundInstance is played with a delay.\n\t\t * This allows AbstractSoundInstance to remove the delay if stop, pause, or cleanup are called before playback begins.\n\t\t * @property delayTimeoutId\n\t\t * @type {timeoutVariable}\n\t\t * @default null\n\t\t * @protected\n\t\t * @since 0.4.0\n\t\t */\n\t\tthis.delayTimeoutId = null;\n\t\t// TODO consider moving delay into AbstractSoundInstance so it can be handled by plugins\n\n\n\t// private properties\n\t// Getter / Setter Properties\n\t\t// OJR TODO find original reason that we didn't use defined functions.  I think it was performance related\n\t\t/**\n\t\t * The volume of the sound, between 0 and 1.\n\t\t *\n\t\t * The actual output volume of a sound can be calculated using:\n\t\t * <code>myInstance.volume * createjs.Sound.getVolume();</code>\n\t\t *\n\t\t * @property volume\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis._volume =  1;\n\t\tObject.defineProperty(this, \"volume\", {\n\t\t\tget: this.getVolume,\n\t\t\tset: this.setVolume\n\t\t});\n\n\t\t/**\n\t\t * The pan of the sound, between -1 (left) and 1 (right). Note that pan is not supported by HTML Audio.\n\t\t *\n\t\t * <br />Note in WebAudioPlugin this only gives us the \"x\" value of what is actually 3D audio.\n\t\t *\n\t\t * @property pan\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._pan =  0;\n\t\tObject.defineProperty(this, \"pan\", {\n\t\t\tget: this.getPan,\n\t\t\tset: this.setPan\n\t\t});\n\n\t\t/**\n\t\t * Audio sprite property used to determine the starting offset.\n\t\t * @property startTime\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @since 0.6.1\n\t\t */\n\t\tthis._startTime = Math.max(0, startTime || 0);\n\t\tObject.defineProperty(this, \"startTime\", {\n\t\t\tget: this.getStartTime,\n\t\t\tset: this.setStartTime\n\t\t});\n\n\t\t/**\n\t\t * Sets or gets the length of the audio clip, value is in milliseconds.\n\t\t *\n\t\t * @property duration\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @since 0.6.0\n\t\t */\n\t\tthis._duration = Math.max(0, duration || 0);\n\t\tObject.defineProperty(this, \"duration\", {\n\t\t\tget: this.getDuration,\n\t\t\tset: this.setDuration\n\t\t});\n\n\t\t/**\n\t\t * Object that holds plugin specific resource need for audio playback.\n\t\t * This is set internally by the plugin.  For example, WebAudioPlugin will set an array buffer,\n\t\t * HTMLAudioPlugin will set a tag, FlashAudioPlugin will set a flash reference.\n\t\t *\n\t\t * @property playbackResource\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis._playbackResource = null;\n\t\tObject.defineProperty(this, \"playbackResource\", {\n\t\t\tget: this.getPlaybackResource,\n\t\t\tset: this.setPlaybackResource\n\t\t});\n\t\tif(playbackResource !== false && playbackResource !== true) { this.setPlaybackResource(playbackResource); }\n\n\t\t/**\n\t\t * The position of the playhead in milliseconds. This can be set while a sound is playing, paused, or stopped.\n\t\t *\n\t\t * @property position\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @since 0.6.0\n\t\t */\n\t\tthis._position = 0;\n\t\tObject.defineProperty(this, \"position\", {\n\t\t\tget: this.getPosition,\n\t\t\tset: this.setPosition\n\t\t});\n\n\t\t/**\n\t\t * The number of play loops remaining. Negative values will loop infinitely.\n\t\t *\n\t\t * @property loop\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @public\n\t\t * @since 0.6.0\n\t\t */\n\t\tthis._loop = 0;\n\t\tObject.defineProperty(this, \"loop\", {\n\t\t\tget: this.getLoop,\n\t\t\tset: this.setLoop\n\t\t});\n\n\t\t/**\n\t\t * Mutes or unmutes the current audio instance.\n\t\t *\n\t\t * @property muted\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @since 0.6.0\n\t\t */\n\t\tthis._muted = false;\n\t\tObject.defineProperty(this, \"muted\", {\n\t\t\tget: this.getMuted,\n\t\t\tset: this.setMuted\n\t\t});\n\n\t\t/**\n\t\t * Pauses or resumes the current audio instance.\n\t\t *\n\t\t * @property paused\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._paused = false;\n\t\tObject.defineProperty(this, \"paused\", {\n\t\t\tget: this.getPaused,\n\t\t\tset: this.setPaused\n\t\t});\n\n\n\t// Events\n\t\t/**\n\t\t * The event that is fired when playback has started successfully.\n\t\t * @event succeeded\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @since 0.4.0\n\t\t */\n\n\t\t/**\n\t\t * The event that is fired when playback is interrupted. This happens when another sound with the same\n\t\t * src property is played using an interrupt value that causes this instance to stop playing.\n\t\t * @event interrupted\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @since 0.4.0\n\t\t */\n\n\t\t/**\n\t\t * The event that is fired when playback has failed. This happens when there are too many channels with the same\n\t\t * src property already playing (and the interrupt value doesn't cause an interrupt of another instance), or\n\t\t * the sound could not be played, perhaps due to a 404 error.\n\t\t * @event failed\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @since 0.4.0\n\t\t */\n\n\t\t/**\n\t\t * The event that is fired when a sound has completed playing but has loops remaining.\n\t\t * @event loop\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @since 0.4.0\n\t\t */\n\n\t\t/**\n\t\t * The event that is fired when playback completes. This means that the sound has finished playing in its\n\t\t * entirety, including its loop iterations.\n\t\t * @event complete\n\t\t * @param {Object} target The object that dispatched the event.\n\t\t * @param {String} type The event type.\n\t\t * @since 0.4.0\n\t\t */\n\t};\n\n\tvar p = createjs.extend(AbstractSoundInstance, createjs.EventDispatcher);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n// Public Methods:\n\t/**\n\t * Play an instance. This method is intended to be called on SoundInstances that already exist (created\n\t * with the Sound API {{#crossLink \"Sound/createInstance\"}}{{/crossLink}} or {{#crossLink \"Sound/play\"}}{{/crossLink}}).\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      var myInstance = createjs.Sound.createInstance(mySrc);\n\t *      myInstance.play({interrupt:createjs.Sound.INTERRUPT_ANY, loop:2, pan:0.5});\n\t *\n\t * Note that if this sound is already playing, this call will still set the passed in parameters.\n\n\t * <b>Parameters Deprecated</b><br />\n\t * The parameters for this method are deprecated in favor of a single parameter that is an Object or {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}}.\n\t *\n\t * @method play\n\t * @param {String | Object} [interrupt=\"none\"|options] <b>This parameter will be renamed playProps in the next release.</b><br />\n\t * This parameter can be an instance of {{#crossLink \"PlayPropsConfig\"}}{{/crossLink}} or an Object that contains any or all optional properties by name,\n\t * including: interrupt, delay, offset, loop, volume, pan, startTime, and duration (see the above code sample).\n\t * <br /><strong>OR</strong><br />\n\t * <b>Deprecated</b> How to interrupt any currently playing instances of audio with the same source,\n\t * if the maximum number of instances of the sound are already playing. Values are defined as <code>INTERRUPT_TYPE</code>\n\t * constants on the Sound class, with the default defined by {{#crossLink \"Sound/defaultInterruptBehavior:property\"}}{{/crossLink}}.\n\t * @param {Number} [delay=0] <b>Deprecated</b> The amount of time to delay the start of audio playback, in milliseconds.\n\t * @param {Number} [offset=0] <b>Deprecated</b> The offset from the start of the audio to begin playback, in milliseconds.\n\t * @param {Number} [loop=0] <b>Deprecated</b> How many times the audio loops when it reaches the end of playback. The default is 0 (no\n\t * loops), and -1 can be used for infinite playback.\n\t * @param {Number} [volume=1] <b>Deprecated</b> The volume of the sound, between 0 and 1. Note that the master volume is applied\n\t * against the individual volume.\n\t * @param {Number} [pan=0] <b>Deprecated</b> The left-right pan of the sound (if supported), between -1 (left) and 1 (right).\n\t * Note that pan is not supported for HTML Audio.\n\t * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n\t */\n\tp.play = function (interrupt, delay, offset, loop, volume, pan) {\n\t\tvar playProps;\n\t\tif (interrupt instanceof Object || interrupt instanceof createjs.PlayPropsConfig) {\n\t\t\tplayProps = createjs.PlayPropsConfig.create(interrupt);\n\t\t} else {\n\t\t\tplayProps = createjs.PlayPropsConfig.create({interrupt:interrupt, delay:delay, offset:offset, loop:loop, volume:volume, pan:pan});\n\t\t}\n\n\t\tif (this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\tthis.applyPlayProps(playProps);\n\t\t\tif (this._paused) {\tthis.setPaused(false); }\n\t\t\treturn;\n\t\t}\n\t\tthis._cleanUp();\n\t\tcreatejs.Sound._playInstance(this, playProps);\t// make this an event dispatch??\n\t\treturn this;\n\t};\n\n\t/**\n\t * Stop playback of the instance. Stopped sounds will reset their position to 0, and calls to {{#crossLink \"AbstractSoundInstance/resume\"}}{{/crossLink}}\n\t * will fail. To start playback again, call {{#crossLink \"AbstractSoundInstance/play\"}}{{/crossLink}}.\n     *\n     * If you don't want to lose your position use yourSoundInstance.paused = true instead. {{#crossLink \"AbstractSoundInstance/paused\"}}{{/crossLink}}.\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *     myInstance.stop();\n\t *\n\t * @method stop\n\t * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n\t */\n\tp.stop = function () {\n\t\tthis._position = 0;\n\t\tthis._paused = false;\n\t\tthis._handleStop();\n\t\tthis._cleanUp();\n\t\tthis.playState = createjs.Sound.PLAY_FINISHED;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Remove all external references and resources from AbstractSoundInstance.  Note this is irreversible and AbstractSoundInstance will no longer work\n\t * @method destroy\n\t * @since 0.6.0\n\t */\n\tp.destroy = function() {\n\t\tthis._cleanUp();\n\t\tthis.src = null;\n\t\tthis.playbackResource = null;\n\n\t\tthis.removeAllEventListeners();\n\t};\n\n\t/**\n\t * Takes an PlayPropsConfig or Object with the same properties and sets them on this instance.\n\t * @method applyPlayProps\n\t * @param {PlayPropsConfig | Object} playProps A PlayPropsConfig or object containing the same properties.\n\t * @since 0.6.1\n\t * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n\t */\n\tp.applyPlayProps = function(playProps) {\n\t\tif (playProps.offset != null) { this.setPosition(playProps.offset) }\n\t\tif (playProps.loop != null) { this.setLoop(playProps.loop); }\n\t\tif (playProps.volume != null) { this.setVolume(playProps.volume); }\n\t\tif (playProps.pan != null) { this.setPan(playProps.pan); }\n\t\tif (playProps.startTime != null) {\n\t\t\tthis.setStartTime(playProps.startTime);\n\t\t\tthis.setDuration(playProps.duration);\n\t\t}\n\t\treturn this;\n\t};\n\n\tp.toString = function () {\n\t\treturn \"[AbstractSoundInstance]\";\n\t};\n\n// get/set methods that allow support for IE8\n\t/**\n\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/paused:property\"}}{{/crossLink}} directly as a property,\n\t *\n\t * @deprecated\n\t * @method getPaused\n\t * @returns {boolean} If the instance is currently paused\n\t * @since 0.6.0\n\t */\n\tp.getPaused = function() {\n\t\treturn this._paused;\n\t};\n\n\t/**\n\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/paused:property\"}}{{/crossLink}} directly as a property\n\t *\n\t * @deprecated\n\t * @method setPaused\n\t * @param {boolean} value\n\t * @since 0.6.0\n\t * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n\t */\n\tp.setPaused = function (value) {\n\t\tif ((value !== true && value !== false) || this._paused == value) {return;}\n\t\tif (value == true && this.playState != createjs.Sound.PLAY_SUCCEEDED) {return;}\n\t\tthis._paused = value;\n\t\tif(value) {\n\t\t\tthis._pause();\n\t\t} else {\n\t\t\tthis._resume();\n\t\t}\n\t\tclearTimeout(this.delayTimeoutId);\n\t\treturn this;\n\t};\n\n\t/**\n\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/volume:property\"}}{{/crossLink}} directly as a property\n\t *\n\t * @deprecated\n\t * @method setVolume\n\t * @param {Number} value The volume to set, between 0 and 1.\n\t * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n\t */\n\tp.setVolume = function (value) {\n\t\tif (value == this._volume) { return this; }\n\t\tthis._volume = Math.max(0, Math.min(1, value));\n\t\tif (!this._muted) {\n\t\t\tthis._updateVolume();\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/volume:property\"}}{{/crossLink}} directly as a property\n\t *\n\t * @deprecated\n\t * @method getVolume\n\t * @return {Number} The current volume of the sound instance.\n\t */\n\tp.getVolume = function () {\n\t\treturn this._volume;\n\t};\n\n\t/**\n\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/muted:property\"}}{{/crossLink}} directly as a property\n\t *\n\t * @deprecated\n\t * @method setMuted\n\t * @param {Boolean} value If the sound should be muted.\n\t * @return {AbstractSoundInstance} A reference to itself, intended for chaining calls.\n\t * @since 0.6.0\n\t */\n\tp.setMuted = function (value) {\n\t\tif (value !== true && value !== false) {return;}\n\t\tthis._muted = value;\n\t\tthis._updateVolume();\n\t\treturn this;\n\t};\n\n\t/**\n\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/muted:property\"}}{{/crossLink}} directly as a property\n\t *\n\t * @deprecated\n\t * @method getMuted\n\t * @return {Boolean} If the sound is muted.\n\t * @since 0.6.0\n\t */\n\tp.getMuted = function () {\n\t\treturn this._muted;\n\t};\n\n\t/**\n\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/pan:property\"}}{{/crossLink}} directly as a property\n\t *\n\t * @deprecated\n\t * @method setPan\n\t * @param {Number} value The pan value, between -1 (left) and 1 (right).\n\t * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n\t */\n\tp.setPan = function (value) {\n\t\tif(value == this._pan) { return this; }\n\t\tthis._pan = Math.max(-1, Math.min(1, value));\n\t\tthis._updatePan();\n\t\treturn this;\n\t};\n\n\t/**\n\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/pan:property\"}}{{/crossLink}} directly as a property\n\t *\n\t * @deprecated\n\t * @method getPan\n\t * @return {Number} The value of the pan, between -1 (left) and 1 (right).\n\t */\n\tp.getPan = function () {\n\t\treturn this._pan;\n\t};\n\n\t/**\n\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/position:property\"}}{{/crossLink}} directly as a property\n\t *\n\t * @deprecated\n\t * @method getPosition\n\t * @return {Number} The position of the playhead in the sound, in milliseconds.\n\t */\n\tp.getPosition = function () {\n\t\tif (!this._paused && this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\tthis._position = this._calculateCurrentPosition();\n\t\t}\n\t\treturn this._position;\n\t};\n\n\t/**\n\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/position:property\"}}{{/crossLink}} directly as a property\n\t *\n\t * @deprecated\n\t * @method setPosition\n\t * @param {Number} value The position to place the playhead, in milliseconds.\n\t * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n\t */\n\tp.setPosition = function (value) {\n\t\tthis._position = Math.max(0, value);\n\t\tif (this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\tthis._updatePosition();\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/startTime:property\"}}{{/crossLink}} directly as a property\n\t *\n\t * @deprecated\n\t * @method getStartTime\n\t * @return {Number} The startTime of the sound instance in milliseconds.\n\t */\n\tp.getStartTime = function () {\n\t\treturn this._startTime;\n\t};\n\n\t/**\n\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/startTime:property\"}}{{/crossLink}} directly as a property\n\t *\n\t * @deprecated\n\t * @method setStartTime\n\t * @param {number} value The new startTime time in milli seconds.\n\t * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n\t */\n\tp.setStartTime = function (value) {\n\t\tif (value == this._startTime) { return this; }\n\t\tthis._startTime = Math.max(0, value || 0);\n\t\tthis._updateStartTime();\n\t\treturn this;\n\t};\n\n\t/**\n\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/duration:property\"}}{{/crossLink}} directly as a property\n\t *\n\t * @deprecated\n\t * @method getDuration\n\t * @return {Number} The duration of the sound instance in milliseconds.\n\t */\n\tp.getDuration = function () {\n\t\treturn this._duration;\n\t};\n\n\t/**\n\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/duration:property\"}}{{/crossLink}} directly as a property\n\t *\n\t * @deprecated\n\t * @method setDuration\n\t * @param {number} value The new duration time in milli seconds.\n\t * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n\t * @since 0.6.0\n\t */\n\tp.setDuration = function (value) {\n\t\tif (value == this._duration) { return this; }\n\t\tthis._duration = Math.max(0, value || 0);\n\t\tthis._updateDuration();\n\t\treturn this;\n\t};\n\n\t/**\n\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/playbackResource:property\"}}{{/crossLink}} directly as a property\n\t *\n\t * @deprecated\n\t * @method setPlayback\n\t * @param {Object} value The new playback resource.\n\t * @return {AbstractSoundInstance} Returns reference to itself for chaining calls\n\t * @since 0.6.0\n\t **/\n\tp.setPlaybackResource = function (value) {\n\t\tthis._playbackResource = value;\n\t\tif (this._duration == 0) { this._setDurationFromSource(); }\n\t\treturn this;\n\t};\n\n\t/**\n\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/playbackResource:property\"}}{{/crossLink}} directly as a property\n\t *\n\t * @deprecated\n\t * @method setPlayback\n\t * @param {Object} value The new playback resource.\n\t * @return {Object} playback resource used for playing audio\n\t * @since 0.6.0\n\t **/\n\tp.getPlaybackResource = function () {\n\t\treturn this._playbackResource;\n\t};\n\n\t/**\n\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/loop:property\"}}{{/crossLink}} directly as a property\n\t *\n\t * @deprecated\n\t * @method getLoop\n\t * @return {number}\n\t * @since 0.6.0\n\t **/\n\tp.getLoop = function () {\n\t\treturn this._loop;\n\t};\n\n\t/**\n\t * DEPRECATED, please use {{#crossLink \"AbstractSoundInstance/loop:property\"}}{{/crossLink}} directly as a property,\n\t *\n\t * @deprecated\n\t * @method setLoop\n\t * @param {number} value The number of times to loop after play.\n\t * @since 0.6.0\n\t */\n\tp.setLoop = function (value) {\n\t\tif(this._playbackResource != null) {\n\t\t\t// remove looping\n\t\t\tif (this._loop != 0 && value == 0) {\n\t\t\t\tthis._removeLooping(value);\n\t\t\t}\n\t\t\t// add looping\n\t\t\telse if (this._loop == 0 && value != 0) {\n\t\t\t\tthis._addLooping(value);\n\t\t\t}\n\t\t}\n\t\tthis._loop = value;\n\t};\n\n\n// Private Methods:\n\t/**\n\t * A helper method that dispatches all events for AbstractSoundInstance.\n\t * @method _sendEvent\n\t * @param {String} type The event type\n\t * @protected\n\t */\n\tp._sendEvent = function (type) {\n\t\tvar event = new createjs.Event(type);\n\t\tthis.dispatchEvent(event);\n\t};\n\n\t/**\n\t * Clean up the instance. Remove references and clean up any additional properties such as timers.\n\t * @method _cleanUp\n\t * @protected\n\t */\n\tp._cleanUp = function () {\n\t\tclearTimeout(this.delayTimeoutId); // clear timeout that plays delayed sound\n\t\tthis._handleCleanUp();\n\t\tthis._paused = false;\n\n\t\tcreatejs.Sound._playFinished(this);\t// TODO change to an event\n\t};\n\n\t/**\n\t * The sound has been interrupted.\n\t * @method _interrupt\n\t * @protected\n\t */\n\tp._interrupt = function () {\n\t\tthis._cleanUp();\n\t\tthis.playState = createjs.Sound.PLAY_INTERRUPTED;\n\t\tthis._sendEvent(\"interrupted\");\n\t};\n\n\t/**\n\t * Called by the Sound class when the audio is ready to play (delay has completed). Starts sound playing if the\n\t * src is loaded, otherwise playback will fail.\n\t * @method _beginPlaying\n\t * @param {PlayPropsConfig} playProps A PlayPropsConfig object.\n\t * @return {Boolean} If playback succeeded.\n\t * @protected\n\t */\n\t// OJR FlashAudioSoundInstance overwrites\n\tp._beginPlaying = function (playProps) {\n\t\tthis.setPosition(playProps.offset);\n\t\tthis.setLoop(playProps.loop);\n\t\tthis.setVolume(playProps.volume);\n\t\tthis.setPan(playProps.pan);\n\t\tif (playProps.startTime != null) {\n\t\t\tthis.setStartTime(playProps.startTime);\n\t\t\tthis.setDuration(playProps.duration);\n\t\t}\n\n\t\tif (this._playbackResource != null && this._position < this._duration) {\n\t\t\tthis._paused = false;\n\t\t\tthis._handleSoundReady();\n\t\t\tthis.playState = createjs.Sound.PLAY_SUCCEEDED;\n\t\t\tthis._sendEvent(\"succeeded\");\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis._playFailed();\n\t\t\treturn false;\n\t\t}\n\t};\n\n\t/**\n\t * Play has failed, which can happen for a variety of reasons.\n\t * Cleans up instance and dispatches failed event\n\t * @method _playFailed\n\t * @private\n\t */\n\tp._playFailed = function () {\n\t\tthis._cleanUp();\n\t\tthis.playState = createjs.Sound.PLAY_FAILED;\n\t\tthis._sendEvent(\"failed\");\n\t};\n\n\t/**\n\t * Audio has finished playing. Manually loop it if required.\n\t * @method _handleSoundComplete\n\t * @param event\n\t * @protected\n\t */\n\tp._handleSoundComplete = function (event) {\n\t\tthis._position = 0;  // have to set this as it can be set by pause during playback\n\n\t\tif (this._loop != 0) {\n\t\t\tthis._loop--;  // NOTE this introduces a theoretical limit on loops = float max size x 2 - 1\n\t\t\tthis._handleLoop();\n\t\t\tthis._sendEvent(\"loop\");\n\t\t\treturn;\n\t\t}\n\n\t\tthis._cleanUp();\n\t\tthis.playState = createjs.Sound.PLAY_FINISHED;\n\t\tthis._sendEvent(\"complete\");\n\t};\n\n// Plugin specific code\n\t/**\n\t * Handles starting playback when the sound is ready for playing.\n\t * @method _handleSoundReady\n\t * @protected\n \t */\n\tp._handleSoundReady = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function used to update the volume based on the instance volume, master volume, instance mute value,\n\t * and master mute value.\n\t * @method _updateVolume\n\t * @protected\n\t */\n\tp._updateVolume = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function used to update the pan\n\t * @method _updatePan\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._updatePan = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function used to update the startTime of the audio.\n\t * @method _updateStartTime\n\t * @protected\n\t * @since 0.6.1\n\t */\n\tp._updateStartTime = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function used to update the duration of the audio.\n\t * @method _updateDuration\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._updateDuration = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function used to get the duration of the audio from the source we'll be playing.\n\t * @method _updateDuration\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._setDurationFromSource = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function that calculates the current position of the playhead and sets this._position to that value\n\t * @method _calculateCurrentPosition\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._calculateCurrentPosition = function () {\n\t\t// plugin specific code that sets this.position\n\t};\n\n\t/**\n\t * Internal function used to update the position of the playhead.\n\t * @method _updatePosition\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._updatePosition = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function called when looping is removed during playback.\n\t * @method _removeLooping\n\t * @param {number} value The number of times to loop after play.\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._removeLooping = function (value) {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function called when looping is added during playback.\n\t * @method _addLooping\n\t * @param {number} value The number of times to loop after play.\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._addLooping = function (value) {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function called when pausing playback\n\t * @method _pause\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._pause = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function called when resuming playback\n\t * @method _resume\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._resume = function () {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function called when stopping playback\n\t * @method _handleStop\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._handleStop = function() {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function called when AbstractSoundInstance is being cleaned up\n\t * @method _handleCleanUp\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._handleCleanUp = function() {\n\t\t// plugin specific code\n\t};\n\n\t/**\n\t * Internal function called when AbstractSoundInstance has played to end and is looping\n\t * @method _handleLoop\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._handleLoop = function () {\n\t\t// plugin specific code\n\t};\n\n\tcreatejs.AbstractSoundInstance = createjs.promote(AbstractSoundInstance, \"EventDispatcher\");\n\tcreatejs.DefaultSoundInstance = createjs.AbstractSoundInstance;\t// used when no plugin is supported\n}());\n\n//##############################################################################\n// AbstractPlugin.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\n// constructor:\n \t/**\n\t * A default plugin class used as a base for all other plugins.\n\t * @class AbstractPlugin\n\t * @constructor\n\t * @since 0.6.0\n\t */\n\n\tvar AbstractPlugin = function () {\n\t// private properties:\n\t\t/**\n\t\t * The capabilities of the plugin.\n\t\t * method and is used internally.\n\t\t * @property _capabilities\n\t\t * @type {Object}\n\t\t * @default null\n\t\t * @protected\n\t\t * @static\n\t\t */\n\t\tthis._capabilities = null;\n\n\t\t/**\n\t\t * Object hash indexed by the source URI of all created loaders, used to properly destroy them if sources are removed.\n\t\t * @type {Object}\n\t\t * @protected\n\t\t */\n\t\tthis._loaders = {};\n\n\t\t/**\n\t\t * Object hash indexed by the source URI of each file to indicate if an audio source has begun loading,\n\t\t * is currently loading, or has completed loading.  Can be used to store non boolean data after loading\n\t\t * is complete (for example arrayBuffers for web audio).\n\t\t * @property _audioSources\n\t\t * @type {Object}\n\t\t * @protected\n\t\t */\n\t\tthis._audioSources = {};\n\n\t\t/**\n\t\t * Object hash indexed by the source URI of all created SoundInstances, updates the playbackResource if it loads after they are created,\n\t\t * and properly destroy them if sources are removed\n\t\t * @type {Object}\n\t\t * @protected\n\t\t */\n\t\tthis._soundInstances = {};\n\n\t\t/**\n\t\t * The internal master volume value of the plugin.\n\t\t * @property _volume\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t * @protected\n\t\t */\n\t\tthis._volume = 1;\n\n\t\t/**\n\t\t * A reference to a loader class used by a plugin that must be set.\n\t\t * @type {Object}\n\t\t * @protected\n\t\t */\n\t\tthis._loaderClass;\n\n\t\t/**\n\t\t * A reference to an AbstractSoundInstance class used by a plugin that must be set.\n\t\t * @type {Object}\n\t\t * @protected;\n\t\t */\n\t\tthis._soundInstanceClass;\n\t};\n\tvar p = AbstractPlugin.prototype;\n\n\t/**\n\t * <strong>REMOVED</strong>. Removed in favor of using `MySuperClass_constructor`.\n\t * See {{#crossLink \"Utility Methods/extend\"}}{{/crossLink}} and {{#crossLink \"Utility Methods/promote\"}}{{/crossLink}}\n\t * for details.\n\t *\n\t * There is an inheritance tutorial distributed with EaselJS in /tutorials/Inheritance.\n\t *\n\t * @method initialize\n\t * @protected\n\t * @deprecated\n\t */\n\t// p.initialize = function() {}; // searchable for devs wondering where it is.\n\n\n// Static Properties:\n// NOTE THESE PROPERTIES NEED TO BE ADDED TO EACH PLUGIN\n\t/**\n\t * The capabilities of the plugin. This is generated via the _generateCapabilities method and is used internally.\n\t * @property _capabilities\n\t * @type {Object}\n\t * @default null\n\t * @protected\n\t * @static\n\t */\n\tAbstractPlugin._capabilities = null;\n\n\t/**\n\t * Determine if the plugin can be used in the current browser/OS.\n\t * @method isSupported\n\t * @return {Boolean} If the plugin can be initialized.\n\t * @static\n\t */\n\tAbstractPlugin.isSupported = function () {\n\t\treturn true;\n\t};\n\n\n// public methods:\n\t/**\n\t * Pre-register a sound for preloading and setup. This is called by {{#crossLink \"Sound\"}}{{/crossLink}}.\n\t * Note all plugins provide a <code>Loader</code> instance, which <a href=\"http://preloadjs.com\" target=\"_blank\">PreloadJS</a>\n\t * can use to assist with preloading.\n\t * @method register\n\t * @param {String} loadItem An Object containing the source of the audio\n\t * Note that not every plugin will manage this value.\n\t * @return {Object} A result object, containing a \"tag\" for preloading purposes.\n\t */\n\tp.register = function (loadItem) {\n\t\tvar loader = this._loaders[loadItem.src];\n\t\tif(loader && !loader.canceled) {return this._loaders[loadItem.src];}\t// already loading/loaded this, so don't load twice\n\t\t// OJR potential issue that we won't be firing loaded event, might need to trigger if this is already loaded?\n\t\tthis._audioSources[loadItem.src] = true;\n\t\tthis._soundInstances[loadItem.src] = [];\n\t\tloader = new this._loaderClass(loadItem);\n\t\tloader.on(\"complete\", this._handlePreloadComplete, this);\n\t\tthis._loaders[loadItem.src] = loader;\n\t\treturn loader;\n\t};\n\n\t// note sound calls register before calling preload\n\t/**\n\t * Internally preload a sound.\n\t * @method preload\n\t * @param {Loader} loader The sound URI to load.\n\t */\n\tp.preload = function (loader) {\n\t\tloader.on(\"error\", this._handlePreloadError, this);\n\t\tloader.load();\n\t};\n\n\t/**\n\t * Checks if preloading has started for a specific source. If the source is found, we can assume it is loading,\n\t * or has already finished loading.\n\t * @method isPreloadStarted\n\t * @param {String} src The sound URI to check.\n\t * @return {Boolean}\n\t */\n\tp.isPreloadStarted = function (src) {\n\t\treturn (this._audioSources[src] != null);\n\t};\n\n\t/**\n\t * Checks if preloading has finished for a specific source.\n\t * @method isPreloadComplete\n\t * @param {String} src The sound URI to load.\n\t * @return {Boolean}\n\t */\n\tp.isPreloadComplete = function (src) {\n\t\treturn (!(this._audioSources[src] == null || this._audioSources[src] == true));\n\t};\n\n\t/**\n\t * Remove a sound added using {{#crossLink \"WebAudioPlugin/register\"}}{{/crossLink}}. Note this does not cancel a preload.\n\t * @method removeSound\n\t * @param {String} src The sound URI to unload.\n\t */\n\tp.removeSound = function (src) {\n\t\tif (!this._soundInstances[src]) { return; }\n\t\tfor (var i = this._soundInstances[src].length; i--; ) {\n\t\t\tvar item = this._soundInstances[src][i];\n\t\t\titem.destroy();\n\t\t}\n\t\tdelete(this._soundInstances[src]);\n\t\tdelete(this._audioSources[src]);\n\t\tif(this._loaders[src]) { this._loaders[src].destroy(); }\n\t\tdelete(this._loaders[src]);\n\t};\n\n\t/**\n\t * Remove all sounds added using {{#crossLink \"WebAudioPlugin/register\"}}{{/crossLink}}. Note this does not cancel a preload.\n\t * @method removeAllSounds\n\t * @param {String} src The sound URI to unload.\n\t */\n\tp.removeAllSounds = function () {\n\t\tfor(var key in this._audioSources) {\n\t\t\tthis.removeSound(key);\n\t\t}\n\t};\n\n\t/**\n\t * Create a sound instance. If the sound has not been preloaded, it is internally preloaded here.\n\t * @method create\n\t * @param {String} src The sound source to use.\n\t * @param {Number} startTime Audio sprite property used to apply an offset, in milliseconds.\n\t * @param {Number} duration Audio sprite property used to set the time the clip plays for, in milliseconds.\n\t * @return {AbstractSoundInstance} A sound instance for playback and control.\n\t */\n\tp.create = function (src, startTime, duration) {\n\t\tif (!this.isPreloadStarted(src)) {\n\t\t\tthis.preload(this.register(src));\n\t\t}\n\t\tvar si = new this._soundInstanceClass(src, startTime, duration, this._audioSources[src]);\n\t\tif(this._soundInstances[src]){\n\t\t\tthis._soundInstances[src].push(si);\n\t\t}\n\n\t\treturn si;\n\t};\n\n\t// if a plugin does not support volume and mute, it should set these to null\n\t/**\n\t * Set the master volume of the plugin, which affects all SoundInstances.\n\t * @method setVolume\n\t * @param {Number} value The volume to set, between 0 and 1.\n\t * @return {Boolean} If the plugin processes the setVolume call (true). The Sound class will affect all the\n\t * instances manually otherwise.\n\t */\n\tp.setVolume = function (value) {\n\t\tthis._volume = value;\n\t\tthis._updateVolume();\n\t\treturn true;\n\t};\n\n\t/**\n\t * Get the master volume of the plugin, which affects all SoundInstances.\n\t * @method getVolume\n\t * @return {Number} The volume level, between 0 and 1.\n\t */\n\tp.getVolume = function () {\n\t\treturn this._volume;\n\t};\n\n\t/**\n\t * Mute all sounds via the plugin.\n\t * @method setMute\n\t * @param {Boolean} value If all sound should be muted or not. Note that plugin-level muting just looks up\n\t * the mute value of Sound {{#crossLink \"Sound/getMute\"}}{{/crossLink}}, so this property is not used here.\n\t * @return {Boolean} If the mute call succeeds.\n\t */\n\tp.setMute = function (value) {\n\t\tthis._updateVolume();\n\t\treturn true;\n\t};\n\n\t// plugins should overwrite this method\n\tp.toString = function () {\n\t\treturn \"[AbstractPlugin]\";\n\t};\n\n\n// private methods:\n\t/**\n\t * Handles internal preload completion.\n\t * @method _handlePreloadComplete\n\t * @protected\n\t */\n\tp._handlePreloadComplete = function (event) {\n\t\tvar src = event.target.getItem().src;\n\t\tthis._audioSources[src] = event.result;\n\t\tfor (var i = 0, l = this._soundInstances[src].length; i < l; i++) {\n\t\t\tvar item = this._soundInstances[src][i];\n\t\t\titem.setPlaybackResource(this._audioSources[src]);\n\t\t\t// ToDo consider adding play call here if playstate == playfailed\n\t\t\tthis._soundInstances[src] = null;\n\t\t}\n\t};\n\n\t/**\n\t * Handles internal preload erros\n\t * @method _handlePreloadError\n\t * @param event\n\t * @protected\n\t */\n\tp._handlePreloadError = function(event) {\n\t\t//delete(this._audioSources[src]);\n\t};\n\n\t/**\n\t * Set the gain value for master audio. Should not be called externally.\n\t * @method _updateVolume\n\t * @protected\n\t */\n\tp._updateVolume = function () {\n\t\t// Plugin Specific code\n\t};\n\n\tcreatejs.AbstractPlugin = AbstractPlugin;\n}());\n\n//##############################################################################\n// WebAudioLoader.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\t/**\n\t * Loader provides a mechanism to preload Web Audio content via PreloadJS or internally. Instances are returned to\n\t * the preloader, and the load method is called when the asset needs to be requested.\n\t *\n\t * @class WebAudioLoader\n\t * @param {String} loadItem The item to be loaded\n\t * @extends XHRRequest\n\t * @protected\n\t */\n\tfunction Loader(loadItem) {\n\t\tthis.AbstractLoader_constructor(loadItem, true, createjs.AbstractLoader.SOUND);\n\n\t};\n\tvar p = createjs.extend(Loader, createjs.AbstractLoader);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n\t/**\n\t * web audio context required for decoding audio\n\t * @property context\n\t * @type {AudioContext}\n\t * @static\n\t */\n\tLoader.context = null;\n\n\n// public methods\n\tp.toString = function () {\n\t\treturn \"[WebAudioLoader]\";\n\t};\n\n\n// private methods\n\tp._createRequest = function() {\n\t\tthis._request = new createjs.XHRRequest(this._item, false);\n\t\tthis._request.setResponseType(\"arraybuffer\");\n\t};\n\n\tp._sendComplete = function (event) {\n\t\t// OJR we leave this wrapped in Loader because we need to reference src and the handler only receives a single argument, the decodedAudio\n\t\tLoader.context.decodeAudioData(this._rawResult,\n\t         createjs.proxy(this._handleAudioDecoded, this),\n\t         createjs.proxy(this._sendError, this));\n\t};\n\n\n\t/**\n\t* The audio has been decoded.\n\t* @method handleAudioDecoded\n\t* @param decoded\n\t* @protected\n\t*/\n\tp._handleAudioDecoded = function (decodedAudio) {\n\t\tthis._result = decodedAudio;\n\t\tthis.AbstractLoader__sendComplete();\n\t};\n\n\tcreatejs.WebAudioLoader = createjs.promote(Loader, \"AbstractLoader\");\n}());\n\n//##############################################################################\n// WebAudioSoundInstance.js\n//##############################################################################\n\n/**\n * WebAudioSoundInstance extends the base api of {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} and is used by\n * {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.\n *\n * WebAudioSoundInstance exposes audioNodes for advanced users.\n *\n * @param {String} src The path to and file name of the sound.\n * @param {Number} startTime Audio sprite property used to apply an offset, in milliseconds.\n * @param {Number} duration Audio sprite property used to set the time the clip plays for, in milliseconds.\n * @param {Object} playbackResource Any resource needed by plugin to support audio playback.\n * @class WebAudioSoundInstance\n * @extends AbstractSoundInstance\n * @constructor\n */\n(function () {\n\t\"use strict\";\n\n\tfunction WebAudioSoundInstance(src, startTime, duration, playbackResource) {\n\t\tthis.AbstractSoundInstance_constructor(src, startTime, duration, playbackResource);\n\n\n// public properties\n\t\t/**\n\t\t * NOTE this is only intended for use by advanced users.\n\t\t * <br />GainNode for controlling <code>WebAudioSoundInstance</code> volume. Connected to the {{#crossLink \"WebAudioSoundInstance/destinationNode:property\"}}{{/crossLink}}.\n\t\t * @property gainNode\n\t\t * @type {AudioGainNode}\n\t\t * @since 0.4.0\n\t\t *\n\t\t */\n\t\tthis.gainNode = s.context.createGain();\n\n\t\t/**\n\t\t * NOTE this is only intended for use by advanced users.\n\t\t * <br />A panNode allowing left and right audio channel panning only. Connected to WebAudioSoundInstance {{#crossLink \"WebAudioSoundInstance/gainNode:property\"}}{{/crossLink}}.\n\t\t * @property panNode\n\t\t * @type {AudioPannerNode}\n\t\t * @since 0.4.0\n\t\t */\n\t\tthis.panNode = s.context.createPanner();\n\t\tthis.panNode.panningModel = s._panningModel;\n\t\tthis.panNode.connect(this.gainNode);\n\t\tthis._updatePan();\n\n\t\t/**\n\t\t * NOTE this is only intended for use by advanced users.\n\t\t * <br />sourceNode is the audio source. Connected to WebAudioSoundInstance {{#crossLink \"WebAudioSoundInstance/panNode:property\"}}{{/crossLink}}.\n\t\t * @property sourceNode\n\t\t * @type {AudioNode}\n\t\t * @since 0.4.0\n\t\t *\n\t\t */\n\t\tthis.sourceNode = null;\n\n\n// private properties\n\t\t/**\n\t\t * Timeout that is created internally to handle sound playing to completion.\n\t\t * Stored so we can remove it when stop, pause, or cleanup are called\n\t\t * @property _soundCompleteTimeout\n\t\t * @type {timeoutVariable}\n\t\t * @default null\n\t\t * @protected\n\t\t * @since 0.4.0\n\t\t */\n\t\tthis._soundCompleteTimeout = null;\n\n\t\t/**\n\t\t * NOTE this is only intended for use by very advanced users.\n\t\t * _sourceNodeNext is the audio source for the next loop, inserted in a look ahead approach to allow for smooth\n\t\t * looping. Connected to {{#crossLink \"WebAudioSoundInstance/gainNode:property\"}}{{/crossLink}}.\n\t\t * @property _sourceNodeNext\n\t\t * @type {AudioNode}\n\t\t * @default null\n\t\t * @protected\n\t\t * @since 0.4.1\n\t\t *\n\t\t */\n\t\tthis._sourceNodeNext = null;\n\n\t\t/**\n\t\t * Time audio started playback, in seconds. Used to handle set position, get position, and resuming from paused.\n\t\t * @property _playbackStartTime\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @protected\n\t\t * @since 0.4.0\n\t\t */\n\t\tthis._playbackStartTime = 0;\n\n\t\t// Proxies, make removing listeners easier.\n\t\tthis._endedHandler = createjs.proxy(this._handleSoundComplete, this);\n\t};\n\tvar p = createjs.extend(WebAudioSoundInstance, createjs.AbstractSoundInstance);\n\tvar s = WebAudioSoundInstance;\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n\t/**\n\t * Note this is only intended for use by advanced users.\n\t * <br />Audio context used to create nodes.  This is and needs to be the same context used by {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.\n  \t * @property context\n\t * @type {AudioContext}\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.context = null;\n\n\t/**\n\t * Note this is only intended for use by advanced users.\n\t * <br />The scratch buffer that will be assigned to the buffer property of a source node on close.  \n\t * This is and should be the same scratch buffer referenced by {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.\n  \t * @property _scratchBuffer\n\t * @type {AudioBufferSourceNode}\n\t * @static\n\t */\n\ts._scratchBuffer = null;\n\n\t/**\n\t * Note this is only intended for use by advanced users.\n\t * <br /> Audio node from WebAudioPlugin that sequences to <code>context.destination</code>\n\t * @property destinationNode\n\t * @type {AudioNode}\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts.destinationNode = null;\n\n\t/**\n\t * Value to set panning model to equal power for WebAudioSoundInstance.  Can be \"equalpower\" or 0 depending on browser implementation.\n\t * @property _panningModel\n\t * @type {Number / String}\n\t * @protected\n\t * @static\n\t * @since 0.6.0\n\t */\n\ts._panningModel = \"equalpower\";\n\n\n// Public methods\n\tp.destroy = function() {\n\t\tthis.AbstractSoundInstance_destroy();\n\n\t\tthis.panNode.disconnect(0);\n\t\tthis.panNode = null;\n\t\tthis.gainNode.disconnect(0);\n\t\tthis.gainNode = null;\n\t};\n\n\tp.toString = function () {\n\t\treturn \"[WebAudioSoundInstance]\";\n\t};\n\n\n// Private Methods\n\tp._updatePan = function() {\n\t\tthis.panNode.setPosition(this._pan, 0, -0.5);\n\t\t// z need to be -0.5 otherwise the sound only plays in left, right, or center\n\t};\n\n\tp._removeLooping = function(value) {\n\t\tthis._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);\n\t};\n\n\tp._addLooping = function(value) {\n\t\tif (this.playState != createjs.Sound.PLAY_SUCCEEDED) { return; }\n\t\tthis._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0);\n\t};\n\n\tp._setDurationFromSource = function () {\n\t\tthis._duration = this.playbackResource.duration * 1000;\n\t};\n\n\tp._handleCleanUp = function () {\n\t\tif (this.sourceNode && this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\tthis.sourceNode = this._cleanUpAudioNode(this.sourceNode);\n\t\t\tthis._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);\n\t\t}\n\n\t\tif (this.gainNode.numberOfOutputs != 0) {this.gainNode.disconnect(0);}\n\t\t// OJR there appears to be a bug that this doesn't always work in webkit (Chrome and Safari). According to the documentation, this should work.\n\n\t\tclearTimeout(this._soundCompleteTimeout);\n\n\t\tthis._playbackStartTime = 0;\t// This is used by getPosition\n\t};\n\n\t/**\n\t * Turn off and disconnect an audioNode, then set reference to null to release it for garbage collection\n\t * @method _cleanUpAudioNode\n\t * @param audioNode\n\t * @return {audioNode}\n\t * @protected\n\t * @since 0.4.1\n\t */\n\tp._cleanUpAudioNode = function(audioNode) {\n\t\tif(audioNode) {\n\t\t\taudioNode.stop(0);\n\t\t\taudioNode.disconnect(0);\n\t\t\t// necessary to prevent leak on iOS Safari 7-9. will throw in almost all other\n\t\t\t// browser implementations.\n\t\t\ttry { audioNode.buffer = s._scratchBuffer; } catch(e) {}\n\t\t\taudioNode = null;\n\t\t}\n\t\treturn audioNode;\n\t};\n\n\tp._handleSoundReady = function (event) {\n\t\tthis.gainNode.connect(s.destinationNode);  // this line can cause a memory leak.  Nodes need to be disconnected from the audioDestination or any sequence that leads to it.\n\n\t\tvar dur = this._duration * 0.001;\n\t\tvar pos = this._position * 0.001;\n\t\tif (pos > dur) {pos = dur;}\n\t\tthis.sourceNode = this._createAndPlayAudioNode((s.context.currentTime - dur), pos);\n\t\tthis._playbackStartTime = this.sourceNode.startTime - pos;\n\n\t\tthis._soundCompleteTimeout = setTimeout(this._endedHandler, (dur - pos) * 1000);\n\n\t\tif(this._loop != 0) {\n\t\t\tthis._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0);\n\t\t}\n\t};\n\n\t/**\n\t * Creates an audio node using the current src and context, connects it to the gain node, and starts playback.\n\t * @method _createAndPlayAudioNode\n\t * @param {Number} startTime The time to add this to the web audio context, in seconds.\n\t * @param {Number} offset The amount of time into the src audio to start playback, in seconds.\n\t * @return {audioNode}\n\t * @protected\n\t * @since 0.4.1\n\t */\n\tp._createAndPlayAudioNode = function(startTime, offset) {\n\t\tvar audioNode = s.context.createBufferSource();\n\t\taudioNode.buffer = this.playbackResource;\n\t\taudioNode.connect(this.panNode);\n\t\tvar dur = this._duration * 0.001;\n\t\taudioNode.startTime = startTime + dur;\n\t\taudioNode.start(audioNode.startTime, offset+(this._startTime*0.001), dur - offset);\n\t\treturn audioNode;\n\t};\n\n\tp._pause = function () {\n\t\tthis._position = (s.context.currentTime - this._playbackStartTime) * 1000;  // * 1000 to give milliseconds, lets us restart at same point\n\t\tthis.sourceNode = this._cleanUpAudioNode(this.sourceNode);\n\t\tthis._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);\n\n\t\tif (this.gainNode.numberOfOutputs != 0) {this.gainNode.disconnect(0);}\n\n\t\tclearTimeout(this._soundCompleteTimeout);\n\t};\n\n\tp._resume = function () {\n\t\tthis._handleSoundReady();\n\t};\n\n\t/*\n\tp._handleStop = function () {\n\t\t// web audio does not need to do anything extra\n\t};\n\t*/\n\n\tp._updateVolume = function () {\n\t\tvar newVolume = this._muted ? 0 : this._volume;\n\t  \tif (newVolume != this.gainNode.gain.value) {\n\t\t  this.gainNode.gain.value = newVolume;\n  \t\t}\n\t};\n\n\tp._calculateCurrentPosition = function () {\n\t\treturn ((s.context.currentTime - this._playbackStartTime) * 1000); // pos in seconds * 1000 to give milliseconds\n\t};\n\n\tp._updatePosition = function () {\n\t\tthis.sourceNode = this._cleanUpAudioNode(this.sourceNode);\n\t\tthis._sourceNodeNext = this._cleanUpAudioNode(this._sourceNodeNext);\n\t\tclearTimeout(this._soundCompleteTimeout);\n\n\t\tif (!this._paused) {this._handleSoundReady();}\n\t};\n\n\t// OJR we are using a look ahead approach to ensure smooth looping.\n\t// We add _sourceNodeNext to the audio context so that it starts playing even if this callback is delayed.\n\t// This technique is described here:  http://www.html5rocks.com/en/tutorials/audio/scheduling/\n\t// NOTE the cost of this is that our audio loop may not always match the loop event timing precisely.\n\tp._handleLoop = function () {\n\t\tthis._cleanUpAudioNode(this.sourceNode);\n\t\tthis.sourceNode = this._sourceNodeNext;\n\t\tthis._playbackStartTime = this.sourceNode.startTime;\n\t\tthis._sourceNodeNext = this._createAndPlayAudioNode(this._playbackStartTime, 0);\n\t\tthis._soundCompleteTimeout = setTimeout(this._endedHandler, this._duration);\n\t};\n\n\tp._updateDuration = function () {\n\t\tif(this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\tthis._pause();\n\t\t\tthis._resume();\n\t\t}\n\t};\n\n\tcreatejs.WebAudioSoundInstance = createjs.promote(WebAudioSoundInstance, \"AbstractSoundInstance\");\n}());\n\n//##############################################################################\n// WebAudioPlugin.js\n//##############################################################################\n\n(function () {\n\n\t\"use strict\";\n\n\t/**\n\t * Play sounds using Web Audio in the browser. The WebAudioPlugin is currently the default plugin, and will be used\n\t * anywhere that it is supported. To change plugin priority, check out the Sound API\n\t * {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} method.\n\n\t * <h4>Known Browser and OS issues for Web Audio</h4>\n\t * <b>Firefox 25</b>\n\t * <li>\n\t *     mp3 audio files do not load properly on all windows machines, reported <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=929969\" target=\"_blank\">here</a>.\n\t *     <br />For this reason it is recommended to pass another FireFox-supported type (i.e. ogg) as the default\n\t *     extension, until this bug is resolved\n\t * </li>\n\t *\n\t * <b>Webkit (Chrome and Safari)</b>\n\t * <li>\n\t *     AudioNode.disconnect does not always seem to work.  This can cause the file size to grow over time if you\n\t * \t   are playing a lot of audio files.\n\t * </li>\n\t *\n\t * <b>iOS 6 limitations</b>\n\t * <ul>\n\t *     <li>\n\t *         Sound is initially muted and will only unmute through play being called inside a user initiated event\n\t *         (touch/click). Please read the mobile playback notes in the the {{#crossLink \"Sound\"}}{{/crossLink}}\n\t *         class for a full overview of the limitations, and how to get around them.\n\t *     </li>\n\t *\t   <li>\n\t *\t       A bug exists that will distort un-cached audio when a video element is present in the DOM. You can avoid\n\t *\t       this bug by ensuring the audio and video audio share the same sample rate.\n\t *\t   </li>\n\t * </ul>\n\t * @class WebAudioPlugin\n\t * @extends AbstractPlugin\n\t * @constructor\n\t * @since 0.4.0\n\t */\n\tfunction WebAudioPlugin() {\n\t\tthis.AbstractPlugin_constructor();\n\n\n// Private Properties\n\t\t/**\n\t\t * Value to set panning model to equal power for WebAudioSoundInstance.  Can be \"equalpower\" or 0 depending on browser implementation.\n\t\t * @property _panningModel\n\t\t * @type {Number / String}\n\t\t * @protected\n\t\t */\n\t\tthis._panningModel = s._panningModel;;\n\n\t\t/**\n\t\t * The web audio context, which WebAudio uses to play audio. All nodes that interact with the WebAudioPlugin\n\t\t * need to be created within this context.\n\t\t * @property context\n\t\t * @type {AudioContext}\n\t\t */\n\t\tthis.context = s.context;\n\n\t\t/**\n\t\t * A DynamicsCompressorNode, which is used to improve sound quality and prevent audio distortion.\n\t\t * It is connected to <code>context.destination</code>.\n\t\t *\n\t\t * Can be accessed by advanced users through createjs.Sound.activePlugin.dynamicsCompressorNode.\n\t\t * @property dynamicsCompressorNode\n\t\t * @type {AudioNode}\n\t\t */\n\t\tthis.dynamicsCompressorNode = this.context.createDynamicsCompressor();\n\t\tthis.dynamicsCompressorNode.connect(this.context.destination);\n\n\t\t/**\n\t\t * A GainNode for controlling master volume. It is connected to {{#crossLink \"WebAudioPlugin/dynamicsCompressorNode:property\"}}{{/crossLink}}.\n\t\t *\n\t\t * Can be accessed by advanced users through createjs.Sound.activePlugin.gainNode.\n\t\t * @property gainNode\n\t\t * @type {AudioGainNode}\n\t\t */\n\t\tthis.gainNode = this.context.createGain();\n\t\tthis.gainNode.connect(this.dynamicsCompressorNode);\n\t\tcreatejs.WebAudioSoundInstance.destinationNode = this.gainNode;\n\n\t\tthis._capabilities = s._capabilities;\n\n\t\tthis._loaderClass = createjs.WebAudioLoader;\n\t\tthis._soundInstanceClass = createjs.WebAudioSoundInstance;\n\n\t\tthis._addPropsToClasses();\n\t}\n\tvar p = createjs.extend(WebAudioPlugin, createjs.AbstractPlugin);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n// Static Properties\n\tvar s = WebAudioPlugin;\n\t/**\n\t * The capabilities of the plugin. This is generated via the {{#crossLink \"WebAudioPlugin/_generateCapabilities:method\"}}{{/crossLink}}\n\t * method and is used internally.\n\t * @property _capabilities\n\t * @type {Object}\n\t * @default null\n\t * @protected\n\t * @static\n\t */\n\ts._capabilities = null;\n\n\t/**\n\t * Value to set panning model to equal power for WebAudioSoundInstance.  Can be \"equalpower\" or 0 depending on browser implementation.\n\t * @property _panningModel\n\t * @type {Number / String}\n\t * @protected\n\t * @static\n\t */\n\ts._panningModel = \"equalpower\";\n\n\t/**\n\t * The web audio context, which WebAudio uses to play audio. All nodes that interact with the WebAudioPlugin\n\t * need to be created within this context.\n\t *\n\t * Advanced users can set this to an existing context, but <b>must</b> do so before they call\n\t * {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} or {{#crossLink \"Sound/initializeDefaultPlugins\"}}{{/crossLink}}.\n\t *\n\t * @property context\n\t * @type {AudioContext}\n\t * @static\n\t */\n\ts.context = null;\n\n\t/**\n\t * The scratch buffer that will be assigned to the buffer property of a source node on close.\n\t * Works around an iOS Safari bug: https://github.com/CreateJS/SoundJS/issues/102\n\t *\n\t * Advanced users can set this to an existing source node, but <b>must</b> do so before they call\n\t * {{#crossLink \"Sound/registerPlugins\"}}{{/crossLink}} or {{#crossLink \"Sound/initializeDefaultPlugins\"}}{{/crossLink}}.\n\t *\n\t * @property _scratchBuffer\n\t * @type {AudioBuffer}\n\t * @protected\n\t * @static\n\t */\n\t s._scratchBuffer = null;\n\n\t/**\n\t * Indicated whether audio on iOS has been unlocked, which requires a touchend/mousedown event that plays an\n\t * empty sound.\n\t * @property _unlocked\n\t * @type {boolean}\n\t * @since 0.6.2\n\t * @private\n\t */\n\ts._unlocked = false;\n\n\n// Static Public Methods\n\t/**\n\t * Determine if the plugin can be used in the current browser/OS.\n\t * @method isSupported\n\t * @return {Boolean} If the plugin can be initialized.\n\t * @static\n\t */\n\ts.isSupported = function () {\n\t\t// check if this is some kind of mobile device, Web Audio works with local protocol under PhoneGap and it is unlikely someone is trying to run a local file\n\t\tvar isMobilePhoneGap = createjs.BrowserDetect.isIOS || createjs.BrowserDetect.isAndroid || createjs.BrowserDetect.isBlackberry;\n\t\t// OJR isMobile may be redundant with _isFileXHRSupported available.  Consider removing.\n\t\tif (location.protocol == \"file:\" && !isMobilePhoneGap && !this._isFileXHRSupported()) { return false; }  // Web Audio requires XHR, which is not usually available locally\n\t\ts._generateCapabilities();\n\t\tif (s.context == null) {return false;}\n\t\treturn true;\n\t};\n\n\t/**\n\t * Plays an empty sound in the web audio context.  This is used to enable web audio on iOS devices, as they\n\t * require the first sound to be played inside of a user initiated event (touch/click).  This is called when\n\t * {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} is initialized (by Sound {{#crossLink \"Sound/initializeDefaultPlugins\"}}{{/crossLink}}\n\t * for example).\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *     function handleTouch(event) {\n\t *         createjs.WebAudioPlugin.playEmptySound();\n\t *     }\n\t *\n\t * @method playEmptySound\n\t * @static\n\t * @since 0.4.1\n\t */\n\ts.playEmptySound = function() {\n\t\tif (s.context == null) {return;}\n\t\tvar source = s.context.createBufferSource();\n\t\tsource.buffer = s._scratchBuffer;\n\t\tsource.connect(s.context.destination);\n\t\tsource.start(0, 0, 0);\n\t};\n\n\n// Static Private Methods\n\t/**\n\t * Determine if XHR is supported, which is necessary for web audio.\n\t * @method _isFileXHRSupported\n\t * @return {Boolean} If XHR is supported.\n\t * @since 0.4.2\n\t * @protected\n\t * @static\n\t */\n\ts._isFileXHRSupported = function() {\n\t\t// it's much easier to detect when something goes wrong, so let's start optimistically\n\t\tvar supported = true;\n\n\t\tvar xhr = new XMLHttpRequest();\n\t\ttry {\n\t\t\txhr.open(\"GET\", \"WebAudioPluginTest.fail\", false); // loading non-existant file triggers 404 only if it could load (synchronous call)\n\t\t} catch (error) {\n\t\t\t// catch errors in cases where the onerror is passed by\n\t\t\tsupported = false;\n\t\t\treturn supported;\n\t\t}\n\t\txhr.onerror = function() { supported = false; }; // cause irrelevant\n\t\t// with security turned off, we can get empty success results, which is actually a failed read (status code 0?)\n\t\txhr.onload = function() { supported = this.status == 404 || (this.status == 200 || (this.status == 0 && this.response != \"\")); };\n\t\ttry {\n\t\t\txhr.send();\n\t\t} catch (error) {\n\t\t\t// catch errors in cases where the onerror is passed by\n\t\t\tsupported = false;\n\t\t}\n\n\t\treturn supported;\n\t};\n\n\t/**\n\t * Determine the capabilities of the plugin. Used internally. Please see the Sound API {{#crossLink \"Sound/getCapabilities\"}}{{/crossLink}}\n\t * method for an overview of plugin capabilities.\n\t * @method _generateCapabilities\n\t * @static\n\t * @protected\n\t */\n\ts._generateCapabilities = function () {\n\t\tif (s._capabilities != null) {return;}\n\t\t// Web Audio can be in any formats supported by the audio element, from http://www.w3.org/TR/webaudio/#AudioContext-section\n\t\tvar t = document.createElement(\"audio\");\n\t\tif (t.canPlayType == null) {return null;}\n\n\t\tif (s.context == null) {\n\t\t\tif (window.AudioContext) {\n\t\t\t\ts.context = new AudioContext();\n\t\t\t} else if (window.webkitAudioContext) {\n\t\t\t\ts.context = new webkitAudioContext();\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\tif (s._scratchBuffer == null) {\n\t\t\ts._scratchBuffer = s.context.createBuffer(1, 1, 22050);\n\t\t}\n\n\t\ts._compatibilitySetUp();\n\n\t\t// Listen for document level clicks to unlock WebAudio on iOS. See the _unlock method.\n\t\tif (\"ontouchstart\" in window && s.context.state != \"running\") {\n\t\t\ts._unlock(); // When played inside of a touch event, this will enable audio on iOS immediately.\n\t\t\tdocument.addEventListener(\"mousedown\", s._unlock, true);\n\t\t\tdocument.addEventListener(\"touchend\", s._unlock, true);\n\t\t}\n\n\n\t\ts._capabilities = {\n\t\t\tpanning:true,\n\t\t\tvolume:true,\n\t\t\ttracks:-1\n\t\t};\n\n\t\t// determine which extensions our browser supports for this plugin by iterating through Sound.SUPPORTED_EXTENSIONS\n\t\tvar supportedExtensions = createjs.Sound.SUPPORTED_EXTENSIONS;\n\t\tvar extensionMap = createjs.Sound.EXTENSION_MAP;\n\t\tfor (var i = 0, l = supportedExtensions.length; i < l; i++) {\n\t\t\tvar ext = supportedExtensions[i];\n\t\t\tvar playType = extensionMap[ext] || ext;\n\t\t\ts._capabilities[ext] = (t.canPlayType(\"audio/\" + ext) != \"no\" && t.canPlayType(\"audio/\" + ext) != \"\") || (t.canPlayType(\"audio/\" + playType) != \"no\" && t.canPlayType(\"audio/\" + playType) != \"\");\n\t\t}  // OJR another way to do this might be canPlayType:\"m4a\", codex: mp4\n\n\t\t// 0=no output, 1=mono, 2=stereo, 4=surround, 6=5.1 surround.\n\t\t// See http://www.w3.org/TR/webaudio/#AudioChannelSplitter for more details on channels.\n\t\tif (s.context.destination.numberOfChannels < 2) {\n\t\t\ts._capabilities.panning = false;\n\t\t}\n\t};\n\n\t/**\n\t * Set up compatibility if only deprecated web audio calls are supported.\n\t * See http://www.w3.org/TR/webaudio/#DeprecationNotes\n\t * Needed so we can support new browsers that don't support deprecated calls (Firefox) as well as old browsers that\n\t * don't support new calls.\n\t *\n\t * @method _compatibilitySetUp\n\t * @static\n\t * @protected\n\t * @since 0.4.2\n\t */\n\ts._compatibilitySetUp = function() {\n\t\ts._panningModel = \"equalpower\";\n\t\t//assume that if one new call is supported, they all are\n\t\tif (s.context.createGain) { return; }\n\n\t\t// simple name change, functionality the same\n\t\ts.context.createGain = s.context.createGainNode;\n\n\t\t// source node, add to prototype\n\t\tvar audioNode = s.context.createBufferSource();\n\t\taudioNode.__proto__.start = audioNode.__proto__.noteGrainOn;\t// note that noteGrainOn requires all 3 parameters\n\t\taudioNode.__proto__.stop = audioNode.__proto__.noteOff;\n\n\t\t// panningModel\n\t\ts._panningModel = 0;\n\t};\n\n\t/**\n\t * Try to unlock audio on iOS. This is triggered from either WebAudio plugin setup (which will work if inside of\n\t * a `mousedown` or `touchend` event stack), or the first document touchend/mousedown event. If it fails (touchend\n\t * will fail if the user presses for too long, indicating a scroll event instead of a click event.\n\t *\n\t * Note that earlier versions of iOS supported `touchstart` for this, but iOS9 removed this functionality. Adding\n\t * a `touchstart` event to support older platforms may preclude a `mousedown` even from getting fired on iOS9, so we\n\t * stick with `mousedown` and `touchend`.\n\t * @method _unlock\n\t * @since 0.6.2\n\t * @private\n\t */\n\ts._unlock = function() {\n\t\tif (s._unlocked) { return; }\n\t\ts.playEmptySound();\n\t\tif (s.context.state == \"running\") {\n\t\t\tdocument.removeEventListener(\"mousedown\", s._unlock, true);\n\t\t\tdocument.removeEventListener(\"touchend\", s._unlock, true);\n\t\t\ts._unlocked = true;\n\t\t}\n\t};\n\n\n// Public Methods\n\tp.toString = function () {\n\t\treturn \"[WebAudioPlugin]\";\n\t};\n\n\n// Private Methods\n\t/**\n\t * Set up needed properties on supported classes WebAudioSoundInstance and WebAudioLoader.\n\t * @method _addPropsToClasses\n\t * @static\n\t * @protected\n\t * @since 0.6.0\n\t */\n\tp._addPropsToClasses = function() {\n\t\tvar c = this._soundInstanceClass;\n\t\tc.context = this.context;\n\t\tc._scratchBuffer = s._scratchBuffer;\n\t\tc.destinationNode = this.gainNode;\n\t\tc._panningModel = this._panningModel;\n\n\t\tthis._loaderClass.context = this.context;\n\t};\n\n\n\t/**\n\t * Set the gain value for master audio. Should not be called externally.\n\t * @method _updateVolume\n\t * @protected\n\t */\n\tp._updateVolume = function () {\n\t\tvar newVolume = createjs.Sound._masterMute ? 0 : this._volume;\n\t\tif (newVolume != this.gainNode.gain.value) {\n\t\t\tthis.gainNode.gain.value = newVolume;\n\t\t}\n\t};\n\n\tcreatejs.WebAudioPlugin = createjs.promote(WebAudioPlugin, \"AbstractPlugin\");\n}());\n\n//##############################################################################\n// HTMLAudioTagPool.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\t/**\n\t * HTMLAudioTagPool is an object pool for HTMLAudio tag instances.\n\t * @class HTMLAudioTagPool\n\t * @param {String} src The source of the channel.\n\t * @protected\n\t */\n\tfunction HTMLAudioTagPool() {\n\t\t\tthrow \"HTMLAudioTagPool cannot be instantiated\";\n\t}\n\n\tvar s = HTMLAudioTagPool;\n\n// Static Properties\n\t/**\n\t * A hash lookup of each base audio tag, indexed by the audio source.\n\t * @property _tags\n\t * @type {{}}\n\t * @static\n\t * @protected\n\t */\n\ts._tags = {};\n\n\t/**\n\t * An object pool for html audio tags\n\t * @property _tagPool\n\t * @type {TagPool}\n\t * @static\n\t * @protected\n\t */\n\ts._tagPool = new TagPool();\n\n\t/**\n\t * A hash lookup of if a base audio tag is available, indexed by the audio source\n\t * @property _tagsUsed\n\t * @type {{}}\n\t * @protected\n\t * @static\n\t */\n\ts._tagUsed = {};\n\n// Static Methods\n\t/**\n\t  * Get an audio tag with the given source.\n\t  * @method get\n\t  * @param {String} src The source file used by the audio tag.\n\t  * @static\n\t  */\n\t s.get = function (src) {\n\t\tvar t = s._tags[src];\n\t\tif (t == null) {\n\t\t\t// create new base tag\n\t\t\tt = s._tags[src] = s._tagPool.get();\n\t\t\tt.src = src;\n\t\t} else {\n\t\t\t// get base or pool\n\t\t\tif (s._tagUsed[src]) {\n\t\t\t\tt = s._tagPool.get();\n\t\t\t\tt.src = src;\n\t\t\t} else {\n\t\t\t\ts._tagUsed[src] = true;\n\t\t\t}\n\t\t}\n\t\treturn t;\n\t };\n\n\t /**\n\t  * Return an audio tag to the pool.\n\t  * @method set\n\t  * @param {String} src The source file used by the audio tag.\n\t  * @param {HTMLElement} tag Audio tag to set.\n\t  * @static\n\t  */\n\t s.set = function (src, tag) {\n\t\t // check if this is base, if yes set boolean if not return to pool\n\t\t if(tag == s._tags[src]) {\n\t\t\t s._tagUsed[src] = false;\n\t\t } else {\n\t\t\t s._tagPool.set(tag);\n\t\t }\n\t };\n\n\t/**\n\t * Delete stored tag reference and return them to pool. Note that if the tag reference does not exist, this will fail.\n\t * @method remove\n\t * @param {String} src The source for the tag\n\t * @return {Boolean} If the TagPool was deleted.\n\t * @static\n\t */\n\ts.remove = function (src) {\n\t\tvar tag = s._tags[src];\n\t\tif (tag == null) {return false;}\n\t\ts._tagPool.set(tag);\n\t\tdelete(s._tags[src]);\n\t\tdelete(s._tagUsed[src]);\n\t\treturn true;\n\t};\n\n\t/**\n\t * Gets the duration of the src audio in milliseconds\n\t * @method getDuration\n\t * @param {String} src The source file used by the audio tag.\n\t * @return {Number} Duration of src in milliseconds\n\t * @static\n\t */\n\ts.getDuration= function (src) {\n\t\tvar t = s._tags[src];\n\t\tif (t == null || !t.duration) {return 0;}\t// OJR duration is NaN if loading has not completed\n\t\treturn t.duration * 1000;\n\t};\n\n\tcreatejs.HTMLAudioTagPool = HTMLAudioTagPool;\n\n\n// ************************************************************************************************************\n\t/**\n\t * The TagPool is an object pool for HTMLAudio tag instances.\n\t * #class TagPool\n\t * @param {String} src The source of the channel.\n\t * @protected\n\t */\n\tfunction TagPool(src) {\n\n// Public Properties\n\t\t/**\n\t\t * A list of all available tags in the pool.\n\t\t * #property tags\n\t\t * @type {Array}\n\t\t * @protected\n\t\t */\n\t\tthis._tags = [];\n\t};\n\n\tvar p = TagPool.prototype;\n\tp.constructor = TagPool;\n\n\n// Public Methods\n\t/**\n\t * Get an HTMLAudioElement for immediate playback. This takes it out of the pool.\n\t * #method get\n\t * @return {HTMLAudioElement} An HTML audio tag.\n\t */\n\tp.get = function () {\n\t\tvar tag;\n\t\tif (this._tags.length == 0) {\n\t\t\ttag = this._createTag();\n\t\t} else {\n\t\t\ttag = this._tags.pop();\n\t\t}\n\t\tif (tag.parentNode == null) {document.body.appendChild(tag);}\n\t\treturn tag;\n\t};\n\n\t/**\n\t * Put an HTMLAudioElement back in the pool for use.\n\t * #method set\n\t * @param {HTMLAudioElement} tag HTML audio tag\n\t */\n\tp.set = function (tag) {\n\t\t// OJR this first step seems unnecessary\n\t\tvar index = createjs.indexOf(this._tags, tag);\n\t\tif (index == -1) {\n\t\t\tthis._tags.src = null;\n\t\t\tthis._tags.push(tag);\n\t\t}\n\t};\n\n\tp.toString = function () {\n\t\treturn \"[TagPool]\";\n\t};\n\n\n// Private Methods\n\t/**\n\t * Create an HTML audio tag.\n\t * #method _createTag\n\t * @param {String} src The source file to set for the audio tag.\n\t * @return {HTMLElement} Returns an HTML audio tag.\n\t * @protected\n\t */\n\tp._createTag = function () {\n\t\tvar tag = document.createElement(\"audio\");\n\t\ttag.autoplay = false;\n\t\ttag.preload = \"none\";\n\t\t//LM: Firefox fails when this the preload=\"none\" for other tags, but it needs to be \"none\" to ensure PreloadJS works.\n\t\treturn tag;\n\t};\n\n}());\n\n//##############################################################################\n// HTMLAudioSoundInstance.js\n//##############################################################################\n\n(function () {\n\t\"use strict\";\n\n\t/**\n\t * HTMLAudioSoundInstance extends the base api of {{#crossLink \"AbstractSoundInstance\"}}{{/crossLink}} and is used by\n\t * {{#crossLink \"HTMLAudioPlugin\"}}{{/crossLink}}.\n\t *\n\t * @param {String} src The path to and file name of the sound.\n\t * @param {Number} startTime Audio sprite property used to apply an offset, in milliseconds.\n\t * @param {Number} duration Audio sprite property used to set the time the clip plays for, in milliseconds.\n\t * @param {Object} playbackResource Any resource needed by plugin to support audio playback.\n\t * @class HTMLAudioSoundInstance\n\t * @extends AbstractSoundInstance\n\t * @constructor\n\t */\n\tfunction HTMLAudioSoundInstance(src, startTime, duration, playbackResource) {\n\t\tthis.AbstractSoundInstance_constructor(src, startTime, duration, playbackResource);\n\n\n// Private Properties\n\t\tthis._audioSpriteStopTime = null;\n\t\tthis._delayTimeoutId = null;\n\n\t\t// Proxies, make removing listeners easier.\n\t\tthis._endedHandler = createjs.proxy(this._handleSoundComplete, this);\n\t\tthis._readyHandler = createjs.proxy(this._handleTagReady, this);\n\t\tthis._stalledHandler = createjs.proxy(this._playFailed, this);\n\t\tthis._audioSpriteEndHandler = createjs.proxy(this._handleAudioSpriteLoop, this);\n\t\tthis._loopHandler = createjs.proxy(this._handleSoundComplete, this);\n\n\t\tif (duration) {\n\t\t\tthis._audioSpriteStopTime = (startTime + duration) * 0.001;\n\t\t} else {\n\t\t\tthis._duration = createjs.HTMLAudioTagPool.getDuration(this.src);\n\t\t}\n\t}\n\tvar p = createjs.extend(HTMLAudioSoundInstance, createjs.AbstractSoundInstance);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n// Public Methods\n\t/**\n\t * Called by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master volume.\n\t * undoc'd because it is not meant to be used outside of Sound\n\t * #method setMasterVolume\n\t * @param value\n\t */\n\tp.setMasterVolume = function (value) {\n\t\tthis._updateVolume();\n\t};\n\n\t/**\n\t * Called by {{#crossLink \"Sound\"}}{{/crossLink}} when plugin does not handle master mute.\n\t * undoc'd because it is not meant to be used outside of Sound\n\t * #method setMasterMute\n\t * @param value\n\t */\n\tp.setMasterMute = function (isMuted) {\n\t\tthis._updateVolume();\n\t};\n\n\tp.toString = function () {\n\t\treturn \"[HTMLAudioSoundInstance]\";\n\t};\n\n//Private Methods\n\tp._removeLooping = function() {\n\t\tif(this._playbackResource == null) {return;}\n\t\tthis._playbackResource.loop = false;\n\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t};\n\n\tp._addLooping = function() {\n\t\tif(this._playbackResource == null  || this._audioSpriteStopTime) {return;}\n\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t\tthis._playbackResource.loop = true;\n\t};\n\n\tp._handleCleanUp = function () {\n\t\tvar tag = this._playbackResource;\n\t\tif (tag != null) {\n\t\t\ttag.pause();\n\t\t\ttag.loop = false;\n\t\t\ttag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false);\n\t\t\ttag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, false);\n\t\t\ttag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, false);\n\t\t\ttag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t\t\ttag.removeEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);\n\n\t\t\ttry {\n\t\t\t\ttag.currentTime = this._startTime;\n\t\t\t} catch (e) {\n\t\t\t} // Reset Position\n\t\t\tcreatejs.HTMLAudioTagPool.set(this.src, tag);\n\t\t\tthis._playbackResource = null;\n\t\t}\n\t};\n\n\tp._beginPlaying = function (playProps) {\n\t\tthis._playbackResource = createjs.HTMLAudioTagPool.get(this.src);\n\t\treturn this.AbstractSoundInstance__beginPlaying(playProps);\n\t};\n\n\tp._handleSoundReady = function (event) {\n\t\tif (this._playbackResource.readyState !== 4) {\n\t\t\tvar tag = this._playbackResource;\n\t\t\ttag.addEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, false);\n\t\t\ttag.addEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, false);\n\t\t\ttag.preload = \"auto\"; // This is necessary for Firefox, as it won't ever \"load\" until this is set.\n\t\t\ttag.load();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._updateVolume();\n\t\tthis._playbackResource.currentTime = (this._startTime + this._position) * 0.001;\n\t\tif (this._audioSpriteStopTime) {\n\t\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);\n\t\t} else {\n\t\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false);\n\t\t\tif(this._loop != 0) {\n\t\t\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t\t\t\tthis._playbackResource.loop = true;\n\t\t\t}\n\t\t}\n\n\t\tthis._playbackResource.play();\n\t};\n\n\t/**\n\t * Used to handle when a tag is not ready for immediate playback when it is returned from the HTMLAudioTagPool.\n\t * @method _handleTagReady\n\t * @param event\n\t * @protected\n\t */\n\tp._handleTagReady = function (event) {\n\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY, this._readyHandler, false);\n\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED, this._stalledHandler, false);\n\n\t\tthis._handleSoundReady();\n\t};\n\n\tp._pause = function () {\n\t\tthis._playbackResource.pause();\n\t};\n\n\tp._resume = function () {\n\t\tthis._playbackResource.play();\n\t};\n\n\tp._updateVolume = function () {\n\t\tif (this._playbackResource != null) {\n\t\t\tvar newVolume = (this._muted || createjs.Sound._masterMute) ? 0 : this._volume * createjs.Sound._masterVolume;\n\t\t\tif (newVolume != this._playbackResource.volume) {this._playbackResource.volume = newVolume;}\n\t\t}\n\t};\n\n\tp._calculateCurrentPosition = function() {\n\t\treturn (this._playbackResource.currentTime * 1000) - this._startTime;\n\t};\n\n\tp._updatePosition = function() {\n\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._handleSetPositionSeek, false);\n\t\ttry {\n\t\t\tthis._playbackResource.currentTime = (this._position + this._startTime) * 0.001;\n\t\t} catch (error) { // Out of range\n\t\t\tthis._handleSetPositionSeek(null);\n\t\t}\n\t};\n\n\t/**\n\t * Used to enable setting position, as we need to wait for that seek to be done before we add back our loop handling seek listener\n\t * @method _handleSetPositionSeek\n\t * @param event\n\t * @protected\n\t */\n\tp._handleSetPositionSeek = function(event) {\n\t\tif (this._playbackResource == null) { return; }\n\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._handleSetPositionSeek, false);\n\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t};\n\n\t/**\n\t * Timer used to loop audio sprites.\n\t * NOTE because of the inaccuracies in the timeupdate event (15 - 250ms) and in setting the tag to the desired timed\n\t * (up to 300ms), it is strongly recommended not to loop audio sprites with HTML Audio if smooth looping is desired\n\t *\n\t * @method _handleAudioSpriteLoop\n\t * @param event\n\t * @private\n\t */\n\tp._handleAudioSpriteLoop = function (event) {\n\t\tif(this._playbackResource.currentTime <= this._audioSpriteStopTime) {return;}\n\t\tthis._playbackResource.pause();\n\t\tif(this._loop == 0) {\n\t\t\tthis._handleSoundComplete(null);\n\t\t} else {\n\t\t\tthis._position = 0;\n\t\t\tthis._loop--;\n\t\t\tthis._playbackResource.currentTime = this._startTime * 0.001;\n\t\t\tif(!this._paused) {this._playbackResource.play();}\n\t\t\tthis._sendEvent(\"loop\");\n\t\t}\n\t};\n\n\t// NOTE with this approach audio will loop as reliably as the browser allows\n\t// but we could end up sending the loop event after next loop playback begins\n\tp._handleLoop = function (event) {\n\t\tif(this._loop == 0) {\n\t\t\tthis._playbackResource.loop = false;\n\t\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED, this._loopHandler, false);\n\t\t}\n\t};\n\n\tp._updateStartTime = function () {\n\t\tthis._audioSpriteStopTime = (this._startTime + this._duration) * 0.001;\n\n\t\tif(this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false);\n\t\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);\n\t\t}\n\t};\n\n\tp._updateDuration = function () {\n\t\tthis._audioSpriteStopTime = (this._startTime + this._duration) * 0.001;\n\n\t\tif(this.playState == createjs.Sound.PLAY_SUCCEEDED) {\n\t\t\tthis._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED, this._endedHandler, false);\n\t\t\tthis._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE, this._audioSpriteEndHandler, false);\n\t\t}\n\t};\n\n\tp._setDurationFromSource = function () {\n\t\tthis._duration = createjs.HTMLAudioTagPool.getDuration(this.src);\n\t\tthis._playbackResource = null;\n\t};\n\n\tcreatejs.HTMLAudioSoundInstance = createjs.promote(HTMLAudioSoundInstance, \"AbstractSoundInstance\");\n}());\n\n//##############################################################################\n// HTMLAudioPlugin.js\n//##############################################################################\n\n(function () {\n\n\t\"use strict\";\n\n\t/**\n\t * Play sounds using HTML &lt;audio&gt; tags in the browser. This plugin is the second priority plugin installed\n\t * by default, after the {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}}.  For older browsers that do not support html\n\t * audio, include and install the {{#crossLink \"FlashAudioPlugin\"}}{{/crossLink}}.\n\t *\n\t * <h4>Known Browser and OS issues for HTML Audio</h4>\n\t * <b>All browsers</b><br />\n\t * Testing has shown in all browsers there is a limit to how many audio tag instances you are allowed.  If you exceed\n\t * this limit, you can expect to see unpredictable results. Please use {{#crossLink \"Sound.MAX_INSTANCES\"}}{{/crossLink}} as\n\t * a guide to how many total audio tags you can safely use in all browsers.  This issue is primarily limited to IE9.\n\t *\n     * <b>IE html limitations</b><br />\n     * <ul><li>There is a delay in applying volume changes to tags that occurs once playback is started. So if you have\n     * muted all sounds, they will all play during this delay until the mute applies internally. This happens regardless of\n     * when or how you apply the volume change, as the tag seems to need to play to apply it.</li>\n     * <li>MP3 encoding will not always work for audio tags if it's not default.  We've found default encoding with\n     * 64kbps works.</li>\n\t * <li>Occasionally very short samples will get cut off.</li>\n\t * <li>There is a limit to how many audio tags you can load or play at once, which appears to be determined by\n\t * hardware and browser settings.  See {{#crossLink \"HTMLAudioPlugin.MAX_INSTANCES\"}}{{/crossLink}} for a safe estimate.\n\t * Note that audio sprites can be used as a solution to this issue.</li></ul>\n\t *\n\t * <b>Safari limitations</b><br />\n\t * <ul><li>Safari requires Quicktime to be installed for audio playback.</li></ul>\n\t *\n\t * <b>iOS 6 limitations</b><br />\n\t * <ul><li>can only have one &lt;audio&gt; tag</li>\n\t * \t\t<li>can not preload or autoplay the audio</li>\n\t * \t\t<li>can not cache the audio</li>\n\t * \t\t<li>can not play the audio except inside a user initiated event.</li>\n\t *\t\t<li>Note it is recommended to use {{#crossLink \"WebAudioPlugin\"}}{{/crossLink}} for iOS (6+)</li>\n\t * \t\t<li>audio sprites can be used to mitigate some of these issues and are strongly recommended on iOS</li>\n\t * </ul>\n\t *\n\t * <b>Android Native Browser limitations</b><br />\n\t * <ul><li>We have no control over audio volume. Only the user can set volume on their device.</li>\n\t *      <li>We can only play audio inside a user event (touch/click).  This currently means you cannot loop sound or use a delay.</li></ul>\n\t * <b> Android Chrome 26.0.1410.58 specific limitations</b><br />\n\t * <ul> <li>Can only play 1 sound at a time.</li>\n\t *      <li>Sound is not cached.</li>\n\t *      <li>Sound can only be loaded in a user initiated touch/click event.</li>\n\t *      <li>There is a delay before a sound is played, presumably while the src is loaded.</li>\n\t * </ul>\n\t *\n\t * See {{#crossLink \"Sound\"}}{{/crossLink}} for general notes on known issues.\n\t *\n\t * @class HTMLAudioPlugin\n\t * @extends AbstractPlugin\n\t * @constructor\n\t */\n\tfunction HTMLAudioPlugin() {\n\t\tthis.AbstractPlugin_constructor();\n\n\n\t// Public Properties\n\t\t/**\n\t\t * This is no longer needed as we are now using object pooling for tags.\n\t\t *\n\t\t * <b>NOTE this property only exists as a limitation of HTML audio.</b>\n\t\t * @property defaultNumChannels\n\t\t * @type {Number}\n\t\t * @default 2\n\t\t * @since 0.4.0\n\t\t * @deprecated\n\t\t */\n\t\tthis.defaultNumChannels = 2;\n\n\t\tthis._capabilities = s._capabilities;\n\n\t\tthis._loaderClass = createjs.SoundLoader;\n\t\tthis._soundInstanceClass = createjs.HTMLAudioSoundInstance;\n\t}\n\n\tvar p = createjs.extend(HTMLAudioPlugin, createjs.AbstractPlugin);\n\tvar s = HTMLAudioPlugin;\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\n// Static Properties\n\t/**\n\t * The maximum number of instances that can be loaded or played. This is a browser limitation, primarily limited to IE9.\n\t * The actual number varies from browser to browser (and is largely hardware dependant), but this is a safe estimate.\n\t * Audio sprites work around this limitation.\n\t * @property MAX_INSTANCES\n\t * @type {Number}\n\t * @default 30\n\t * @static\n\t */\n\ts.MAX_INSTANCES = 30;\n\n\t/**\n\t * Event constant for the \"canPlayThrough\" event for cleaner code.\n\t * @property _AUDIO_READY\n\t * @type {String}\n\t * @default canplaythrough\n\t * @static\n\t * @protected\n\t */\n\ts._AUDIO_READY = \"canplaythrough\";\n\n\t/**\n\t * Event constant for the \"ended\" event for cleaner code.\n\t * @property _AUDIO_ENDED\n\t * @type {String}\n\t * @default ended\n\t * @static\n\t * @protected\n\t */\n\ts._AUDIO_ENDED = \"ended\";\n\n\t/**\n\t * Event constant for the \"seeked\" event for cleaner code.  We utilize this event for maintaining loop events.\n\t * @property _AUDIO_SEEKED\n\t * @type {String}\n\t * @default seeked\n\t * @static\n\t * @protected\n\t */\n\ts._AUDIO_SEEKED = \"seeked\";\n\n\t/**\n\t * Event constant for the \"stalled\" event for cleaner code.\n\t * @property _AUDIO_STALLED\n\t * @type {String}\n\t * @default stalled\n\t * @static\n\t * @protected\n\t */\n\ts._AUDIO_STALLED = \"stalled\";\n\n\t/**\n\t * Event constant for the \"timeupdate\" event for cleaner code.  Utilized for looping audio sprites.\n\t * This event callsback ever 15 to 250ms and can be dropped by the browser for performance.\n\t * @property _TIME_UPDATE\n\t * @type {String}\n\t * @default timeupdate\n\t * @static\n\t * @protected\n\t */\n\ts._TIME_UPDATE = \"timeupdate\";\n\n\t/**\n\t * The capabilities of the plugin. This is generated via the {{#crossLink \"HTMLAudioPlugin/_generateCapabilities\"}}{{/crossLink}}\n\t * method. Please see the Sound {{#crossLink \"Sound/getCapabilities\"}}{{/crossLink}} method for an overview of all\n\t * of the available properties.\n\t * @property _capabilities\n\t * @type {Object}\n\t * @protected\n\t * @static\n\t */\n\ts._capabilities = null;\n\n\n// Static Methods\n\t/**\n\t * Determine if the plugin can be used in the current browser/OS. Note that HTML audio is available in most modern\n\t * browsers, but is disabled in iOS because of its limitations.\n\t * @method isSupported\n\t * @return {Boolean} If the plugin can be initialized.\n\t * @static\n\t */\n\ts.isSupported = function () {\n\t\ts._generateCapabilities();\n\t\treturn (s._capabilities != null);\n\t};\n\n\t/**\n\t * Determine the capabilities of the plugin. Used internally. Please see the Sound API {{#crossLink \"Sound/getCapabilities\"}}{{/crossLink}}\n\t * method for an overview of plugin capabilities.\n\t * @method _generateCapabilities\n\t * @static\n\t * @protected\n\t */\n\ts._generateCapabilities = function () {\n\t\tif (s._capabilities != null) {return;}\n\t\tvar t = document.createElement(\"audio\");\n\t\tif (t.canPlayType == null) {return null;}\n\n\t\ts._capabilities = {\n\t\t\tpanning:false,\n\t\t\tvolume:true,\n\t\t\ttracks:-1\n\t\t};\n\n\t\t// determine which extensions our browser supports for this plugin by iterating through Sound.SUPPORTED_EXTENSIONS\n\t\tvar supportedExtensions = createjs.Sound.SUPPORTED_EXTENSIONS;\n\t\tvar extensionMap = createjs.Sound.EXTENSION_MAP;\n\t\tfor (var i = 0, l = supportedExtensions.length; i < l; i++) {\n\t\t\tvar ext = supportedExtensions[i];\n\t\t\tvar playType = extensionMap[ext] || ext;\n\t\t\ts._capabilities[ext] = (t.canPlayType(\"audio/\" + ext) != \"no\" && t.canPlayType(\"audio/\" + ext) != \"\") || (t.canPlayType(\"audio/\" + playType) != \"no\" && t.canPlayType(\"audio/\" + playType) != \"\");\n\t\t}  // OJR another way to do this might be canPlayType:\"m4a\", codex: mp4\n\t};\n\n\n// public methods\n\tp.register = function (loadItem) {\n\t\tvar tag = createjs.HTMLAudioTagPool.get(loadItem.src);\n\t\tvar loader = this.AbstractPlugin_register(loadItem);\n\t\tloader.setTag(tag);\n\n\t\treturn loader;\n\t};\n\n\tp.removeSound = function (src) {\n\t\tthis.AbstractPlugin_removeSound(src);\n\t\tcreatejs.HTMLAudioTagPool.remove(src);\n\t};\n\n\tp.create = function (src, startTime, duration) {\n\t\tvar si = this.AbstractPlugin_create(src, startTime, duration);\n\t\tsi.setPlaybackResource(null);\n\t\treturn si;\n\t};\n\n\tp.toString = function () {\n\t\treturn \"[HTMLAudioPlugin]\";\n\t};\n\n\t// plugin does not support these\n\tp.setVolume = p.getVolume = p.setMute = null;\n\n\n\tcreatejs.HTMLAudioPlugin = createjs.promote(HTMLAudioPlugin, \"AbstractPlugin\");\n}());\n\n//##############################################################################\n// Tween.js\n//##############################################################################\n\n// TODO: possibly add a END actionsMode (only runs actions that == position)?\n// TODO: evaluate a way to decouple paused from tick registration.\n\n\n\n\n(function() {\n\t\"use strict\";\n\n\n// constructor\n\t/**\n\t * A Tween instance tweens properties for a single target. Instance methods can be chained for easy construction and sequencing:\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      target.alpha = 1;\n\t *\t    createjs.Tween.get(target)\n\t *\t         .wait(500)\n\t *\t         .to({alpha:0, visible:false}, 1000)\n\t *\t         .call(handleComplete);\n\t *\t    function handleComplete() {\n\t *\t    \t//Tween complete\n\t *\t    }\n\t *\n\t * Multiple tweens can point to the same instance, however if they affect the same properties there could be unexpected\n\t * behaviour. To stop all tweens on an object, use {{#crossLink \"Tween/removeTweens\"}}{{/crossLink}} or pass `override:true`\n\t * in the props argument.\n\t *\n\t *      createjs.Tween.get(target, {override:true}).to({x:100});\n\t *\n\t * Subscribe to the {{#crossLink \"Tween/change:event\"}}{{/crossLink}} event to get notified when a property of the\n\t * target is changed.\n\t *\n\t *      createjs.Tween.get(target, {override:true}).to({x:100}).addEventListener(\"change\", handleChange);\n\t *      function handleChange(event) {\n\t *          // The tween changed.\n\t *      }\n\t *\n\t * See the Tween {{#crossLink \"Tween/get\"}}{{/crossLink}} method for additional param documentation.\n\t * @class Tween\n\t * @param {Object} target The target object that will have its properties tweened.\n\t * @param {Object} [props] The configuration properties to apply to this tween instance (ex. `{loop:true, paused:true}`.\n\t * All properties default to false. Supported props are:<UL>\n\t *    <LI> loop: sets the loop property on this tween.</LI>\n\t *    <LI> useTicks: uses ticks for all durations instead of milliseconds.</LI>\n\t *    <LI> ignoreGlobalPause: sets the {{#crossLink \"Tween/ignoreGlobalPause:property\"}}{{/crossLink}} property on this tween.</LI>\n\t *    <LI> override: if true, `Tween.removeTweens(target)` will be called to remove any other tweens with the same target.\n\t *    <LI> paused: indicates whether to start the tween paused.</LI>\n\t *    <LI> position: indicates the initial position for this tween.</LI>\n\t *    <LI> onChange: specifies a listener for the \"change\" event.</LI>\n\t * </UL>\n\t * @param {Object} [pluginData] An object containing data for use by installed plugins. See individual\n\t * plugins' documentation for details.\n\t * @extends EventDispatcher\n\t * @constructor\n\t */\n\tfunction Tween(target, props, pluginData) {\n\n\t// public properties:\n\t\t/**\n\t\t * Causes this tween to continue playing when a global pause is active. For example, if TweenJS is using {{#crossLink \"Ticker\"}}{{/crossLink}},\n\t\t * then setting this to true (the default) will cause this tween to be paused when <code>Ticker.setPaused(true)</code>\n\t\t * is called. See the Tween {{#crossLink \"Tween/tick\"}}{{/crossLink}} method for more info. Can be set via the props\n\t\t * parameter.\n\t\t * @property ignoreGlobalPause\n\t\t * @type Boolean\n\t\t * @default false\n\t\t */\n\t\tthis.ignoreGlobalPause = false;\n\t\n\t\t/**\n\t\t * If true, the tween will loop when it reaches the end. Can be set via the props param.\n\t\t * @property loop\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.loop = false;\n\t\n\t\t/**\n\t\t * Specifies the total duration of this tween in milliseconds (or ticks if useTicks is true).\n\t\t * This value is automatically updated as you modify the tween. Changing it directly could result in unexpected\n\t\t * behaviour.\n\t\t * @property duration\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.duration = 0;\n\t\n\t\t/**\n\t\t * Allows you to specify data that will be used by installed plugins. Each plugin uses this differently, but in general\n\t\t * you specify data by setting it to a property of pluginData with the same name as the plugin class.\n\t\t * @example\n\t\t *\tmyTween.pluginData.PluginClassName = data;\n\t\t * <br/>\n\t\t * Also, most plugins support a property to enable or disable them. This is typically the plugin class name followed by \"_enabled\".<br/>\n\t\t * @example\n\t\t *\tmyTween.pluginData.PluginClassName_enabled = false;<br/>\n\t\t * <br/>\n\t\t * Some plugins also store instance data in this object, usually in a property named _PluginClassName.\n\t\t * See the documentation for individual plugins for more details.\n\t\t * @property pluginData\n\t\t * @type {Object}\n\t\t */\n\t\tthis.pluginData = pluginData || {};\n\t\n\t\t/**\n\t\t * The target of this tween. This is the object on which the tweened properties will be changed. Changing\n\t\t * this property after the tween is created will not have any effect.\n\t\t * @property target\n\t\t * @type {Object}\n\t\t * @readonly\n\t\t */\n\t\tthis.target = target;\n\t\n\t\t/**\n\t\t * The current normalized position of the tween. This will always be a value between 0 and duration.\n\t\t * Changing this property directly will have no effect.\n\t\t * @property position\n\t\t * @type {Object}\n\t\t * @readonly\n\t\t */\n\t\tthis.position = null;\n\t\n\t\t/**\n\t\t * Indicates the tween's current position is within a passive wait.\n\t\t * @property passive\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @readonly\n\t\t **/\n\t\tthis.passive = false;\n\t\n\t// private properties:\t\n\t\t/**\n\t\t * @property _paused\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @protected\n\t\t */\n\t\tthis._paused = false;\n\t\n\t\t/**\n\t\t * @property _curQueueProps\n\t\t * @type {Object}\n\t\t * @protected\n\t\t */\n\t\tthis._curQueueProps = {};\n\t\n\t\t/**\n\t\t * @property _initQueueProps\n\t\t * @type {Object}\n\t\t * @protected\n\t\t */\n\t\tthis._initQueueProps = {};\n\t\n\t\t/**\n\t\t * @property _steps\n\t\t * @type {Array}\n\t\t * @protected\n\t\t */\n\t\tthis._steps = [];\n\t\n\t\t/**\n\t\t * @property _actions\n\t\t * @type {Array}\n\t\t * @protected\n\t\t */\n\t\tthis._actions = [];\n\t\n\t\t/**\n\t\t * Raw position.\n\t\t * @property _prevPosition\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @protected\n\t\t */\n\t\tthis._prevPosition = 0;\n\t\n\t\t/**\n\t\t * The position within the current step.\n\t\t * @property _stepPosition\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @protected\n\t\t */\n\t\tthis._stepPosition = 0; // this is needed by MovieClip.\n\t\n\t\t/**\n\t\t * Normalized position.\n\t\t * @property _prevPos\n\t\t * @type {Number}\n\t\t * @default -1\n\t\t * @protected\n\t\t */\n\t\tthis._prevPos = -1;\n\t\n\t\t/**\n\t\t * @property _target\n\t\t * @type {Object}\n\t\t * @protected\n\t\t */\n\t\tthis._target = target;\n\t\n\t\t/**\n\t\t * @property _useTicks\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @protected\n\t\t */\n\t\tthis._useTicks = false;\n\t\n\t\t/**\n\t\t * @property _inited\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t * @protected\n\t\t */\n\t\tthis._inited = false;\n\t\t\n\t\t/**\n\t\t * Indicates whether the tween is currently registered with Tween.\n\t\t * @property _registered\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t * @protected\n\t\t */\n\t\tthis._registered = false;\n\n\n\t\tif (props) {\n\t\t\tthis._useTicks = props.useTicks;\n\t\t\tthis.ignoreGlobalPause = props.ignoreGlobalPause;\n\t\t\tthis.loop = props.loop;\n\t\t\tprops.onChange && this.addEventListener(\"change\", props.onChange);\n\t\t\tif (props.override) { Tween.removeTweens(target); }\n\t\t}\n\t\tif (props&&props.paused) { this._paused=true; }\n\t\telse { createjs.Tween._register(this,true); }\n\t\tif (props&&props.position!=null) { this.setPosition(props.position, Tween.NONE); }\n\n\t};\n\n\tvar p = createjs.extend(Tween, createjs.EventDispatcher);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\t\n\n// static properties\n\t/**\n\t * Constant defining the none actionsMode for use with setPosition.\n\t * @property NONE\n\t * @type Number\n\t * @default 0\n\t * @static\n\t */\n\tTween.NONE = 0;\n\n\t/**\n\t * Constant defining the loop actionsMode for use with setPosition.\n\t * @property LOOP\n\t * @type Number\n\t * @default 1\n\t * @static\n\t */\n\tTween.LOOP = 1;\n\n\t/**\n\t * Constant defining the reverse actionsMode for use with setPosition.\n\t * @property REVERSE\n\t * @type Number\n\t * @default 2\n\t * @static\n\t */\n\tTween.REVERSE = 2;\n\n\t/**\n\t * Constant returned by plugins to tell the tween not to use default assignment.\n\t * @property IGNORE\n\t * @type Object\n\t * @static\n\t */\n\tTween.IGNORE = {};\n\n\t/**\n\t * @property _listeners\n\t * @type Array[Tween]\n\t * @static\n\t * @protected\n\t */\n\tTween._tweens = [];\n\n\t/**\n\t * @property _plugins\n\t * @type Object\n\t * @static\n\t * @protected\n\t */\n\tTween._plugins = {};\n\n\n// static methods\t\n\t/**\n\t * Returns a new tween instance. This is functionally identical to using \"new Tween(...)\", but looks cleaner\n\t * with the chained syntax of TweenJS.\n\t * <h4>Example</h4>\n\t *\n\t *\t\tvar tween = createjs.Tween.get(target);\n\t *\n\t * @method get\n\t * @param {Object} target The target object that will have its properties tweened.\n\t * @param {Object} [props] The configuration properties to apply to this tween instance (ex. `{loop:true, paused:true}`).\n\t * All properties default to `false`. Supported props are:\n\t * <UL>\n\t *    <LI> loop: sets the loop property on this tween.</LI>\n\t *    <LI> useTicks: uses ticks for all durations instead of milliseconds.</LI>\n\t *    <LI> ignoreGlobalPause: sets the {{#crossLink \"Tween/ignoreGlobalPause:property\"}}{{/crossLink}} property on\n\t *    this tween.</LI>\n\t *    <LI> override: if true, `createjs.Tween.removeTweens(target)` will be called to remove any other tweens with\n\t *    the same target.\n\t *    <LI> paused: indicates whether to start the tween paused.</LI>\n\t *    <LI> position: indicates the initial position for this tween.</LI>\n\t *    <LI> onChange: specifies a listener for the {{#crossLink \"Tween/change:event\"}}{{/crossLink}} event.</LI>\n\t * </UL>\n\t * @param {Object} [pluginData] An object containing data for use by installed plugins. See individual plugins'\n\t * documentation for details.\n\t * @param {Boolean} [override=false] If true, any previous tweens on the same target will be removed. This is the\n\t * same as calling `Tween.removeTweens(target)`.\n\t * @return {Tween} A reference to the created tween. Additional chained tweens, method calls, or callbacks can be\n\t * applied to the returned tween instance.\n\t * @static\n\t */\n\tTween.get = function(target, props, pluginData, override) {\n\t\tif (override) { Tween.removeTweens(target); }\n\t\treturn new Tween(target, props, pluginData);\n\t};\n\n\t/**\n\t * Advances all tweens. This typically uses the {{#crossLink \"Ticker\"}}{{/crossLink}} class, but you can call it\n\t * manually if you prefer to use your own \"heartbeat\" implementation.\n\t * @method tick\n\t * @param {Number} delta The change in time in milliseconds since the last tick. Required unless all tweens have\n\t * `useTicks` set to true.\n\t * @param {Boolean} paused Indicates whether a global pause is in effect. Tweens with {{#crossLink \"Tween/ignoreGlobalPause:property\"}}{{/crossLink}}\n\t * will ignore this, but all others will pause if this is `true`.\n\t * @static\n\t */\n\tTween.tick = function(delta, paused) {\n\t\tvar tweens = Tween._tweens.slice(); // to avoid race conditions.\n\t\tfor (var i=tweens.length-1; i>=0; i--) {\n\t\t\tvar tween = tweens[i];\n\t\t\tif ((paused && !tween.ignoreGlobalPause) || tween._paused) { continue; }\n\t\t\ttween.tick(tween._useTicks?1:delta);\n\t\t}\n\t};\n\n\t/**\n\t * Handle events that result from Tween being used as an event handler. This is included to allow Tween to handle\n\t * {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}} events from the createjs {{#crossLink \"Ticker\"}}{{/crossLink}}.\n\t * No other events are handled in Tween.\n\t * @method handleEvent\n\t * @param {Object} event An event object passed in by the {{#crossLink \"EventDispatcher\"}}{{/crossLink}}. Will\n\t * usually be of type \"tick\".\n\t * @private\n\t * @static\n\t * @since 0.4.2\n\t */\n\tTween.handleEvent = function(event) {\n\t\tif (event.type == \"tick\") {\n\t\t\tthis.tick(event.delta, event.paused);\n\t\t}\n\t};\n\n\t/**\n\t * Removes all existing tweens for a target. This is called automatically by new tweens if the `override`\n\t * property is `true`.\n\t * @method removeTweens\n\t * @param {Object} target The target object to remove existing tweens from.\n\t * @static\n\t */\n\tTween.removeTweens = function(target) {\n\t\tif (!target.tweenjs_count) { return; }\n\t\tvar tweens = Tween._tweens;\n\t\tfor (var i=tweens.length-1; i>=0; i--) {\n\t\t\tvar tween = tweens[i];\n\t\t\tif (tween._target == target) {\n\t\t\t\ttween._paused = true;\n\t\t\t\ttweens.splice(i, 1);\n\t\t\t}\n\t\t}\n\t\ttarget.tweenjs_count = 0;\n\t};\n\n\t/**\n\t * Stop and remove all existing tweens.\n\t * @method removeAllTweens\n\t * @static\n\t * @since 0.4.1\n\t */\n\tTween.removeAllTweens = function() {\n\t\tvar tweens = Tween._tweens;\n\t\tfor (var i= 0, l=tweens.length; i<l; i++) {\n\t\t\tvar tween = tweens[i];\n\t\t\ttween._paused = true;\n\t\t\ttween.target&&(tween.target.tweenjs_count = 0);\n\t\t}\n\t\ttweens.length = 0;\n\t};\n\n\t/**\n\t * Indicates whether there are any active tweens (and how many) on the target object (if specified) or in general.\n\t * @method hasActiveTweens\n\t * @param {Object} [target] The target to check for active tweens. If not specified, the return value will indicate\n\t * if there are any active tweens on any target.\n\t * @return {Boolean} If there are active tweens.\n\t * @static\n\t */\n\tTween.hasActiveTweens = function(target) {\n\t\tif (target) { return target.tweenjs_count != null && !!target.tweenjs_count; }\n\t\treturn Tween._tweens && !!Tween._tweens.length;\n\t};\n\n\t/**\n\t * Installs a plugin, which can modify how certain properties are handled when tweened. See the {{#crossLink \"CSSPlugin\"}}{{/crossLink}}\n\t * for an example of how to write TweenJS plugins.\n\t * @method installPlugin\n\t * @static\n\t * @param {Object} plugin The plugin class to install\n\t * @param {Array} properties An array of properties that the plugin will handle.\n\t */\n\tTween.installPlugin = function(plugin, properties) {\n\t\tvar priority = plugin.priority;\n\t\tif (priority == null) { plugin.priority = priority = 0; }\n\t\tfor (var i=0,l=properties.length,p=Tween._plugins;i<l;i++) {\n\t\t\tvar n = properties[i];\n\t\t\tif (!p[n]) { p[n] = [plugin]; }\n\t\t\telse {\n\t\t\t\tvar arr = p[n];\n\t\t\t\tfor (var j=0,jl=arr.length;j<jl;j++) {\n\t\t\t\t\tif (priority < arr[j].priority) { break; }\n\t\t\t\t}\n\t\t\t\tp[n].splice(j,0,plugin);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Registers or unregisters a tween with the ticking system.\n\t * @method _register\n\t * @param {Tween} tween The tween instance to register or unregister.\n\t * @param {Boolean} value If `true`, the tween is registered. If `false` the tween is unregistered.\n\t * @static\n\t * @protected\n\t */\n\tTween._register = function(tween, value) {\n\t\tvar target = tween._target;\n\t\tvar tweens = Tween._tweens;\n\t\tif (value && !tween._registered) {\n\t\t\t// TODO: this approach might fail if a dev is using sealed objects in ES5\n\t\t\tif (target) { target.tweenjs_count = target.tweenjs_count ? target.tweenjs_count+1 : 1; }\n\t\t\ttweens.push(tween);\n\t\t\tif (!Tween._inited && createjs.Ticker) { createjs.Ticker.addEventListener(\"tick\", Tween); Tween._inited = true; }\n\t\t} else if (!value && tween._registered) {\n\t\t\tif (target) { target.tweenjs_count--; }\n\t\t\tvar i = tweens.length;\n\t\t\twhile (i--) {\n\t\t\t\tif (tweens[i] == tween) {\n\t\t\t\t\ttweens.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ttween._registered = value;\n\t};\n\n\n// events:\n\t/**\n\t * Called whenever the tween's position changes.\n\t * @event change\n\t * @since 0.4.0\n\t **/\n\t\n\n// public methods:\n\t/**\n\t * Queues a wait (essentially an empty tween).\n\t * <h4>Example</h4>\n\t *\n\t *\t\t//This tween will wait 1s before alpha is faded to 0.\n\t *\t\tcreatejs.Tween.get(target).wait(1000).to({alpha:0}, 1000);\n\t *\n\t * @method wait\n\t * @param {Number} duration The duration of the wait in milliseconds (or in ticks if `useTicks` is true).\n\t * @param {Boolean} [passive] Tween properties will not be updated during a passive wait. This\n\t * is mostly useful for use with {{#crossLink \"Timeline\"}}{{/crossLink}} instances that contain multiple tweens\n\t * affecting the same target at different times.\n\t * @return {Tween} This tween instance (for chaining calls).\n\t **/\n\tp.wait = function(duration, passive) {\n\t\tif (duration == null || duration <= 0) { return this; }\n\t\tvar o = this._cloneProps(this._curQueueProps);\n\t\treturn this._addStep({d:duration, p0:o, e:this._linearEase, p1:o, v:passive});\n\t};\n\n\t/**\n\t * Queues a tween from the current values to the target properties. Set duration to 0 to jump to these value.\n\t * Numeric properties will be tweened from their current value in the tween to the target value. Non-numeric\n\t * properties will be set at the end of the specified duration.\n\t * <h4>Example</h4>\n\t *\n\t *\t\tcreatejs.Tween.get(target).to({alpha:0}, 1000);\n\t *\n\t * @method to\n\t * @param {Object} props An object specifying property target values for this tween (Ex. `{x:300}` would tween the x\n\t * property of the target to 300).\n\t * @param {Number} [duration=0] The duration of the wait in milliseconds (or in ticks if `useTicks` is true).\n\t * @param {Function} [ease=\"linear\"] The easing function to use for this tween. See the {{#crossLink \"Ease\"}}{{/crossLink}}\n\t * class for a list of built-in ease functions.\n\t * @return {Tween} This tween instance (for chaining calls).\n\t */\n\tp.to = function(props, duration, ease) {\n\t\tif (isNaN(duration) || duration < 0) { duration = 0; }\n\t\treturn this._addStep({d:duration||0, p0:this._cloneProps(this._curQueueProps), e:ease, p1:this._cloneProps(this._appendQueueProps(props))});\n\t};\n\n\t/**\n\t * Queues an action to call the specified function.\n\t * <h4>Example</h4>\n\t *\n\t *   \t//would call myFunction() after 1 second.\n\t *   \tmyTween.wait(1000).call(myFunction);\n\t *\n\t * @method call\n\t * @param {Function} callback The function to call.\n\t * @param {Array} [params]. The parameters to call the function with. If this is omitted, then the function\n\t *      will be called with a single param pointing to this tween.\n\t * @param {Object} [scope]. The scope to call the function in. If omitted, it will be called in the target's\n\t *      scope.\n\t * @return {Tween} This tween instance (for chaining calls).\n\t */\n\tp.call = function(callback, params, scope) {\n\t\treturn this._addAction({f:callback, p:params ? params : [this], o:scope ? scope : this._target});\n\t};\n\n\t// TODO: add clarification between this and a 0 duration .to:\n\t/**\n\t * Queues an action to set the specified props on the specified target. If target is null, it will use this tween's\n\t * target.\n\t * <h4>Example</h4>\n\t *\n\t *\t\tmyTween.wait(1000).set({visible:false},foo);\n\t *\n\t * @method set\n\t * @param {Object} props The properties to set (ex. `{visible:false}`).\n\t * @param {Object} [target] The target to set the properties on. If omitted, they will be set on the tween's target.\n\t * @return {Tween} This tween instance (for chaining calls).\n\t */\n\tp.set = function(props, target) {\n\t\treturn this._addAction({f:this._set, o:this, p:[props, target ? target : this._target]});\n\t};\n\n\t/**\n\t * Queues an action to play (unpause) the specified tween. This enables you to sequence multiple tweens.\n\t * <h4>Example</h4>\n\t *\n\t *\t\tmyTween.to({x:100},500).play(otherTween);\n\t *\n\t * @method play\n\t * @param {Tween} tween The tween to play.\n\t * @return {Tween} This tween instance (for chaining calls).\n\t */\n\tp.play = function(tween) {\n\t\tif (!tween) { tween = this; }\n\t\treturn this.call(tween.setPaused, [false], tween);\n\t};\n\n\t/**\n\t * Queues an action to pause the specified tween.\n\t * @method pause\n\t * @param {Tween} tween The tween to pause. If null, it pauses this tween.\n\t * @return {Tween} This tween instance (for chaining calls)\n\t */\n\tp.pause = function(tween) {\n\t\tif (!tween) { tween = this; }\n\t\treturn this.call(tween.setPaused, [true], tween);\n\t};\n\n\t/**\n\t * Advances the tween to a specified position.\n\t * @method setPosition\n\t * @param {Number} value The position to seek to in milliseconds (or ticks if useTicks is true).\n\t * @param {Number} [actionsMode=1] Specifies how actions are handled (ie. call, set, play, pause):\n\t * <ul>\n\t *      <li>{{#crossLink \"Tween/NONE:property\"}}{{/crossLink}} (0) - run no actions.</li>\n\t *      <li>{{#crossLink \"Tween/LOOP:property\"}}{{/crossLink}} (1) - if new position is less than old, then run all\n\t *      actions between old and duration, then all actions between 0 and new.</li>\n\t *      <li>{{#crossLink \"Tween/REVERSE:property\"}}{{/crossLink}} (2) - if new position is less than old, run all\n\t *      actions between them in reverse.</li>\n\t * </ul>\n\t * @return {Boolean} Returns `true` if the tween is complete (ie. the full tween has run & {{#crossLink \"Tween/loop:property\"}}{{/crossLink}}\n\t * is `false`).\n\t */\n\tp.setPosition = function(value, actionsMode) {\n\t\tif (value < 0) { value = 0; }\n\t\tif (actionsMode == null) { actionsMode = 1; }\n\n\t\t// normalize position:\n\t\tvar t = value;\n\t\tvar end = false;\n\t\tif (t >= this.duration) {\n\t\t\tif (this.loop) { t = t%this.duration; }\n\t\t\telse {\n\t\t\t\tt = this.duration;\n\t\t\t\tend = true;\n\t\t\t}\n\t\t}\n\t\tif (t == this._prevPos) { return end; }\n\n\n\t\tvar prevPos = this._prevPos;\n\t\tthis.position = this._prevPos = t; // set this in advance in case an action modifies position.\n\t\tthis._prevPosition = value;\n\n\t\t// handle tweens:\n\t\tif (this._target) {\n\t\t\tif (end) {\n\t\t\t\t// addresses problems with an ending zero length step.\n\t\t\t\tthis._updateTargetProps(null,1);\n\t\t\t} else if (this._steps.length > 0) {\n\t\t\t\t// find our new tween index:\n\t\t\t\tfor (var i=0, l=this._steps.length; i<l; i++) {\n\t\t\t\t\tif (this._steps[i].t > t) { break; }\n\t\t\t\t}\n\t\t\t\tvar step = this._steps[i-1];\n\t\t\t\tthis._updateTargetProps(step,(this._stepPosition = t-step.t)/step.d);\n\t\t\t}\n\t\t}\n\n\t\t// run actions:\n\t\tif (actionsMode != 0 && this._actions.length > 0) {\n\t\t\tif (this._useTicks) {\n\t\t\t\t// only run the actions we landed on.\n\t\t\t\tthis._runActions(t,t);\n\t\t\t} else if (actionsMode == 1 && t<prevPos) {\n\t\t\t\tif (prevPos != this.duration) { this._runActions(prevPos, this.duration); }\n\t\t\t\tthis._runActions(0, t, true);\n\t\t\t} else {\n\t\t\t\tthis._runActions(prevPos, t);\n\t\t\t}\n\t\t}\n\n\t\tif (end) { this.setPaused(true); }\n\n        this.dispatchEvent(\"change\");\n\t\treturn end;\n\t};\n\n\t/**\n\t * Advances this tween by the specified amount of time in milliseconds (or ticks if`useTicks` is `true`).\n\t * This is normally called automatically by the Tween engine (via {{#crossLink \"Tween/tick\"}}{{/crossLink}}), but is\n\t * exposed for advanced uses.\n\t * @method tick\n\t * @param {Number} delta The time to advance in milliseconds (or ticks if `useTicks` is `true`).\n\t */\n\tp.tick = function(delta) {\n\t\tif (this._paused) { return; }\n\t\tthis.setPosition(this._prevPosition+delta);\n\t};\n\n\t/**\n\t * Pauses or plays this tween.\n\t * @method setPaused\n\t * @param {Boolean} [value=true] Indicates whether the tween should be paused (`true`) or played (`false`).\n\t * @return {Tween} This tween instance (for chaining calls)\n\t */\n\tp.setPaused = function(value) {\n\t\tif (this._paused === !!value) { return this; }\n\t\tthis._paused = !!value;\n\t\tTween._register(this, !value);\n\t\treturn this;\n\t};\n\n\t// tiny api (primarily for tool output):\n\tp.w = p.wait;\n\tp.t = p.to;\n\tp.c = p.call;\n\tp.s = p.set;\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\tp.toString = function() {\n\t\treturn \"[Tween]\";\n\t};\n\n\t/**\n\t * @method clone\n\t * @protected\n\t */\n\tp.clone = function() {\n\t\tthrow(\"Tween can not be cloned.\")\n\t};\n\n// private methods:\n\t/**\n\t * @method _updateTargetProps\n\t * @param {Object} step\n\t * @param {Number} ratio\n\t * @protected\n\t */\n\tp._updateTargetProps = function(step, ratio) {\n\t\tvar p0,p1,v,v0,v1,arr;\n\t\tif (!step && ratio == 1) {\n\t\t\t// GDS: when does this run? Just at the very end? Shouldn't.\n\t\t\tthis.passive = false;\n\t\t\tp0 = p1 = this._curQueueProps;\n\t\t} else {\n\t\t\tthis.passive = !!step.v;\n\t\t\tif (this.passive) { return; } // don't update props.\n\t\t\t// apply ease to ratio.\n\t\t\tif (step.e) { ratio = step.e(ratio,0,1,1); }\n\t\t\tp0 = step.p0;\n\t\t\tp1 = step.p1;\n\t\t}\n\n\t\tfor (var n in this._initQueueProps) {\n\t\t\tif ((v0 = p0[n]) == null) { p0[n] = v0 = this._initQueueProps[n]; }\n\t\t\tif ((v1 = p1[n]) == null) { p1[n] = v1 = v0; }\n\t\t\tif (v0 == v1 || ratio == 0 || ratio == 1 || (typeof(v0) != \"number\")) {\n\t\t\t\t// no interpolation - either at start, end, values don't change, or the value is non-numeric.\n\t\t\t\tv = ratio == 1 ? v1 : v0;\n\t\t\t} else {\n\t\t\t\tv = v0+(v1-v0)*ratio;\n\t\t\t}\n\n\t\t\tvar ignore = false;\n\t\t\tif (arr = Tween._plugins[n]) {\n\t\t\t\tfor (var i=0,l=arr.length;i<l;i++) {\n\t\t\t\t\tvar v2 = arr[i].tween(this, n, v, p0, p1, ratio, !!step&&p0==p1, !step);\n\t\t\t\t\tif (v2 == Tween.IGNORE) { ignore = true; }\n\t\t\t\t\telse { v = v2; }\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!ignore) { this._target[n] = v; }\n\t\t}\n\n\t};\n\n\t/**\n\t * @method _runActions\n\t * @param {Number} startPos\n\t * @param {Number} endPos\n\t * @param {Boolean} includeStart\n\t * @protected\n\t */\n\tp._runActions = function(startPos, endPos, includeStart) {\n\t\tvar sPos = startPos;\n\t\tvar ePos = endPos;\n\t\tvar i = -1;\n\t\tvar j = this._actions.length;\n\t\tvar k = 1;\n\t\tif (startPos > endPos) {\n\t\t\t// running backwards, flip everything:\n\t\t\tsPos = endPos;\n\t\t\tePos = startPos;\n\t\t\ti = j;\n\t\t\tj = k = -1;\n\t\t}\n\t\twhile ((i+=k) != j) {\n\t\t\tvar action = this._actions[i];\n\t\t\tvar pos = action.t;\n\t\t\tif (pos == ePos || (pos > sPos && pos < ePos) || (includeStart && pos == startPos) ) {\n\t\t\t\taction.f.apply(action.o, action.p);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @method _appendQueueProps\n\t * @param {Object} o\n\t * @protected\n\t */\n\tp._appendQueueProps = function(o) {\n\t\tvar arr,oldValue,i, l, injectProps;\n\t\tfor (var n in o) {\n\t\t\tif (this._initQueueProps[n] === undefined) {\n\t\t\t\toldValue = this._target[n];\n\n\t\t\t\t// init plugins:\n\t\t\t\tif (arr = Tween._plugins[n]) {\n\t\t\t\t\tfor (i=0,l=arr.length;i<l;i++) {\n\t\t\t\t\t\toldValue = arr[i].init(this, n, oldValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._initQueueProps[n] = this._curQueueProps[n] = (oldValue===undefined) ? null : oldValue;\n\t\t\t} else {\n\t\t\t\toldValue = this._curQueueProps[n];\n\t\t\t}\n\t\t}\n\n\t\tfor (var n in o) {\n\t\t\toldValue = this._curQueueProps[n];\n\t\t\tif (arr = Tween._plugins[n]) {\n\t\t\t\tinjectProps = injectProps||{};\n\t\t\t\tfor (i=0, l=arr.length;i<l;i++) {\n\t\t\t\t\t// TODO: remove the check for .step in the next version. It's here for backwards compatibility.\n\t\t\t\t\tif (arr[i].step) { arr[i].step(this, n, oldValue, o[n], injectProps); }\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._curQueueProps[n] = o[n];\n\t\t}\n\t\tif (injectProps) { this._appendQueueProps(injectProps); }\n\t\treturn this._curQueueProps;\n\t};\n\n\t/**\n\t * @method _cloneProps\n\t * @param {Object} props\n\t * @protected\n\t */\n\tp._cloneProps = function(props) {\n\t\tvar o = {};\n\t\tfor (var n in props) {\n\t\t\to[n] = props[n];\n\t\t}\n\t\treturn o;\n\t};\n\n\t/**\n\t * @method _addStep\n\t * @param {Object} o\n\t * @protected\n\t */\n\tp._addStep = function(o) {\n\t\tif (o.d > 0) {\n\t\t\tthis._steps.push(o);\n\t\t\to.t = this.duration;\n\t\t\tthis.duration += o.d;\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * @method _addAction\n\t * @param {Object} o\n\t * @protected\n\t */\n\tp._addAction = function(o) {\n\t\to.t = this.duration;\n\t\tthis._actions.push(o);\n\t\treturn this;\n\t};\n\n\t/**\n\t * @method _set\n\t * @param {Object} props\n\t * @param {Object} o\n\t * @protected\n\t */\n\tp._set = function(props, o) {\n\t\tfor (var n in props) {\n\t\t\to[n] = props[n];\n\t\t}\n\t};\n\n\tcreatejs.Tween = createjs.promote(Tween, \"EventDispatcher\");\n\n}());\n\n//##############################################################################\n// Timeline.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\t\n\n// constructor\t\n\t/**\n\t * The Timeline class synchronizes multiple tweens and allows them to be controlled as a group. Please note that if a\n\t * timeline is looping, the tweens on it may appear to loop even if the \"loop\" property of the tween is false.\n\t * @class Timeline\n\t * @param {Array} tweens An array of Tweens to add to this timeline. See {{#crossLink \"Timeline/addTween\"}}{{/crossLink}}\n\t * for more info.\n\t * @param {Object} labels An object defining labels for using {{#crossLink \"Timeline/gotoAndPlay\"}}{{/crossLink}}/{{#crossLink \"Timeline/gotoAndStop\"}}{{/crossLink}}.\n\t * See {{#crossLink \"Timeline/setLabels\"}}{{/crossLink}}\n\t * for details.\n\t * @param {Object} props The configuration properties to apply to this tween instance (ex. `{loop:true}`). All properties\n\t * default to false. Supported props are:<UL>\n\t *    <LI> loop: sets the loop property on this tween.</LI>\n\t *    <LI> useTicks: uses ticks for all durations instead of milliseconds.</LI>\n\t *    <LI> ignoreGlobalPause: sets the ignoreGlobalPause property on this tween.</LI>\n\t *    <LI> paused: indicates whether to start the tween paused.</LI>\n\t *    <LI> position: indicates the initial position for this timeline.</LI>\n\t *    <LI> onChange: specifies a listener to add for the {{#crossLink \"Timeline/change:event\"}}{{/crossLink}} event.</LI>\n\t * </UL>\n\t * @extends EventDispatcher\n\t * @constructor\n\t **/\n\tfunction Timeline(tweens, labels, props) {\n\t\tthis.EventDispatcher_constructor();\n\n\t// public properties:\n\t\t/**\n\t\t * Causes this timeline to continue playing when a global pause is active.\n\t\t * @property ignoreGlobalPause\n\t\t * @type Boolean\n\t\t **/\n\t\tthis.ignoreGlobalPause = false;\n\n\t\t/**\n\t\t * The total duration of this timeline in milliseconds (or ticks if `useTicks `is `true`). This value is usually\n\t\t * automatically updated as you modify the timeline. See {{#crossLink \"Timeline/updateDuration\"}}{{/crossLink}}\n\t\t * for more information.\n\t\t * @property duration\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t **/\n\t\tthis.duration = 0;\n\n\t\t/**\n\t\t * If true, the timeline will loop when it reaches the end. Can be set via the props param.\n\t\t * @property loop\n\t\t * @type Boolean\n\t\t **/\n\t\tthis.loop = false;\n\n\t\t/**\n\t\t * The current normalized position of the timeline. This will always be a value between 0 and\n\t\t * {{#crossLink \"Timeline/duration:property\"}}{{/crossLink}}.\n\t\t * Changing this property directly will have no effect.\n\t\t * @property position\n\t\t * @type Object\n\t\t * @readonly\n\t\t **/\n\t\tthis.position = null;\n\n\t\t// private properties:\n\t\t/**\n\t\t * @property _paused\n\t\t * @type Boolean\n\t\t * @protected\n\t\t **/\n\t\tthis._paused = false;\n\n\t\t/**\n\t\t * @property _tweens\n\t\t * @type Array[Tween]\n\t\t * @protected\n\t\t **/\n\t\tthis._tweens = [];\n\n\t\t/**\n\t\t * @property _labels\n\t\t * @type Object\n\t\t * @protected\n\t\t **/\n\t\tthis._labels = null;\n\n\t\t/**\n\t\t * @property _labelList\n\t\t * @type Array[Object]\n\t\t * @protected\n\t\t **/\n\t\tthis._labelList = null;\n\n\t\t/**\n\t\t * @property _prevPosition\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @protected\n\t\t **/\n\t\tthis._prevPosition = 0;\n\n\t\t/**\n\t\t * @property _prevPos\n\t\t * @type Number\n\t\t * @default -1\n\t\t * @protected\n\t\t **/\n\t\tthis._prevPos = -1;\n\n\t\t/**\n\t\t * @property _useTicks\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @protected\n\t\t **/\n\t\tthis._useTicks = false;\n\t\t\n\t\t/**\n\t\t * Indicates whether the timeline is currently registered with Tween.\n\t\t * @property _registered\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t * @protected\n\t\t */\n\t\tthis._registered = false;\n\n\n\t\tif (props) {\n\t\t\tthis._useTicks = props.useTicks;\n\t\t\tthis.loop = props.loop;\n\t\t\tthis.ignoreGlobalPause = props.ignoreGlobalPause;\n\t\t\tprops.onChange&&this.addEventListener(\"change\", props.onChange);\n\t\t}\n\t\tif (tweens) { this.addTween.apply(this, tweens); }\n\t\tthis.setLabels(labels);\n\t\tif (props&&props.paused) { this._paused=true; }\n\t\telse { createjs.Tween._register(this,true); }\n\t\tif (props&&props.position!=null) { this.setPosition(props.position, createjs.Tween.NONE); }\n\t\t\n\t};\n\t\n\tvar p = createjs.extend(Timeline, createjs.EventDispatcher);\n\n\t// TODO: deprecated\n\t// p.initialize = function() {}; // searchable for devs wondering where it is. REMOVED. See docs for details.\n\n\t\n// events:\n\t/**\n\t * Called whenever the timeline's position changes.\n\t * @event change\n\t * @since 0.5.0\n\t **/\n\n\n// public methods:\n\t/**\n\t * Adds one or more tweens (or timelines) to this timeline. The tweens will be paused (to remove them from the\n\t * normal ticking system) and managed by this timeline. Adding a tween to multiple timelines will result in\n\t * unexpected behaviour.\n\t * @method addTween\n\t * @param {Tween} ...tween The tween(s) to add. Accepts multiple arguments.\n\t * @return {Tween} The first tween that was passed in.\n\t **/\n\tp.addTween = function(tween) {\n\t\tvar l = arguments.length;\n\t\tif (l > 1) {\n\t\t\tfor (var i=0; i<l; i++) { this.addTween(arguments[i]); }\n\t\t\treturn arguments[0];\n\t\t} else if (l == 0) { return null; }\n\t\tthis.removeTween(tween);\n\t\tthis._tweens.push(tween);\n\t\ttween.setPaused(true);\n\t\ttween._paused = false;\n\t\ttween._useTicks = this._useTicks;\n\t\tif (tween.duration > this.duration) { this.duration = tween.duration; }\n\t\tif (this._prevPos >= 0) { tween.setPosition(this._prevPos, createjs.Tween.NONE); }\n\t\treturn tween;\n\t};\n\n\t/**\n\t * Removes one or more tweens from this timeline.\n\t * @method removeTween\n\t * @param {Tween} ...tween The tween(s) to remove. Accepts multiple arguments.\n\t * @return Boolean Returns `true` if all of the tweens were successfully removed.\n\t **/\n\tp.removeTween = function(tween) {\n\t\tvar l = arguments.length;\n\t\tif (l > 1) {\n\t\t\tvar good = true;\n\t\t\tfor (var i=0; i<l; i++) { good = good && this.removeTween(arguments[i]); }\n\t\t\treturn good;\n\t\t} else if (l == 0) { return false; }\n\n\t\tvar tweens = this._tweens;\n\t\tvar i = tweens.length;\n\t\twhile (i--) {\n\t\t\tif (tweens[i] == tween) {\n\t\t\t\ttweens.splice(i, 1);\n\t\t\t\tif (tween.duration >= this.duration) { this.updateDuration(); }\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * Adds a label that can be used with {{#crossLink \"Timeline/gotoAndPlay\"}}{{/crossLink}}/{{#crossLink \"Timeline/gotoAndStop\"}}{{/crossLink}}.\n\t * @method addLabel\n\t * @param {String} label The label name.\n\t * @param {Number} position The position this label represents.\n\t **/\n\tp.addLabel = function(label, position) {\n\t\tthis._labels[label] = position;\n\t\tvar list = this._labelList;\n\t\tif (list) {\n\t\t\tfor (var i= 0,l=list.length; i<l; i++) { if (position < list[i].position) { break; } }\n\t\t\tlist.splice(i, 0, {label:label, position:position});\n\t\t}\n\t};\n\n\t/**\n\t * Defines labels for use with gotoAndPlay/Stop. Overwrites any previously set labels.\n\t * @method setLabels\n\t * @param {Object} o An object defining labels for using {{#crossLink \"Timeline/gotoAndPlay\"}}{{/crossLink}}/{{#crossLink \"Timeline/gotoAndStop\"}}{{/crossLink}}\n\t * in the form `{labelName:time}` where time is in milliseconds (or ticks if `useTicks` is `true`).\n\t **/\n\tp.setLabels = function(o) {\n\t\tthis._labels = o ?  o : {};\n\t};\n\n\t/**\n\t * Returns a sorted list of the labels defined on this timeline.\n\t * @method getLabels\n\t * @return {Array[Object]} A sorted array of objects with label and position properties.\n\t **/\n\tp.getLabels = function() {\n\t\tvar list = this._labelList;\n\t\tif (!list) {\n\t\t\tlist = this._labelList = [];\n\t\t\tvar labels = this._labels;\n\t\t\tfor (var n in labels) {\n\t\t\t\tlist.push({label:n, position:labels[n]});\n\t\t\t}\n\t\t\tlist.sort(function (a,b) { return a.position- b.position; });\n\t\t}\n\t\treturn list;\n\t};\n\n\t/**\n\t * Returns the name of the label on or immediately before the current position. For example, given a timeline with\n\t * two labels, \"first\" on frame index 4, and \"second\" on frame 8, getCurrentLabel would return:\n\t * <UL>\n\t * \t\t<LI>null if the current position is 2.</LI>\n\t * \t\t<LI>\"first\" if the current position is 4.</LI>\n\t * \t\t<LI>\"first\" if the current position is 7.</LI>\n\t * \t\t<LI>\"second\" if the current position is 15.</LI>\n\t * </UL>\n\t * @method getCurrentLabel\n\t * @return {String} The name of the current label or null if there is no label\n\t **/\n\tp.getCurrentLabel = function() {\n\t\tvar labels = this.getLabels();\n\t\tvar pos = this.position;\n\t\tvar l = labels.length;\n\t\tif (l) {\n\t\t\tfor (var i = 0; i<l; i++) { if (pos < labels[i].position) { break; } }\n\t\t\treturn (i==0) ? null : labels[i-1].label;\n\t\t}\n\t\treturn null;\n\t};\n\n\t/**\n\t * Unpauses this timeline and jumps to the specified position or label.\n\t * @method gotoAndPlay\n\t * @param {String|Number} positionOrLabel The position in milliseconds (or ticks if `useTicks` is `true`)\n\t * or label to jump to.\n\t **/\n\tp.gotoAndPlay = function(positionOrLabel) {\n\t\tthis.setPaused(false);\n\t\tthis._goto(positionOrLabel);\n\t};\n\n\t/**\n\t * Pauses this timeline and jumps to the specified position or label.\n\t * @method gotoAndStop\n\t * @param {String|Number} positionOrLabel The position in milliseconds (or ticks if `useTicks` is `true`) or label\n\t * to jump to.\n\t **/\n\tp.gotoAndStop = function(positionOrLabel) {\n\t\tthis.setPaused(true);\n\t\tthis._goto(positionOrLabel);\n\t};\n\n\t/**\n\t * Advances the timeline to the specified position.\n\t * @method setPosition\n\t * @param {Number} value The position to seek to in milliseconds (or ticks if `useTicks` is `true`).\n\t * @param {Number} [actionsMode] parameter specifying how actions are handled. See the Tween {{#crossLink \"Tween/setPosition\"}}{{/crossLink}}\n\t * method for more details.\n\t * @return {Boolean} Returns `true` if the timeline is complete (ie. the full timeline has run & {{#crossLink \"Timeline/loop:property\"}}{{/crossLink}}\n\t * is `false`).\n\t **/\n\tp.setPosition = function(value, actionsMode) {\n\t\tvar t = this._calcPosition(value);\n\t\tvar end = !this.loop && value >= this.duration;\n\t\tif (t == this._prevPos) { return end; }\n\t\tthis._prevPosition = value;\n\t\tthis.position = this._prevPos = t; // in case an action changes the current frame.\n\t\tfor (var i=0, l=this._tweens.length; i<l; i++) {\n\t\t\tthis._tweens[i].setPosition(t, actionsMode);\n\t\t\tif (t != this._prevPos) { return false; } // an action changed this timeline's position.\n\t\t}\n\t\tif (end) { this.setPaused(true); }\n\t\tthis.dispatchEvent(\"change\");\n\t\treturn end;\n\t};\n\n\t/**\n\t * Pauses or plays this timeline.\n\t * @method setPaused\n\t * @param {Boolean} value Indicates whether the tween should be paused (`true`) or played (`false`).\n\t **/\n\tp.setPaused = function(value) {\n\t\tthis._paused = !!value; \n\t\tcreatejs.Tween._register(this, !value);\n\t};\n\n\t/**\n\t * Recalculates the duration of the timeline. The duration is automatically updated when tweens are added or removed,\n\t * but this method is useful if you modify a tween after it was added to the timeline.\n\t * @method updateDuration\n\t **/\n\tp.updateDuration = function() {\n\t\tthis.duration = 0;\n\t\tfor (var i=0,l=this._tweens.length; i<l; i++) {\n\t\t\tvar tween = this._tweens[i];\n\t\t\tif (tween.duration > this.duration) { this.duration = tween.duration; }\n\t\t}\n\t};\n\n\t/**\n\t * Advances this timeline by the specified amount of time in milliseconds (or ticks if `useTicks` is `true`).\n\t * This is normally called automatically by the Tween engine (via the {{#crossLink \"Tween/tick:event\"}}{{/crossLink}}\n\t * event), but is exposed for advanced uses.\n\t * @method tick\n\t * @param {Number} delta The time to advance in milliseconds (or ticks if useTicks is true).\n\t **/\n\tp.tick = function(delta) {\n\t\tthis.setPosition(this._prevPosition+delta);\n\t};\n\n\t/**\n\t * If a numeric position is passed, it is returned unchanged. If a string is passed, the position of the\n\t * corresponding frame label will be returned, or `null` if a matching label is not defined.\n\t * @method resolve\n\t * @param {String|Number} positionOrLabel A numeric position value or label string.\n\t **/\n\tp.resolve = function(positionOrLabel) {\n\t\tvar pos = Number(positionOrLabel);\n\t\tif (isNaN(pos)) { pos = this._labels[positionOrLabel]; }\n\t\treturn pos;\n\t};\n\n\t/**\n\t* Returns a string representation of this object.\n\t* @method toString\n\t* @return {String} a string representation of the instance.\n\t**/\n\tp.toString = function() {\n\t\treturn \"[Timeline]\";\n\t};\n\n\t/**\n\t * @method clone\n\t * @protected\n\t **/\n\tp.clone = function() {\n\t\tthrow(\"Timeline can not be cloned.\")\n\t};\n\n// private methods:\n\t/**\n\t * @method _goto\n\t * @param {String | Number} positionOrLabel\n\t * @protected\n\t **/\n\tp._goto = function(positionOrLabel) {\n\t\tvar pos = this.resolve(positionOrLabel);\n\t\tif (pos != null) { this.setPosition(pos); }\n\t};\n\t\n\t/**\n\t * @method _calcPosition\n\t * @param {Number} value\n\t * @return {Number}\n\t * @protected\n\t **/\n\tp._calcPosition = function(value) {\n\t\tif (value < 0) { return 0; }\n\t\tif (value < this.duration) { return value; }\n\t\treturn this.loop ? value%this.duration : this.duration;\n\t};\n\n\tcreatejs.Timeline = createjs.promote(Timeline, \"EventDispatcher\");\n\n}());\n\n//##############################################################################\n// Ease.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\t/**\n\t * The Ease class provides a collection of easing functions for use with TweenJS. It does not use the standard 4 param\n\t * easing signature. Instead it uses a single param which indicates the current linear ratio (0 to 1) of the tween.\n\t *\n\t * Most methods on Ease can be passed directly as easing functions:\n\t *\n\t *      Tween.get(target).to({x:100}, 500, Ease.linear);\n\t *\n\t * However, methods beginning with \"get\" will return an easing function based on parameter values:\n\t *\n\t *      Tween.get(target).to({y:200}, 500, Ease.getPowIn(2.2));\n\t *\n\t * Please see the <a href=\"http://www.createjs.com/Demos/TweenJS/Tween_SparkTable\">spark table demo</a> for an\n\t * overview of the different ease types on <a href=\"http://tweenjs.com\">TweenJS.com</a>.\n\t *\n\t * <em>Equations derived from work by Robert Penner.</em>\n\t * @class Ease\n\t * @static\n\t **/\n\tfunction Ease() {\n\t\tthrow \"Ease cannot be instantiated.\";\n\t}\n\n\n// static methods and properties\n\t/**\n\t * @method linear\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.linear = function(t) { return t; };\n\n\t/**\n\t * Identical to linear.\n\t * @method none\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.none = Ease.linear;\n\n\t/**\n\t * Mimics the simple -100 to 100 easing in Adobe Flash/Animate.\n\t * @method get\n\t * @param {Number} amount A value from -1 (ease in) to 1 (ease out) indicating the strength and direction of the ease.\n\t * @static\n\t * @return {Function}\n\t **/\n\tEase.get = function(amount) {\n\t\tif (amount < -1) { amount = -1; }\n\t\tif (amount > 1) { amount = 1; }\n\t\treturn function(t) {\n\t\t\tif (amount==0) { return t; }\n\t\t\tif (amount<0) { return t*(t*-amount+1+amount); }\n\t\t\treturn t*((2-t)*amount+(1-amount));\n\t\t};\n\t};\n\n\t/**\n\t * Configurable exponential ease.\n\t * @method getPowIn\n\t * @param {Number} pow The exponent to use (ex. 3 would return a cubic ease).\n\t * @static\n\t * @return {Function}\n\t **/\n\tEase.getPowIn = function(pow) {\n\t\treturn function(t) {\n\t\t\treturn Math.pow(t,pow);\n\t\t};\n\t};\n\n\t/**\n\t * Configurable exponential ease.\n\t * @method getPowOut\n\t * @param {Number} pow The exponent to use (ex. 3 would return a cubic ease).\n\t * @static\n\t * @return {Function}\n\t **/\n\tEase.getPowOut = function(pow) {\n\t\treturn function(t) {\n\t\t\treturn 1-Math.pow(1-t,pow);\n\t\t};\n\t};\n\n\t/**\n\t * Configurable exponential ease.\n\t * @method getPowInOut\n\t * @param {Number} pow The exponent to use (ex. 3 would return a cubic ease).\n\t * @static\n\t * @return {Function}\n\t **/\n\tEase.getPowInOut = function(pow) {\n\t\treturn function(t) {\n\t\t\tif ((t*=2)<1) return 0.5*Math.pow(t,pow);\n\t\t\treturn 1-0.5*Math.abs(Math.pow(2-t,pow));\n\t\t};\n\t};\n\n\t/**\n\t * @method quadIn\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.quadIn = Ease.getPowIn(2);\n\t/**\n\t * @method quadOut\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.quadOut = Ease.getPowOut(2);\n\t/**\n\t * @method quadInOut\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.quadInOut = Ease.getPowInOut(2);\n\n\t/**\n\t * @method cubicIn\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.cubicIn = Ease.getPowIn(3);\n\t/**\n\t * @method cubicOut\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.cubicOut = Ease.getPowOut(3);\n\t/**\n\t * @method cubicInOut\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.cubicInOut = Ease.getPowInOut(3);\n\n\t/**\n\t * @method quartIn\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.quartIn = Ease.getPowIn(4);\n\t/**\n\t * @method quartOut\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.quartOut = Ease.getPowOut(4);\n\t/**\n\t * @method quartInOut\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.quartInOut = Ease.getPowInOut(4);\n\n\t/**\n\t * @method quintIn\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.quintIn = Ease.getPowIn(5);\n\t/**\n\t * @method quintOut\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.quintOut = Ease.getPowOut(5);\n\t/**\n\t * @method quintInOut\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.quintInOut = Ease.getPowInOut(5);\n\n\t/**\n\t * @method sineIn\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.sineIn = function(t) {\n\t\treturn 1-Math.cos(t*Math.PI/2);\n\t};\n\n\t/**\n\t * @method sineOut\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.sineOut = function(t) {\n\t\treturn Math.sin(t*Math.PI/2);\n\t};\n\n\t/**\n\t * @method sineInOut\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.sineInOut = function(t) {\n\t\treturn -0.5*(Math.cos(Math.PI*t) - 1);\n\t};\n\n\t/**\n\t * Configurable \"back in\" ease.\n\t * @method getBackIn\n\t * @param {Number} amount The strength of the ease.\n\t * @static\n\t * @return {Function}\n\t **/\n\tEase.getBackIn = function(amount) {\n\t\treturn function(t) {\n\t\t\treturn t*t*((amount+1)*t-amount);\n\t\t};\n\t};\n\t/**\n\t * @method backIn\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.backIn = Ease.getBackIn(1.7);\n\n\t/**\n\t * Configurable \"back out\" ease.\n\t * @method getBackOut\n\t * @param {Number} amount The strength of the ease.\n\t * @static\n\t * @return {Function}\n\t **/\n\tEase.getBackOut = function(amount) {\n\t\treturn function(t) {\n\t\t\treturn (--t*t*((amount+1)*t + amount) + 1);\n\t\t};\n\t};\n\t/**\n\t * @method backOut\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.backOut = Ease.getBackOut(1.7);\n\n\t/**\n\t * Configurable \"back in out\" ease.\n\t * @method getBackInOut\n\t * @param {Number} amount The strength of the ease.\n\t * @static\n\t * @return {Function}\n\t **/\n\tEase.getBackInOut = function(amount) {\n\t\tamount*=1.525;\n\t\treturn function(t) {\n\t\t\tif ((t*=2)<1) return 0.5*(t*t*((amount+1)*t-amount));\n\t\t\treturn 0.5*((t-=2)*t*((amount+1)*t+amount)+2);\n\t\t};\n\t};\n\t/**\n\t * @method backInOut\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.backInOut = Ease.getBackInOut(1.7);\n\n\t/**\n\t * @method circIn\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.circIn = function(t) {\n\t\treturn -(Math.sqrt(1-t*t)- 1);\n\t};\n\n\t/**\n\t * @method circOut\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.circOut = function(t) {\n\t\treturn Math.sqrt(1-(--t)*t);\n\t};\n\n\t/**\n\t * @method circInOut\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.circInOut = function(t) {\n\t\tif ((t*=2) < 1) return -0.5*(Math.sqrt(1-t*t)-1);\n\t\treturn 0.5*(Math.sqrt(1-(t-=2)*t)+1);\n\t};\n\n\t/**\n\t * @method bounceIn\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.bounceIn = function(t) {\n\t\treturn 1-Ease.bounceOut(1-t);\n\t};\n\n\t/**\n\t * @method bounceOut\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.bounceOut = function(t) {\n\t\tif (t < 1/2.75) {\n\t\t\treturn (7.5625*t*t);\n\t\t} else if (t < 2/2.75) {\n\t\t\treturn (7.5625*(t-=1.5/2.75)*t+0.75);\n\t\t} else if (t < 2.5/2.75) {\n\t\t\treturn (7.5625*(t-=2.25/2.75)*t+0.9375);\n\t\t} else {\n\t\t\treturn (7.5625*(t-=2.625/2.75)*t +0.984375);\n\t\t}\n\t};\n\n\t/**\n\t * @method bounceInOut\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.bounceInOut = function(t) {\n\t\tif (t<0.5) return Ease.bounceIn (t*2) * .5;\n\t\treturn Ease.bounceOut(t*2-1)*0.5+0.5;\n\t};\n\n\t/**\n\t * Configurable elastic ease.\n\t * @method getElasticIn\n\t * @param {Number} amplitude\n\t * @param {Number} period\n\t * @static\n\t * @return {Function}\n\t **/\n\tEase.getElasticIn = function(amplitude,period) {\n\t\tvar pi2 = Math.PI*2;\n\t\treturn function(t) {\n\t\t\tif (t==0 || t==1) return t;\n\t\t\tvar s = period/pi2*Math.asin(1/amplitude);\n\t\t\treturn -(amplitude*Math.pow(2,10*(t-=1))*Math.sin((t-s)*pi2/period));\n\t\t};\n\t};\n\t/**\n\t * @method elasticIn\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.elasticIn = Ease.getElasticIn(1,0.3);\n\n\t/**\n\t * Configurable elastic ease.\n\t * @method getElasticOut\n\t * @param {Number} amplitude\n\t * @param {Number} period\n\t * @static\n\t * @return {Function}\n\t **/\n\tEase.getElasticOut = function(amplitude,period) {\n\t\tvar pi2 = Math.PI*2;\n\t\treturn function(t) {\n\t\t\tif (t==0 || t==1) return t;\n\t\t\tvar s = period/pi2 * Math.asin(1/amplitude);\n\t\t\treturn (amplitude*Math.pow(2,-10*t)*Math.sin((t-s)*pi2/period )+1);\n\t\t};\n\t};\n\t/**\n\t * @method elasticOut\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.elasticOut = Ease.getElasticOut(1,0.3);\n\n\t/**\n\t * Configurable elastic ease.\n\t * @method getElasticInOut\n\t * @param {Number} amplitude\n\t * @param {Number} period\n\t * @static\n\t * @return {Function}\n\t **/\n\tEase.getElasticInOut = function(amplitude,period) {\n\t\tvar pi2 = Math.PI*2;\n\t\treturn function(t) {\n\t\t\tvar s = period/pi2 * Math.asin(1/amplitude);\n\t\t\tif ((t*=2)<1) return -0.5*(amplitude*Math.pow(2,10*(t-=1))*Math.sin( (t-s)*pi2/period ));\n\t\t\treturn amplitude*Math.pow(2,-10*(t-=1))*Math.sin((t-s)*pi2/period)*0.5+1;\n\t\t};\n\t};\n\t/**\n\t * @method elasticInOut\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t **/\n\tEase.elasticInOut = Ease.getElasticInOut(1,0.3*1.5);\n\n\tcreatejs.Ease = Ease;\n\n}());\n\n//##############################################################################\n// MotionGuidePlugin.js\n//##############################################################################\n\n(function() {\n\t\"use strict\";\n\n\t/**\n\t * A TweenJS plugin for working with motion guides.\n\t *\n\t * To use, install the plugin after TweenJS has loaded. Next tween the 'guide' property with an object as detailed below.\n\t *\n\t *       createjs.MotionGuidePlugin.install();\n\t *\n\t * <h4>Example</h4>\n\t *\n\t *      // Using a Motion Guide\n\t *\t    createjs.Tween.get(target).to({guide:{ path:[0,0, 0,200,200,200, 200,0,0,0] }},7000);\n\t *\t    // Visualizing the line\n\t *\t    graphics.moveTo(0,0).curveTo(0,200,200,200).curveTo(200,0,0,0);\n\t *\n\t * Each path needs pre-computation to ensure there's fast performance. Because of the pre-computation there's no\n\t * built in support for path changes mid tween. These are the Guide Object's properties:<UL>\n\t *      <LI> path: Required, Array : The x/y points used to draw the path with a moveTo and 1 to n curveTo calls.</LI>\n\t *      <LI> start: Optional, 0-1 : Initial position, default 0 except for when continuing along the same path.</LI>\n\t *      <LI> end: Optional, 0-1 : Final position, default 1 if not specified.</LI>\n\t *      <LI> orient: Optional, string : \"fixed\"/\"auto\"/\"cw\"/\"ccw\"<UL>\n\t *\t\t\t\t<LI>\"fixed\" forces the object to face down the path all movement (relative to start rotation),</LI>\n\t *      \t\t<LI>\"auto\" rotates the object along the path relative to the line.</LI>\n\t *      \t\t<LI>\"cw\"/\"ccw\" force clockwise or counter clockwise rotations including Adobe Flash/Animate-like\n\t *      \t\tbehaviour</LI>\n\t * \t\t</UL></LI>\n\t * </UL>\n\t * Guide objects should not be shared between tweens even if all properties are identical, the library stores\n\t * information on these objects in the background and sharing them can cause unexpected behaviour. Values\n\t * outside 0-1 range of tweens will be a \"best guess\" from the appropriate part of the defined curve.\n\t *\n\t * @class MotionGuidePlugin\n\t * @constructor\n\t **/\n\tfunction MotionGuidePlugin() {\n\t\tthrow(\"MotionGuidePlugin cannot be instantiated.\")\n\t};\n\n\n// static properties:\n\t/**\n\t * @property priority\n\t * @protected\n\t * @static\n\t **/\n\tMotionGuidePlugin.priority = 0; // high priority, should run sooner\n\n\t/**\n\t * @property temporary variable storage\n\t * @private\n\t * @static\n\t */\n\tMotionGuidePlugin._rotOffS;\n\t/**\n\t * @property temporary variable storage\n\t * @private\n\t * @static\n\t */\n\tMotionGuidePlugin._rotOffE;\n\t/**\n\t * @property temporary variable storage\n\t * @private\n\t * @static\n\t */\n\tMotionGuidePlugin._rotNormS;\n\t/**\n\t * @property temporary variable storage\n\t * @private\n\t * @static\n\t */\n\tMotionGuidePlugin._rotNormE;\n\n\n// static methods\n\t/**\n\t * Installs this plugin for use with TweenJS. Call this once after TweenJS is loaded to enable this plugin.\n\t * @method install\n\t * @static\n\t **/\n\tMotionGuidePlugin.install = function() {\n\t\tcreatejs.Tween.installPlugin(MotionGuidePlugin, [\"guide\", \"x\", \"y\", \"rotation\"]);\n\t\treturn createjs.Tween.IGNORE;\n\t};\n\n\t/**\n\t * @method init\n\t * @protected\n\t * @static\n\t **/\n\tMotionGuidePlugin.init = function(tween, prop, value) {\n\t\tvar target = tween.target;\n\t\tif(!target.hasOwnProperty(\"x\")){ target.x = 0; }\n\t\tif(!target.hasOwnProperty(\"y\")){ target.y = 0; }\n\t\tif(!target.hasOwnProperty(\"rotation\")){ target.rotation = 0; }\n\n\t\tif(prop==\"rotation\"){ tween.__needsRot = true; }\n\t\treturn prop==\"guide\"?null:value;\n\t};\n\n\t/**\n\t * @method step\n\t * @protected\n\t * @static\n\t **/\n\tMotionGuidePlugin.step = function(tween, prop, startValue, endValue, injectProps) {\n\t\t// other props\n\t\tif(prop == \"rotation\"){\n\t\t\ttween.__rotGlobalS = startValue;\n\t\t\ttween.__rotGlobalE = endValue;\n\t\t\tMotionGuidePlugin.testRotData(tween, injectProps);\n\t\t}\n\t\tif(prop != \"guide\"){ return endValue; }\n\n\t\t// guide only information - Start -\n\t\tvar temp, data = endValue;\n\t\tif(!data.hasOwnProperty(\"path\")){ data.path = []; }\n\t\tvar path = data.path;\n\t\tif(!data.hasOwnProperty(\"end\")){ data.end = 1; }\n\t\tif(!data.hasOwnProperty(\"start\")){\n\t\t\tdata.start = (startValue&&startValue.hasOwnProperty(\"end\")&&startValue.path===path)?startValue.end:0;\n\t\t}\n\n\t\t// Figure out subline information\n\t\tif(data.hasOwnProperty(\"_segments\") && data._length){ return endValue; }\n\t\tvar l = path.length;\n\t\tvar accuracy = 10;\t\t// Adjust to improve line following precision but sacrifice performance (# of seg)\n\t\tif(l >= 6 && (l-2) % 4 == 0){\t// Enough points && contains correct number per entry ignoring start\n\t\t\tdata._segments = [];\n\t\t\tdata._length = 0;\n\t\t\tfor(var i=2; i<l; i+=4){\n\t\t\t\tvar sx = path[i-2], sy = path[i-1];\n\t\t\t\tvar cx = path[i+0], cy = path[i+1];\n\t\t\t\tvar ex = path[i+2], ey = path[i+3];\n\t\t\t\tvar oldX = sx, oldY = sy;\n\t\t\t\tvar tempX, tempY, total = 0;\n\t\t\t\tvar sublines = [];\n\t\t\t\tfor(var j=1; j<=accuracy; j++){\n\t\t\t\t\tvar t = j/accuracy;\n\t\t\t\t\tvar inv = 1 - t;\n\t\t\t\t\ttempX = inv*inv * sx + 2 * inv * t * cx + t*t * ex;\n\t\t\t\t\ttempY = inv*inv * sy + 2 * inv * t * cy + t*t * ey;\n\t\t\t\t\ttotal += sublines[sublines.push(Math.sqrt((temp=tempX-oldX)*temp + (temp=tempY-oldY)*temp))-1];\n\t\t\t\t\toldX = tempX;\n\t\t\t\t\toldY = tempY;\n\t\t\t\t}\n\t\t\t\tdata._segments.push(total);\n\t\t\t\tdata._segments.push(sublines);\n\t\t\t\tdata._length += total;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow(\"invalid 'path' data, please see documentation for valid paths\");\n\t\t}\n\n\t\t// Setup x/y tweens\n\t\ttemp = data.orient;\n\t\tdata.orient = true;\n\t\tvar o = {};\n\t\tMotionGuidePlugin.calc(data, data.start, o);\n\t\ttween.__rotPathS = Number(o.rotation.toFixed(5));\n\t\tMotionGuidePlugin.calc(data, data.end, o);\n\t\ttween.__rotPathE = Number(o.rotation.toFixed(5));\n\t\tdata.orient = false;\t//here and now we don't know if we need to\n\t\tMotionGuidePlugin.calc(data, data.end, injectProps);\n\t\tdata.orient = temp;\n\n\t\t// Setup rotation properties\n\t\tif(!data.orient){ return endValue; }\n\t\ttween.__guideData = data;\n\t\tMotionGuidePlugin.testRotData(tween, injectProps);\n\t\treturn endValue;\n\t};\n\n\t/**\n\t * @method testRotData\n\t * @protected\n\t * @static\n\t **/\n\tMotionGuidePlugin.testRotData = function(tween, injectProps){\n\n\t\t// no rotation informat? if we need it come back, if we don't use 0 & ensure we have guide data\n\t\tif(tween.__rotGlobalS === undefined || tween.__rotGlobalE === undefined){\n\t\t\tif(tween.__needsRot){ return; }\n\t\t\tif(tween._curQueueProps.rotation !== undefined){\n\t\t\t\ttween.__rotGlobalS = tween.__rotGlobalE = tween._curQueueProps.rotation;\n\t\t\t} else {\n\t\t\t\ttween.__rotGlobalS = tween.__rotGlobalE = injectProps.rotation = tween.target.rotation || 0;\n\t\t\t}\n\t\t}\n\t\tif(tween.__guideData === undefined){ return; }\n\n\t\t// Process rotation properties\n\t\tvar data = tween.__guideData;\n\t\tvar rotGlobalD = tween.__rotGlobalE - tween.__rotGlobalS;\n\t\tvar rotPathD = tween.__rotPathE - tween.__rotPathS;\n\t\tvar rot = rotGlobalD - rotPathD;\n\n\t\tif(data.orient == \"auto\"){\n\t\t\tif(rot > 180){\t\t\trot -= 360; }\n\t\t\telse if(rot < -180){\trot += 360; }\n\n\t\t} else if(data.orient == \"cw\"){\n\t\t\twhile(rot < 0){ rot += 360; }\n\t\t\tif(rot == 0 && rotGlobalD > 0 && rotGlobalD != 180){ rot += 360; }\n\n\t\t} else if(data.orient == \"ccw\"){\n\t\t\trot = rotGlobalD - ((rotPathD > 180)?(360-rotPathD):(rotPathD));\t// sign flipping on path\n\t\t\twhile(rot > 0){ rot -= 360; }\n\t\t\tif(rot == 0 && rotGlobalD < 0 && rotGlobalD != -180){ rot -= 360; }\n\t\t}\n\n\t\tdata.rotDelta = rot;\n\t\tdata.rotOffS = tween.__rotGlobalS - tween.__rotPathS;\n\n\t\t// reset\n\t\ttween.__rotGlobalS = tween.__rotGlobalE = tween.__guideData = tween.__needsRot = undefined;\n\t};\n\n\t/**\n\t * @method tween\n\t * @protected\n\t * @static\n\t **/\n\tMotionGuidePlugin.tween = function(tween, prop, value, startValues, endValues, ratio, wait, end) {\n\t\tvar data = endValues.guide;\n\t\tif(data == undefined || data === startValues.guide){ return value; }\n\t\tif(data.lastRatio != ratio){\n\t\t\t// first time through so calculate what I need to\n\t\t\tvar t = ((data.end-data.start)*(wait?data.end:ratio)+data.start);\n\t\t\tMotionGuidePlugin.calc(data, t, tween.target);\n\t\t\tswitch(data.orient){\n\t\t\t\tcase \"cw\":\t\t// mix in the original rotation\n\t\t\t\tcase \"ccw\":\n\t\t\t\tcase \"auto\": tween.target.rotation += data.rotOffS + data.rotDelta*ratio; break;\n\t\t\t\tcase \"fixed\":\t// follow fixed behaviour to solve potential issues\n\t\t\t\tdefault: tween.target.rotation += data.rotOffS; break;\n\t\t\t}\n\t\t\tdata.lastRatio = ratio;\n\t\t}\n\t\tif(prop == \"rotation\" && ((!data.orient) || data.orient == \"false\")){ return value; }\n\t\treturn tween.target[prop];\n\t};\n\n\t/**\n\t * Determine the appropriate x/y/rotation information about a path for a given ratio along the path.\n\t * Assumes a path object with all optional parameters specified.\n\t * @param data Data object you would pass to the \"guide:\" property in a Tween\n\t * @param ratio 0-1 Distance along path, values outside 0-1 are \"best guess\"\n\t * @param target Object to copy the results onto, will use a new object if not supplied.\n\t * @return {Object} The target object or a new object w/ the tweened properties\n\t * @static\n\t */\n\tMotionGuidePlugin.calc = function(data, ratio, target) {\n\t\tif(data._segments == undefined){ throw(\"Missing critical pre-calculated information, please file a bug\"); }\n\t\tif(target == undefined){ target = {x:0, y:0, rotation:0}; }\n\t\tvar seg = data._segments;\n\t\tvar path = data.path;\n\n\t\t// find segment\n\t\tvar pos = data._length * ratio;\n\t\tvar cap = seg.length - 2;\n\t\tvar n = 0;\n\t\twhile(pos > seg[n] && n < cap){\n\t\t\tpos -= seg[n];\n\t\t\tn+=2;\n\t\t}\n\n\t\t// find subline\n\t\tvar sublines = seg[n+1];\n\t\tvar i = 0;\n\t\tcap = sublines.length-1;\n\t\twhile(pos > sublines[i] && i < cap){\n\t\t\tpos -= sublines[i];\n\t\t\ti++;\n\t\t}\n\t\tvar t = (i/++cap)+(pos/(cap*sublines[i]));\n\n\t\t// find x/y\n\t\tn = (n*2)+2;\n\t\tvar inv = 1 - t;\n\t\ttarget.x = inv*inv * path[n-2] + 2 * inv * t * path[n+0] + t*t * path[n+2];\n\t\ttarget.y = inv*inv * path[n-1] + 2 * inv * t * path[n+1] + t*t * path[n+3];\n\n\t\t// orientation\n\t\tif(data.orient){\n\t\t\ttarget.rotation = 57.2957795 * Math.atan2(\n\t\t\t\t(path[n+1]-path[n-1])*inv + (path[n+3]-path[n+1])*t,\n\t\t\t\t(path[n+0]-path[n-2])*inv + (path[n+2]-path[n+0])*t);\n\t\t}\n\n\t\treturn target;\n\t};\n\n\tcreatejs.MotionGuidePlugin = MotionGuidePlugin;\n\n}());\n\n//##############################################################################\n// version.js\n//##############################################################################\n\n(function (createjs) {\n\t\"use strict\";\n\n\t/**\n\t * Static class holding library specific information such as the version and buildDate of\n\t * the library.\n\t * @class TweenJS\n\t **/\n\tvar s = createjs.TweenJS = createjs.TweenJS || {};\n\n\t/**\n\t * The version string for this release.\n\t * @property version\n\t * @type String\n\t * @static\n\t **/\n\ts.version = /*=version*/\"0.6.2\"; // injected by build process\n\n\t/**\n\t * The build date for this release in UTC format.\n\t * @property buildDate\n\t * @type String\n\t * @static\n\t **/\n\ts.buildDate = /*=date*/\"Sat, 12 Nov 2016 06:45:00 GMT\"; // injected by build process\n\n})(scope.createjs);\n\nmodule.exports = scope.createjs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/createjs-browserify/lib/createjs-2016.11.12.combined.js\n// module id = 4\n// module chunks = 0","import createjs from 'createjs-browserify';\n\n((global, factory) => {\n  if(typeof module === 'object' && typeof module.exports === 'object') {\n    // For CommonJS and CommonJS-like environments where a proper `window`\n    // is present, execute the factory and get ElementsJS.\n    // For environments that do not have a `window` with a `document`\n    // (such as Node.js), expose a factory as module.exports.\n    // This accentuates the need for the creation of a real `window`.\n    module.exports = global.document ?\n      factory(global, true) :\n      (w) => {\n        if(!w.document) {\n          throw new Error('ElementsJS requires a window with a document');\n        }\n        return factory(w);\n      };\n  } else {\n    factory(global);\n  }\n  // Pass this if window is not defined yet\n})(typeof window !== 'undefined' ? window : this, (window) => {\n  return {\n    AlphaMapFilter: createjs.AlphaMapFilter,\n    AlphaMaskFilter: createjs.AlphaMaskFilter,\n    Bitmap: createjs.Bitmap,\n    BitmapText: createjs.BitmapText,\n    BlurFilter: createjs.BlurFilter,\n    ButtonHelper: createjs.ButtonHelper,\n    ColorFilter: createjs.ColorFilter,\n    ColorMatrix: createjs.ColorMatrix,\n    ColorMatrixFilter: createjs.ColorMatrixFilter,\n    Container: createjs.Container,\n    DisplayObject: createjs.DisplayObject,\n    DisplayProps: createjs.DisplayProps,\n    DOMElement: createjs.DOMElement,\n    EventDispatcher: createjs.EventDispatcher,\n    Filter: createjs.Filter,\n    Graphics: createjs.Graphics,\n    Matrix2D: createjs.Matrix2D,\n    MouseEvent: createjs.MouseEvent,\n    MovieClip: createjs.MovieClip,\n    MovieClipPlugin: createjs.MovieClipPlugin,\n    Point: createjs.Point,\n    Rectangle: createjs.Rectangle,\n    Shadow: createjs.Shadow,\n    Shape: createjs.Shape,\n    Sprite: createjs.Sprite,\n    SpriteContainer: createjs.SpriteContainer,\n    SpriteSheet: createjs.SpriteSheet,\n    SpriteSheetBuilder: createjs.SpriteSheetBuilder,\n    SpriteSheetUtils: createjs.SpriteSheetUtils,\n    SpriteStage: createjs.SpriteStage,\n    Stage: createjs.Stage,\n    Text: createjs.Text,\n    Ticker: createjs.Ticker,\n    Touch: createjs.Touch,\n    UID: createjs.UID,\n    extend: createjs.extend,\n    indexOf: createjs.indexOf,\n    promote: createjs.promote,\n    buildDate: createjs.EaselJS.buildDate,\n    version: createjs.EaselJS.version,\n  };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./CreateJS/EaselJS/index.js","import createjs from 'createjs-browserify';\n\n((global, factory) => {\n  if(typeof module === 'object' && typeof module.exports === 'object') {\n    // For CommonJS and CommonJS-like environments where a proper `window`\n    // is present, execute the factory and get ElementsJS.\n    // For environments that do not have a `window` with a `document`\n    // (such as Node.js), expose a factory as module.exports.\n    // This accentuates the need for the creation of a real `window`.\n    module.exports = global.document ?\n      factory(global, true) :\n      (w) => {\n        if(!w.document) {\n          throw new Error('ElementsJS requires a window with a document');\n        }\n        return factory(w);\n      };\n  } else {\n    factory(global);\n  }\n  // Pass this if window is not defined yet\n})(typeof window !== 'undefined' ? window : this, (window) => {\n  return {\n    AbstractPlugin: createjs.AbstractPlugin,\n    AbstractSoundInstance: createjs.AbstractSoundInstance,\n    AudioSprite: createjs.AudioSprite,\n    CordovaAudioLoader: createjs.CordovaAudioLoader,\n    CordovaAudioPlugin: createjs.CordovaAudioPlugin,\n    CordovaAudioSoundInstance: createjs.CordovaAudioSoundInstance,\n    ErrorEvent: createjs.ErrorEvent,\n    Event: createjs.Event,\n    EventDispatcher: createjs.EventDispatcher,\n    FlashAudioLoader: createjs.FlashAudioLoader,\n    FlashAudioPlugin: createjs.FlashAudioPlugin,\n    FlashAudioSoundInstance: createjs.FlashAudioSoundInstance,\n    HTMLAudioPlugin: createjs.HTMLAudioPlugin,\n    HTMLAudioSoundInstance: createjs.HTMLAudioSoundInstance,\n    HTMLAudioTagPool: createjs.HTMLAudioTagPool,\n    PlayPropsConfig: createjs.PlayPropsConfig,\n    Sound: createjs.Sound,\n    WebAudioLoader: createjs.WebAudioLoader,\n    WebAudioPlugin: createjs.WebAudioPlugin,\n    WebAudioSoundInstance: createjs.WebAudioSoundInstance,\n    extend: createjs.extend,\n    indexOf: createjs.indexOf,\n    promote: createjs.promote,\n    buildDate: createjs.SoundJS.buildDate,\n    version: createjs.SoundJS.version,\n  };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./CreateJS/SoundJS/index.js","import TextElement from './TextElement';\n\n/**\n * constructs a LabelElement instance\n * @class LabelElement\n * @classdesc the LabelElement class extends TextElement, implementing padding, minWidth, etc etc ...\n * @extend TextElement\n * @public\n * @param {Object} options the options to be merged with defaults settings\n * @type {LabelElement}\n */\nexport default class LabelElement extends TextElement {\n  constructor(options = {}) {\n    super(options);\n  }\n\n  /**\n   * Initialize default settings for Label Element\n   * @memberOf LabelElement\n   * @method initDefaults\n   * @instance\n   * @override\n   * @param {Object} defaults the defaults settings\n   */\n  initDefaults(defaults) {\n    super.initDefaults({\n      text: 'Label',\n      padding: 10,\n      minWidth: 0,\n    }.inherit(defaults));\n  }\n\n  /**\n   * compute bounds before drawing all graphic elements of LabelElement instance\n   * @memberOf LabelElement\n   * @method computeBounds\n   * @instance\n   * @override\n   */\n  computeBounds() {\n    super.computeBounds();\n\n    if(!!this.settings.minWidth) {\n      if(String.isPercentage(this.settings.minWidth) && !!this.parent) {\n        this.settings.minWidth = this.parent.getComputedBounds().width * this.settings.minWidth.parsePercentage();\n      }\n\n      if(this.settings.size.width < this.settings.minWidth) {\n        this.settings.size.width = this.settings.minWidth;\n      }\n    }\n  }\n\n  /**\n   * centers the text inside LabelElement container\n   * @memberOf LabelElement\n   * @method centerText\n   * @instance\n   * @override\n   */\n  centerText() {\n    if(!!this.settings.outline) {\n      this.textOutline.inherit({\n        x: this.settings.size.width * 0.5,\n        y: this.settings.size.height * 0.5,\n      });\n    }\n\n    this.text.inherit({\n      x: this.settings.size.width * 0.5,\n      y: this.settings.size.height * 0.5,\n    });\n  }\n\n  /**\n   * aligns the text inside the LabelElement container\n   * @memberOf LabelElement\n   * @method alignText\n   * @instance\n   * @override\n   * @param {String} mode can be a couple of word for horizontal or vertical align, in any order<br>\n   *   accepts the following modes<br>\n   *   <ul>\n   *     <li><b>Horizontal Modes</b>: left, center, right</li>\n   *     <li><b>Vertical Modes</b>: top, middle, bottom</li>\n   *   </ul>\n   * @return {LabelElement}\n   */\n  alignText(mode = 'center middle') {\n    const modes = mode.toArray(' ');\n    const horizontalModes = ['left', 'center', 'right'];\n    const verticalModes = ['top', 'middle', 'bottom'];\n\n    const textOptions = {\n      x: this.settings.size.width * 0.5,\n      y: this.settings.size.height * 0.5,\n      textAlign: 'center',\n      textBaseline: 'middle',\n    };\n\n    if(horizontalModes.contains(modes)) {\n      if(modes.contains('left')) {\n        textOptions.inherit({\n          x: 0,\n          textAlign: 'left',\n        });\n      } else if(modes.contains('right')) {\n        textOptions.inherit({\n          x: this.settings.size.width,\n          textAlign: 'right',\n        });\n      }\n    }\n\n    if(verticalModes.contains(modes)) {\n      if(modes.contains('top')) {\n        textOptions.inherit({\n          y: 0,\n          textBaseline: 'top',\n        });\n      } else if(modes.contains('bottom')) {\n        textOptions.inherit({\n          y: this.settings.size.height,\n          textBaseline: 'bottom',\n        });\n      }\n    }\n\n    if(!!this.settings.outline) {\n      this.textOutline.inherit(textOptions);\n    }\n\n    this.text.inherit(textOptions);\n\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Elements/LabelElement.js","import LabelElement from './LabelElement';\n\n/**\n * constructs a ButtonElement instance\n * @class ButtonElement\n * @classdesc Button Element class, extending LabelElement with a click event handler\n * @extends LabelElement\n * @param {Object} options the options object to be merged with defaults\n * @type {ButtonElement}\n * @public\n */\nexport default class ButtonElement extends LabelElement {\n  constructor(options = {}) {\n    super(options);\n  }\n\n  /**\n   * Initialize default settings for Button Element\n   * @memberOf ButtonElement\n   * @method initDefaults\n   * @instance\n   * @override\n   */\n  initDefaults(defaults) {\n    super.initDefaults({\n      text: 'Button',\n      stroke: {\n        size: 4,\n        radius: 5,\n        color: '#fff',\n      },\n      events: {\n        click: () => {\n        },\n      },\n    }.inherit(defaults));\n  }\n\n  /**\n   * drawElements method implementation\n   * @memberOf BoxElement\n   * @method drawElements\n   * @instance\n   * @override\n   */\n  drawElements() {\n    super.drawElements();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Elements/ButtonElement.js","import ElementHelpers from './ElementHelpers';\nimport Element from './Element';\n\n/**\n * constructs an ImageElement instance\n * @class ImageElement\n * @classdesc ImageElement class, extending Element\n * @extends Element\n * @param {Object} options the options object to be merged with defaults\n * @type {ImageElement}\n * @public\n */\nexport default class ImageElement extends Element {\n  constructor(options = {}) {\n    super(options);\n  }\n\n  /**\n   * Initialize default settings for ImageElement\n   * @memberOf ImageElement\n   * @method initDefaults\n   * @instance\n   * @override\n   */\n  initDefaults() {\n    super.initDefaults({\n      image: null,\n    });\n  }\n\n  /**\n   * sets the scale factor for ImageElement instance\n   * @memberOf ImageElement\n   * @method setScale\n   * @instance\n   * @param {Number|Object} scaleOptions can be a Number (it will be used for both scaleX and scaleY attributes)<br>\n   *   can be an Object containing\n   * @param {Number} scaleOptions.x the scaleX factor for the ImageElement\n   * @param {Number} scaleOptions.y the scaleY factor for the ImageElement\n   * @return {ImageElement}\n   */\n  setScale(scaleOptions = {x: 1, y: 1}) {\n    super.setScale(scaleOptions);\n\n    this.image.inherit({\n      scaleX: this.settings.scale.x,\n      scaleY: this.settings.scale.y,\n    });\n\n    return this;\n  }\n\n  /**\n   * draws all graphic elements of the ImageElement instance\n   * @memberOf ImageElement\n   * @method drawElements\n   * @instance\n   * @override\n   */\n  drawElements() {\n    this.image = ElementHelpers.createImage(this.settings.image);\n    this.imageBounds = this.image.getBounds();\n\n    if(!this.settings.size.force) {\n      this.settings.inherit({\n        size: {\n          width: this.imageBounds.width,\n          height: this.imageBounds.height,\n        },\n      });\n    } else {\n      ElementHelpers.align(this.image, null, 'center middle', true);\n    }\n\n    if(!this.settings.debug) {\n      super.drawElements();\n    }\n\n    this.addChild(this.image);\n\n    if(!!this.settings.debug) {\n      super.drawElements();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Elements/ImageElement.js","import ButtonElement from './ButtonElement';\nimport ImageElement from './ImageElement';\n\n/**\n * constructs a ListItemElement instance\n * @class ListItemElement\n * @classdesc the ListItemElement extends ButtonElement allowing you to add a list item indicator and a text, with a click event handler\n * @extend ButtonElement\n * @param {Object} options the options object to be merged with defaults\n * @type {ListItemElement}\n * @public\n */\nexport default class ListItemElement extends ButtonElement {\n  constructor(options = {}) {\n    super(options);\n  }\n\n  /**\n   * Initialize default settings for ListItemElement instance\n   * @memberOf ListItemElement\n   * @method initDefaults\n   * @instance\n   * @override\n   */\n  initDefaults() {\n    super.initDefaults({\n      text: 'List Item',\n      indicator: false, // options for an ImageElement to use as listItem indicator\n      stroke: {\n        size: 0,\n        radius: 0,\n        color: 'transparent',\n      },\n      events: {\n        click: () => {\n        },\n      },\n    });\n  }\n\n  /**\n   * draws all graphic elements of the ListItemElement instance\n   * @memberOf ListItemElement\n   * @method drawElements\n   * @instance\n   * @override\n   */\n  drawElements() {\n    if(!!this.settings.indicator) {\n      this.indicator = new ImageElement(this.settings.indicator.inherit({\n        parent: this,\n        align: 'left middle',\n      })).setPosition({\n        x: 10,\n      });\n\n      this.settings.lineHeight = this.indicator.getComputedBounds().height;\n    }\n\n    super.drawElements();\n\n    this.alignText('left middle');\n    this.setTextPosition({\n      x: this.indicator.getComputedBounds().right + 10,\n    }, true);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Elements/ListItemElement.js","import {Shadow} from '../CreateJS/EaselJS';\nimport ElementHelpers from './ElementHelpers';\nimport Element from './Element';\n\n/**\n * constructs a TextElement instance\n * @class TextElement\n * @classdesc extends Element Class adding an EaselJS Text instance inside of it\n * @extend Element\n * @public\n * @param {Object} options the options to be merged with defaults settings\n * @type {TextElement}\n */\nexport default class TextElement extends Element {\n  /**\n   * initializes defaults settings for TextElement\n   * @memberOf TextElement\n   * @method initDefaults\n   * @instance\n   * @override\n   */\n  initDefaults(defaults) {\n    super.initDefaults({\n      text: 'Text Element',\n      font: '50px Arial',\n      color: '#000',\n      padding: 0,\n      lineHeight: false,\n      maxWidth: false,\n      shadow: false,\n      outline: false,\n    }.inherit(defaults));\n  }\n\n  /**\n   * initializes the settings object for the TextElement instance\n   * @memberOf TextElement\n   * @method initSettings\n   * @instance\n   * @override\n   * @param {Object} options the options to be merged with the defaults settings\n   */\n  initSettings(options) {\n    super.initSettings(options);\n\n    if(!this.settings.lineHeight) {\n      this.settings.lineHeight = Number.parse(this.settings.font);\n    }\n  }\n\n  /**\n   * computes the bounds based on specified text parameter\n   * @memberOf TextElement\n   * @method computeBounds\n   * @instance\n   */\n  computeBounds() {\n    this.textBounds = (!!this.settings.outline ? this.textOutline.getBounds() : this.text.getBounds());\n\n    if(!!this.settings.padding) {\n      if(Array.isArray(this.settings.padding)) {\n        const horizontalPadding = this.settings.padding[0];\n        const verticalPadding = this.settings.padding[1];\n\n        if(horizontalPadding > 0) {\n          this.textBounds.inherit({\n            width: this.textBounds.width + horizontalPadding,\n          });\n        }\n\n        if(verticalPadding > 0) {\n          this.textBounds.inherit({\n            height: this.textBounds.height + verticalPadding,\n          });\n        }\n      } else if(Number.isNumber(this.settings.padding)) {\n        if(this.settings.padding > 0) {\n          this.textBounds.inherit({\n            width: this.textBounds.width + this.settings.padding,\n            height: this.textBounds.height + this.settings.padding,\n          });\n        }\n      }\n    }\n\n    this.settings.inherit({\n      size: {\n        width: this.textBounds.width,\n        height: this.textBounds.height,\n      },\n    });\n  }\n\n  /**\n   * centers the text inside the container\n   * @memberOf TextElement\n   * @method centerText\n   * @instance\n   */\n  centerText() {\n    if(!!this.settings.outline) {\n      this.textOutline.inherit({\n        x: this.settings.size.width * 0.5,\n        y: this.settings.lineHeight * 0.5,\n      });\n    }\n\n    this.text.inherit({\n      x: this.settings.size.width * 0.5,\n      y: this.settings.lineHeight * 0.5,\n    });\n  }\n\n  /**\n   * draws all graphic elements of the TextElement instance\n   * @memberOf TextElement\n   * @method drawElements\n   * @instance\n   * @override\n   */\n  drawElements() {\n    if(!!this.settings.outline) {\n      this.textOutline = ElementHelpers.createText(this.settings.text, this.settings.font, this.settings.outline.color);\n      this.addChild(this.textOutline);\n      this.setChildIndex(this.textOutline, 1);\n    }\n\n    this.text = ElementHelpers.createText(this.settings.text, this.settings.font, this.settings.color);\n    this.addChild(this.text);\n    this.setChildIndex(this.text, (!!this.settings.outline ? 2 : 1));\n\n    if(!!this.settings.outline) {\n      this.textOutline.inherit({\n        textAlign: 'center',\n        textBaseline: 'middle',\n        lineHeight: this.settings.lineHeight || null,\n        lineWidth: this.settings.maxWidth || null,\n        outline: this.settings.outline.size,\n        shadow: !!this.settings.shadow ? new Shadow(...this.settings.shadow) : null,\n      });\n    }\n\n    this.text.inherit({\n      textAlign: 'center',\n      textBaseline: 'middle',\n      lineHeight: this.settings.lineHeight || null,\n      lineWidth: this.settings.maxWidth || null,\n      shadow: !!this.settings.shadow ? new Shadow(...this.settings.shadow) : null,\n    });\n\n    this.computeBounds();\n    this.centerText();\n\n    super.drawElements();\n  }\n\n  /**\n   * sets or updates the position of the TextElement instance\n   * @memberOf TextElement\n   * @method setPosition\n   * @instance\n   * @override\n   * @param {Object} position can contain x and y or only one or them\n   * @param {Number} [position.x=0] the x position\n   * @param {Number} [position.y=0] the y position\n   * @param {Boolean} [override=false] specify to override actual TextElement position\n   * @return {TextElement} to make chainable the method\n   */\n  setTextPosition(position = {x: 0, y: 0}, override = false) {\n    if(!!position.x) {\n      if(!!override) {\n        if(!!this.settings.outline) {\n          this.textOutline.x = position.x;\n        }\n\n        this.text.x = position.x;\n      } else {\n        if(!!this.settings.outline) {\n          this.textOutline.x += position.x;\n        }\n\n        this.text.x += position.x;\n      }\n    }\n\n    if(!!position.y) {\n      if(!!override) {\n        if(!!this.settings.outline) {\n          this.textOutline.y = position.y;\n        }\n\n        this.text.y = position.y;\n      } else {\n        if(!!this.settings.outline) {\n          this.textOutline.y += position.y;\n        }\n\n        this.text.y += position.y;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * gets the actual text content\n   * @memberOf TextElement\n   * @method getText\n   * @instance\n   * @return {String}\n   */\n  getText() {\n    return this.text.text;\n  }\n\n  /**\n   * sets the text content for the TextElement instance, considering also the textOutline\n   * @memberOf TextElement\n   * @method setText\n   * @instance\n   * @param {String} text the text content\n   * @return {TextElement} to make chainable the method\n   */\n  setText(text) {\n    if(!!this.settings.outline) {\n      this.textOutline.text = text;\n    }\n\n    this.text.text = text;\n\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Elements/TextElement.js","import {Sound} from '../CreateJS/SoundJS';\n\nexport default class SoundElement {\n\n  constructor(props) {\n    this.defaults = {\n      interrupt: Sound.INTERRUPT_ANY,\n      loop: 0,\n      delay: 0,\n      offset: 0,\n      volume: 1,\n      pan: 0,\n    };\n    this.props = props;\n    this.playSound();\n  }\n\n  playSound() {\n    const filteredProps = Object.assign({}, this.props);\n    delete filteredProps.sound;\n    delete filteredProps.fadeIn;\n    delete filteredProps.fadeOut;\n    delete filteredProps.events;\n    const soundProps = Object.assign({}, this.defaults, filteredProps);\n\n    if (Object.isObject(this.props.fade) && (this.props.fade.type === 'FADE_IN' || this.props.fade.type === 'FADE_ALL')) {\n      soundProps.volume = 0;\n    }\n\n    this.instance = Sound.play(this.props.sound, soundProps);\n\n    const eventsDefined = !!this.props.events;\n\n    if (eventsDefined) {\n      this.props.events.each((value, key) => {\n        if (Function.isFunction(value)) {\n          this.instance.on(key, value);\n        }\n      });\n    }\n\n    return this.instance;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Sounds/SoundElement.js","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.4';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, customDefaultsAssignIn);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/lodash/lodash.js\n// module id = 13\n// module chunks = 0","module.exports = {\n  version: '0.2.0',\n  build: new Date(),\n};\n\n\n\n// WEBPACK FOOTER //\n// ../config.js","import createjs from 'createjs-browserify';\n\n((global, factory) => {\n  if(typeof module === 'object' && typeof module.exports === 'object') {\n    // For CommonJS and CommonJS-like environments where a proper `window`\n    // is present, execute the factory and get ElementsJS.\n    // For environments that do not have a `window` with a `document`\n    // (such as Node.js), expose a factory as module.exports.\n    // This accentuates the need for the creation of a real `window`.\n    module.exports = global.document ?\n      factory(global, true) :\n      (w) => {\n        if(!w.document) {\n          throw new Error('ElementsJS requires a window with a document');\n        }\n        return factory(w);\n      };\n  } else {\n    factory(global);\n  }\n  // Pass this if window is not defined yet\n})(typeof window !== 'undefined' ? window : this, (window) => {\n  return {\n    AbstractLoader: createjs.AbstractLoader,\n    AbstractMediaLoader: createjs.AbstractMediaLoader,\n    AbstractRequest: createjs.AbstractRequest,\n    BinaryLoader: createjs.BinaryLoader,\n    CSSLoader: createjs.CSSLoader,\n    DataUtils: createjs.DataUtils,\n    DomUtils: createjs.DomUtils,\n    ErrorEvent: createjs.ErrorEvent,\n    Event: createjs.Event,\n    EventDispatcher: createjs.EventDispatcher,\n    ImageLoader: createjs.ImageLoader,\n    JavaScriptLoader: createjs.JavaScriptLoader,\n    JSONLoader: createjs.JSONLoader,\n    JSONPLoader: createjs.JSONPLoader,\n    LoadItem: createjs.LoadItem,\n    LoadQueue: createjs.LoadQueue,\n    ManifestLoader: createjs.ManifestLoader,\n    MediaTagRequest: createjs.MediaTagRequest,\n    ProgressEvent: createjs.ProgressEvent,\n    RequestUtils: createjs.ProgressEvent,\n    SamplePlugin: createjs.SamplePlugin,\n    SoundLoader: createjs.SoundLoader,\n    SpriteSheetLoader: createjs.SpriteSheetLoader,\n    SVGLoader: createjs.SVGLoader,\n    TagRequest: createjs.TagRequest,\n    TextLoader: createjs.TextLoader,\n    VideoLoader: createjs.VideoLoader,\n    XHRRequest: createjs.XHRRequest,\n    XMLLoader: createjs.XMLLoader,\n    extend: createjs.extend,\n    indexOf: createjs.indexOf,\n    promote: createjs.promote,\n    buildDate: createjs.PreloadJS.buildDate,\n    version: createjs.PreloadJS.version,\n  };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./CreateJS/PreloadJS/index.js","import createjs from 'createjs-browserify';\n\n((global, factory) => {\n  if(typeof module === 'object' && typeof module.exports === 'object') {\n    // For CommonJS and CommonJS-like environments where a proper `window`\n    // is present, execute the factory and get ElementsJS.\n    // For environments that do not have a `window` with a `document`\n    // (such as Node.js), expose a factory as module.exports.\n    // This accentuates the need for the creation of a real `window`.\n    module.exports = global.document ?\n      factory(global, true) :\n      (w) => {\n        if(!w.document) {\n          throw new Error('ElementsJS requires a window with a document');\n        }\n        return factory(w);\n      };\n  } else {\n    factory(global);\n  }\n  // Pass this if window is not defined yet\n})(typeof window !== 'undefined' ? window : this, (window) => {\n  return {\n    CSSPlugin: createjs.CSSPlugin,\n    Ease: createjs.Ease,\n    Event: createjs.Event,\n    EventDispatcher: createjs.EventDispatcher,\n    MotionGuidePlugin: createjs.MotionGuidePlugin,\n    SamplePlugin: createjs.SamplePlugin,\n    Ticker: createjs.Ticker,\n    Timeline: createjs.Timeline,\n    Tween: createjs.Tween,\n    extend: createjs.extend,\n    indexOf: createjs.indexOf,\n    promote: createjs.promote,\n    buildDate: createjs.TweenJS.buildDate,\n    version: createjs.TweenJS.version,\n  };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./CreateJS/TweenJS/index.js","import Element from './Element';\nimport LabelElement from './LabelElement';\n\n/**\n * constructs a BoxElement instance\n * @class BoxElement\n * @classdesc Box Element class, useful to create boxes with a title options (LabelElement)\n * @extends Element\n * @param {Object} options the options object to be merged with defaults\n * @type {BoxElement}\n * @public\n */\nexport default class BoxElement extends Element {\n  constructor(options = {}) {\n    super(options);\n  }\n\n  /**\n   * Initialize default settings for Box Element\n   * @memberOf BoxElement\n   * @method initDefaults\n   * @instance\n   * @override\n   */\n  initDefaults() {\n    super.initDefaults({\n      title: { // options for a LabelElement\n        text: 'Text Element',\n        font: '50px Arial',\n        color: '#000',\n        padding: 10,\n        lineHeight: 50,\n        maxWidth: false,\n        shadow: false,\n        outline: false,\n        stroke: false,\n        align: 'center top',\n      },\n      content: { // options for a Element\n        fill: 'transparent',\n        align: 'center bottom',\n      },\n    });\n  }\n\n  /**\n   * drawElements method implementation\n   * @memberOf BoxElement\n   * @method drawElements\n   * @instance\n   * @inheritdoc\n   * @override\n   */\n  drawElements() {\n    if(!this.settings.debug) {\n      super.drawElements();\n    }\n\n    if(!!this.settings.title) {\n      this.titleElement = new LabelElement(this.settings.title.inherit({\n        parent: this,\n        minWidth: this.settings.size.width,\n      }));\n    }\n\n    this.contentElement = new Element(this.settings.content.inherit({\n      parent: this,\n      size: {\n        width: this.settings.size.width,\n        height: this.settings.size.height - (!!this.settings.title ? this.titleElement.getComputedBounds().height : 0),\n      },\n    }));\n\n    if(!!this.settings.debug) {\n      super.drawElements();\n    }\n  }\n\n  /**\n   * gets the title LabelElement instance\n   * @memberOf BoxElement\n   * @method getTitleElement\n   * @instance\n   * @return {LabelElement} the instance used to draw the title\n   */\n  getTitleElement() {\n    return this.titleElement;\n  }\n\n  /**\n   * gets the content Element instance\n   * @memberOf BoxElement\n   * @method getContentElement\n   * @instance\n   * @return {Element} the instance used to draw the content element\n   */\n  getContentElement() {\n    return this.contentElement;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Elements/BoxElement.js","import Element from './Element';\nimport ListItemElement from './ListItemElement';\n\n/**\n * constructs a ListElement instance\n * @class ListElement\n * @classdesc the ListElement class allows to create a list of any type of elements\n * @extend Element\n * @public\n * @param {Object} options the options to be merged with defaults settings\n * @type {ListElement}\n */\nexport default class ListElement extends Element {\n  constructor(options = {}) {\n    super(options);\n  }\n\n  /**\n   * Initialize default settings for List Element\n   * @memberOf ListElement\n   * @method initDefaults\n   * @instance\n   * @override\n   */\n  initDefaults() {\n    super.initDefaults({\n      items: [],\n      item: { // options for a ListItemElement to use as default listItem options\n        minWidth: '100%',\n        color: '#fff',\n      },\n      itemEvents: { // event handlers to use as default listItem event handlers\n        click: () => {\n        },\n      },\n      indicator: false, // options for an ImageElement to use as default listItem indicator\n      stroke: {\n        size: 0,\n        radius: 0,\n        color: 'transparent',\n      },\n    });\n  }\n\n  /**\n   * initializes data object for the ListElement instance\n   * @memberOf ListElement\n   * @method initData\n   * @instance\n   * @override\n   */\n  initData() {\n    this.items = [];\n  }\n\n  /**\n   * compute bounds before drawing all graphic elements of ListElement instance\n   * @memberOf ListElement\n   * @method computeBounds\n   * @instance\n   * @override\n   */\n  computeBounds() {\n    if(!!this.settings.minWidth) {\n      if(this.settings.minWidth.isPercentage() && !!this.parent) {\n        this.settings.minWidth = this.parent.getComputedBounds().width * this.settings.minWidth.parsePercentage();\n      }\n\n      if(this.settings.size.width < this.settings.minWidth) {\n        this.settings.size.width = this.settings.minWidth;\n      }\n    }\n  }\n\n  /**\n   * draws all graphic elements of the ListElement instance, cycles the items, draw them and computes positions\n   * @memberOf ListElement\n   * @method drawElements\n   * @instance\n   * @override\n   */\n  drawElements() {\n    this.computeBounds();\n\n    super.drawElements();\n\n    this.settings.path('items', []).each((item, i) => {\n      const listItem = new ListItemElement(this.settings.item.inherit(true, {\n        indicator: this.settings.indicator,\n        events: this.settings.itemEvents,\n      }, item, {\n        parent: this,\n        align: 'left top',\n      }));\n\n      this.items.push(listItem);\n\n      if(i > 0) {\n        listItem.setPosition({\n          y: this.items[i - 1].getComputedBounds().bottom,\n        });\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Elements/ListElement.js","import ElementHelpers from './ElementHelpers';\nimport Element from './Element';\n\n/**\n * constructs an SpriteElement instance\n * @class SpriteElement\n * @classdesc SpriteElement class, extending Element\n * @extends Element\n * @param {Object} options the options object to be merged with defaults\n * @type {SpriteElement}\n * @public\n */\nexport default class SpriteElement extends Element {\n  constructor(options = {}) {\n    super(options);\n  }\n\n  /**\n   * Initialize default settings for SpriteElement\n   * @memberOf SpriteElement\n   * @method initDefaults\n   * @instance\n   * @override\n   */\n  initDefaults() {\n    super.initDefaults({\n      spritesheet: null,\n    });\n  }\n\n  /**\n   * sets the scale factor for SpriteElement instance\n   * @memberOf SpriteElement\n   * @method setScale\n   * @instance\n   * @param {Number|Object} scaleOptions can be a Number (it will be used for both scaleX and scaleY attributes)<br>\n   *   can be an Object containing\n   * @param {Number} scaleOptions.x the scaleX factor for the SpriteElement\n   * @param {Number} scaleOptions.y the scaleY factor for the SpriteElement\n   * @return {SpriteElement}\n   */\n  setScale(scaleOptions = {x: 1, y: 1}) {\n    super.setScale(scaleOptions);\n\n    this.sprite.inherit({\n      scaleX: this.settings.scale.x,\n      scaleY: this.settings.scale.y,\n    });\n  }\n\n  /**\n   * draws all graphic elements of the SpriteElement instance\n   * @memberOf SpriteElement\n   * @method drawElements\n   * @instance\n   * @override\n   */\n  drawElements() {\n    this.sprite = ElementHelpers.createSprite(this.settings.spritesheet);\n    this.spriteBounds = this.sprite.getBounds();\n\n    if(!this.settings.size.force) {\n      this.settings.inherit({\n        size: {\n          width: this.spriteBounds.width,\n          height: this.spriteBounds.height,\n        },\n      });\n    } else {\n      ElementHelpers.align(this.sprite, null, 'center middle', true);\n    }\n\n    if(!this.settings.debug) {\n      super.drawElements();\n    }\n\n    this.addChild(this.sprite);\n\n    if(!!this.settings.debug) {\n      super.drawElements();\n    }\n  }\n\n  /**\n   * animates the sprite\n   * @memberOf SpriteElement\n   * @method animate\n   * @instance\n   * @param {Object} options the animate options including<br>\n   * @param {String} options.animationName the animation name in the spritesheet json to start\n   * @param {Function}\n   * @return {SpriteElement}\n   */\n  animate(options = null) {\n    if(Object.isObject(options)) {\n      if(!!options.animationName) {\n        if(!!options.onAnimationEnd) {\n          if(Function.isFunction(options.onAnimationEnd)) {\n            this.sprite.on('animationend', options.onAnimationEnd);\n          }\n        }\n\n        this.sprite.gotoAndPlay(options.animationName);\n      }\n    }\n\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Elements/SpriteElement.js","import ElementHelpers from './ElementHelpers';\nimport Element from './Element';\nimport TextElement from './TextElement';\nimport LabelElement from './LabelElement';\nimport ButtonElement from './ButtonElement';\nimport ListItemElement from './ListItemElement';\nimport ListElement from './ListElement';\nimport ImageElement from './ImageElement';\nimport SpriteElement from './SpriteElement';\nimport BoxElement from './BoxElement';\n\n/**\n * @module Elements\n * @description The Elements module of CreateJS Core Framework\n * @property {ElementHelpers} ElementHelpers all the helpers we need to draw the elements\n * @property {Element} Element\n * @property {TextElement} TextElement\n * @property {LabelElement} LabelElement\n * @property {ButtonElement} ButtonElement\n * @property {ListItemElement} ListItemElement\n * @property {ListElement} ListElement\n * @property {ImageElement} ImageElement\n * @property {SpriteElement} SpriteElement\n * @property {BoxElement} BoxElement\n */\n((global, factory) => {\n  if(typeof module === 'object' && typeof module.exports === 'object') {\n    // For CommonJS and CommonJS-like environments where a proper `window`\n    // is present, execute the factory and get ElementsJS.\n    // For environments that do not have a `window` with a `document`\n    // (such as Node.js), expose a factory as module.exports.\n    // This accentuates the need for the creation of a real `window`.\n    module.exports = global.document ?\n      factory(global, true) :\n      (w) => {\n        if(!w.document) {\n          throw new Error('ElementsJS requires a window with a document');\n        }\n        return factory(w);\n      };\n  } else {\n    factory(global);\n  }\n  // Pass this if window is not defined yet\n})(typeof window !== 'undefined' ? window : this, (window) => {\n  return {\n    ElementHelpers,\n    Element,\n    TextElement,\n    LabelElement,\n    ButtonElement,\n    ListItemElement,\n    ListElement,\n    ImageElement,\n    SpriteElement,\n    BoxElement,\n  };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./Elements/index.js","import {Ticker, Sound} from '../CreateJS/SoundJS';\nimport SoundElement from './SoundElement';\n\nexport default class SoundManager {\n\n  constructor() {\n    console.log('constructor exectued');\n  }\n\n  static play(props) {\n    console.log('adding layer ', props);\n    const instance = new SoundElement(props);\n    SoundManager._instances = [];\n    Ticker.addEventListener('tick', SoundManager.handleSoundTick);\n    SoundManager.addLayer(instance);\n\n    instance.instance.on('complete', () => {\n      SoundManager.removeLayer(instance);\n    });\n\n    return instance;\n  }\n\n  static addLayer(instance) {\n    SoundManager._instances.push({\n      instance,\n      playing: true,\n    });\n  }\n\n  static removeLayer(instance) {\n    SoundManager._instances.remove(instance);\n  }\n\n  static handleSoundTick() {\n    if(SoundManager._instances.length > 0) {\n      const toFade = SoundManager._instances.findBy((o) => {\n        return (Object.isObject(o.instance.props.fade) && o.instance.props.fade.type);\n      });\n\n      toFade.each((i) => {\n        if(!!i.instance) {\n          if((i.props.fade.type === 'FADE_IN' || i.props.fade.type === 'FADE_ALL')) {\n            if(i.instance.position === 0) {\n              i.instance.volume = 0;\n            } else if(i.instance.position < i.props.fade.duration) {\n              i.instance.volume = (1 / i.props.fade.duration) * i.instance.position;\n            }\n          }\n\n          if((i.props.fade.type === 'FADE_OUT' || i.props.fade.type === 'FADE_ALL')) {\n            if(i.instance.position > i.instance.duration - i.props.fade.duration) {\n              const fadeOutStart = (i.instance.duration - i.props.fade.duration);\n              const backPosition = (i.instance.position - fadeOutStart);\n\n              i.instance.volume = 1 - ((1 / i.props.fade.duration) * backPosition);\n            }\n          }\n        }\n      });\n    }\n  }\n\n  static mute() {\n    Sound.muted = true;\n  }\n\n  static unmute() {\n    Sound.muted = false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Sounds/SoundManager.js","import SoundElement from './SoundElement';\nimport SoundManager from './SoundManager';\n\n((global, factory) => {\n  if(typeof module === 'object' && typeof module.exports === 'object') {\n    // For CommonJS and CommonJS-like environments where a proper `window`\n    // is present, execute the factory and get ElementsJS.\n    // For environments that do not have a `window` with a `document`\n    // (such as Node.js), expose a factory as module.exports.\n    // This accentuates the need for the creation of a real `window`.\n    module.exports = global.document ?\n      factory(global, true) :\n      (w) => {\n        if(!w.document) {\n          throw new Error('ElementsJS requires a window with a document');\n        }\n        return factory(w);\n      };\n  } else {\n    factory(global);\n  }\n  // Pass this if window is not defined yet\n})(typeof window !== 'undefined' ? window : this, (window) => {\n  return {\n    SoundManager,\n    SoundElement,\n  };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./Sounds/index.js","import _ from 'lodash';\n\nexport default class TranslateUtils {\n  /**\n   * Method for initing the Translation Engine\n   * @param translationSource\n   * @param language\n   * @static\n   */\n  static init(translationsSource, language) {\n    TranslateUtils._language = language;\n    TranslateUtils.TRANSLATIONS = translationsSource[language];\n  }\n\n  /**\n   * Useful Method for getting property through dot notation\n   * @param propertyName\n   * @param object\n   * @static\n   */\n  static getProperty(propertyName, object) {\n    const parts = propertyName.split('.');\n    const length = parts.length;\n    let i;\n    let property = object || this;\n\n    for(i = 0; i < length; i++) {\n      property = property[parts[i]];\n    }\n\n    return property;\n  }\n\n  /**\n   * Method for getting translation, with params management\n   * @param tag\n   * @param params\n   * @static\n   */\n  static _t(tag, params = {}) {\n    const p = TranslateUtils.getProperty(tag, TranslateUtils.TRANSLATIONS);\n    let t = _.isUndefined(p) ? tag : p;\n    const paramsMatch = t.match(/\\{{([^}}]+)\\}}/);\n\n    if(paramsMatch) {\n      const paramEnclosed = paramsMatch[0];\n      const paramKey = paramsMatch[1];\n\n      if(!_.isUndefined(params[paramKey])) {\n        console.log('substituing', paramEnclosed, ' with ', params[paramKey]);\n        t = _.replace(t, new RegExp(paramEnclosed), params[paramKey]);\n      }\n    }\n    return t;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Translations/TranslateUtils.js","import TranslateUtils from './TranslateUtils';\n\n((global, factory) => {\n  if(typeof module === 'object' && typeof module.exports === 'object') {\n    // For CommonJS and CommonJS-like environments where a proper `window`\n    // is present, execute the factory and get ElementsJS.\n    // For environments that do not have a `window` with a `document`\n    // (such as Node.js), expose a factory as module.exports.\n    // This accentuates the need for the creation of a real `window`.\n    module.exports = global.document ?\n      factory(global, true) :\n      (w) => {\n        if(!w.document) {\n          throw new Error('ElementsJS requires a window with a document');\n        }\n        return factory(w);\n      };\n  } else {\n    factory(global);\n  }\n  // Pass this if window is not defined yet\n})(typeof window !== 'undefined' ? window : this, (window) => {\n  return {\n    TranslateUtils,\n  };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./Translations/index.js","module.exports = __webpack_amd_options__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/webpack/buildin/amd-options.js\n// module id = 25\n// module chunks = 0"],"sourceRoot":""}